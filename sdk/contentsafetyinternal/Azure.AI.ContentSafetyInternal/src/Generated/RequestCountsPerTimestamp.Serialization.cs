// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure;
using Azure.Core;

namespace Azure.AI.ContentSafetyInternal
{
    public partial class RequestCountsPerTimestamp
    {
        internal static RequestCountsPerTimestamp DeserializeRequestCountsPerTimestamp(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            DateTimeOffset dateTime = default;
            IReadOnlyList<Severity> count = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("dateTime"u8))
                {
                    dateTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("count"u8))
                {
                    List<Severity> array = new List<Severity>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(Severity.DeserializeSeverity(item));
                    }
                    count = array;
                    continue;
                }
            }
            return new RequestCountsPerTimestamp(dateTime, count);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static RequestCountsPerTimestamp FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeRequestCountsPerTimestamp(document.RootElement);
        }
    }
}
