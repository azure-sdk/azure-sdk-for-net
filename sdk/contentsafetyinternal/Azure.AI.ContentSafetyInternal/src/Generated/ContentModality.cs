// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.AI.ContentSafetyInternal
{
    /// <summary> Modality type. </summary>
    public readonly partial struct ContentModality : IEquatable<ContentModality>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ContentModality"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ContentModality(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string TextValue = "Text";
        private const string ImageValue = "Image";
        private const string ImageWithTextValue = "ImageWithText";

        /// <summary> Text. </summary>
        public static ContentModality Text { get; } = new ContentModality(TextValue);
        /// <summary> Image. </summary>
        public static ContentModality Image { get; } = new ContentModality(ImageValue);
        /// <summary> ImageWithText. </summary>
        public static ContentModality ImageWithText { get; } = new ContentModality(ImageWithTextValue);
        /// <summary> Determines if two <see cref="ContentModality"/> values are the same. </summary>
        public static bool operator ==(ContentModality left, ContentModality right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ContentModality"/> values are not the same. </summary>
        public static bool operator !=(ContentModality left, ContentModality right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="ContentModality"/>. </summary>
        public static implicit operator ContentModality(string value) => new ContentModality(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ContentModality other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ContentModality other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
