// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.AI.ContentSafetyInternal
{
    /// <summary> Content safety Operation. </summary>
    public readonly partial struct ContentSafetyOperation : IEquatable<ContentSafetyOperation>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ContentSafetyOperation"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ContentSafetyOperation(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string AnalyzeTextValue = "AnalyzeText";
        private const string AnalyzeImageValue = "AnalyzeImage";
        private const string AnalyzeImageWithTextValue = "AnalyzeImageWithText";

        /// <summary> AnalyzeText. </summary>
        public static ContentSafetyOperation AnalyzeText { get; } = new ContentSafetyOperation(AnalyzeTextValue);
        /// <summary> AnalyzeImage. </summary>
        public static ContentSafetyOperation AnalyzeImage { get; } = new ContentSafetyOperation(AnalyzeImageValue);
        /// <summary> AnalyzeImageWithText. </summary>
        public static ContentSafetyOperation AnalyzeImageWithText { get; } = new ContentSafetyOperation(AnalyzeImageWithTextValue);
        /// <summary> Determines if two <see cref="ContentSafetyOperation"/> values are the same. </summary>
        public static bool operator ==(ContentSafetyOperation left, ContentSafetyOperation right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ContentSafetyOperation"/> values are not the same. </summary>
        public static bool operator !=(ContentSafetyOperation left, ContentSafetyOperation right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="ContentSafetyOperation"/>. </summary>
        public static implicit operator ContentSafetyOperation(string value) => new ContentSafetyOperation(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ContentSafetyOperation other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ContentSafetyOperation other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
