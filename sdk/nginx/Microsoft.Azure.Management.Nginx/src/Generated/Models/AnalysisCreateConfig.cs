// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Nginx.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class AnalysisCreateConfig
    {
        /// <summary>
        /// Initializes a new instance of the AnalysisCreateConfig class.
        /// </summary>
        public AnalysisCreateConfig()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AnalysisCreateConfig class.
        /// </summary>
        /// <param name="rootFile">The root file of the NGINX config file(s).
        /// It must match one of the files' filepath.</param>
        public AnalysisCreateConfig(string rootFile = default(string), IList<NginxConfigurationFile> files = default(IList<NginxConfigurationFile>), IList<NginxConfigurationFile> protectedFiles = default(IList<NginxConfigurationFile>), NginxConfigurationPackage package = default(NginxConfigurationPackage))
        {
            RootFile = rootFile;
            Files = files;
            ProtectedFiles = protectedFiles;
            Package = package;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the root file of the NGINX config file(s). It must
        /// match one of the files' filepath.
        /// </summary>
        [JsonProperty(PropertyName = "rootFile")]
        public string RootFile { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "files")]
        public IList<NginxConfigurationFile> Files { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "protectedFiles")]
        public IList<NginxConfigurationFile> ProtectedFiles { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "package")]
        public NginxConfigurationPackage Package { get; set; }

    }
}
