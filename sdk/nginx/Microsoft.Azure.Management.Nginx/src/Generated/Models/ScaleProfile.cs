// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Nginx.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The autoscale profile.
    /// </summary>
    public partial class ScaleProfile
    {
        /// <summary>
        /// Initializes a new instance of the ScaleProfile class.
        /// </summary>
        public ScaleProfile()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ScaleProfile class.
        /// </summary>
        /// <param name="capacity">The capacity parameters of the
        /// profile.</param>
        public ScaleProfile(string name, ScaleProfileCapacity capacity)
        {
            Name = name;
            Capacity = capacity;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the capacity parameters of the profile.
        /// </summary>
        [JsonProperty(PropertyName = "capacity")]
        public ScaleProfileCapacity Capacity { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Capacity == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Capacity");
            }
            if (Capacity != null)
            {
                Capacity.Validate();
            }
        }
    }
}
