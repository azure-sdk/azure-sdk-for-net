// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.IO;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.Messaging.WebPubSub.Samples
{
    public class Samples_WebPubSubClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AddConnectionsToGroups()
        {
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new WebPubSubClient(endpoint);

            var data = new { };

            Response response = client.AddConnectionsToGroups("<hub>", RequestContent.Create(data));
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AddConnectionsToGroups_AllParameters()
        {
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new WebPubSubClient(endpoint);

            var data = new
            {
                groups = new[] {
        "<String>"
    },
                filter = "<filter>",
            };

            Response response = client.AddConnectionsToGroups("<hub>", RequestContent.Create(data));
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_AddConnectionsToGroups_Async()
        {
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new WebPubSubClient(endpoint);

            var data = new { };

            Response response = await client.AddConnectionsToGroupsAsync("<hub>", RequestContent.Create(data));
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_AddConnectionsToGroups_AllParameters_Async()
        {
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new WebPubSubClient(endpoint);

            var data = new
            {
                groups = new[] {
        "<String>"
    },
                filter = "<filter>",
            };

            Response response = await client.AddConnectionsToGroupsAsync("<hub>", RequestContent.Create(data));
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RemoveConnectionsFromGroups()
        {
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new WebPubSubClient(endpoint);

            var data = new { };

            Response response = client.RemoveConnectionsFromGroups("<hub>", RequestContent.Create(data));
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RemoveConnectionsFromGroups_AllParameters()
        {
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new WebPubSubClient(endpoint);

            var data = new
            {
                groups = new[] {
        "<String>"
    },
                filter = "<filter>",
            };

            Response response = client.RemoveConnectionsFromGroups("<hub>", RequestContent.Create(data));
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_RemoveConnectionsFromGroups_Async()
        {
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new WebPubSubClient(endpoint);

            var data = new { };

            Response response = await client.RemoveConnectionsFromGroupsAsync("<hub>", RequestContent.Create(data));
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_RemoveConnectionsFromGroups_AllParameters_Async()
        {
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new WebPubSubClient(endpoint);

            var data = new
            {
                groups = new[] {
        "<String>"
    },
                filter = "<filter>",
            };

            Response response = await client.RemoveConnectionsFromGroupsAsync("<hub>", RequestContent.Create(data));
            Console.WriteLine(response.Status);
        }
    }
}
