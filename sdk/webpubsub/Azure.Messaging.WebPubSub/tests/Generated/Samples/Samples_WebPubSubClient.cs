// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.Messaging.WebPubSub.Samples
{
    public partial class Samples_WebPubSubClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetConnectionsInGroups_ShortVersion()
        {
            WebPubSubClient client = new WebPubSubClient("<Endpoint>");

            foreach (BinaryData item in client.GetConnectionsInGroups("<hub>", "<group>"))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("connectionId").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetConnectionsInGroups_ShortVersion_Async()
        {
            WebPubSubClient client = new WebPubSubClient("<Endpoint>");

            await foreach (BinaryData item in client.GetConnectionsInGroupsAsync("<hub>", "<group>"))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("connectionId").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetConnectionsInGroups_AllParameters()
        {
            WebPubSubClient client = new WebPubSubClient("<Endpoint>");

            foreach (BinaryData item in client.GetConnectionsInGroups("<hub>", "<group>", maxpagesize: 1234, maxCount: 1234, continuationToken: "<continuationToken>"))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("connectionId").ToString());
                Console.WriteLine(result.GetProperty("userId").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetConnectionsInGroups_AllParameters_Async()
        {
            WebPubSubClient client = new WebPubSubClient("<Endpoint>");

            await foreach (BinaryData item in client.GetConnectionsInGroupsAsync("<hub>", "<group>", maxpagesize: 1234, maxCount: 1234, continuationToken: "<continuationToken>"))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("connectionId").ToString());
                Console.WriteLine(result.GetProperty("userId").ToString());
            }
        }
    }
}
