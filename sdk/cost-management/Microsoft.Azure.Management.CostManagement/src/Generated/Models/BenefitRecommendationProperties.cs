// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.CostManagement.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The properties of the benefit plan recommendation.
    /// </summary>
    [Newtonsoft.Json.JsonObject("benefitRecommendationProperties")]
    public partial class BenefitRecommendationProperties
    {
        /// <summary>
        /// Initializes a new instance of the BenefitRecommendationProperties
        /// class.
        /// </summary>
        public BenefitRecommendationProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BenefitRecommendationProperties
        /// class.
        /// </summary>
        /// <param name="firstConsumptionDate">The first usage date used for
        /// looking back for computing the recommendation.</param>
        /// <param name="lastConsumptionDate">The last usage date used for
        /// looking back for computing the recommendation.</param>
        /// <param name="lookBackPeriod">The number of days of usage used to
        /// look back for computing the recommendation. Possible values
        /// include: 'Last7Days', 'Last30Days', 'Last60Days'</param>
        /// <param name="totalHours">The total hours for which the cost is
        /// covered. Its equal to number of records in a property
        /// 'properties/usage/charges'.</param>
        /// <param name="usage">The additional details about the usage which
        /// are considered while computing benefit recommendations.</param>
        /// <param name="armSkuName">ARM SKU name. For example, Standard_D1_V2
        /// for Reservations and Compute_Savings_Plan for SavingsPlan.</param>
        /// <param name="term">Term period of the benefit. For example, P1Y or
        /// P3Y. Possible values include: 'P1Y', 'P3Y'</param>
        /// <param name="commitmentGranularity">Grain of the proposed
        /// commitment amount. For example, hourly, monthly etc. Possible
        /// values include: 'Hourly', 'Daily', 'Monthly'</param>
        /// <param name="currencyCode">An ISO 4217 currency code identifier for
        /// the costs and savings amounts.</param>
        /// <param name="costWithoutBenefit">The current cost without benefit
        /// corresponds to 'totalHours' property in a given look-back
        /// period.</param>
        /// <param name="recommendationDetails">The details of the proposed
        /// recommendation.</param>
        /// <param name="allRecommendationDetails">The list of all benefit
        /// recommendations.</param>
        public BenefitRecommendationProperties(System.DateTime? firstConsumptionDate = default(System.DateTime?), System.DateTime? lastConsumptionDate = default(System.DateTime?), string lookBackPeriod = default(string), int? totalHours = default(int?), RecommendationUsageDetails usage = default(RecommendationUsageDetails), string armSkuName = default(string), string term = default(string), string commitmentGranularity = default(string), string currencyCode = default(string), decimal? costWithoutBenefit = default(decimal?), AllSavingsBenefitDetails recommendationDetails = default(AllSavingsBenefitDetails), AllSavingsList allRecommendationDetails = default(AllSavingsList))
        {
            FirstConsumptionDate = firstConsumptionDate;
            LastConsumptionDate = lastConsumptionDate;
            LookBackPeriod = lookBackPeriod;
            TotalHours = totalHours;
            Usage = usage;
            ArmSkuName = armSkuName;
            Term = term;
            CommitmentGranularity = commitmentGranularity;
            CurrencyCode = currencyCode;
            CostWithoutBenefit = costWithoutBenefit;
            RecommendationDetails = recommendationDetails;
            AllRecommendationDetails = allRecommendationDetails;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the first usage date used for looking back for computing the
        /// recommendation.
        /// </summary>
        [JsonProperty(PropertyName = "firstConsumptionDate")]
        public System.DateTime? FirstConsumptionDate { get; private set; }

        /// <summary>
        /// Gets the last usage date used for looking back for computing the
        /// recommendation.
        /// </summary>
        [JsonProperty(PropertyName = "lastConsumptionDate")]
        public System.DateTime? LastConsumptionDate { get; private set; }

        /// <summary>
        /// Gets or sets the number of days of usage used to look back for
        /// computing the recommendation. Possible values include: 'Last7Days',
        /// 'Last30Days', 'Last60Days'
        /// </summary>
        [JsonProperty(PropertyName = "lookBackPeriod")]
        public string LookBackPeriod { get; set; }

        /// <summary>
        /// Gets the total hours for which the cost is covered. Its equal to
        /// number of records in a property 'properties/usage/charges'.
        /// </summary>
        [JsonProperty(PropertyName = "totalHours")]
        public int? TotalHours { get; private set; }

        /// <summary>
        /// Gets or sets the additional details about the usage which are
        /// considered while computing benefit recommendations.
        /// </summary>
        [JsonProperty(PropertyName = "usage")]
        public RecommendationUsageDetails Usage { get; set; }

        /// <summary>
        /// Gets ARM SKU name. For example, Standard_D1_V2 for Reservations and
        /// Compute_Savings_Plan for SavingsPlan.
        /// </summary>
        [JsonProperty(PropertyName = "armSkuName")]
        public string ArmSkuName { get; private set; }

        /// <summary>
        /// Gets or sets term period of the benefit. For example, P1Y or P3Y.
        /// Possible values include: 'P1Y', 'P3Y'
        /// </summary>
        [JsonProperty(PropertyName = "term")]
        public string Term { get; set; }

        /// <summary>
        /// Gets or sets grain of the proposed commitment amount. For example,
        /// hourly, monthly etc. Possible values include: 'Hourly', 'Daily',
        /// 'Monthly'
        /// </summary>
        [JsonProperty(PropertyName = "commitmentGranularity")]
        public string CommitmentGranularity { get; set; }

        /// <summary>
        /// Gets an ISO 4217 currency code identifier for the costs and savings
        /// amounts.
        /// </summary>
        [JsonProperty(PropertyName = "currencyCode")]
        public string CurrencyCode { get; private set; }

        /// <summary>
        /// Gets the current cost without benefit corresponds to 'totalHours'
        /// property in a given look-back period.
        /// </summary>
        [JsonProperty(PropertyName = "costWithoutBenefit")]
        public decimal? CostWithoutBenefit { get; private set; }

        /// <summary>
        /// Gets or sets the details of the proposed recommendation.
        /// </summary>
        [JsonProperty(PropertyName = "recommendationDetails")]
        public AllSavingsBenefitDetails RecommendationDetails { get; set; }

        /// <summary>
        /// Gets the list of all benefit recommendations.
        /// </summary>
        [JsonProperty(PropertyName = "allRecommendationDetails")]
        public AllSavingsList AllRecommendationDetails { get; private set; }

    }
}
