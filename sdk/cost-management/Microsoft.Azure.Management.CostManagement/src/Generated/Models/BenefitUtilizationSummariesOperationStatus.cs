// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.CostManagement.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Status of a benefit utilization summaries report. Provides Async
    /// Benefit Utilization Summaries Request input, status, and report sas
    /// url.
    /// </summary>
    public partial class BenefitUtilizationSummariesOperationStatus
    {
        /// <summary>
        /// Initializes a new instance of the
        /// BenefitUtilizationSummariesOperationStatus class.
        /// </summary>
        public BenefitUtilizationSummariesOperationStatus()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// BenefitUtilizationSummariesOperationStatus class.
        /// </summary>
        /// <param name="input">Input given to create the benefit utilization
        /// summaries report.</param>
        /// <param name="status">The status of the creation of the benefit
        /// utilization summaries report. Possible values include: 'Running',
        /// 'Complete', 'Failed'</param>
        /// <param name="properties">Contains sas url to the async benefit
        /// utilization summaries report and a date that the url is valid
        /// until. These values will be empty if the report is in a Running or
        /// Failed state</param>
        public BenefitUtilizationSummariesOperationStatus(BenefitUtilizationSummariesRequest input = default(BenefitUtilizationSummariesRequest), string status = default(string), AsyncOperationStatusProperties properties = default(AsyncOperationStatusProperties))
        {
            Input = input;
            Status = status;
            Properties = properties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets input given to create the benefit utilization
        /// summaries report.
        /// </summary>
        [JsonProperty(PropertyName = "input")]
        public BenefitUtilizationSummariesRequest Input { get; set; }

        /// <summary>
        /// Gets or sets the status of the creation of the benefit utilization
        /// summaries report. Possible values include: 'Running', 'Complete',
        /// 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets contains sas url to the async benefit utilization
        /// summaries report and a date that the url is valid until. These
        /// values will be empty if the report is in a Running or Failed state
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public AsyncOperationStatusProperties Properties { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Input != null)
            {
                Input.Validate();
            }
        }
    }
}
