// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.CostManagement.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The properties of the benefit plan recommendation details for a saving.
    /// </summary>
    public partial class AllSavingsBenefitDetails
    {
        /// <summary>
        /// Initializes a new instance of the AllSavingsBenefitDetails class.
        /// </summary>
        public AllSavingsBenefitDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AllSavingsBenefitDetails class.
        /// </summary>
        /// <param name="overageCost">The difference between total cost and
        /// benefit cost.</param>
        /// <param name="benefitCost">The exact cost of the estimated usage
        /// using plan. It's equal to (commitmentAmount * totalHours)</param>
        /// <param name="totalCost">The cost of the suggested
        /// commitment.</param>
        /// <param name="savingsAmount">The amount saved by purchasing the
        /// recommended quantity of benefit.</param>
        /// <param name="savingsPercentage">The savings in percentage by
        /// purchasing the recommended quantity of benefit.</param>
        /// <param name="coveragePercentage">Expected coverage at this
        /// commitment.</param>
        /// <param name="commitmentAmount">The commitment amount for the
        /// benefit.</param>
        /// <param name="averageUtilizationPercentage">Estimated average
        /// utilization percentage at this commitment.</param>
        /// <param name="wastageCost">Wastage cost at this commitment.</param>
        public AllSavingsBenefitDetails(decimal? overageCost = default(decimal?), decimal? benefitCost = default(decimal?), decimal? totalCost = default(decimal?), decimal? savingsAmount = default(decimal?), decimal? savingsPercentage = default(decimal?), decimal? coveragePercentage = default(decimal?), decimal? commitmentAmount = default(decimal?), decimal? averageUtilizationPercentage = default(decimal?), decimal? wastageCost = default(decimal?))
        {
            OverageCost = overageCost;
            BenefitCost = benefitCost;
            TotalCost = totalCost;
            SavingsAmount = savingsAmount;
            SavingsPercentage = savingsPercentage;
            CoveragePercentage = coveragePercentage;
            CommitmentAmount = commitmentAmount;
            AverageUtilizationPercentage = averageUtilizationPercentage;
            WastageCost = wastageCost;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the difference between total cost and benefit cost.
        /// </summary>
        [JsonProperty(PropertyName = "overageCost")]
        public decimal? OverageCost { get; private set; }

        /// <summary>
        /// Gets the exact cost of the estimated usage using plan. It's equal
        /// to (commitmentAmount * totalHours)
        /// </summary>
        [JsonProperty(PropertyName = "benefitCost")]
        public decimal? BenefitCost { get; private set; }

        /// <summary>
        /// Gets the cost of the suggested commitment.
        /// </summary>
        [JsonProperty(PropertyName = "totalCost")]
        public decimal? TotalCost { get; private set; }

        /// <summary>
        /// Gets the amount saved by purchasing the recommended quantity of
        /// benefit.
        /// </summary>
        [JsonProperty(PropertyName = "savingsAmount")]
        public decimal? SavingsAmount { get; private set; }

        /// <summary>
        /// Gets the savings in percentage by purchasing the recommended
        /// quantity of benefit.
        /// </summary>
        [JsonProperty(PropertyName = "savingsPercentage")]
        public decimal? SavingsPercentage { get; private set; }

        /// <summary>
        /// Gets expected coverage at this commitment.
        /// </summary>
        [JsonProperty(PropertyName = "coveragePercentage")]
        public decimal? CoveragePercentage { get; private set; }

        /// <summary>
        /// Gets the commitment amount for the benefit.
        /// </summary>
        [JsonProperty(PropertyName = "commitmentAmount")]
        public decimal? CommitmentAmount { get; private set; }

        /// <summary>
        /// Gets estimated average utilization percentage at this commitment.
        /// </summary>
        [JsonProperty(PropertyName = "averageUtilizationPercentage")]
        public decimal? AverageUtilizationPercentage { get; private set; }

        /// <summary>
        /// Gets wastage cost at this commitment.
        /// </summary>
        [JsonProperty(PropertyName = "wastageCost")]
        public decimal? WastageCost { get; private set; }

    }
}
