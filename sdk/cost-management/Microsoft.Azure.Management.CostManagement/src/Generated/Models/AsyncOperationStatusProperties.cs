// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.CostManagement.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Object representing the report url and valid until date of the async
    /// report generated.
    /// </summary>
    public partial class AsyncOperationStatusProperties
    {
        /// <summary>
        /// Initializes a new instance of the AsyncOperationStatusProperties
        /// class.
        /// </summary>
        public AsyncOperationStatusProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AsyncOperationStatusProperties
        /// class.
        /// </summary>
        /// <param name="reportUrl">Sas url to the async benefit utilization
        /// summaries report. Will be empty if the report is in Running or
        /// Failed state. Possible values include: 'Kind',
        /// 'AvgUtilizationPercentage', 'BenefitOrderId', 'BenefitId',
        /// 'BenefitType', 'MaxUtilizationPercentage',
        /// 'MinUtilizationPercentage', 'UsageDate',
        /// 'UtilizedPercentage'</param>
        /// <param name="secondaryReportUrl">Sas url to async benefit
        /// utilization summaries report in secondary storage in case of
        /// primary outage. Will be empty if the report is in Running or Failed
        /// state. Possible values include: 'Kind', 'AvgUtilizationPercentage',
        /// 'BenefitOrderId', 'BenefitId', 'BenefitType',
        /// 'MaxUtilizationPercentage', 'MinUtilizationPercentage',
        /// 'UsageDate', 'UtilizedPercentage'</param>
        /// <param name="validUntil">The date that the sas url provided in
        /// reportUrl expires.</param>
        public AsyncOperationStatusProperties(string reportUrl = default(string), string secondaryReportUrl = default(string), System.DateTime? validUntil = default(System.DateTime?))
        {
            ReportUrl = reportUrl;
            SecondaryReportUrl = secondaryReportUrl;
            ValidUntil = validUntil;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets sas url to the async benefit utilization summaries
        /// report. Will be empty if the report is in Running or Failed state.
        /// Possible values include: 'Kind', 'AvgUtilizationPercentage',
        /// 'BenefitOrderId', 'BenefitId', 'BenefitType',
        /// 'MaxUtilizationPercentage', 'MinUtilizationPercentage',
        /// 'UsageDate', 'UtilizedPercentage'
        /// </summary>
        [JsonProperty(PropertyName = "reportUrl")]
        public string ReportUrl { get; set; }

        /// <summary>
        /// Gets or sets sas url to async benefit utilization summaries report
        /// in secondary storage in case of primary outage. Will be empty if
        /// the report is in Running or Failed state. Possible values include:
        /// 'Kind', 'AvgUtilizationPercentage', 'BenefitOrderId', 'BenefitId',
        /// 'BenefitType', 'MaxUtilizationPercentage',
        /// 'MinUtilizationPercentage', 'UsageDate', 'UtilizedPercentage'
        /// </summary>
        [JsonProperty(PropertyName = "secondaryReportUrl")]
        public string SecondaryReportUrl { get; set; }

        /// <summary>
        /// Gets or sets the date that the sas url provided in reportUrl
        /// expires.
        /// </summary>
        [JsonProperty(PropertyName = "validUntil")]
        public System.DateTime? ValidUntil { get; set; }

    }
}
