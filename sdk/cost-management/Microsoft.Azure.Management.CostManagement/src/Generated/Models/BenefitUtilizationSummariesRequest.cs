// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.CostManagement.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Properties of an async benefit utilization summaries request.
    /// </summary>
    public partial class BenefitUtilizationSummariesRequest
    {
        /// <summary>
        /// Initializes a new instance of the
        /// BenefitUtilizationSummariesRequest class.
        /// </summary>
        public BenefitUtilizationSummariesRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// BenefitUtilizationSummariesRequest class.
        /// </summary>
        /// <param name="grain">The grain the summaries data is served at in
        /// the report. Accepted values are 'Daily' or 'Monthly'. Possible
        /// values include: 'Hourly', 'Daily', 'Monthly'</param>
        /// <param name="startDate">The start date of the summaries data that
        /// will be served in the report.</param>
        /// <param name="endDate">The end date of the summaries data that will
        /// be served in the report.</param>
        /// <param name="billingAccountId">Billing account the benefit
        /// utilization summaries report is for. Required for billing account
        /// and billing profile scopes. Not supported for any benefit
        /// scopes.</param>
        /// <param name="billingProfileId">Billing profile id the benefit
        /// utilization summaries report is for. Required for billing profile
        /// scope. Not supported for billing account or any benefit
        /// scopes.</param>
        /// <param name="benefitOrderId">Benefit order id the benefit
        /// utilization summaries report is for. Required for benefit order and
        /// benefit id scopes. Not supported for any billing scopes.</param>
        /// <param name="benefitId">Benefit id the benefit utilization
        /// summaries report is for. Required for benefit id scope. Not
        /// supported for benefit order or any billing scopes.</param>
        /// <param name="kind">The type of benefit data requested. Required for
        /// billing account and billing profile scopes. Implied and not to be
        /// passed at benefit scopes. Supported values are Reservation and
        /// SavingsPlan. Possible values include: 'IncludedQuantity',
        /// 'Reservation', 'SavingsPlan'</param>
        public BenefitUtilizationSummariesRequest(string grain, System.DateTime startDate, System.DateTime endDate, string billingAccountId = default(string), string billingProfileId = default(string), string benefitOrderId = default(string), string benefitId = default(string), string kind = default(string))
        {
            BillingAccountId = billingAccountId;
            BillingProfileId = billingProfileId;
            BenefitOrderId = benefitOrderId;
            BenefitId = benefitId;
            Grain = grain;
            StartDate = startDate;
            EndDate = endDate;
            Kind = kind;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets billing account the benefit utilization summaries
        /// report is for. Required for billing account and billing profile
        /// scopes. Not supported for any benefit scopes.
        /// </summary>
        [JsonProperty(PropertyName = "billingAccountId")]
        public string BillingAccountId { get; set; }

        /// <summary>
        /// Gets or sets billing profile id the benefit utilization summaries
        /// report is for. Required for billing profile scope. Not supported
        /// for billing account or any benefit scopes.
        /// </summary>
        [JsonProperty(PropertyName = "billingProfileId")]
        public string BillingProfileId { get; set; }

        /// <summary>
        /// Gets or sets benefit order id the benefit utilization summaries
        /// report is for. Required for benefit order and benefit id scopes.
        /// Not supported for any billing scopes.
        /// </summary>
        [JsonProperty(PropertyName = "benefitOrderId")]
        public string BenefitOrderId { get; set; }

        /// <summary>
        /// Gets or sets benefit id the benefit utilization summaries report is
        /// for. Required for benefit id scope. Not supported for benefit order
        /// or any billing scopes.
        /// </summary>
        [JsonProperty(PropertyName = "benefitId")]
        public string BenefitId { get; set; }

        /// <summary>
        /// Gets or sets the grain the summaries data is served at in the
        /// report. Accepted values are 'Daily' or 'Monthly'. Possible values
        /// include: 'Hourly', 'Daily', 'Monthly'
        /// </summary>
        [JsonProperty(PropertyName = "grain")]
        public string Grain { get; set; }

        /// <summary>
        /// Gets or sets the start date of the summaries data that will be
        /// served in the report.
        /// </summary>
        [JsonProperty(PropertyName = "startDate")]
        public System.DateTime StartDate { get; set; }

        /// <summary>
        /// Gets or sets the end date of the summaries data that will be served
        /// in the report.
        /// </summary>
        [JsonProperty(PropertyName = "endDate")]
        public System.DateTime EndDate { get; set; }

        /// <summary>
        /// Gets or sets the type of benefit data requested. Required for
        /// billing account and billing profile scopes. Implied and not to be
        /// passed at benefit scopes. Supported values are Reservation and
        /// SavingsPlan. Possible values include: 'IncludedQuantity',
        /// 'Reservation', 'SavingsPlan'
        /// </summary>
        [JsonProperty(PropertyName = "kind")]
        public string Kind { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Grain == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Grain");
            }
        }
    }
}
