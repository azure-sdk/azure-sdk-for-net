// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.CostManagement.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Savings plan utilization summary resource.
    /// </summary>
    [Newtonsoft.Json.JsonObject("SavingsPlan")]
    [Rest.Serialization.JsonTransformation]
    public partial class SavingsPlanUtilizationSummary : BenefitUtilizationSummary
    {
        /// <summary>
        /// Initializes a new instance of the SavingsPlanUtilizationSummary
        /// class.
        /// </summary>
        public SavingsPlanUtilizationSummary()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SavingsPlanUtilizationSummary
        /// class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="armSkuName">ARM SKU name. For example, Standard_D1_V2
        /// for reservations and ComputeSavingsPlan for savings plan.</param>
        /// <param name="benefitId">The benefit ID is the identifier of a
        /// benefit within a benefit order.</param>
        /// <param name="benefitOrderId">The benefit order ID is the identifier
        /// for a benefit purchase. Each benefit order ID represents a single
        /// purchase transaction. For example: A reservation order contains
        /// reservations. The reservation order specifies the VM size and
        /// region for the reservations.</param>
        /// <param name="benefitType">The benefit type. For example,
        /// reservation or savings plan. Possible values include:
        /// 'IncludedQuantity', 'Reservation', 'SavingsPlan'</param>
        /// <param name="usageDate">Date corresponding to the utilization
        /// record. If the grain of data is monthly, it will be first day of
        /// month.</param>
        /// <param name="avgUtilizationPercentage">This is the average
        /// utilization percentage for the benefit ID.</param>
        /// <param name="minUtilizationPercentage">This is the minimum hourly
        /// utilization in the usage time (day or month). E.g. if usage record
        /// corresponds to 12/10/2017 and on that for hour 4, utilization was
        /// 10%, this field will return 10% for that day</param>
        /// <param name="maxUtilizationPercentage">This is the maximum hourly
        /// utilization in the usage time (day or month). E.g. if usage record
        /// corresponds to 12/10/2017 and on that for hour 4, utilization was
        /// 100%, this field will return 100% for that day.</param>
        public SavingsPlanUtilizationSummary(string id = default(string), string name = default(string), string type = default(string), string armSkuName = default(string), string benefitId = default(string), string benefitOrderId = default(string), string benefitType = default(string), System.DateTime? usageDate = default(System.DateTime?), decimal? avgUtilizationPercentage = default(decimal?), decimal? minUtilizationPercentage = default(decimal?), decimal? maxUtilizationPercentage = default(decimal?))
            : base(id, name, type)
        {
            ArmSkuName = armSkuName;
            BenefitId = benefitId;
            BenefitOrderId = benefitOrderId;
            BenefitType = benefitType;
            UsageDate = usageDate;
            AvgUtilizationPercentage = avgUtilizationPercentage;
            MinUtilizationPercentage = minUtilizationPercentage;
            MaxUtilizationPercentage = maxUtilizationPercentage;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets ARM SKU name. For example, Standard_D1_V2 for reservations and
        /// ComputeSavingsPlan for savings plan.
        /// </summary>
        [JsonProperty(PropertyName = "properties.armSkuName")]
        public string ArmSkuName { get; private set; }

        /// <summary>
        /// Gets the benefit ID is the identifier of a benefit within a benefit
        /// order.
        /// </summary>
        [JsonProperty(PropertyName = "properties.benefitId")]
        public string BenefitId { get; private set; }

        /// <summary>
        /// Gets the benefit order ID is the identifier for a benefit purchase.
        /// Each benefit order ID represents a single purchase transaction. For
        /// example: A reservation order contains reservations. The reservation
        /// order specifies the VM size and region for the reservations.
        /// </summary>
        [JsonProperty(PropertyName = "properties.benefitOrderId")]
        public string BenefitOrderId { get; private set; }

        /// <summary>
        /// Gets or sets the benefit type. For example, reservation or savings
        /// plan. Possible values include: 'IncludedQuantity', 'Reservation',
        /// 'SavingsPlan'
        /// </summary>
        [JsonProperty(PropertyName = "properties.benefitType")]
        public string BenefitType { get; set; }

        /// <summary>
        /// Gets date corresponding to the utilization record. If the grain of
        /// data is monthly, it will be first day of month.
        /// </summary>
        [JsonProperty(PropertyName = "properties.usageDate")]
        public System.DateTime? UsageDate { get; private set; }

        /// <summary>
        /// Gets this is the average utilization percentage for the benefit ID.
        /// </summary>
        [JsonProperty(PropertyName = "properties.avgUtilizationPercentage")]
        public decimal? AvgUtilizationPercentage { get; private set; }

        /// <summary>
        /// Gets this is the minimum hourly utilization in the usage time (day
        /// or month). E.g. if usage record corresponds to 12/10/2017 and on
        /// that for hour 4, utilization was 10%, this field will return 10%
        /// for that day
        /// </summary>
        [JsonProperty(PropertyName = "properties.minUtilizationPercentage")]
        public decimal? MinUtilizationPercentage { get; private set; }

        /// <summary>
        /// Gets this is the maximum hourly utilization in the usage time (day
        /// or month). E.g. if usage record corresponds to 12/10/2017 and on
        /// that for hour 4, utilization was 100%, this field will return 100%
        /// for that day.
        /// </summary>
        [JsonProperty(PropertyName = "properties.maxUtilizationPercentage")]
        public decimal? MaxUtilizationPercentage { get; private set; }

    }
}
