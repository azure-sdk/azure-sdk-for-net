// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.CostManagement
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for BenefitRecommendationOperations.
    /// </summary>
    public static partial class BenefitRecommendationOperationsExtensions
    {
            /// <summary>
            /// Details of a benefit plan recommendation for what-if analysis.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/CostManagement/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='billingScope'>
            /// The scope associated with benefit recommendation operations. This includes
            /// '/subscriptions/{subscriptionId}/' for subscription scope,
            /// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for
            /// resource group scope,
            /// /providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for
            /// enterprise agreement scope, and
            /// '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
            /// for billing profile scope
            /// </param>
            /// <param name='recommendationId'>
            /// The ID of the recommendation.
            /// </param>
            public static BenefitRecommendationModel Get(this IBenefitRecommendationOperations operations, string billingScope, string recommendationId)
            {
                return operations.GetAsync(billingScope, recommendationId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Details of a benefit plan recommendation for what-if analysis.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/CostManagement/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='billingScope'>
            /// The scope associated with benefit recommendation operations. This includes
            /// '/subscriptions/{subscriptionId}/' for subscription scope,
            /// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for
            /// resource group scope,
            /// /providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for
            /// enterprise agreement scope, and
            /// '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
            /// for billing profile scope
            /// </param>
            /// <param name='recommendationId'>
            /// The ID of the recommendation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<BenefitRecommendationModel> GetAsync(this IBenefitRecommendationOperations operations, string billingScope, string recommendationId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(billingScope, recommendationId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
