// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A copy activity Salesforce V2 source.
    /// </summary>
    public partial class SalesforceV2Source : TabularSource
    {
        /// <summary>
        /// Initializes a new instance of the SalesforceV2Source class.
        /// </summary>
        public SalesforceV2Source()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SalesforceV2Source class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="sourceRetryCount">Source retry count. Type: integer
        /// (or Expression with resultType integer).</param>
        /// <param name="sourceRetryWait">Source retry wait. Type: string (or
        /// Expression with resultType string), pattern:
        /// ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).</param>
        /// <param name="maxConcurrentConnections">The maximum concurrent
        /// connection count for the source data store. Type: integer (or
        /// Expression with resultType integer).</param>
        /// <param name="disableMetricsCollection">If true, disable data store
        /// metrics collection. Default is false. Type: boolean (or Expression
        /// with resultType boolean).</param>
        /// <param name="queryTimeout">Query timeout. Type: string (or
        /// Expression with resultType string), pattern:
        /// ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).</param>
        /// <param name="additionalColumns">Specifies the additional columns to
        /// be added to source data. Type: array of objects(AdditionalColumns)
        /// (or Expression with resultType array of objects).</param>
        /// <param name="sOQLQuery">Deprecating, please use 'query' property
        /// instead. Type: string (or Expression with resultType
        /// string).</param>
        /// <param name="query">You can only use Salesforce Object Query
        /// Language (SOQL) query with limitations. For SOQL limitations, see
        /// this article:
        /// https://developer.salesforce.com/docs/atlas.en-us.api_asynch.meta/api_asynch/queries.htm#SOQL%20Considerations.
        /// If query is not specified, all the data of the Salesforce object
        /// specified in ObjectApiName/reportId in dataset will be retrieved.
        /// Type: string (or Expression with resultType string).</param>
        /// <param name="includeDeletedObjects">This property control whether
        /// query result contains Deleted objects. Default is false. Type:
        /// boolean (or Expression with resultType boolean).</param>
        /// <param name="pageSize">Page size for each http request, too large
        /// pageSize will caused timeout, default 300,000. Type: integer (or
        /// Expression with resultType integer).</param>
        public SalesforceV2Source(IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), object sourceRetryCount = default(object), object sourceRetryWait = default(object), object maxConcurrentConnections = default(object), object disableMetricsCollection = default(object), object queryTimeout = default(object), object additionalColumns = default(object), object sOQLQuery = default(object), object query = default(object), object includeDeletedObjects = default(object), object pageSize = default(object))
            : base(additionalProperties, sourceRetryCount, sourceRetryWait, maxConcurrentConnections, disableMetricsCollection, queryTimeout, additionalColumns)
        {
            SOQLQuery = sOQLQuery;
            Query = query;
            IncludeDeletedObjects = includeDeletedObjects;
            PageSize = pageSize;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets deprecating, please use 'query' property instead.
        /// Type: string (or Expression with resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "SOQLQuery")]
        public object SOQLQuery { get; set; }

        /// <summary>
        /// Gets or sets you can only use Salesforce Object Query Language
        /// (SOQL) query with limitations. For SOQL limitations, see this
        /// article:
        /// https://developer.salesforce.com/docs/atlas.en-us.api_asynch.meta/api_asynch/queries.htm#SOQL%20Considerations.
        /// If query is not specified, all the data of the Salesforce object
        /// specified in ObjectApiName/reportId in dataset will be retrieved.
        /// Type: string (or Expression with resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "query")]
        public object Query { get; set; }

        /// <summary>
        /// Gets or sets this property control whether query result contains
        /// Deleted objects. Default is false. Type: boolean (or Expression
        /// with resultType boolean).
        /// </summary>
        [JsonProperty(PropertyName = "includeDeletedObjects")]
        public object IncludeDeletedObjects { get; set; }

        /// <summary>
        /// Gets or sets page size for each http request, too large pageSize
        /// will caused timeout, default 300,000. Type: integer (or Expression
        /// with resultType integer).
        /// </summary>
        [JsonProperty(PropertyName = "pageSize")]
        public object PageSize { get; set; }

    }
}
