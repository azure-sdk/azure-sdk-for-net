// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Microsoft.App.DynamicSessions
{
    /// <summary> SessionPool Metadata. </summary>
    public partial class SessionPoolMetadataResponse
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="SessionPoolMetadataResponse"/>. </summary>
        /// <param name="runtimes"> List of runtimes. </param>
        /// <param name="preInstalledPackages"> List of pre-installed packages. </param>
        /// <param name="createdAt"> Creation date in RFC3339 format. </param>
        /// <param name="lastUpdatedAt"> Last updated date in RFC3339 format. </param>
        /// <param name="jupyterKernel"> Jupyter kernel information. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="runtimes"/>, <paramref name="preInstalledPackages"/> or <paramref name="jupyterKernel"/> is null. </exception>
        internal SessionPoolMetadataResponse(IEnumerable<Runtime> runtimes, IEnumerable<Package> preInstalledPackages, DateTimeOffset createdAt, DateTimeOffset lastUpdatedAt, JupyterKernel jupyterKernel)
        {
            Argument.AssertNotNull(runtimes, nameof(runtimes));
            Argument.AssertNotNull(preInstalledPackages, nameof(preInstalledPackages));
            Argument.AssertNotNull(jupyterKernel, nameof(jupyterKernel));

            Runtimes = runtimes.ToList();
            PreInstalledPackages = preInstalledPackages.ToList();
            CreatedAt = createdAt;
            LastUpdatedAt = lastUpdatedAt;
            JupyterKernel = jupyterKernel;
        }

        /// <summary> Initializes a new instance of <see cref="SessionPoolMetadataResponse"/>. </summary>
        /// <param name="runtimes"> List of runtimes. </param>
        /// <param name="preInstalledPackages"> List of pre-installed packages. </param>
        /// <param name="createdAt"> Creation date in RFC3339 format. </param>
        /// <param name="lastUpdatedAt"> Last updated date in RFC3339 format. </param>
        /// <param name="jupyterKernel"> Jupyter kernel information. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal SessionPoolMetadataResponse(IReadOnlyList<Runtime> runtimes, IReadOnlyList<Package> preInstalledPackages, DateTimeOffset createdAt, DateTimeOffset lastUpdatedAt, JupyterKernel jupyterKernel, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Runtimes = runtimes;
            PreInstalledPackages = preInstalledPackages;
            CreatedAt = createdAt;
            LastUpdatedAt = lastUpdatedAt;
            JupyterKernel = jupyterKernel;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="SessionPoolMetadataResponse"/> for deserialization. </summary>
        internal SessionPoolMetadataResponse()
        {
        }

        /// <summary> List of runtimes. </summary>
        public IReadOnlyList<Runtime> Runtimes { get; }
        /// <summary> List of pre-installed packages. </summary>
        public IReadOnlyList<Package> PreInstalledPackages { get; }
        /// <summary> Creation date in RFC3339 format. </summary>
        public DateTimeOffset CreatedAt { get; }
        /// <summary> Last updated date in RFC3339 format. </summary>
        public DateTimeOffset LastUpdatedAt { get; }
        /// <summary> Jupyter kernel information. </summary>
        public JupyterKernel JupyterKernel { get; }
    }
}
