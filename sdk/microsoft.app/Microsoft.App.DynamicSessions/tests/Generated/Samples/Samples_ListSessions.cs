// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Microsoft.App.DynamicSessions.Samples
{
    public partial class Samples_ListSessions
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ListSessions_GetListSession_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ListSessions client = new DynamicSessionsClient(endpoint, credential).GetListSessionsClient(apiVersion: "2024-10-02-preview");

            Response response = client.GetListSession(null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("sessions")[0].GetProperty("identifier").ToString());
            Console.WriteLine(result.GetProperty("sessions")[0].GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("sessions")[0].GetProperty("lastAccessedAt").ToString());
            Console.WriteLine(result.GetProperty("sessions")[0].GetProperty("expireAt").ToString());
            Console.WriteLine(result.GetProperty("sessions")[0].GetProperty("etag").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ListSessions_GetListSession_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ListSessions client = new DynamicSessionsClient(endpoint, credential).GetListSessionsClient(apiVersion: "2024-10-02-preview");

            Response response = await client.GetListSessionAsync(null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("sessions")[0].GetProperty("identifier").ToString());
            Console.WriteLine(result.GetProperty("sessions")[0].GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("sessions")[0].GetProperty("lastAccessedAt").ToString());
            Console.WriteLine(result.GetProperty("sessions")[0].GetProperty("expireAt").ToString());
            Console.WriteLine(result.GetProperty("sessions")[0].GetProperty("etag").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ListSessions_GetListSession_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ListSessions client = new DynamicSessionsClient(endpoint, credential).GetListSessionsClient(apiVersion: "2024-10-02-preview");

            Response<SessionsListResponse> response = client.GetListSession();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ListSessions_GetListSession_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ListSessions client = new DynamicSessionsClient(endpoint, credential).GetListSessionsClient(apiVersion: "2024-10-02-preview");

            Response<SessionsListResponse> response = await client.GetListSessionAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ListSessions_GetListSession_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ListSessions client = new DynamicSessionsClient(endpoint, credential).GetListSessionsClient(apiVersion: "2024-10-02-preview");

            Response response = client.GetListSession(1234, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("sessions")[0].GetProperty("identifier").ToString());
            Console.WriteLine(result.GetProperty("sessions")[0].GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("sessions")[0].GetProperty("lastAccessedAt").ToString());
            Console.WriteLine(result.GetProperty("sessions")[0].GetProperty("expireAt").ToString());
            Console.WriteLine(result.GetProperty("sessions")[0].GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("nextLink").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ListSessions_GetListSession_AllParameters_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ListSessions client = new DynamicSessionsClient(endpoint, credential).GetListSessionsClient(apiVersion: "2024-10-02-preview");

            Response response = await client.GetListSessionAsync(1234, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("sessions")[0].GetProperty("identifier").ToString());
            Console.WriteLine(result.GetProperty("sessions")[0].GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("sessions")[0].GetProperty("lastAccessedAt").ToString());
            Console.WriteLine(result.GetProperty("sessions")[0].GetProperty("expireAt").ToString());
            Console.WriteLine(result.GetProperty("sessions")[0].GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("nextLink").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ListSessions_GetListSession_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ListSessions client = new DynamicSessionsClient(endpoint, credential).GetListSessionsClient(apiVersion: "2024-10-02-preview");

            Response<SessionsListResponse> response = client.GetListSession(skip: 1234);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ListSessions_GetListSession_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ListSessions client = new DynamicSessionsClient(endpoint, credential).GetListSessionsClient(apiVersion: "2024-10-02-preview");

            Response<SessionsListResponse> response = await client.GetListSessionAsync(skip: 1234);
        }
    }
}
