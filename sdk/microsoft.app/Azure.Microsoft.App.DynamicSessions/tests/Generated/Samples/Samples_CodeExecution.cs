// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.Microsoft.App.DynamicSessions.Samples
{
    public partial class Samples_CodeExecution
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SessionCodeExecutionResource_GetSessionCodeExecutionResource_CodeExecutionGetCompleted()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecution client = new DynamicSessionsClient(endpoint, credential).GetCodeExecutionClient(apiVersion: "2024-10-02-preview");

            Response response = client.GetSessionCodeExecutionResource("testExecutionId", "testSessionIdentifier", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("identifier").ToString());
            Console.WriteLine(result.GetProperty("executionType").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SessionCodeExecutionResource_GetSessionCodeExecutionResource_CodeExecutionGetCompleted_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecution client = new DynamicSessionsClient(endpoint, credential).GetCodeExecutionClient(apiVersion: "2024-10-02-preview");

            Response response = await client.GetSessionCodeExecutionResourceAsync("testExecutionId", "testSessionIdentifier", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("identifier").ToString());
            Console.WriteLine(result.GetProperty("executionType").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SessionCodeExecutionResource_GetSessionCodeExecutionResource_CodeExecutionGetCompleted_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecution client = new DynamicSessionsClient(endpoint, credential).GetCodeExecutionClient(apiVersion: "2024-10-02-preview");

            Response<SessionCodeExecutionResource> response = client.GetSessionCodeExecutionResource("testExecutionId", "testSessionIdentifier");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SessionCodeExecutionResource_GetSessionCodeExecutionResource_CodeExecutionGetCompleted_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecution client = new DynamicSessionsClient(endpoint, credential).GetCodeExecutionClient(apiVersion: "2024-10-02-preview");

            Response<SessionCodeExecutionResource> response = await client.GetSessionCodeExecutionResourceAsync("testExecutionId", "testSessionIdentifier");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SessionCodeExecutionResource_GetSessionCodeExecutionResource_CodeExecutionGetRunning()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecution client = new DynamicSessionsClient(endpoint, credential).GetCodeExecutionClient(apiVersion: "2024-10-02-preview");

            Response response = client.GetSessionCodeExecutionResource("testExecutionId", "testSessionIdentifier", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("identifier").ToString());
            Console.WriteLine(result.GetProperty("executionType").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SessionCodeExecutionResource_GetSessionCodeExecutionResource_CodeExecutionGetRunning_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecution client = new DynamicSessionsClient(endpoint, credential).GetCodeExecutionClient(apiVersion: "2024-10-02-preview");

            Response response = await client.GetSessionCodeExecutionResourceAsync("testExecutionId", "testSessionIdentifier", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("identifier").ToString());
            Console.WriteLine(result.GetProperty("executionType").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SessionCodeExecutionResource_GetSessionCodeExecutionResource_CodeExecutionGetRunning_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecution client = new DynamicSessionsClient(endpoint, credential).GetCodeExecutionClient(apiVersion: "2024-10-02-preview");

            Response<SessionCodeExecutionResource> response = client.GetSessionCodeExecutionResource("testExecutionId", "testSessionIdentifier");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SessionCodeExecutionResource_GetSessionCodeExecutionResource_CodeExecutionGetRunning_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecution client = new DynamicSessionsClient(endpoint, credential).GetCodeExecutionClient(apiVersion: "2024-10-02-preview");

            Response<SessionCodeExecutionResource> response = await client.GetSessionCodeExecutionResourceAsync("testExecutionId", "testSessionIdentifier");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CodeExecution_Execute_CodeExecutionExecuteAsyncCompleted()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecution client = new DynamicSessionsClient(endpoint, credential).GetCodeExecutionClient(apiVersion: "2024-10-02-preview");

            using RequestContent content = RequestContent.Create(new
            {
                codeInputType = "Inline",
                executionType = "Asynchronous",
                code = "print(7*9)",
                timeoutInSeconds = 60L,
            });
            Operation<BinaryData> operation = client.Execute(WaitUntil.Completed, "testSessionIdentifier", content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CodeExecution_Execute_CodeExecutionExecuteAsyncCompleted_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecution client = new DynamicSessionsClient(endpoint, credential).GetCodeExecutionClient(apiVersion: "2024-10-02-preview");

            using RequestContent content = RequestContent.Create(new
            {
                codeInputType = "Inline",
                executionType = "Asynchronous",
                code = "print(7*9)",
                timeoutInSeconds = 60L,
            });
            Operation<BinaryData> operation = await client.ExecuteAsync(WaitUntil.Completed, "testSessionIdentifier", content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CodeExecution_Execute_CodeExecutionExecuteAsyncCompleted_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecution client = new DynamicSessionsClient(endpoint, credential).GetCodeExecutionClient(apiVersion: "2024-10-02-preview");

            SessionCodeExecutionRequest codeExecutionRequest = new SessionCodeExecutionRequest(CodeInputType.Inline, ExecutionType.Asynchronous, "print(7*9)", 60L);
            Operation<SessionCodeExecutionResult> operation = client.Execute(WaitUntil.Completed, "testSessionIdentifier", codeExecutionRequest);
            SessionCodeExecutionResult responseData = operation.Value;
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CodeExecution_Execute_CodeExecutionExecuteAsyncCompleted_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecution client = new DynamicSessionsClient(endpoint, credential).GetCodeExecutionClient(apiVersion: "2024-10-02-preview");

            SessionCodeExecutionRequest codeExecutionRequest = new SessionCodeExecutionRequest(CodeInputType.Inline, ExecutionType.Asynchronous, "print(7*9)", 60L);
            Operation<SessionCodeExecutionResult> operation = await client.ExecuteAsync(WaitUntil.Completed, "testSessionIdentifier", codeExecutionRequest);
            SessionCodeExecutionResult responseData = operation.Value;
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CodeExecution_Execute_CodeExecutionExecuteAsyncRunning()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecution client = new DynamicSessionsClient(endpoint, credential).GetCodeExecutionClient(apiVersion: "2024-10-02-preview");

            using RequestContent content = RequestContent.Create(new
            {
                codeInputType = "Inline",
                executionType = "Asynchronous",
                code = "print(7*9)",
                timeoutInSeconds = 60L,
            });
            Operation<BinaryData> operation = client.Execute(WaitUntil.Completed, "testSessionIdentifier", content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CodeExecution_Execute_CodeExecutionExecuteAsyncRunning_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecution client = new DynamicSessionsClient(endpoint, credential).GetCodeExecutionClient(apiVersion: "2024-10-02-preview");

            using RequestContent content = RequestContent.Create(new
            {
                codeInputType = "Inline",
                executionType = "Asynchronous",
                code = "print(7*9)",
                timeoutInSeconds = 60L,
            });
            Operation<BinaryData> operation = await client.ExecuteAsync(WaitUntil.Completed, "testSessionIdentifier", content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CodeExecution_Execute_CodeExecutionExecuteAsyncRunning_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecution client = new DynamicSessionsClient(endpoint, credential).GetCodeExecutionClient(apiVersion: "2024-10-02-preview");

            SessionCodeExecutionRequest codeExecutionRequest = new SessionCodeExecutionRequest(CodeInputType.Inline, ExecutionType.Asynchronous, "print(7*9)", 60L);
            Operation<SessionCodeExecutionResult> operation = client.Execute(WaitUntil.Completed, "testSessionIdentifier", codeExecutionRequest);
            SessionCodeExecutionResult responseData = operation.Value;
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CodeExecution_Execute_CodeExecutionExecuteAsyncRunning_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecution client = new DynamicSessionsClient(endpoint, credential).GetCodeExecutionClient(apiVersion: "2024-10-02-preview");

            SessionCodeExecutionRequest codeExecutionRequest = new SessionCodeExecutionRequest(CodeInputType.Inline, ExecutionType.Asynchronous, "print(7*9)", 60L);
            Operation<SessionCodeExecutionResult> operation = await client.ExecuteAsync(WaitUntil.Completed, "testSessionIdentifier", codeExecutionRequest);
            SessionCodeExecutionResult responseData = operation.Value;
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CodeExecution_Execute_CodeExecutionExecuteSync()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecution client = new DynamicSessionsClient(endpoint, credential).GetCodeExecutionClient(apiVersion: "2024-10-02-preview");

            using RequestContent content = RequestContent.Create(new
            {
                codeInputType = "Inline",
                executionType = "Synchronous",
                code = "print(7*9)",
                timeoutInSeconds = 60L,
            });
            Operation<BinaryData> operation = client.Execute(WaitUntil.Completed, "testSessionIdentifier", content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CodeExecution_Execute_CodeExecutionExecuteSync_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecution client = new DynamicSessionsClient(endpoint, credential).GetCodeExecutionClient(apiVersion: "2024-10-02-preview");

            using RequestContent content = RequestContent.Create(new
            {
                codeInputType = "Inline",
                executionType = "Synchronous",
                code = "print(7*9)",
                timeoutInSeconds = 60L,
            });
            Operation<BinaryData> operation = await client.ExecuteAsync(WaitUntil.Completed, "testSessionIdentifier", content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CodeExecution_Execute_CodeExecutionExecuteSync_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecution client = new DynamicSessionsClient(endpoint, credential).GetCodeExecutionClient(apiVersion: "2024-10-02-preview");

            SessionCodeExecutionRequest codeExecutionRequest = new SessionCodeExecutionRequest(CodeInputType.Inline, ExecutionType.Synchronous, "print(7*9)", 60L);
            Operation<SessionCodeExecutionResult> operation = client.Execute(WaitUntil.Completed, "testSessionIdentifier", codeExecutionRequest);
            SessionCodeExecutionResult responseData = operation.Value;
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CodeExecution_Execute_CodeExecutionExecuteSync_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecution client = new DynamicSessionsClient(endpoint, credential).GetCodeExecutionClient(apiVersion: "2024-10-02-preview");

            SessionCodeExecutionRequest codeExecutionRequest = new SessionCodeExecutionRequest(CodeInputType.Inline, ExecutionType.Synchronous, "print(7*9)", 60L);
            Operation<SessionCodeExecutionResult> operation = await client.ExecuteAsync(WaitUntil.Completed, "testSessionIdentifier", codeExecutionRequest);
            SessionCodeExecutionResult responseData = operation.Value;
        }
    }
}
