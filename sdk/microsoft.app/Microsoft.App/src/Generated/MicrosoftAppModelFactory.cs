// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace Microsoft.App
{
    /// <summary> Model factory for models. </summary>
    public static partial class MicrosoftAppModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="App.GetFileMetadataResponse"/>. </summary>
        /// <param name="properties"> Code execution file resource properties. </param>
        /// <returns> A new <see cref="App.GetFileMetadataResponse"/> instance for mocking. </returns>
        public static GetFileMetadataResponse GetFileMetadataResponse(SessionResourceFileProperties properties = null)
        {
            return new GetFileMetadataResponse(properties, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="App.SessionResourceFileProperties"/>. </summary>
        /// <param name="fileName"> The name of the file. </param>
        /// <param name="sizeInBytes"> The size of the file. </param>
        /// <param name="lastModifiedAt"> The date time when the file was last modified. </param>
        /// <returns> A new <see cref="App.SessionResourceFileProperties"/> instance for mocking. </returns>
        public static SessionResourceFileProperties SessionResourceFileProperties(string fileName = null, long sizeInBytes = default, DateTimeOffset lastModifiedAt = default)
        {
            return new SessionResourceFileProperties(fileName, sizeInBytes, lastModifiedAt, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="App.SessionResourceFileCollection"/>. </summary>
        /// <param name="value"> The files uploaded. </param>
        /// <returns> A new <see cref="App.SessionResourceFileCollection"/> instance for mocking. </returns>
        public static SessionResourceFileCollection SessionResourceFileCollection(IEnumerable<SessionResourceFile> value = null)
        {
            value ??= new List<SessionResourceFile>();

            return new SessionResourceFileCollection(value?.ToList(), serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="App.SessionResourceFile"/>. </summary>
        /// <param name="fileName"> The name of the file. </param>
        /// <param name="properties"> Code execution file resource properties. </param>
        /// <returns> A new <see cref="App.SessionResourceFile"/> instance for mocking. </returns>
        public static SessionResourceFile SessionResourceFile(string fileName = null, SessionResourceFileProperties properties = null)
        {
            return new SessionResourceFile(fileName, properties, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="App.SessionCodeExecutionResponse"/>. </summary>
        /// <param name="properties"> The properties of the code execution response. </param>
        /// <returns> A new <see cref="App.SessionCodeExecutionResponse"/> instance for mocking. </returns>
        public static SessionCodeExecutionResponse SessionCodeExecutionResponse(SessionCodeExecutionResponseProperties properties = null)
        {
            return new SessionCodeExecutionResponse(properties, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="App.SessionCodeExecutionResponseProperties"/>. </summary>
        /// <param name="status"> The status of the code execution, indicates whether succeeded or not. </param>
        /// <param name="stdout"> The standard output of the code execution. </param>
        /// <param name="stderr"> The standard error of the code execution. </param>
        /// <param name="result"> The result of the code execution. </param>
        /// <param name="executionTimeInMilliseconds"> The execution time of the code in milliseconds. </param>
        /// <returns> A new <see cref="App.SessionCodeExecutionResponseProperties"/> instance for mocking. </returns>
        public static SessionCodeExecutionResponseProperties SessionCodeExecutionResponseProperties(CodeExecutionStatus status = default, string stdout = null, string stderr = null, BinaryData result = null, long executionTimeInMilliseconds = default)
        {
            return new SessionCodeExecutionResponseProperties(
                status,
                stdout,
                stderr,
                result,
                executionTimeInMilliseconds,
                serializedAdditionalRawData: null);
        }
    }
}
