// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Consumption.Models
{
    public partial class PriceSheetPropertiesV2
    {
        internal static PriceSheetPropertiesV2 DeserializePriceSheetPropertiesV2(JsonElement element)
        {
            Optional<string> billingPeriodId = default;
            Optional<Guid> meterId = default;
            Optional<MeterDetailsV2> meterDetails = default;
            Optional<string> unitOfMeasure = default;
            Optional<float> includedQuantity = default;
            Optional<string> partNumber = default;
            Optional<float> unitPrice = default;
            Optional<string> currencyCode = default;
            Optional<string> offerId = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("billingPeriodId"u8))
                {
                    billingPeriodId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("meterId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    meterId = property.Value.GetGuid();
                    continue;
                }
                if (property.NameEquals("meterDetails"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    meterDetails = MeterDetailsV2.DeserializeMeterDetailsV2(property.Value);
                    continue;
                }
                if (property.NameEquals("unitOfMeasure"u8))
                {
                    unitOfMeasure = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("includedQuantity"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    includedQuantity = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("partNumber"u8))
                {
                    partNumber = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("unitPrice"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    unitPrice = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("currencyCode"u8))
                {
                    currencyCode = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("offerId"u8))
                {
                    offerId = property.Value.GetString();
                    continue;
                }
            }
            return new PriceSheetPropertiesV2(billingPeriodId.Value, Optional.ToNullable(meterId), meterDetails.Value, unitOfMeasure.Value, Optional.ToNullable(includedQuantity), partNumber.Value, Optional.ToNullable(unitPrice), currencyCode.Value, offerId.Value);
        }
    }
}
