// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.ElasticSan.Models
{
    internal static partial class ElasticSanVolumeCreateOptionExtensions
    {
        public static string ToSerialString(this ElasticSanVolumeCreateOption value) => value switch
        {
            ElasticSanVolumeCreateOption.None => "None",
            ElasticSanVolumeCreateOption.VolumeSnapshot => "VolumeSnapshot",
            ElasticSanVolumeCreateOption.DiskSnapshot => "DiskSnapshot",
            ElasticSanVolumeCreateOption.Disk => "Disk",
            ElasticSanVolumeCreateOption.DiskRestorePoint => "DiskRestorePoint",
            ElasticSanVolumeCreateOption.Export => "Export",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown ElasticSanVolumeCreateOption value.")
        };

        public static ElasticSanVolumeCreateOption ToElasticSanVolumeCreateOption(this string value)
        {
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "None")) return ElasticSanVolumeCreateOption.None;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "VolumeSnapshot")) return ElasticSanVolumeCreateOption.VolumeSnapshot;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "DiskSnapshot")) return ElasticSanVolumeCreateOption.DiskSnapshot;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Disk")) return ElasticSanVolumeCreateOption.Disk;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "DiskRestorePoint")) return ElasticSanVolumeCreateOption.DiskRestorePoint;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Export")) return ElasticSanVolumeCreateOption.Export;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown ElasticSanVolumeCreateOption value.");
        }
    }
}
