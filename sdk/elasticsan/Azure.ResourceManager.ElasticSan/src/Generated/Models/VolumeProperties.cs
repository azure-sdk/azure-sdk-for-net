// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;

namespace Azure.ResourceManager.ElasticSan.Models
{
    /// <summary> Volume response properties. </summary>
    public partial class VolumeProperties
    {
        /// <summary> Initializes a new instance of <see cref="VolumeProperties"/>. </summary>
        /// <param name="sizeGiB"> Volume size. </param>
        public VolumeProperties(long sizeGiB)
        {
            SizeGiB = sizeGiB;
        }

        /// <summary> Initializes a new instance of <see cref="VolumeProperties"/>. </summary>
        /// <param name="volumeId"> Unique Id of the volume in GUID format. </param>
        /// <param name="creationData"> State of the operation on the resource. </param>
        /// <param name="sizeGiB"> Volume size. </param>
        /// <param name="storageTarget"> Storage target information. </param>
        /// <param name="managedBy"> Parent resource information. </param>
        /// <param name="provisioningState"> State of the operation on the resource. </param>
        internal VolumeProperties(string volumeId, ElasticSanVolumeDataSourceInfo creationData, long sizeGiB, IscsiTargetInfo storageTarget, ManagedByInfo managedBy, ElasticSanProvisioningState? provisioningState)
        {
            VolumeId = volumeId;
            CreationData = creationData;
            SizeGiB = sizeGiB;
            StorageTarget = storageTarget;
            ManagedBy = managedBy;
            ProvisioningState = provisioningState;
        }

        /// <summary> Unique Id of the volume in GUID format. </summary>
        public string VolumeId { get; }
        /// <summary> State of the operation on the resource. </summary>
        public ElasticSanVolumeDataSourceInfo CreationData { get; set; }
        /// <summary> Volume size. </summary>
        public long SizeGiB { get; set; }
        /// <summary> Storage target information. </summary>
        public IscsiTargetInfo StorageTarget { get; }
        /// <summary> Parent resource information. </summary>
        internal ManagedByInfo ManagedBy { get; set; }
        /// <summary> Resource ID of the resource managing the volume, this is a restricted field and can only be set for internal use. </summary>
        public ResourceIdentifier ManagedByResourceId
        {
            get => ManagedBy is null ? default : ManagedBy.ResourceId;
            set
            {
                if (ManagedBy is null)
                    ManagedBy = new ManagedByInfo();
                ManagedBy.ResourceId = value;
            }
        }

        /// <summary> State of the operation on the resource. </summary>
        public ElasticSanProvisioningState? ProvisioningState { get; }
    }
}
