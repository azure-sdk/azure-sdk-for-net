// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;

namespace Azure.ResourceManager.ElasticSan.Mocking
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public partial class MockableElasticSanArmClient : ArmResource
    {
        /// <summary> Initializes a new instance of the <see cref="MockableElasticSanArmClient"/> class for mocking. </summary>
        protected MockableElasticSanArmClient()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="MockableElasticSanArmClient"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableElasticSanArmClient(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        internal MockableElasticSanArmClient(ArmClient client) : this(client, ResourceIdentifier.Root)
        {
        }

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary>
        /// Gets an object representing an <see cref="ElasticSanResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ElasticSanResource.CreateResourceIdentifier" /> to create an <see cref="ElasticSanResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ElasticSanResource"/> object. </returns>
        public virtual ElasticSanResource GetElasticSanResource(ResourceIdentifier id)
        {
            ElasticSanResource.ValidateResourceId(id);
            return new ElasticSanResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing an <see cref="ElasticSanPrivateEndpointConnectionResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ElasticSanPrivateEndpointConnectionResource.CreateResourceIdentifier" /> to create an <see cref="ElasticSanPrivateEndpointConnectionResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ElasticSanPrivateEndpointConnectionResource"/> object. </returns>
        public virtual ElasticSanPrivateEndpointConnectionResource GetElasticSanPrivateEndpointConnectionResource(ResourceIdentifier id)
        {
            ElasticSanPrivateEndpointConnectionResource.ValidateResourceId(id);
            return new ElasticSanPrivateEndpointConnectionResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="VolumeGroupResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="VolumeGroupResource.CreateResourceIdentifier" /> to create a <see cref="VolumeGroupResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="VolumeGroupResource"/> object. </returns>
        public virtual VolumeGroupResource GetVolumeGroupResource(ResourceIdentifier id)
        {
            VolumeGroupResource.ValidateResourceId(id);
            return new VolumeGroupResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="VolumeResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="VolumeResource.CreateResourceIdentifier" /> to create a <see cref="VolumeResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="VolumeResource"/> object. </returns>
        public virtual VolumeResource GetVolumeResource(ResourceIdentifier id)
        {
            VolumeResource.ValidateResourceId(id);
            return new VolumeResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="SnapshotResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SnapshotResource.CreateResourceIdentifier" /> to create a <see cref="SnapshotResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SnapshotResource"/> object. </returns>
        public virtual SnapshotResource GetSnapshotResource(ResourceIdentifier id)
        {
            SnapshotResource.ValidateResourceId(id);
            return new SnapshotResource(Client, id);
        }
    }
}
