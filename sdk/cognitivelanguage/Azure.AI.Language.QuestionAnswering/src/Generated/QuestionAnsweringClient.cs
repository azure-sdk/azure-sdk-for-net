// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.Core.Pipeline;

namespace Azure.AI.Language.QuestionAnswering
{
    // Data plane generated client.
    /// <summary>
    /// The language service API is a suite of natural language processing (NLP) skills
    /// built with best-in-class Microsoft machine learning algorithms.  The API can be
    /// used to analyze unstructured text for tasks such as sentiment analysis, key
    /// phrase extraction, language detection and question answering. Further
    /// documentation can be found in &lt;a
    /// href="https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview"&gt;https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview&lt;/a&gt;.
    /// </summary>
    public partial class QuestionAnsweringClient
    {
        private readonly AzureKeyCredential _keyCredential;
        private static readonly string[] AuthorizationScopes = new string[] { "https://cognitiveservices.azure.com/.default" };
        private readonly TokenCredential _tokenCredential;
        private readonly HttpPipeline _pipeline;
        private readonly Uri _endpoint;

        /// <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        internal ClientDiagnostics ClientDiagnostics { get; }

        /// <summary> Initializes a new instance of QuestionAnswering. </summary>
        /// <param name="apiVersion"> The API version to use for this operation. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="apiVersion"/> is null. </exception>
        public virtual QuestionAnswering GetQuestionAnsweringClient(string apiVersion = "2023-04-01")
        {
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new QuestionAnswering(ClientDiagnostics, _pipeline, _keyCredential, _tokenCredential, _endpoint, apiVersion);
        }
    }
}
