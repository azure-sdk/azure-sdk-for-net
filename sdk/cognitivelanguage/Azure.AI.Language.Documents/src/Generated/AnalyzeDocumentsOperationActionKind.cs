// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.AI.Language.Documents
{
    /// <summary> The kind of the long running analyze documents tasks supported. </summary>
    internal readonly partial struct AnalyzeDocumentsOperationActionKind : IEquatable<AnalyzeDocumentsOperationActionKind>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="AnalyzeDocumentsOperationActionKind"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public AnalyzeDocumentsOperationActionKind(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string PiiEntityRecognitionValue = "PiiEntityRecognition";
        private const string ExtractiveSummarizationValue = "ExtractiveSummarization";
        private const string AbstractiveSummarizationValue = "AbstractiveSummarization";

        /// <summary> PII entity recognition task. </summary>
        public static AnalyzeDocumentsOperationActionKind PiiEntityRecognition { get; } = new AnalyzeDocumentsOperationActionKind(PiiEntityRecognitionValue);
        /// <summary> Extractive summarization task. </summary>
        public static AnalyzeDocumentsOperationActionKind ExtractiveSummarization { get; } = new AnalyzeDocumentsOperationActionKind(ExtractiveSummarizationValue);
        /// <summary> Abstractive summarization task. </summary>
        public static AnalyzeDocumentsOperationActionKind AbstractiveSummarization { get; } = new AnalyzeDocumentsOperationActionKind(AbstractiveSummarizationValue);
        /// <summary> Determines if two <see cref="AnalyzeDocumentsOperationActionKind"/> values are the same. </summary>
        public static bool operator ==(AnalyzeDocumentsOperationActionKind left, AnalyzeDocumentsOperationActionKind right) => left.Equals(right);
        /// <summary> Determines if two <see cref="AnalyzeDocumentsOperationActionKind"/> values are not the same. </summary>
        public static bool operator !=(AnalyzeDocumentsOperationActionKind left, AnalyzeDocumentsOperationActionKind right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="AnalyzeDocumentsOperationActionKind"/>. </summary>
        public static implicit operator AnalyzeDocumentsOperationActionKind(string value) => new AnalyzeDocumentsOperationActionKind(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is AnalyzeDocumentsOperationActionKind other && Equals(other);
        /// <inheritdoc />
        public bool Equals(AnalyzeDocumentsOperationActionKind other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
