<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="AnalyzeConversationsAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call AnalyzeConversationsAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisClient client = new ConversationAnalysisClient(credential);

RequestContent content = RequestContent.Create(new
{
    analysisInput = new
    {
        conversations = new List<object>()
        {
            new
            {
                conversationItems = new List<object>()
                {
                    new
                    {
                        text = "<text>",
                        id = "<id>",
                        participantId = "<participantId>",
                    }
                },
                id = "<id>",
                language = "<language>",
                modality = "TextConversation",
            }
        },
    },
    tasks = new List<object>()
    {
        new
        {
            kind = "AnalyzeConversationSummarizationTask",
            taskName = "<taskName>",
        }
    },
});
Response response = await client.AnalyzeConversationsAsync("<endpoint>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("lastUpdateDateTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("completed").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("inProgress").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("total").ToString());
]]></code>
This sample shows how to call AnalyzeConversationsAsync with all parameters and request content and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisClient client = new ConversationAnalysisClient(credential);

RequestContent content = RequestContent.Create(new
{
    displayName = "<displayName>",
    analysisInput = new
    {
        conversations = new List<object>()
        {
            new
            {
                conversationItems = new List<object>()
                {
                    new
                    {
                        text = "<text>",
                        id = "<id>",
                        participantId = "<participantId>",
                        language = "<language>",
                        modality = "transcript",
                    }
                },
                id = "<id>",
                language = "<language>",
                modality = "TextConversation",
                domain = "finance",
            }
        },
    },
    tasks = new List<object>()
    {
        new
        {
            parameters = new
            {
                summaryAspects = new List<object>()
                {
                    "issue"
                },
                sentenceCount = 1234,
                stringIndexType = "TextElements_v8",
            },
            kind = "AnalyzeConversationSummarizationTask",
            taskName = "<taskName>",
        }
    },
});
Response response = await client.AnalyzeConversationsAsync("<endpoint>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("expirationDateTime").ToString());
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("lastUpdateDateTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("nextlink").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("completed").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("inProgress").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("items")[0].GetProperty("taskName").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("items")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("items")[0].GetProperty("lastUpdateDateTime").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("items")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("statistics").GetProperty("conversationsCount").ToString());
Console.WriteLine(result.GetProperty("statistics").GetProperty("validConversationCount").ToString());
Console.WriteLine(result.GetProperty("statistics").GetProperty("erroneousConversationsCount").ToString());
Console.WriteLine(result.GetProperty("statistics").GetProperty("documentsCount").ToString());
Console.WriteLine(result.GetProperty("statistics").GetProperty("validDocumentCount").ToString());
Console.WriteLine(result.GetProperty("statistics").GetProperty("erroneousDocumentCount").ToString());
Console.WriteLine(result.GetProperty("statistics").GetProperty("transactionsCount").ToString());
]]></code></example>
    </member>
    <member name="AnalyzeConversations(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call AnalyzeConversations and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisClient client = new ConversationAnalysisClient(credential);

RequestContent content = RequestContent.Create(new
{
    analysisInput = new
    {
        conversations = new List<object>()
        {
            new
            {
                conversationItems = new List<object>()
                {
                    new
                    {
                        text = "<text>",
                        id = "<id>",
                        participantId = "<participantId>",
                    }
                },
                id = "<id>",
                language = "<language>",
                modality = "TextConversation",
            }
        },
    },
    tasks = new List<object>()
    {
        new
        {
            kind = "AnalyzeConversationSummarizationTask",
            taskName = "<taskName>",
        }
    },
});
Response response = client.AnalyzeConversations("<endpoint>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("lastUpdateDateTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("completed").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("inProgress").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("total").ToString());
]]></code>
This sample shows how to call AnalyzeConversations with all parameters and request content and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisClient client = new ConversationAnalysisClient(credential);

RequestContent content = RequestContent.Create(new
{
    displayName = "<displayName>",
    analysisInput = new
    {
        conversations = new List<object>()
        {
            new
            {
                conversationItems = new List<object>()
                {
                    new
                    {
                        text = "<text>",
                        id = "<id>",
                        participantId = "<participantId>",
                        language = "<language>",
                        modality = "transcript",
                    }
                },
                id = "<id>",
                language = "<language>",
                modality = "TextConversation",
                domain = "finance",
            }
        },
    },
    tasks = new List<object>()
    {
        new
        {
            parameters = new
            {
                summaryAspects = new List<object>()
                {
                    "issue"
                },
                sentenceCount = 1234,
                stringIndexType = "TextElements_v8",
            },
            kind = "AnalyzeConversationSummarizationTask",
            taskName = "<taskName>",
        }
    },
});
Response response = client.AnalyzeConversations("<endpoint>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("expirationDateTime").ToString());
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("lastUpdateDateTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("nextlink").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("completed").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("inProgress").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("items")[0].GetProperty("taskName").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("items")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("items")[0].GetProperty("lastUpdateDateTime").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("items")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("statistics").GetProperty("conversationsCount").ToString());
Console.WriteLine(result.GetProperty("statistics").GetProperty("validConversationCount").ToString());
Console.WriteLine(result.GetProperty("statistics").GetProperty("erroneousConversationsCount").ToString());
Console.WriteLine(result.GetProperty("statistics").GetProperty("documentsCount").ToString());
Console.WriteLine(result.GetProperty("statistics").GetProperty("validDocumentCount").ToString());
Console.WriteLine(result.GetProperty("statistics").GetProperty("erroneousDocumentCount").ToString());
Console.WriteLine(result.GetProperty("statistics").GetProperty("transactionsCount").ToString());
]]></code></example>
    </member>
    <member name="GetAnalyzeConversationJobStatusAsync(string,string,bool?,RequestContext)">
      <example>
This sample shows how to call GetAnalyzeConversationJobStatusAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisClient client = new ConversationAnalysisClient(credential);

Response response = await client.GetAnalyzeConversationJobStatusAsync("<endpoint>", "<jobId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("lastUpdateDateTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("completed").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("inProgress").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("total").ToString());
]]></code>
This sample shows how to call GetAnalyzeConversationJobStatusAsync with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisClient client = new ConversationAnalysisClient(credential);

Response response = await client.GetAnalyzeConversationJobStatusAsync("<endpoint>", "<jobId>", showStats: true);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("expirationDateTime").ToString());
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("lastUpdateDateTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("nextlink").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("completed").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("inProgress").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("items")[0].GetProperty("taskName").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("items")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("items")[0].GetProperty("lastUpdateDateTime").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("items")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("statistics").GetProperty("conversationsCount").ToString());
Console.WriteLine(result.GetProperty("statistics").GetProperty("validConversationCount").ToString());
Console.WriteLine(result.GetProperty("statistics").GetProperty("erroneousConversationsCount").ToString());
Console.WriteLine(result.GetProperty("statistics").GetProperty("documentsCount").ToString());
Console.WriteLine(result.GetProperty("statistics").GetProperty("validDocumentCount").ToString());
Console.WriteLine(result.GetProperty("statistics").GetProperty("erroneousDocumentCount").ToString());
Console.WriteLine(result.GetProperty("statistics").GetProperty("transactionsCount").ToString());
]]></code></example>
    </member>
    <member name="GetAnalyzeConversationJobStatus(string,string,bool?,RequestContext)">
      <example>
This sample shows how to call GetAnalyzeConversationJobStatus and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisClient client = new ConversationAnalysisClient(credential);

Response response = client.GetAnalyzeConversationJobStatus("<endpoint>", "<jobId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("lastUpdateDateTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("completed").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("inProgress").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("total").ToString());
]]></code>
This sample shows how to call GetAnalyzeConversationJobStatus with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisClient client = new ConversationAnalysisClient(credential);

Response response = client.GetAnalyzeConversationJobStatus("<endpoint>", "<jobId>", showStats: true);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("expirationDateTime").ToString());
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("lastUpdateDateTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("nextlink").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("completed").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("inProgress").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("items")[0].GetProperty("taskName").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("items")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("items")[0].GetProperty("lastUpdateDateTime").ToString());
Console.WriteLine(result.GetProperty("tasks").GetProperty("items")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("statistics").GetProperty("conversationsCount").ToString());
Console.WriteLine(result.GetProperty("statistics").GetProperty("validConversationCount").ToString());
Console.WriteLine(result.GetProperty("statistics").GetProperty("erroneousConversationsCount").ToString());
Console.WriteLine(result.GetProperty("statistics").GetProperty("documentsCount").ToString());
Console.WriteLine(result.GetProperty("statistics").GetProperty("validDocumentCount").ToString());
Console.WriteLine(result.GetProperty("statistics").GetProperty("erroneousDocumentCount").ToString());
Console.WriteLine(result.GetProperty("statistics").GetProperty("transactionsCount").ToString());
]]></code></example>
    </member>
    <member name="CancelAnalyzeConversationsAsync(string,string,RequestContext)">
      <example>
This sample shows how to call CancelAnalyzeConversationsAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisClient client = new ConversationAnalysisClient(credential);

Response response = await client.CancelAnalyzeConversationsAsync("<endpoint>", "<jobId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
This sample shows how to call CancelAnalyzeConversationsAsync with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisClient client = new ConversationAnalysisClient(credential);

Response response = await client.CancelAnalyzeConversationsAsync("<endpoint>", "<jobId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
]]></code></example>
    </member>
    <member name="CancelAnalyzeConversations(string,string,RequestContext)">
      <example>
This sample shows how to call CancelAnalyzeConversations and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisClient client = new ConversationAnalysisClient(credential);

Response response = client.CancelAnalyzeConversations("<endpoint>", "<jobId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
This sample shows how to call CancelAnalyzeConversations with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisClient client = new ConversationAnalysisClient(credential);

Response response = client.CancelAnalyzeConversations("<endpoint>", "<jobId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
]]></code></example>
    </member>
  </members>
</doc>