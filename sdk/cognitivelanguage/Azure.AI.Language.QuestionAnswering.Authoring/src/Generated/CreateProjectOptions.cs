// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Language.QuestionAnswering.Authoring
{
    /// <summary> Parameters needed to create the project. </summary>
    public partial class CreateProjectOptions
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="CreateProjectOptions"/>. </summary>
        /// <param name="language">
        /// Language of the text records. This is BCP-47 representation of a language. For
        /// example, use "en" for English; "es" for Spanish etc. If not set, use "en" for
        /// English as default.
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="language"/> is null. </exception>
        public CreateProjectOptions(string language)
        {
            Argument.AssertNotNull(language, nameof(language));

            Language = language;
        }

        /// <summary> Initializes a new instance of <see cref="CreateProjectOptions"/>. </summary>
        /// <param name="description"> Description of the project. </param>
        /// <param name="language">
        /// Language of the text records. This is BCP-47 representation of a language. For
        /// example, use "en" for English; "es" for Spanish etc. If not set, use "en" for
        /// English as default.
        /// </param>
        /// <param name="multilingualResource">
        /// Set to true to enable creating knowledgebases in different languages for the
        /// same resource.
        /// </param>
        /// <param name="settings"> Configurable settings of the Project. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal CreateProjectOptions(string description, string language, bool? multilingualResource, ProjectSettings settings, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Description = description;
            Language = language;
            MultilingualResource = multilingualResource;
            Settings = settings;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="CreateProjectOptions"/> for deserialization. </summary>
        internal CreateProjectOptions()
        {
        }

        /// <summary> Description of the project. </summary>
        public string Description { get; set; }
        /// <summary>
        /// Language of the text records. This is BCP-47 representation of a language. For
        /// example, use "en" for English; "es" for Spanish etc. If not set, use "en" for
        /// English as default.
        /// </summary>
        public string Language { get; }
        /// <summary>
        /// Set to true to enable creating knowledgebases in different languages for the
        /// same resource.
        /// </summary>
        public bool? MultilingualResource { get; set; }
        /// <summary> Configurable settings of the Project. </summary>
        public ProjectSettings Settings { get; set; }
    }
}
