// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.AI.Chat
{
    /// <summary> Model factory for models. </summary>
    public static partial class AIChatModelFactory
    {
        /// <summary> Initializes a new instance of ChatCompletionunknownRecord. </summary>
        /// <param name="choices"> placeholder. </param>
        /// <returns> A new <see cref="Chat.ChatCompletionunknownRecord"/> instance for mocking. </returns>
        public static ChatCompletionunknownRecord ChatCompletionunknownRecord(IEnumerable<ChatChoiceunknownRecord> choices = null)
        {
            choices ??= new List<ChatChoiceunknownRecord>();

            return new ChatCompletionunknownRecord(choices?.ToList());
        }

        /// <summary> Initializes a new instance of ChatChoiceunknownRecord. </summary>
        /// <param name="index"> placeholder. </param>
        /// <param name="message"> placeholder. </param>
        /// <param name="sessionState"> placeholder. </param>
        /// <param name="context"> placeholder. </param>
        /// <param name="finishReason"> placeholder. </param>
        /// <returns> A new <see cref="Chat.ChatChoiceunknownRecord"/> instance for mocking. </returns>
        public static ChatChoiceunknownRecord ChatChoiceunknownRecord(long index = default, ChatMessageunknown message = null, BinaryData sessionState = null, IReadOnlyDictionary<string, BinaryData> context = null, FinishReason finishReason = default)
        {
            context ??= new Dictionary<string, BinaryData>();

            return new ChatChoiceunknownRecord(index, message, sessionState, context, finishReason);
        }
    }
}
