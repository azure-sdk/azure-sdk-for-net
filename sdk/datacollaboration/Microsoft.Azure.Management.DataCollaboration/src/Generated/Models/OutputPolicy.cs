// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataCollaboration.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A Output policy.
    /// </summary>
    [Newtonsoft.Json.JsonObject("Output")]
    [Rest.Serialization.JsonTransformation]
    public partial class OutputPolicy : Policy
    {
        /// <summary>
        /// Initializes a new instance of the OutputPolicy class.
        /// </summary>
        public OutputPolicy()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OutputPolicy class.
        /// </summary>
        /// <param name="outputName">The name of the virtual reference
        /// representing this policy.</param>
        /// <param name="id">The resource id of the azure resource</param>
        /// <param name="name">Name of the azure resource</param>
        /// <param name="systemData">System Data of the Azure resource.</param>
        /// <param name="type">Type of the azure resource</param>
        /// <param name="appliesTo">The name of the sink this policy applies
        /// to. If not present the policy applies to all sinks.</param>
        /// <param name="description">Description of the policy</param>
        public OutputPolicy(string outputName, string id = default(string), string name = default(string), SystemData systemData = default(SystemData), string type = default(string), string appliesTo = default(string), string description = default(string))
            : base(id, name, systemData, type)
        {
            AppliesTo = appliesTo;
            Description = description;
            OutputName = outputName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the sink this policy applies to. If not
        /// present the policy applies to all sinks.
        /// </summary>
        [JsonProperty(PropertyName = "properties.appliesTo")]
        public string AppliesTo { get; set; }

        /// <summary>
        /// Gets or sets description of the policy
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the name of the virtual reference representing this
        /// policy.
        /// </summary>
        [JsonProperty(PropertyName = "properties.outputName")]
        public string OutputName { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (OutputName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "OutputName");
            }
        }
    }
}
