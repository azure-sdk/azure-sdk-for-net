// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataCollaboration.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Constraint used to only allow access if the resource is used with a
    /// specific computation.
    /// </summary>
    [Newtonsoft.Json.JsonObject("Computation")]
    [Rest.Serialization.JsonTransformation]
    public partial class ComputationConstraint : Constraint
    {
        /// <summary>
        /// Initializes a new instance of the ComputationConstraint class.
        /// </summary>
        public ComputationConstraint()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ComputationConstraint class.
        /// </summary>
        /// <param name="computationReferenceId">The unique identifier of the
        /// computation reference.</param>
        /// <param name="id">The resource id of the azure resource</param>
        /// <param name="name">Name of the azure resource</param>
        /// <param name="systemData">System Data of the Azure resource.</param>
        /// <param name="type">Type of the azure resource</param>
        /// <param name="adapterBindingConstraints">The identifier of the
        /// adapter binding constraints.</param>
        /// <param name="description">Description of the constraint.</param>
        public ComputationConstraint(string computationReferenceId, string id = default(string), string name = default(string), SystemData systemData = default(SystemData), string type = default(string), IList<AdapterBindingConstraint> adapterBindingConstraints = default(IList<AdapterBindingConstraint>), string description = default(string))
            : base(id, name, systemData, type)
        {
            AdapterBindingConstraints = adapterBindingConstraints;
            ComputationReferenceId = computationReferenceId;
            Description = description;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the identifier of the adapter binding constraints.
        /// </summary>
        [JsonProperty(PropertyName = "properties.adapterBindingConstraints")]
        public IList<AdapterBindingConstraint> AdapterBindingConstraints { get; set; }

        /// <summary>
        /// Gets or sets the unique identifier of the computation reference.
        /// </summary>
        [JsonProperty(PropertyName = "properties.computationReferenceId")]
        public string ComputationReferenceId { get; set; }

        /// <summary>
        /// Gets or sets description of the constraint.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ComputationReferenceId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ComputationReferenceId");
            }
            if (AdapterBindingConstraints != null)
            {
                foreach (var element in AdapterBindingConstraints)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
