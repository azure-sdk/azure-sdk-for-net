// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataCollaboration.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Private endpoint on the service managed virtual network
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ManagedPrivateEndpoint : ProxyDto
    {
        /// <summary>
        /// Initializes a new instance of the ManagedPrivateEndpoint class.
        /// </summary>
        public ManagedPrivateEndpoint()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedPrivateEndpoint class.
        /// </summary>
        /// <param name="groupId">The type of endpoint on the linked resource.
        /// Possible values include: 'blob', 'blob_secondary', 'dfs',
        /// 'dfs_secondary'</param>
        /// <param name="privateLinkResourceId">The Azure id of the linked
        /// resource</param>
        /// <param name="id">The resource id of the azure resource</param>
        /// <param name="name">Name of the azure resource</param>
        /// <param name="systemData">System Data of the Azure resource.</param>
        /// <param name="type">Type of the azure resource</param>
        /// <param name="additionalProperties">Additional endpoint
        /// properties</param>
        /// <param name="connectionState">Connection state of the Managed
        /// Private Endpoint</param>
        /// <param name="provisioningState">Provisioning state of the Managed
        /// Private Endpoint. Possible values include: 'Succeeded', 'Creating',
        /// 'Updating', 'Deleting', 'Moving', 'Failed'</param>
        public ManagedPrivateEndpoint(string groupId, string privateLinkResourceId, string id = default(string), string name = default(string), SystemData systemData = default(SystemData), string type = default(string), IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), ManagedPrivateEndpointPropertiesConnectionState connectionState = default(ManagedPrivateEndpointPropertiesConnectionState), string provisioningState = default(string))
            : base(id, name, systemData, type)
        {
            AdditionalProperties = additionalProperties;
            ConnectionState = connectionState;
            GroupId = groupId;
            PrivateLinkResourceId = privateLinkResourceId;
            ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets additional endpoint properties
        /// </summary>
        [JsonProperty(PropertyName = "properties.additionalProperties")]
        public IDictionary<string, object> AdditionalProperties { get; private set; }

        /// <summary>
        /// Gets connection state of the Managed Private Endpoint
        /// </summary>
        [JsonProperty(PropertyName = "properties.connectionState")]
        public ManagedPrivateEndpointPropertiesConnectionState ConnectionState { get; private set; }

        /// <summary>
        /// Gets or sets the type of endpoint on the linked resource. Possible
        /// values include: 'blob', 'blob_secondary', 'dfs', 'dfs_secondary'
        /// </summary>
        [JsonProperty(PropertyName = "properties.groupId")]
        public string GroupId { get; set; }

        /// <summary>
        /// Gets or sets the Azure id of the linked resource
        /// </summary>
        [JsonProperty(PropertyName = "properties.privateLinkResourceId")]
        public string PrivateLinkResourceId { get; set; }

        /// <summary>
        /// Gets provisioning state of the Managed Private Endpoint. Possible
        /// values include: 'Succeeded', 'Creating', 'Updating', 'Deleting',
        /// 'Moving', 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (GroupId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "GroupId");
            }
            if (PrivateLinkResourceId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PrivateLinkResourceId");
            }
        }
    }
}
