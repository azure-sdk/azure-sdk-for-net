// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataCollaboration.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Reference to a data asset.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class DataAssetReference : ProxyDto
    {
        /// <summary>
        /// Initializes a new instance of the DataAssetReference class.
        /// </summary>
        public DataAssetReference()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataAssetReference class.
        /// </summary>
        /// <param name="id">The resource id of the azure resource</param>
        /// <param name="name">Name of the azure resource</param>
        /// <param name="systemData">System Data of the Azure resource.</param>
        /// <param name="type">Type of the azure resource</param>
        /// <param name="dataAccessType">The data asset reference type.
        /// Represents the data access allowed using this data in pipeline.
        /// Possible values include: 'ReadOnly', 'WriteOnly'</param>
        /// <param name="dataAssetId">The unique identifier of the referenced
        /// data asset</param>
        /// <param name="dataAssetReferenceId">Unique id for identifying a
        /// dataset reference resource</param>
        /// <param name="description">General Description of the data asset
        /// reference</param>
        /// <param name="displayName">Reference display name</param>
        /// <param name="ownerId">The participant id of the data asset
        /// owner</param>
        /// <param name="placeholderInfo">The placeholder information</param>
        /// <param name="placeholderState">The placeholder state. Possible
        /// values include: 'None', 'Unassigned', 'Assigned'</param>
        public DataAssetReference(string id = default(string), string name = default(string), SystemData systemData = default(SystemData), string type = default(string), string dataAccessType = default(string), string dataAssetId = default(string), string dataAssetReferenceId = default(string), string description = default(string), string displayName = default(string), string ownerId = default(string), DataAssetReferencePlaceholderInfo placeholderInfo = default(DataAssetReferencePlaceholderInfo), string placeholderState = default(string))
            : base(id, name, systemData, type)
        {
            DataAccessType = dataAccessType;
            DataAssetId = dataAssetId;
            DataAssetReferenceId = dataAssetReferenceId;
            Description = description;
            DisplayName = displayName;
            OwnerId = ownerId;
            PlaceholderInfo = placeholderInfo;
            PlaceholderState = placeholderState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the data asset reference type. Represents the data
        /// access allowed using this data in pipeline. Possible values
        /// include: 'ReadOnly', 'WriteOnly'
        /// </summary>
        [JsonProperty(PropertyName = "properties.dataAccessType")]
        public string DataAccessType { get; set; }

        /// <summary>
        /// Gets or sets the unique identifier of the referenced data asset
        /// </summary>
        [JsonProperty(PropertyName = "properties.dataAssetId")]
        public string DataAssetId { get; set; }

        /// <summary>
        /// Gets unique id for identifying a dataset reference resource
        /// </summary>
        [JsonProperty(PropertyName = "properties.dataAssetReferenceId")]
        public string DataAssetReferenceId { get; private set; }

        /// <summary>
        /// Gets or sets general Description of the data asset reference
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets reference display name
        /// </summary>
        [JsonProperty(PropertyName = "properties.displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets the participant id of the data asset owner
        /// </summary>
        [JsonProperty(PropertyName = "properties.ownerId")]
        public string OwnerId { get; private set; }

        /// <summary>
        /// Gets or sets the placeholder information
        /// </summary>
        [JsonProperty(PropertyName = "properties.placeholderInfo")]
        public DataAssetReferencePlaceholderInfo PlaceholderInfo { get; set; }

        /// <summary>
        /// Gets the placeholder state. Possible values include: 'None',
        /// 'Unassigned', 'Assigned'
        /// </summary>
        [JsonProperty(PropertyName = "properties.placeholderState")]
        public string PlaceholderState { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (PlaceholderInfo != null)
            {
                PlaceholderInfo.Validate();
            }
        }
    }
}
