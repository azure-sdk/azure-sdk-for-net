// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataCollaboration.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Substep of a pipeline step run
    /// </summary>
    public partial class PipelineSubstep
    {
        /// <summary>
        /// Initializes a new instance of the PipelineSubstep class.
        /// </summary>
        public PipelineSubstep()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PipelineSubstep class.
        /// </summary>
        /// <param name="durationMs">Substep run duration</param>
        /// <param name="endTime">End time of substep</param>
        /// <param name="errorMessage">Error message if any</param>
        /// <param name="executionStatus">Execution status e.g. Success,
        /// Failed, InProgress. Possible values include: 'Succeeded', 'Failed',
        /// 'InProgress', 'Preparing', 'Queued', 'Unknown', 'Cancelled',
        /// 'Canceling', 'Waiting', 'Incomplete'</param>
        /// <param name="pipelineSubstepId">Id of pipeline substep.</param>
        /// <param name="startTime">Start time of substep</param>
        public PipelineSubstep(int? durationMs = default(int?), System.DateTime? endTime = default(System.DateTime?), string errorMessage = default(string), string executionStatus = default(string), string pipelineSubstepId = default(string), System.DateTime? startTime = default(System.DateTime?))
        {
            DurationMs = durationMs;
            EndTime = endTime;
            ErrorMessage = errorMessage;
            ExecutionStatus = executionStatus;
            PipelineSubstepId = pipelineSubstepId;
            StartTime = startTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets substep run duration
        /// </summary>
        [JsonProperty(PropertyName = "durationMs")]
        public int? DurationMs { get; private set; }

        /// <summary>
        /// Gets end time of substep
        /// </summary>
        [JsonProperty(PropertyName = "endTime")]
        public System.DateTime? EndTime { get; private set; }

        /// <summary>
        /// Gets error message if any
        /// </summary>
        [JsonProperty(PropertyName = "errorMessage")]
        public string ErrorMessage { get; private set; }

        /// <summary>
        /// Gets execution status e.g. Success, Failed, InProgress. Possible
        /// values include: 'Succeeded', 'Failed', 'InProgress', 'Preparing',
        /// 'Queued', 'Unknown', 'Cancelled', 'Canceling', 'Waiting',
        /// 'Incomplete'
        /// </summary>
        [JsonProperty(PropertyName = "executionStatus")]
        public string ExecutionStatus { get; private set; }

        /// <summary>
        /// Gets id of pipeline substep.
        /// </summary>
        [JsonProperty(PropertyName = "pipelineSubstepId")]
        public string PipelineSubstepId { get; private set; }

        /// <summary>
        /// Gets start time of substep
        /// </summary>
        [JsonProperty(PropertyName = "startTime")]
        public System.DateTime? StartTime { get; private set; }

    }
}
