// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataCollaboration.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A reference to a script execution sub-step
    /// </summary>
    [Newtonsoft.Json.JsonObject("ScriptExecution")]
    public partial class SynapseSparkScriptExecutionSubstepReference : SubstepReference
    {
        /// <summary>
        /// Initializes a new instance of the
        /// SynapseSparkScriptExecutionSubstepReference class.
        /// </summary>
        public SynapseSparkScriptExecutionSubstepReference()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// SynapseSparkScriptExecutionSubstepReference class.
        /// </summary>
        /// <param name="pipelineStepName">The name of the Pipeline Step Run
        /// which contains the referred sub-step</param>
        /// <param name="pipelineSubstepId">The Id of the Sub-step</param>
        /// <param name="outputBindingKey">The output binding key</param>
        public SynapseSparkScriptExecutionSubstepReference(string pipelineStepName = default(string), string pipelineSubstepId = default(string), string outputBindingKey = default(string))
            : base(pipelineStepName, pipelineSubstepId)
        {
            OutputBindingKey = outputBindingKey;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the output binding key
        /// </summary>
        [JsonProperty(PropertyName = "outputBindingKey")]
        public string OutputBindingKey { get; private set; }

    }
}
