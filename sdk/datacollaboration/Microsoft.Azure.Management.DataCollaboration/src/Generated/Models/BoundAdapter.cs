// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataCollaboration.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Bound adapter.
    /// </summary>
    public partial class BoundAdapter
    {
        /// <summary>
        /// Initializes a new instance of the BoundAdapter class.
        /// </summary>
        public BoundAdapter()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BoundAdapter class.
        /// </summary>
        /// <param name="adapterType">The adapter type. Possible values
        /// include: 'Standard', 'Custom'</param>
        /// <param name="computationId">The adapter computation id</param>
        /// <param name="computationRevision">The adapter computation
        /// revision</param>
        public BoundAdapter(string adapterType, string computationId, int computationRevision)
        {
            AdapterType = adapterType;
            ComputationId = computationId;
            ComputationRevision = computationRevision;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the adapter type. Possible values include: 'Standard',
        /// 'Custom'
        /// </summary>
        [JsonProperty(PropertyName = "adapterType")]
        public string AdapterType { get; set; }

        /// <summary>
        /// Gets or sets the adapter computation id
        /// </summary>
        [JsonProperty(PropertyName = "computationId")]
        public string ComputationId { get; set; }

        /// <summary>
        /// Gets or sets the adapter computation revision
        /// </summary>
        [JsonProperty(PropertyName = "computationRevision")]
        public int ComputationRevision { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (AdapterType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AdapterType");
            }
            if (ComputationId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ComputationId");
            }
        }
    }
}
