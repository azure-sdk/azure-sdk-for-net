// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataCollaboration.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Container Instance constrained resource
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ContainerInstance : ConstrainedResource
    {
        /// <summary>
        /// Initializes a new instance of the ContainerInstance class.
        /// </summary>
        public ContainerInstance()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ContainerInstance class.
        /// </summary>
        /// <param name="id">The resource id of the azure resource</param>
        /// <param name="name">Name of the azure resource</param>
        /// <param name="systemData">System Data of the Azure resource.</param>
        /// <param name="type">Type of the azure resource</param>
        /// <param name="constrainedResourceId">Unique id for identifying a
        /// constrained resource</param>
        /// <param name="family">Family of constrained resource. Possible
        /// values include: 'Compute', 'Storage'</param>
        /// <param name="provisioningState">Provisioning state of the
        /// constrained resource. Possible values include: 'Succeeded',
        /// 'Creating', 'Updating', 'Deleting', 'Moving', 'Failed',
        /// 'Canceled'</param>
        public ContainerInstance(string id = default(string), string name = default(string), SystemData systemData = default(SystemData), string type = default(string), string constrainedResourceId = default(string), string family = default(string), string provisioningState = default(string))
            : base(id, name, systemData, type)
        {
            ConstrainedResourceId = constrainedResourceId;
            Family = family;
            ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets unique id for identifying a constrained resource
        /// </summary>
        [JsonProperty(PropertyName = "properties.constrainedResourceId")]
        public string ConstrainedResourceId { get; private set; }

        /// <summary>
        /// Gets family of constrained resource. Possible values include:
        /// 'Compute', 'Storage'
        /// </summary>
        [JsonProperty(PropertyName = "properties.family")]
        public string Family { get; private set; }

        /// <summary>
        /// Gets provisioning state of the constrained resource. Possible
        /// values include: 'Succeeded', 'Creating', 'Updating', 'Deleting',
        /// 'Moving', 'Failed', 'Canceled'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

    }
}
