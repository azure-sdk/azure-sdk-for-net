// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataCollaboration.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Script parameter execution values
    /// </summary>
    public partial class ScriptExecutionParameter
    {
        /// <summary>
        /// Initializes a new instance of the ScriptExecutionParameter class.
        /// </summary>
        public ScriptExecutionParameter()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ScriptExecutionParameter class.
        /// </summary>
        /// <param name="name">Parameter name</param>
        /// <param name="parameterType">Parameter type. Possible values
        /// include: 'Boolean', 'Integer', 'Float', 'String',
        /// 'DateTime'</param>
        /// <param name="resolvedBy">Parameter resolution by. Possible values
        /// include: 'Default', 'Constant', 'PipelineRun'</param>
        /// <param name="value">Parameter value</param>
        public ScriptExecutionParameter(string name = default(string), string parameterType = default(string), string resolvedBy = default(string), string value = default(string))
        {
            Name = name;
            ParameterType = parameterType;
            ResolvedBy = resolvedBy;
            Value = value;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets parameter name
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets parameter type. Possible values include: 'Boolean',
        /// 'Integer', 'Float', 'String', 'DateTime'
        /// </summary>
        [JsonProperty(PropertyName = "parameterType")]
        public string ParameterType { get; set; }

        /// <summary>
        /// Gets or sets parameter resolution by. Possible values include:
        /// 'Default', 'Constant', 'PipelineRun'
        /// </summary>
        [JsonProperty(PropertyName = "resolvedBy")]
        public string ResolvedBy { get; set; }

        /// <summary>
        /// Gets or sets parameter value
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public string Value { get; set; }

    }
}
