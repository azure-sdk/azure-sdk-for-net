// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataCollaboration.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Computation parameter definition
    /// </summary>
    public partial class ComputationParameter
    {
        /// <summary>
        /// Initializes a new instance of the ComputationParameter class.
        /// </summary>
        public ComputationParameter()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ComputationParameter class.
        /// </summary>
        /// <param name="name">Parameter name as it appears in the
        /// computation</param>
        /// <param name="description">Parameter usage description</param>
        /// <param name="parameterId">Parameter identifier</param>
        public ComputationParameter(string name, string description = default(string), string parameterId = default(string))
        {
            Description = description;
            Name = name;
            ParameterId = parameterId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets parameter usage description
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets parameter name as it appears in the computation
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets parameter identifier
        /// </summary>
        [JsonProperty(PropertyName = "parameterId")]
        public string ParameterId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
        }
    }
}
