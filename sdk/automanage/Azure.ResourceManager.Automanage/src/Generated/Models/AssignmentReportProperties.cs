// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Automanage.Models
{
    /// <summary> Data related to the report detail. </summary>
    public partial class AssignmentReportProperties
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="AssignmentReportProperties"/>. </summary>
        public AssignmentReportProperties()
        {
            Resources = new ChangeTrackingList<ConfigurationProfileAssignmentReportResourceDetails>();
        }

        /// <summary> Initializes a new instance of <see cref="AssignmentReportProperties"/>. </summary>
        /// <param name="startTime"> Start time of the configuration profile assignment processing. </param>
        /// <param name="endTime"> End time of the configuration profile assignment processing. </param>
        /// <param name="lastModifiedTime"> Last modified time of the configuration profile assignment processing. </param>
        /// <param name="duration"> Duration of the configuration profile assignment processing. </param>
        /// <param name="assignmentReportPropertiesType"> Type of the configuration profile assignment processing (Initial/Consistency). </param>
        /// <param name="status"> The status of the configuration profile assignment. </param>
        /// <param name="configurationProfile"> The configurationProfile linked to the assignment. </param>
        /// <param name="resources"> List of resources processed by the configuration profile assignment. </param>
        /// <param name="error"> Error message, if any, returned by the configuration profile assignment processing. </param>
        /// <param name="reportFormatVersion"> Version of the report format. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal AssignmentReportProperties(string startTime, string endTime, string lastModifiedTime, TimeSpan? duration, string assignmentReportPropertiesType, string status, string configurationProfile, IReadOnlyList<ConfigurationProfileAssignmentReportResourceDetails> resources, ResponseError error, string reportFormatVersion, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            StartTime = startTime;
            EndTime = endTime;
            LastModifiedTime = lastModifiedTime;
            Duration = duration;
            AssignmentReportPropertiesType = assignmentReportPropertiesType;
            Status = status;
            ConfigurationProfile = configurationProfile;
            Resources = resources;
            Error = error;
            ReportFormatVersion = reportFormatVersion;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Start time of the configuration profile assignment processing. </summary>
        public string StartTime { get; set; }
        /// <summary> End time of the configuration profile assignment processing. </summary>
        public string EndTime { get; set; }
        /// <summary> Last modified time of the configuration profile assignment processing. </summary>
        public string LastModifiedTime { get; }
        /// <summary> Duration of the configuration profile assignment processing. </summary>
        public TimeSpan? Duration { get; }
        /// <summary> Type of the configuration profile assignment processing (Initial/Consistency). </summary>
        public string AssignmentReportPropertiesType { get; }
        /// <summary> The status of the configuration profile assignment. </summary>
        public string Status { get; }
        /// <summary> The configurationProfile linked to the assignment. </summary>
        public string ConfigurationProfile { get; }
        /// <summary> List of resources processed by the configuration profile assignment. </summary>
        public IReadOnlyList<ConfigurationProfileAssignmentReportResourceDetails> Resources { get; }
        /// <summary> Error message, if any, returned by the configuration profile assignment processing. </summary>
        public ResponseError Error { get; }
        /// <summary> Version of the report format. </summary>
        public string ReportFormatVersion { get; }
    }
}
