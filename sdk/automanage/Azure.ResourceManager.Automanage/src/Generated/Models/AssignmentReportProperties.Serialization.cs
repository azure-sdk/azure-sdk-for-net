// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure;
using Azure.Core;

namespace Azure.ResourceManager.Automanage.Models
{
    public partial class AssignmentReportProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(StartTime))
            {
                writer.WritePropertyName("startTime"u8);
                writer.WriteStringValue(StartTime);
            }
            if (Optional.IsDefined(EndTime))
            {
                writer.WritePropertyName("endTime"u8);
                writer.WriteStringValue(EndTime);
            }
            writer.WriteEndObject();
        }

        internal static AssignmentReportProperties DeserializeAssignmentReportProperties(JsonElement element)
        {
            Optional<string> startTime = default;
            Optional<string> endTime = default;
            Optional<string> lastModifiedTime = default;
            Optional<TimeSpan> duration = default;
            Optional<string> type = default;
            Optional<string> status = default;
            Optional<string> configurationProfile = default;
            Optional<IReadOnlyList<ReportResource>> resources = default;
            Optional<ResponseError> error = default;
            Optional<string> reportFormatVersion = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("startTime"u8))
                {
                    startTime = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("endTime"u8))
                {
                    endTime = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("lastModifiedTime"u8))
                {
                    lastModifiedTime = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("duration"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    duration = property.Value.GetTimeSpan("P");
                    continue;
                }
                if (property.NameEquals("type"u8))
                {
                    type = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("status"u8))
                {
                    status = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("configurationProfile"u8))
                {
                    configurationProfile = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("resources"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ReportResource> array = new List<ReportResource>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ReportResource.DeserializeReportResource(item));
                    }
                    resources = array;
                    continue;
                }
                if (property.NameEquals("error"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    error = JsonSerializer.Deserialize<ResponseError>(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("reportFormatVersion"u8))
                {
                    reportFormatVersion = property.Value.GetString();
                    continue;
                }
            }
            return new AssignmentReportProperties(startTime.Value, endTime.Value, lastModifiedTime.Value, Optional.ToNullable(duration), type.Value, status.Value, configurationProfile.Value, Optional.ToList(resources), error.Value, reportFormatVersion.Value);
        }
    }
}
