// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.NetApp.Models;

namespace Azure.ResourceManager.NetApp
{
    /// <summary>
    /// A class representing the NetAppBackup data model.
    /// Backup under a Backup Vault
    /// </summary>
    public partial class NetAppBackupData : ResourceData
    {
        /// <summary> Initializes a new instance of NetAppBackupData. </summary>
        /// <param name="volumeResourceId"> ResourceId used to identify the Volume. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="volumeResourceId"/> is null. </exception>
        public NetAppBackupData(string volumeResourceId)
        {
            Argument.AssertNotNull(volumeResourceId, nameof(volumeResourceId));

            VolumeResourceId = volumeResourceId;
        }

        /// <summary> Initializes a new instance of NetAppBackupData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="backupId"> UUID v4 used to identify the Backup. </param>
        /// <param name="createdOn"> The creation date of the backup. </param>
        /// <param name="provisioningState"> Azure lifecycle management. </param>
        /// <param name="size"> Size of backup in bytes. </param>
        /// <param name="label"> Label for backup. </param>
        /// <param name="backupType"> Type of backup Manual or Scheduled. </param>
        /// <param name="failureReason"> Failure reason. </param>
        /// <param name="volumeResourceId"> ResourceId used to identify the Volume. </param>
        /// <param name="useExistingSnapshot"> Manual backup an already existing snapshot. This will always be false for scheduled backups and true/false for manual backups. </param>
        /// <param name="snapshotName"> The name of the snapshot. </param>
        /// <param name="backupPolicyResourceId"> ResourceId used to identify the backup policy. </param>
        internal NetAppBackupData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string backupId, DateTimeOffset? createdOn, string provisioningState, long? size, string label, NetAppBackupType? backupType, string failureReason, string volumeResourceId, bool? useExistingSnapshot, string snapshotName, string backupPolicyResourceId) : base(id, name, resourceType, systemData)
        {
            BackupId = backupId;
            CreatedOn = createdOn;
            ProvisioningState = provisioningState;
            Size = size;
            Label = label;
            BackupType = backupType;
            FailureReason = failureReason;
            VolumeResourceId = volumeResourceId;
            UseExistingSnapshot = useExistingSnapshot;
            SnapshotName = snapshotName;
            BackupPolicyResourceId = backupPolicyResourceId;
        }
        /// <summary> ResourceId used to identify the Volume. </summary>
        public string VolumeResourceId { get; set; }
        /// <summary> The name of the snapshot. </summary>
        public string SnapshotName { get; set; }
        /// <summary> ResourceId used to identify the backup policy. </summary>
        public string BackupPolicyResourceId { get; }
    }
}
