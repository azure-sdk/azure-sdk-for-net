// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DevTestLabs.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Security settings like secure boot and vTPM.
    /// </summary>
    public partial class UefiSettings
    {
        /// <summary>
        /// Initializes a new instance of the UefiSettings class.
        /// </summary>
        public UefiSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UefiSettings class.
        /// </summary>
        /// <param name="secureBootEnabled">Flag to enable or disable secure
        /// boot.</param>
        /// <param name="vTpmEnabled">Flag to enable or disable vTPM (virtual
        /// Trusted Platform Module).</param>
        public UefiSettings(bool? secureBootEnabled = default(bool?), bool? vTpmEnabled = default(bool?))
        {
            SecureBootEnabled = secureBootEnabled;
            VTpmEnabled = vTpmEnabled;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets flag to enable or disable secure boot.
        /// </summary>
        [JsonProperty(PropertyName = "secureBootEnabled")]
        public bool? SecureBootEnabled { get; set; }

        /// <summary>
        /// Gets or sets flag to enable or disable vTPM (virtual Trusted
        /// Platform Module).
        /// </summary>
        [JsonProperty(PropertyName = "vTpmEnabled")]
        public bool? VTpmEnabled { get; set; }

    }
}
