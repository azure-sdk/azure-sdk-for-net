// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.DevTestLabs
{
    /// <summary>
    /// A class representing the LabSecret data model.
    /// A shared secret in a lab.
    /// </summary>
    public partial class LabSecretData : TrackedResourceData
    {
        /// <summary> Initializes a new instance of LabSecretData. </summary>
        /// <param name="location"> The location. </param>
        public LabSecretData(AzureLocation location) : base(location)
        {
        }

        /// <summary> Initializes a new instance of LabSecretData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="value"> The value of the secret for secret creation. </param>
        /// <param name="keyVaultEntry"> The name of the entry in the lab KeyVault. </param>
        /// <param name="enabledForArtifacts"> Is the secret enabled for use with artifacts?. </param>
        /// <param name="enabledForVmCreation"> Is the secret enabled for use with creation of VMs?. </param>
        /// <param name="enabledForArmEnvironments"> Is the secret enabled for use with ARM environments?. </param>
        /// <param name="provisioningState"> The provisioning status of the resource. </param>
        /// <param name="uniqueIdentifier"> The unique immutable identifier of a resource (Guid). </param>
        internal LabSecretData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, string> tags, AzureLocation location, string value, string keyVaultEntry, bool? enabledForArtifacts, bool? enabledForVmCreation, bool? enabledForArmEnvironments, string provisioningState, Guid? uniqueIdentifier) : base(id, name, resourceType, systemData, tags, location)
        {
            Value = value;
            KeyVaultEntry = keyVaultEntry;
            EnabledForArtifacts = enabledForArtifacts;
            EnabledForVmCreation = enabledForVmCreation;
            EnabledForArmEnvironments = enabledForArmEnvironments;
            ProvisioningState = provisioningState;
            UniqueIdentifier = uniqueIdentifier;
        }

        /// <summary> The value of the secret for secret creation. </summary>
        public string Value { get; set; }
        /// <summary> The name of the entry in the lab KeyVault. </summary>
        public string KeyVaultEntry { get; }
        /// <summary> Is the secret enabled for use with artifacts?. </summary>
        public bool? EnabledForArtifacts { get; set; }
        /// <summary> Is the secret enabled for use with creation of VMs?. </summary>
        public bool? EnabledForVmCreation { get; set; }
        /// <summary> Is the secret enabled for use with ARM environments?. </summary>
        public bool? EnabledForArmEnvironments { get; set; }
        /// <summary> The provisioning status of the resource. </summary>
        public string ProvisioningState { get; }
        /// <summary> The unique immutable identifier of a resource (Guid). </summary>
        public Guid? UniqueIdentifier { get; }
    }
}
