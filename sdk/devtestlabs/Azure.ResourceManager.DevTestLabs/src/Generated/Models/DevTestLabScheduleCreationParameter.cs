// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DevTestLabs.Models
{
    /// <summary> Properties for creating a schedule. </summary>
    public partial class DevTestLabScheduleCreationParameter
    {
        /// <summary> Initializes a new instance of DevTestLabScheduleCreationParameter. </summary>
        public DevTestLabScheduleCreationParameter()
        {
            Tags = new ChangeTrackingDictionary<string, string>();
            Weekdays = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of DevTestLabScheduleCreationParameter. </summary>
        /// <param name="name"> The name of the virtual machine or environment. </param>
        /// <param name="location"> The location of the new virtual machine or environment. </param>
        /// <param name="tags"> The tags of the resource. </param>
        /// <param name="statusPropertiesStatus"> The status of the schedule (i.e. Enabled, Disabled). </param>
        /// <param name="taskType"> The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart). </param>
        /// <param name="timeZoneId"> The time zone ID (e.g. Pacific Standard time). </param>
        /// <param name="createdOn"> The creation date of the schedule. </param>
        /// <param name="targetResourceId"> The resource ID to which the schedule belongs. </param>
        /// <param name="provisioningState"> The provisioning status of the resource. </param>
        /// <param name="uniqueIdentifier"> The unique immutable identifier of a resource (Guid). </param>
        /// <param name="statusPropertiesNotificationSettingsStatus"> If notifications are enabled for this schedule (i.e. Enabled, Disabled). </param>
        /// <param name="timeInMinutes"> Time in minutes before event at which notification will be sent. </param>
        /// <param name="webhookUri"> The webhook URL to which the notification will be sent. </param>
        /// <param name="emailRecipient"> The email recipient to send notifications to (can be a list of semi-colon separated email addresses). </param>
        /// <param name="notificationLocale"> The locale to use when sending a notification (fallback for unsupported languages is EN). </param>
        /// <param name="minute"> Minutes of the hour the schedule will run. </param>
        /// <param name="timePropertiesDailyRecurrenceTime"> The time of day the schedule will occur. </param>
        /// <param name="weekdays"> The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.). </param>
        /// <param name="timePropertiesWeeklyRecurrenceTime"> The time of the day the schedule will occur. </param>
        internal DevTestLabScheduleCreationParameter(string name, AzureLocation? location, IDictionary<string, string> tags, DevTestLabEnableStatus? statusPropertiesStatus, string taskType, string timeZoneId, DateTimeOffset? createdOn, ResourceIdentifier targetResourceId, string provisioningState, Guid? uniqueIdentifier, DevTestLabEnableStatus? statusPropertiesNotificationSettingsStatus, int? timeInMinutes, Uri webhookUri, string emailRecipient, string notificationLocale, int? minute, string timePropertiesDailyRecurrenceTime, IList<string> weekdays, string timePropertiesWeeklyRecurrenceTime)
        {
            Name = name;
            Location = location;
            Tags = tags;
            StatusPropertiesStatus = statusPropertiesStatus;
            TaskType = taskType;
            TimeZoneId = timeZoneId;
            CreatedOn = createdOn;
            TargetResourceId = targetResourceId;
            ProvisioningState = provisioningState;
            UniqueIdentifier = uniqueIdentifier;
            StatusPropertiesNotificationSettingsStatus = statusPropertiesNotificationSettingsStatus;
            TimeInMinutes = timeInMinutes;
            WebhookUri = webhookUri;
            EmailRecipient = emailRecipient;
            NotificationLocale = notificationLocale;
            Minute = minute;
            TimePropertiesDailyRecurrenceTime = timePropertiesDailyRecurrenceTime;
            Weekdays = weekdays;
            TimePropertiesWeeklyRecurrenceTime = timePropertiesWeeklyRecurrenceTime;
        }

        /// <summary> The name of the virtual machine or environment. </summary>
        public string Name { get; set; }
        /// <summary> The location of the new virtual machine or environment. </summary>
        public AzureLocation? Location { get; }
        /// <summary> The tags of the resource. </summary>
        public IDictionary<string, string> Tags { get; }
        /// <summary> The status of the schedule (i.e. Enabled, Disabled). </summary>
        public DevTestLabEnableStatus? StatusPropertiesStatus { get; set; }
        /// <summary> The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart). </summary>
        public string TaskType { get; set; }
        /// <summary> The time zone ID (e.g. Pacific Standard time). </summary>
        public string TimeZoneId { get; set; }
        /// <summary> The creation date of the schedule. </summary>
        public DateTimeOffset? CreatedOn { get; }
        /// <summary> The resource ID to which the schedule belongs. </summary>
        public ResourceIdentifier TargetResourceId { get; set; }
        /// <summary> The provisioning status of the resource. </summary>
        public string ProvisioningState { get; }
        /// <summary> The unique immutable identifier of a resource (Guid). </summary>
        public Guid? UniqueIdentifier { get; }
        /// <summary> If notifications are enabled for this schedule (i.e. Enabled, Disabled). </summary>
        public DevTestLabEnableStatus? StatusPropertiesNotificationSettingsStatus { get; set; }
        /// <summary> Time in minutes before event at which notification will be sent. </summary>
        public int? TimeInMinutes { get; set; }
        /// <summary> The webhook URL to which the notification will be sent. </summary>
        public Uri WebhookUri { get; set; }
        /// <summary> The email recipient to send notifications to (can be a list of semi-colon separated email addresses). </summary>
        public string EmailRecipient { get; set; }
        /// <summary> The locale to use when sending a notification (fallback for unsupported languages is EN). </summary>
        public string NotificationLocale { get; set; }
        /// <summary> Minutes of the hour the schedule will run. </summary>
        public int? Minute { get; set; }
        /// <summary> The time of day the schedule will occur. </summary>
        public string TimePropertiesDailyRecurrenceTime { get; set; }
        /// <summary> The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.). </summary>
        public IList<string> Weekdays { get; }
        /// <summary> The time of the day the schedule will occur. </summary>
        public string TimePropertiesWeeklyRecurrenceTime { get; set; }
    }
}
