// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerService
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// FleetMembersOperations operations.
    /// </summary>
    public partial interface IFleetMembersOperations
    {
        /// <summary>
        /// Creates or updates a fleet member.
        /// </summary>
        /// <remarks>
        /// A member contains a reference to an existing Kubernetes cluster.
        /// Creating a member makes the referenced cluster join the Fleet.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='fleetName'>
        /// The name of the Fleet resource.
        /// </param>
        /// <param name='fleetMemberName'>
        /// The name of the Fleet member resource.
        /// </param>
        /// <param name='ifMatch'>
        /// Omit this value to always overwrite the current resource. Specify
        /// the last-seen ETag value to prevent accidentally overwriting
        /// concurrent changes.
        /// </param>
        /// <param name='ifNoneMatch'>
        /// Set to '*' to allow a new resource to be created and prevent
        /// updating an existing resource. Other values will result in a 412
        /// Pre-condition Failed response.
        /// </param>
        /// <param name='clusterResourceId'>
        /// The ARM resource id of the cluster that joins the Fleet. Must be a
        /// valid Azure resource id. e.g.:
        /// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{clusterName}'.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<FleetMember>> CreateOrUpdateWithHttpMessagesAsync(string resourceGroupName, string fleetName, string fleetMemberName, string ifMatch = default(string), string ifNoneMatch = default(string), string clusterResourceId = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets a Fleet member.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='fleetName'>
        /// The name of the Fleet resource.
        /// </param>
        /// <param name='fleetMemberName'>
        /// The name of the Fleet member resource.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<FleetMember>> GetWithHttpMessagesAsync(string resourceGroupName, string fleetName, string fleetMemberName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Deletes a fleet member.
        /// </summary>
        /// <remarks>
        /// Deleting a Fleet member results in the member cluster leaving
        /// fleet. The Member azure resource is deleted upon success. The
        /// underlying cluster is not deleted.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='fleetName'>
        /// The name of the Fleet resource.
        /// </param>
        /// <param name='fleetMemberName'>
        /// The name of the Fleet member resource.
        /// </param>
        /// <param name='ifMatch'>
        /// Omit this value to always overwrite the current resource. Specify
        /// the last-seen ETag value to prevent accidentally overwriting
        /// concurrent changes.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationHeaderResponse<FleetMembersDeleteHeaders>> DeleteWithHttpMessagesAsync(string resourceGroupName, string fleetName, string fleetMemberName, string ifMatch = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Lists the members of a fleet.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='fleetName'>
        /// The name of the Fleet resource.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<FleetMember>>> ListByFleetWithHttpMessagesAsync(string resourceGroupName, string fleetName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates or updates a fleet member.
        /// </summary>
        /// <remarks>
        /// A member contains a reference to an existing Kubernetes cluster.
        /// Creating a member makes the referenced cluster join the Fleet.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='fleetName'>
        /// The name of the Fleet resource.
        /// </param>
        /// <param name='fleetMemberName'>
        /// The name of the Fleet member resource.
        /// </param>
        /// <param name='ifMatch'>
        /// Omit this value to always overwrite the current resource. Specify
        /// the last-seen ETag value to prevent accidentally overwriting
        /// concurrent changes.
        /// </param>
        /// <param name='ifNoneMatch'>
        /// Set to '*' to allow a new resource to be created and prevent
        /// updating an existing resource. Other values will result in a 412
        /// Pre-condition Failed response.
        /// </param>
        /// <param name='clusterResourceId'>
        /// The ARM resource id of the cluster that joins the Fleet. Must be a
        /// valid Azure resource id. e.g.:
        /// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{clusterName}'.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<FleetMember>> BeginCreateOrUpdateWithHttpMessagesAsync(string resourceGroupName, string fleetName, string fleetMemberName, string ifMatch = default(string), string ifNoneMatch = default(string), string clusterResourceId = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Deletes a fleet member.
        /// </summary>
        /// <remarks>
        /// Deleting a Fleet member results in the member cluster leaving
        /// fleet. The Member azure resource is deleted upon success. The
        /// underlying cluster is not deleted.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='fleetName'>
        /// The name of the Fleet resource.
        /// </param>
        /// <param name='fleetMemberName'>
        /// The name of the Fleet member resource.
        /// </param>
        /// <param name='ifMatch'>
        /// Omit this value to always overwrite the current resource. Specify
        /// the last-seen ETag value to prevent accidentally overwriting
        /// concurrent changes.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationHeaderResponse<FleetMembersDeleteHeaders>> BeginDeleteWithHttpMessagesAsync(string resourceGroupName, string fleetName, string fleetMemberName, string ifMatch = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Lists the members of a fleet.
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<FleetMember>>> ListByFleetNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
