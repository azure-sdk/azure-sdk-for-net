// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerService.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Holds configuration customizations for IPVS. May only be specified if
    /// 'mode' is set to 'IPVS'.
    /// </summary>
    public partial class ContainerServiceNetworkProfileKubeProxyConfigIpvsConfig
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ContainerServiceNetworkProfileKubeProxyConfigIpvsConfig class.
        /// </summary>
        public ContainerServiceNetworkProfileKubeProxyConfigIpvsConfig()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ContainerServiceNetworkProfileKubeProxyConfigIpvsConfig class.
        /// </summary>
        /// <param name="scheduler">IPVS scheduler, for more information please
        /// see http://www.linuxvirtualserver.org/docs/scheduling.html.
        /// Possible values include: 'RoundRobin', 'LeastConnection'</param>
        /// <param name="tcpTimeoutSeconds">The timeout value used for idle
        /// IPVS TCP sessions in seconds. Must be a positive integer
        /// value.</param>
        /// <param name="tcpFinTimeoutSeconds">The timeout value used for IPVS
        /// TCP sessions after receiving a FIN in seconds. Must be a positive
        /// integer value.</param>
        /// <param name="udpTimeoutSeconds">The timeout value used for IPVS UDP
        /// packets in seconds. Must be a positive integer value.</param>
        public ContainerServiceNetworkProfileKubeProxyConfigIpvsConfig(string scheduler = default(string), int? tcpTimeoutSeconds = default(int?), int? tcpFinTimeoutSeconds = default(int?), int? udpTimeoutSeconds = default(int?))
        {
            Scheduler = scheduler;
            TcpTimeoutSeconds = tcpTimeoutSeconds;
            TcpFinTimeoutSeconds = tcpFinTimeoutSeconds;
            UdpTimeoutSeconds = udpTimeoutSeconds;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets IPVS scheduler, for more information please see
        /// http://www.linuxvirtualserver.org/docs/scheduling.html. Possible
        /// values include: 'RoundRobin', 'LeastConnection'
        /// </summary>
        [JsonProperty(PropertyName = "scheduler")]
        public string Scheduler { get; set; }

        /// <summary>
        /// Gets or sets the timeout value used for idle IPVS TCP sessions in
        /// seconds. Must be a positive integer value.
        /// </summary>
        [JsonProperty(PropertyName = "tcpTimeoutSeconds")]
        public int? TcpTimeoutSeconds { get; set; }

        /// <summary>
        /// Gets or sets the timeout value used for IPVS TCP sessions after
        /// receiving a FIN in seconds. Must be a positive integer value.
        /// </summary>
        [JsonProperty(PropertyName = "tcpFinTimeoutSeconds")]
        public int? TcpFinTimeoutSeconds { get; set; }

        /// <summary>
        /// Gets or sets the timeout value used for IPVS UDP packets in
        /// seconds. Must be a positive integer value.
        /// </summary>
        [JsonProperty(PropertyName = "udpTimeoutSeconds")]
        public int? UdpTimeoutSeconds { get; set; }

    }
}
