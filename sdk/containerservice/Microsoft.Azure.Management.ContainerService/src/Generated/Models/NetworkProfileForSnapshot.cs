// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerService.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// network profile for managed cluster snapshot, these properties are read
    /// only.
    /// </summary>
    public partial class NetworkProfileForSnapshot
    {
        /// <summary>
        /// Initializes a new instance of the NetworkProfileForSnapshot class.
        /// </summary>
        public NetworkProfileForSnapshot()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NetworkProfileForSnapshot class.
        /// </summary>
        /// <param name="networkPlugin">networkPlugin for managed cluster
        /// snapshot. Possible values include: 'azure', 'kubenet',
        /// 'none'</param>
        /// <param name="networkPluginMode">NetworkPluginMode for managed
        /// cluster snapshot. Possible values include: 'Overlay'</param>
        /// <param name="networkPolicy">networkPolicy for managed cluster
        /// snapshot. Possible values include: 'calico', 'azure'</param>
        /// <param name="networkMode">networkMode for managed cluster snapshot.
        /// Possible values include: 'transparent', 'bridge'</param>
        /// <param name="loadBalancerSku">loadBalancerSku for managed cluster
        /// snapshot. Possible values include: 'standard', 'basic'</param>
        public NetworkProfileForSnapshot(string networkPlugin = default(string), string networkPluginMode = default(string), string networkPolicy = default(string), string networkMode = default(string), string loadBalancerSku = default(string))
        {
            NetworkPlugin = networkPlugin;
            NetworkPluginMode = networkPluginMode;
            NetworkPolicy = networkPolicy;
            NetworkMode = networkMode;
            LoadBalancerSku = loadBalancerSku;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets networkPlugin for managed cluster snapshot. Possible
        /// values include: 'azure', 'kubenet', 'none'
        /// </summary>
        [JsonProperty(PropertyName = "networkPlugin")]
        public string NetworkPlugin { get; set; }

        /// <summary>
        /// Gets or sets networkPluginMode for managed cluster snapshot.
        /// Possible values include: 'Overlay'
        /// </summary>
        [JsonProperty(PropertyName = "networkPluginMode")]
        public string NetworkPluginMode { get; set; }

        /// <summary>
        /// Gets or sets networkPolicy for managed cluster snapshot. Possible
        /// values include: 'calico', 'azure'
        /// </summary>
        [JsonProperty(PropertyName = "networkPolicy")]
        public string NetworkPolicy { get; set; }

        /// <summary>
        /// Gets or sets networkMode for managed cluster snapshot. Possible
        /// values include: 'transparent', 'bridge'
        /// </summary>
        [JsonProperty(PropertyName = "networkMode")]
        public string NetworkMode { get; set; }

        /// <summary>
        /// Gets or sets loadBalancerSku for managed cluster snapshot. Possible
        /// values include: 'standard', 'basic'
        /// </summary>
        [JsonProperty(PropertyName = "loadBalancerSku")]
        public string LoadBalancerSku { get; set; }

    }
}
