// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerService.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A managed cluster snapshot resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ManagedClusterSnapshot : TrackedResource
    {
        /// <summary>
        /// Initializes a new instance of the ManagedClusterSnapshot class.
        /// </summary>
        public ManagedClusterSnapshot()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedClusterSnapshot class.
        /// </summary>
        /// <param name="location">The geo-location where the resource
        /// lives</param>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="systemData">Azure Resource Manager metadata containing
        /// createdBy and modifiedBy information.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="creationData">CreationData to be used to specify the
        /// source resource ID to create this snapshot.</param>
        /// <param name="snapshotType">Possible values include: 'NodePool',
        /// 'ManagedCluster'</param>
        /// <param name="managedClusterPropertiesReadOnly">What the properties
        /// will be showed when getting managed cluster snapshot. Those
        /// properties are read-only.</param>
        public ManagedClusterSnapshot(string location, string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), IDictionary<string, string> tags = default(IDictionary<string, string>), CreationData creationData = default(CreationData), string snapshotType = default(string), ManagedClusterPropertiesForSnapshot managedClusterPropertiesReadOnly = default(ManagedClusterPropertiesForSnapshot))
            : base(location, id, name, type, systemData, tags)
        {
            CreationData = creationData;
            SnapshotType = snapshotType;
            ManagedClusterPropertiesReadOnly = managedClusterPropertiesReadOnly;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets creationData to be used to specify the source resource
        /// ID to create this snapshot.
        /// </summary>
        [JsonProperty(PropertyName = "properties.creationData")]
        public CreationData CreationData { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'NodePool', 'ManagedCluster'
        /// </summary>
        [JsonProperty(PropertyName = "properties.snapshotType")]
        public string SnapshotType { get; set; }

        /// <summary>
        /// Gets or sets what the properties will be showed when getting
        /// managed cluster snapshot. Those properties are read-only.
        /// </summary>
        [JsonProperty(PropertyName = "properties.managedClusterPropertiesReadOnly")]
        public ManagedClusterPropertiesForSnapshot ManagedClusterPropertiesReadOnly { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
