// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerService.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Rule for trusted access role
    /// </summary>
    public partial class TrustedAccessRoleRule
    {
        /// <summary>
        /// Initializes a new instance of the TrustedAccessRoleRule class.
        /// </summary>
        public TrustedAccessRoleRule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TrustedAccessRoleRule class.
        /// </summary>
        /// <param name="verbs">List of allowed verbs</param>
        /// <param name="apiGroups">List of allowed apiGroups</param>
        /// <param name="resources">List of allowed resources</param>
        /// <param name="resourceNames">List of allowed names</param>
        /// <param name="nonResourceURLs">List of allowed
        /// nonResourceURLs</param>
        public TrustedAccessRoleRule(IList<string> verbs = default(IList<string>), IList<string> apiGroups = default(IList<string>), IList<string> resources = default(IList<string>), IList<string> resourceNames = default(IList<string>), IList<string> nonResourceURLs = default(IList<string>))
        {
            Verbs = verbs;
            ApiGroups = apiGroups;
            Resources = resources;
            ResourceNames = resourceNames;
            NonResourceURLs = nonResourceURLs;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets list of allowed verbs
        /// </summary>
        [JsonProperty(PropertyName = "verbs")]
        public IList<string> Verbs { get; private set; }

        /// <summary>
        /// Gets list of allowed apiGroups
        /// </summary>
        [JsonProperty(PropertyName = "apiGroups")]
        public IList<string> ApiGroups { get; private set; }

        /// <summary>
        /// Gets list of allowed resources
        /// </summary>
        [JsonProperty(PropertyName = "resources")]
        public IList<string> Resources { get; private set; }

        /// <summary>
        /// Gets list of allowed names
        /// </summary>
        [JsonProperty(PropertyName = "resourceNames")]
        public IList<string> ResourceNames { get; private set; }

        /// <summary>
        /// Gets list of allowed nonResourceURLs
        /// </summary>
        [JsonProperty(PropertyName = "nonResourceURLs")]
        public IList<string> NonResourceURLs { get; private set; }

    }
}
