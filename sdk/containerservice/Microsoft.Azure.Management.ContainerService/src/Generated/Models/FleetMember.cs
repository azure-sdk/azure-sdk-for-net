// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerService.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A member of the Fleet. It contains a reference to an existing
    /// Kubernetes cluster on Azure.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class FleetMember : AzureEntityResource
    {
        /// <summary>
        /// Initializes a new instance of the FleetMember class.
        /// </summary>
        public FleetMember()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FleetMember class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="systemData">Azure Resource Manager metadata containing
        /// createdBy and modifiedBy information.</param>
        /// <param name="etag">Resource Etag.</param>
        /// <param name="clusterResourceId">The ARM resource id of the cluster
        /// that joins the Fleet. Must be a valid Azure resource id. e.g.:
        /// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{clusterName}'.</param>
        /// <param name="provisioningState">The provisioning state of the last
        /// accepted operation. Possible values include: 'Succeeded', 'Failed',
        /// 'Canceled', 'Joining', 'Leaving', 'Updating'</param>
        public FleetMember(string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), string etag = default(string), string clusterResourceId = default(string), string provisioningState = default(string))
            : base(id, name, type, systemData, etag)
        {
            ClusterResourceId = clusterResourceId;
            ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the ARM resource id of the cluster that joins the
        /// Fleet. Must be a valid Azure resource id. e.g.:
        /// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{clusterName}'.
        /// </summary>
        [JsonProperty(PropertyName = "properties.clusterResourceId")]
        public string ClusterResourceId { get; set; }

        /// <summary>
        /// Gets the provisioning state of the last accepted operation.
        /// Possible values include: 'Succeeded', 'Failed', 'Canceled',
        /// 'Joining', 'Leaving', 'Updating'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

    }
}
