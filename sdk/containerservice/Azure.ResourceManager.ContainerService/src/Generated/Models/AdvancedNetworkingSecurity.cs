// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.ContainerService.Models
{
    /// <summary> Security profile to enable security features on cilium-based cluster. </summary>
    public partial class AdvancedNetworkingSecurity
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="AdvancedNetworkingSecurity"/>. </summary>
        public AdvancedNetworkingSecurity()
        {
        }

        /// <summary> Initializes a new instance of <see cref="AdvancedNetworkingSecurity"/>. </summary>
        /// <param name="enabled"> Configure Advanced Networking Security features on Cilium clusters. See individual fields for their default values. </param>
        /// <param name="advancedNetworkPolicies"> This allows users to configure Layer 7 network policies (FQDN, HTTP, Kafka). Policies themselves must be configured via the Cilium Network Policy resources, see https://docs.cilium.io/en/latest/security/policy/index.html. This can be enabled only on cilium-based clusters. If not specified, the default value is FQDN if security.enabled is set to true. </param>
        /// <param name="transitEncryption"> This can be enabled only on Cilium-based clusters. If not specified, the default value is None. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal AdvancedNetworkingSecurity(bool? enabled, AdvancedNetworkPolicy? advancedNetworkPolicies, TransitEncryption? transitEncryption, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Enabled = enabled;
            AdvancedNetworkPolicies = advancedNetworkPolicies;
            TransitEncryption = transitEncryption;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Configure Advanced Networking Security features on Cilium clusters. See individual fields for their default values. </summary>
        [WirePath("enabled")]
        public bool? Enabled { get; set; }
        /// <summary> This allows users to configure Layer 7 network policies (FQDN, HTTP, Kafka). Policies themselves must be configured via the Cilium Network Policy resources, see https://docs.cilium.io/en/latest/security/policy/index.html. This can be enabled only on cilium-based clusters. If not specified, the default value is FQDN if security.enabled is set to true. </summary>
        [WirePath("advancedNetworkPolicies")]
        public AdvancedNetworkPolicy? AdvancedNetworkPolicies { get; set; }
        /// <summary> This can be enabled only on Cilium-based clusters. If not specified, the default value is None. </summary>
        [WirePath("transitEncryption")]
        public TransitEncryption? TransitEncryption { get; set; }
    }
}
