// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.ContainerService.Models
{
    /// <summary> Mode of traffic redirection. </summary>
    public readonly partial struct ProxyRedirectionMechanism : IEquatable<ProxyRedirectionMechanism>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ProxyRedirectionMechanism"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ProxyRedirectionMechanism(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string InitContainersValue = "InitContainers";
        private const string CNIChainingValue = "CNIChaining";

        /// <summary> Istio will inject an init container into each pod to redirect traffic (requires NET_ADMIN and NET_RAW). </summary>
        public static ProxyRedirectionMechanism InitContainers { get; } = new ProxyRedirectionMechanism(InitContainersValue);
        /// <summary> Istio will created a chained CNI plugin to redirect traffic (recommended). </summary>
        public static ProxyRedirectionMechanism CNIChaining { get; } = new ProxyRedirectionMechanism(CNIChainingValue);
        /// <summary> Determines if two <see cref="ProxyRedirectionMechanism"/> values are the same. </summary>
        public static bool operator ==(ProxyRedirectionMechanism left, ProxyRedirectionMechanism right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ProxyRedirectionMechanism"/> values are not the same. </summary>
        public static bool operator !=(ProxyRedirectionMechanism left, ProxyRedirectionMechanism right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="ProxyRedirectionMechanism"/>. </summary>
        public static implicit operator ProxyRedirectionMechanism(string value) => new ProxyRedirectionMechanism(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ProxyRedirectionMechanism other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ProxyRedirectionMechanism other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
