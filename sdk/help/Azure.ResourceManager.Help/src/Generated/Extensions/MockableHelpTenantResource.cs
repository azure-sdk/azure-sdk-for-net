// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Autorest.CSharp.Core;
using Azure.Core;
using Azure.Core.Pipeline;
using Azure.ResourceManager.Help.Models;

namespace Azure.ResourceManager.Help.Mocking
{
    /// <summary> A class to add extension methods to TenantResource. </summary>
    public partial class MockableHelpTenantResource : ArmResource
    {
        private ClientDiagnostics _discoverySolutionOperationGroupClientDiagnostics;
        private DiscoverySolutionOperationGroupRestOperations _discoverySolutionOperationGroupRestClient;
        private ClientDiagnostics _discoverySolutionNLPOperationGroupClientDiagnostics;
        private DiscoverySolutionNLPOperationGroupRestOperations _discoverySolutionNLPOperationGroupRestClient;

        /// <summary> Initializes a new instance of the <see cref="MockableHelpTenantResource"/> class for mocking. </summary>
        protected MockableHelpTenantResource()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="MockableHelpTenantResource"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableHelpTenantResource(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        private ClientDiagnostics DiscoverySolutionOperationGroupClientDiagnostics => _discoverySolutionOperationGroupClientDiagnostics ??= new ClientDiagnostics("Azure.ResourceManager.Help", ProviderConstants.DefaultProviderNamespace, Diagnostics);
        private DiscoverySolutionOperationGroupRestOperations DiscoverySolutionOperationGroupRestClient => _discoverySolutionOperationGroupRestClient ??= new DiscoverySolutionOperationGroupRestOperations(Pipeline, Diagnostics.ApplicationId, Endpoint);
        private ClientDiagnostics DiscoverySolutionNLPOperationGroupClientDiagnostics => _discoverySolutionNLPOperationGroupClientDiagnostics ??= new ClientDiagnostics("Azure.ResourceManager.Help", ProviderConstants.DefaultProviderNamespace, Diagnostics);
        private DiscoverySolutionNLPOperationGroupRestOperations DiscoverySolutionNLPOperationGroupRestClient => _discoverySolutionNLPOperationGroupRestClient ??= new DiscoverySolutionNLPOperationGroupRestOperations(Pipeline, Diagnostics.ApplicationId, Endpoint);

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary> Gets a collection of SolutionResourceSelfHelpResources in the TenantResource. </summary>
        /// <returns> An object representing collection of SolutionResourceSelfHelpResources and their operations over a SolutionResourceSelfHelpResource. </returns>
        public virtual SolutionResourceSelfHelpCollection GetSolutionResourceSelfHelps()
        {
            return GetCachedClient(client => new SolutionResourceSelfHelpCollection(client, Id));
        }

        /// <summary>
        /// Gets Self Help Solutions for a given solutionId. Self Help Solutions consist of rich instructional video tutorials, links and guides to public documentation related to a specific problem that enables users to troubleshoot Azure issues.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/providers/Microsoft.Help/selfHelp/{solutionId}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>SolutionResourceSelfHelp_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-03-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="SolutionResourceSelfHelpResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="solutionId"> SolutionId is a unique id to identify a solution. You can retrieve the solution id using the Discovery api - https://learn.microsoft.com/en-us/rest/api/help/discovery-solution/list?view=rest-help-2023-09-01-preview&amp;tabs=HTTP. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="solutionId"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="solutionId"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual async Task<Response<SolutionResourceSelfHelpResource>> GetSolutionResourceSelfHelpAsync(string solutionId, CancellationToken cancellationToken = default)
        {
            return await GetSolutionResourceSelfHelps().GetAsync(solutionId, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets Self Help Solutions for a given solutionId. Self Help Solutions consist of rich instructional video tutorials, links and guides to public documentation related to a specific problem that enables users to troubleshoot Azure issues.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/providers/Microsoft.Help/selfHelp/{solutionId}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>SolutionResourceSelfHelp_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-03-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="SolutionResourceSelfHelpResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="solutionId"> SolutionId is a unique id to identify a solution. You can retrieve the solution id using the Discovery api - https://learn.microsoft.com/en-us/rest/api/help/discovery-solution/list?view=rest-help-2023-09-01-preview&amp;tabs=HTTP. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="solutionId"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="solutionId"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual Response<SolutionResourceSelfHelpResource> GetSolutionResourceSelfHelp(string solutionId, CancellationToken cancellationToken = default)
        {
            return GetSolutionResourceSelfHelps().Get(solutionId, cancellationToken);
        }

        /// <summary>
        /// Lists the relevant Azure Diagnostics, Solutions and Troubleshooters using [problemClassification API](https://learn.microsoft.com/rest/api/support/problem-classifications/list?tabs=HTTP)) AND  resourceUri or resourceType.&lt;br/&gt; Discovery Solutions is the initial entry point within Help API, which identifies relevant Azure diagnostics and solutions. &lt;br/&gt;&lt;br/&gt; Required Input :  problemClassificationId (Use the [problemClassification API](https://learn.microsoft.com/rest/api/support/problem-classifications/list?tabs=HTTP)) &lt;br/&gt;Optional input: resourceUri OR resource Type &lt;br/&gt;&lt;br/&gt; &lt;b&gt;Note: &lt;/b&gt;  ‘requiredInputs’ from Discovery solutions response must be passed via ‘additionalParameters’ as an input to Diagnostics and Solutions API.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/providers/Microsoft.Help/discoverySolutions</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>DiscoverySolutionOperationGroup_List</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-03-01-preview</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="filter"> 'ProblemClassificationId' is a mandatory filter to get solutions ids. It also supports optional 'ResourceType' and 'SolutionType' filters. The [$filter](https://learn.microsoft.com/en-us/odata/webapi/first-odata-api#filter) supports only 'and', 'or' and 'eq' operators. Example: $filter=ProblemClassificationId eq '1ddda5b4-cf6c-4d4f-91ad-bc38ab0e811e'. </param>
        /// <param name="skiptoken"> Skiptoken is only used if a previous operation returned a partial result. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="SolutionMetadataResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual AsyncPageable<SolutionMetadataResource> GetDiscoverySolutionOperationGroupsAsync(string filter = null, string skiptoken = null, CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => DiscoverySolutionOperationGroupRestClient.CreateListRequest(filter, skiptoken);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => DiscoverySolutionOperationGroupRestClient.CreateListNextPageRequest(nextLink, filter, skiptoken);
            return GeneratorPageableHelpers.CreateAsyncPageable(FirstPageRequest, NextPageRequest, e => SolutionMetadataResource.DeserializeSolutionMetadataResource(e), DiscoverySolutionOperationGroupClientDiagnostics, Pipeline, "MockableHelpTenantResource.GetDiscoverySolutionOperationGroups", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// Lists the relevant Azure Diagnostics, Solutions and Troubleshooters using [problemClassification API](https://learn.microsoft.com/rest/api/support/problem-classifications/list?tabs=HTTP)) AND  resourceUri or resourceType.&lt;br/&gt; Discovery Solutions is the initial entry point within Help API, which identifies relevant Azure diagnostics and solutions. &lt;br/&gt;&lt;br/&gt; Required Input :  problemClassificationId (Use the [problemClassification API](https://learn.microsoft.com/rest/api/support/problem-classifications/list?tabs=HTTP)) &lt;br/&gt;Optional input: resourceUri OR resource Type &lt;br/&gt;&lt;br/&gt; &lt;b&gt;Note: &lt;/b&gt;  ‘requiredInputs’ from Discovery solutions response must be passed via ‘additionalParameters’ as an input to Diagnostics and Solutions API.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/providers/Microsoft.Help/discoverySolutions</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>DiscoverySolutionOperationGroup_List</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-03-01-preview</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="filter"> 'ProblemClassificationId' is a mandatory filter to get solutions ids. It also supports optional 'ResourceType' and 'SolutionType' filters. The [$filter](https://learn.microsoft.com/en-us/odata/webapi/first-odata-api#filter) supports only 'and', 'or' and 'eq' operators. Example: $filter=ProblemClassificationId eq '1ddda5b4-cf6c-4d4f-91ad-bc38ab0e811e'. </param>
        /// <param name="skiptoken"> Skiptoken is only used if a previous operation returned a partial result. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="SolutionMetadataResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual Pageable<SolutionMetadataResource> GetDiscoverySolutionOperationGroups(string filter = null, string skiptoken = null, CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => DiscoverySolutionOperationGroupRestClient.CreateListRequest(filter, skiptoken);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => DiscoverySolutionOperationGroupRestClient.CreateListNextPageRequest(nextLink, filter, skiptoken);
            return GeneratorPageableHelpers.CreatePageable(FirstPageRequest, NextPageRequest, e => SolutionMetadataResource.DeserializeSolutionMetadataResource(e), DiscoverySolutionOperationGroupClientDiagnostics, Pipeline, "MockableHelpTenantResource.GetDiscoverySolutionOperationGroups", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// Search for relevant Azure Diagnostics, Solutions and Troubleshooters using a natural language issue summary.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/providers/Microsoft.Help/discoverSolutions</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>DiscoverySolutionNLPOperationGroup_DiscoverSolutions</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-03-01-preview</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="content"> The request body. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="content"/> is null. </exception>
        /// <returns> An async collection of <see cref="SolutionNlpMetadataResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual AsyncPageable<SolutionNlpMetadataResource> DiscoverSolutionsDiscoverySolutionNLPOperationGroupsAsync(DiscoveryNlpContent content, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(content, nameof(content));

            HttpMessage FirstPageRequest(int? pageSizeHint) => DiscoverySolutionNLPOperationGroupRestClient.CreateDiscoverSolutionsRequest(content);
            return GeneratorPageableHelpers.CreateAsyncPageable(FirstPageRequest, null, e => SolutionNlpMetadataResource.DeserializeSolutionNlpMetadataResource(e), DiscoverySolutionNLPOperationGroupClientDiagnostics, Pipeline, "MockableHelpTenantResource.DiscoverSolutionsDiscoverySolutionNLPOperationGroups", "value", null, cancellationToken);
        }

        /// <summary>
        /// Search for relevant Azure Diagnostics, Solutions and Troubleshooters using a natural language issue summary.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/providers/Microsoft.Help/discoverSolutions</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>DiscoverySolutionNLPOperationGroup_DiscoverSolutions</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-03-01-preview</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="content"> The request body. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="content"/> is null. </exception>
        /// <returns> A collection of <see cref="SolutionNlpMetadataResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual Pageable<SolutionNlpMetadataResource> DiscoverSolutionsDiscoverySolutionNLPOperationGroups(DiscoveryNlpContent content, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(content, nameof(content));

            HttpMessage FirstPageRequest(int? pageSizeHint) => DiscoverySolutionNLPOperationGroupRestClient.CreateDiscoverSolutionsRequest(content);
            return GeneratorPageableHelpers.CreatePageable(FirstPageRequest, null, e => SolutionNlpMetadataResource.DeserializeSolutionNlpMetadataResource(e), DiscoverySolutionNLPOperationGroupClientDiagnostics, Pipeline, "MockableHelpTenantResource.DiscoverSolutionsDiscoverySolutionNLPOperationGroups", "value", null, cancellationToken);
        }
    }
}
