// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using Autorest.CSharp.Core;
using Azure.Core;
using Azure.Core.Pipeline;
using Azure.ResourceManager.Help.Models;

namespace Azure.ResourceManager.Help.Mocking
{
    /// <summary> A class to add extension methods to SubscriptionResource. </summary>
    public partial class MockableHelpSubscriptionResource : ArmResource
    {
        private ClientDiagnostics _discoverySolutionNLPOperationGroupClientDiagnostics;
        private DiscoverySolutionNLPOperationGroupRestOperations _discoverySolutionNLPOperationGroupRestClient;

        /// <summary> Initializes a new instance of the <see cref="MockableHelpSubscriptionResource"/> class for mocking. </summary>
        protected MockableHelpSubscriptionResource()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="MockableHelpSubscriptionResource"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableHelpSubscriptionResource(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        private ClientDiagnostics DiscoverySolutionNLPOperationGroupClientDiagnostics => _discoverySolutionNLPOperationGroupClientDiagnostics ??= new ClientDiagnostics("Azure.ResourceManager.Help", ProviderConstants.DefaultProviderNamespace, Diagnostics);
        private DiscoverySolutionNLPOperationGroupRestOperations DiscoverySolutionNLPOperationGroupRestClient => _discoverySolutionNLPOperationGroupRestClient ??= new DiscoverySolutionNLPOperationGroupRestOperations(Pipeline, Diagnostics.ApplicationId, Endpoint);

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary>
        /// Search for relevant Azure Diagnostics, Solutions and Troubleshooters using a natural language issue summary and subscription.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.Help/discoverSolutions</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>DiscoverySolutionNLPOperationGroup_DiscoverSolutionsBySubscription</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-03-01-preview</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="content"> The request body. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="content"/> is null. </exception>
        /// <returns> An async collection of <see cref="SolutionNlpMetadataResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual AsyncPageable<SolutionNlpMetadataResource> DiscoverSolutionsBySubscriptionDiscoverySolutionNLPOperationGroupsAsync(DiscoveryNlpContent content, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(content, nameof(content));

            HttpMessage FirstPageRequest(int? pageSizeHint) => DiscoverySolutionNLPOperationGroupRestClient.CreateDiscoverSolutionsBySubscriptionRequest(Id.SubscriptionId, content);
            return GeneratorPageableHelpers.CreateAsyncPageable(FirstPageRequest, null, e => SolutionNlpMetadataResource.DeserializeSolutionNlpMetadataResource(e), DiscoverySolutionNLPOperationGroupClientDiagnostics, Pipeline, "MockableHelpSubscriptionResource.DiscoverSolutionsBySubscriptionDiscoverySolutionNLPOperationGroups", "value", null, cancellationToken);
        }

        /// <summary>
        /// Search for relevant Azure Diagnostics, Solutions and Troubleshooters using a natural language issue summary and subscription.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.Help/discoverSolutions</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>DiscoverySolutionNLPOperationGroup_DiscoverSolutionsBySubscription</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-03-01-preview</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="content"> The request body. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="content"/> is null. </exception>
        /// <returns> A collection of <see cref="SolutionNlpMetadataResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual Pageable<SolutionNlpMetadataResource> DiscoverSolutionsBySubscriptionDiscoverySolutionNLPOperationGroups(DiscoveryNlpContent content, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(content, nameof(content));

            HttpMessage FirstPageRequest(int? pageSizeHint) => DiscoverySolutionNLPOperationGroupRestClient.CreateDiscoverSolutionsBySubscriptionRequest(Id.SubscriptionId, content);
            return GeneratorPageableHelpers.CreatePageable(FirstPageRequest, null, e => SolutionNlpMetadataResource.DeserializeSolutionNlpMetadataResource(e), DiscoverySolutionNLPOperationGroupClientDiagnostics, Pipeline, "MockableHelpSubscriptionResource.DiscoverSolutionsBySubscriptionDiscoverySolutionNLPOperationGroups", "value", null, cancellationToken);
        }
    }
}
