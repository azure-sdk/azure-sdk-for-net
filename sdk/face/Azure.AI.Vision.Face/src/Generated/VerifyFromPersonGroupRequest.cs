// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Vision.Face
{
    /// <summary> The VerifyFromPersonGroupRequest. </summary>
    internal partial class VerifyFromPersonGroupRequest
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="VerifyFromPersonGroupRequest"/>. </summary>
        /// <param name="faceId"> faceId of the face, comes from Face - Detect. </param>
        /// <param name="personGroupId"> Using existing personGroupId and personId for fast loading a specified person. personGroupId is created in PersonGroup - Create. </param>
        /// <param name="personId"> Specify a certain person in person group. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="faceId"/>, <paramref name="personGroupId"/> or <paramref name="personId"/> is null. </exception>
        public VerifyFromPersonGroupRequest(string faceId, string personGroupId, string personId)
        {
            Argument.AssertNotNull(faceId, nameof(faceId));
            Argument.AssertNotNull(personGroupId, nameof(personGroupId));
            Argument.AssertNotNull(personId, nameof(personId));

            FaceId = faceId;
            PersonGroupId = personGroupId;
            PersonId = personId;
        }

        /// <summary> Initializes a new instance of <see cref="VerifyFromPersonGroupRequest"/>. </summary>
        /// <param name="faceId"> faceId of the face, comes from Face - Detect. </param>
        /// <param name="personGroupId"> Using existing personGroupId and personId for fast loading a specified person. personGroupId is created in PersonGroup - Create. </param>
        /// <param name="personId"> Specify a certain person in person group. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal VerifyFromPersonGroupRequest(string faceId, string personGroupId, string personId, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            FaceId = faceId;
            PersonGroupId = personGroupId;
            PersonId = personId;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="VerifyFromPersonGroupRequest"/> for deserialization. </summary>
        internal VerifyFromPersonGroupRequest()
        {
        }

        /// <summary> faceId of the face, comes from Face - Detect. </summary>
        public string FaceId { get; }
        /// <summary> Using existing personGroupId and personId for fast loading a specified person. personGroupId is created in PersonGroup - Create. </summary>
        public string PersonGroupId { get; }
        /// <summary> Specify a certain person in person group. </summary>
        public string PersonId { get; }
    }
}
