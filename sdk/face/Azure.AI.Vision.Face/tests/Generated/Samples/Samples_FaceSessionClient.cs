// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.AI.Vision.Face.Samples
{
    public partial class Samples_FaceSessionClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessSession_CreateLivenessSession_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                livenessOperationMode = "<livenessOperationMode>",
                deviceCorrelationId = "<deviceCorrelationId>",
            });
            Response response = client.CreateLivenessSession(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("sessionId").ToString());
            Console.WriteLine(result.GetProperty("authToken").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessSession_CreateLivenessSession_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                livenessOperationMode = "<livenessOperationMode>",
                deviceCorrelationId = "<deviceCorrelationId>",
            });
            Response response = await client.CreateLivenessSessionAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("sessionId").ToString());
            Console.WriteLine(result.GetProperty("authToken").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessSession_CreateLivenessSession_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            LivenessSessionCreationContent livenessSessionCreationContent = new LivenessSessionCreationContent("<livenessOperationMode>", "<deviceCorrelationId>");
            Response<LivenessSessionCreationResult> response = client.CreateLivenessSession(livenessSessionCreationContent);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessSession_CreateLivenessSession_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            LivenessSessionCreationContent livenessSessionCreationContent = new LivenessSessionCreationContent("<livenessOperationMode>", "<deviceCorrelationId>");
            Response<LivenessSessionCreationResult> response = await client.CreateLivenessSessionAsync(livenessSessionCreationContent);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessSession_CreateLivenessSession_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                livenessOperationMode = "<livenessOperationMode>",
                sendResultsToClient = true,
                deviceCorrelationIdSetInClient = true,
                deviceCorrelationId = "<deviceCorrelationId>",
                authTokenTimeToLiveInSeconds = 1234,
            });
            Response response = client.CreateLivenessSession(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("sessionId").ToString());
            Console.WriteLine(result.GetProperty("authToken").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessSession_CreateLivenessSession_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                livenessOperationMode = "<livenessOperationMode>",
                sendResultsToClient = true,
                deviceCorrelationIdSetInClient = true,
                deviceCorrelationId = "<deviceCorrelationId>",
                authTokenTimeToLiveInSeconds = 1234,
            });
            Response response = await client.CreateLivenessSessionAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("sessionId").ToString());
            Console.WriteLine(result.GetProperty("authToken").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessSession_CreateLivenessSession_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            LivenessSessionCreationContent livenessSessionCreationContent = new LivenessSessionCreationContent("<livenessOperationMode>", "<deviceCorrelationId>")
            {
                SendResultsToClient = true,
                DeviceCorrelationIdSetInClient = true,
                AuthTokenTimeToLiveInSeconds = 1234,
            };
            Response<LivenessSessionCreationResult> response = client.CreateLivenessSession(livenessSessionCreationContent);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessSession_CreateLivenessSession_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            LivenessSessionCreationContent livenessSessionCreationContent = new LivenessSessionCreationContent("<livenessOperationMode>", "<deviceCorrelationId>")
            {
                SendResultsToClient = true,
                DeviceCorrelationIdSetInClient = true,
                AuthTokenTimeToLiveInSeconds = 1234,
            };
            Response<LivenessSessionCreationResult> response = await client.CreateLivenessSessionAsync(livenessSessionCreationContent);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessSession_DeleteLivenessSession_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = client.DeleteLivenessSession("<sessionId>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessSession_DeleteLivenessSession_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = await client.DeleteLivenessSessionAsync("<sessionId>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessSession_DeleteLivenessSession_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = client.DeleteLivenessSession("<sessionId>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessSession_DeleteLivenessSession_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = await client.DeleteLivenessSessionAsync("<sessionId>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessSession_GetLivenessSessionResult_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = client.GetLivenessSessionResult("<sessionId>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("createdDateTime").ToString());
            Console.WriteLine(result.GetProperty("sessionExpired").ToString());
            Console.WriteLine(result.GetProperty("deviceCorrelationId").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessSession_GetLivenessSessionResult_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = await client.GetLivenessSessionResultAsync("<sessionId>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("createdDateTime").ToString());
            Console.WriteLine(result.GetProperty("sessionExpired").ToString());
            Console.WriteLine(result.GetProperty("deviceCorrelationId").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessSession_GetLivenessSessionResult_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response<LivenessSession> response = client.GetLivenessSessionResult("<sessionId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessSession_GetLivenessSessionResult_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response<LivenessSession> response = await client.GetLivenessSessionResultAsync("<sessionId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessSession_GetLivenessSessionResult_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = client.GetLivenessSessionResult("<sessionId>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("createdDateTime").ToString());
            Console.WriteLine(result.GetProperty("sessionStartDateTime").ToString());
            Console.WriteLine(result.GetProperty("sessionExpired").ToString());
            Console.WriteLine(result.GetProperty("deviceCorrelationId").ToString());
            Console.WriteLine(result.GetProperty("authTokenTimeToLiveInSeconds").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("sessionId").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("requestId").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("clientRequestId").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("receivedDateTime").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("url").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("method").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("contentLength").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("contentType").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("userAgent").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("statusCode").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("digest").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessSession_GetLivenessSessionResult_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = await client.GetLivenessSessionResultAsync("<sessionId>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("createdDateTime").ToString());
            Console.WriteLine(result.GetProperty("sessionStartDateTime").ToString());
            Console.WriteLine(result.GetProperty("sessionExpired").ToString());
            Console.WriteLine(result.GetProperty("deviceCorrelationId").ToString());
            Console.WriteLine(result.GetProperty("authTokenTimeToLiveInSeconds").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("sessionId").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("requestId").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("clientRequestId").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("receivedDateTime").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("url").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("method").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("contentLength").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("contentType").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("userAgent").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("statusCode").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("digest").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessSession_GetLivenessSessionResult_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response<LivenessSession> response = client.GetLivenessSessionResult("<sessionId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessSession_GetLivenessSessionResult_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response<LivenessSession> response = await client.GetLivenessSessionResultAsync("<sessionId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessSession_GetLivenessSessions_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = client.GetLivenessSessions(null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("id").ToString());
            Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
            Console.WriteLine(result[0].GetProperty("sessionExpired").ToString());
            Console.WriteLine(result[0].GetProperty("deviceCorrelationId").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessSession_GetLivenessSessions_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = await client.GetLivenessSessionsAsync(null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("id").ToString());
            Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
            Console.WriteLine(result[0].GetProperty("sessionExpired").ToString());
            Console.WriteLine(result[0].GetProperty("deviceCorrelationId").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessSession_GetLivenessSessions_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response<IReadOnlyList<LivenessSessionItem>> response = client.GetLivenessSessions();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessSession_GetLivenessSessions_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response<IReadOnlyList<LivenessSessionItem>> response = await client.GetLivenessSessionsAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessSession_GetLivenessSessions_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = client.GetLivenessSessions("<start>", 1234, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("id").ToString());
            Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
            Console.WriteLine(result[0].GetProperty("sessionStartDateTime").ToString());
            Console.WriteLine(result[0].GetProperty("sessionExpired").ToString());
            Console.WriteLine(result[0].GetProperty("deviceCorrelationId").ToString());
            Console.WriteLine(result[0].GetProperty("authTokenTimeToLiveInSeconds").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessSession_GetLivenessSessions_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = await client.GetLivenessSessionsAsync("<start>", 1234, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("id").ToString());
            Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
            Console.WriteLine(result[0].GetProperty("sessionStartDateTime").ToString());
            Console.WriteLine(result[0].GetProperty("sessionExpired").ToString());
            Console.WriteLine(result[0].GetProperty("deviceCorrelationId").ToString());
            Console.WriteLine(result[0].GetProperty("authTokenTimeToLiveInSeconds").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessSession_GetLivenessSessions_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response<IReadOnlyList<LivenessSessionItem>> response = client.GetLivenessSessions(start: "<start>", top: 1234);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessSession_GetLivenessSessions_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response<IReadOnlyList<LivenessSessionItem>> response = await client.GetLivenessSessionsAsync(start: "<start>", top: 1234);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FaceSessionClient_GetLivenessSessionAuditEntries_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = client.GetLivenessSessionAuditEntries("<sessionId>", null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("id").ToString());
            Console.WriteLine(result[0].GetProperty("sessionId").ToString());
            Console.WriteLine(result[0].GetProperty("requestId").ToString());
            Console.WriteLine(result[0].GetProperty("clientRequestId").ToString());
            Console.WriteLine(result[0].GetProperty("receivedDateTime").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("url").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("method").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("contentType").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("<key>").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("statusCode").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
            Console.WriteLine(result[0].GetProperty("digest").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FaceSessionClient_GetLivenessSessionAuditEntries_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = await client.GetLivenessSessionAuditEntriesAsync("<sessionId>", null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("id").ToString());
            Console.WriteLine(result[0].GetProperty("sessionId").ToString());
            Console.WriteLine(result[0].GetProperty("requestId").ToString());
            Console.WriteLine(result[0].GetProperty("clientRequestId").ToString());
            Console.WriteLine(result[0].GetProperty("receivedDateTime").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("url").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("method").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("contentType").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("<key>").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("statusCode").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
            Console.WriteLine(result[0].GetProperty("digest").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FaceSessionClient_GetLivenessSessionAuditEntries_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response<IReadOnlyList<LivenessSessionAuditEntry>> response = client.GetLivenessSessionAuditEntries("<sessionId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FaceSessionClient_GetLivenessSessionAuditEntries_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response<IReadOnlyList<LivenessSessionAuditEntry>> response = await client.GetLivenessSessionAuditEntriesAsync("<sessionId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FaceSessionClient_GetLivenessSessionAuditEntries_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = client.GetLivenessSessionAuditEntries("<sessionId>", "<start>", 1234, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("id").ToString());
            Console.WriteLine(result[0].GetProperty("sessionId").ToString());
            Console.WriteLine(result[0].GetProperty("requestId").ToString());
            Console.WriteLine(result[0].GetProperty("clientRequestId").ToString());
            Console.WriteLine(result[0].GetProperty("receivedDateTime").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("url").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("method").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("contentLength").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("contentType").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("userAgent").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("<key>").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("statusCode").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
            Console.WriteLine(result[0].GetProperty("digest").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FaceSessionClient_GetLivenessSessionAuditEntries_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = await client.GetLivenessSessionAuditEntriesAsync("<sessionId>", "<start>", 1234, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("id").ToString());
            Console.WriteLine(result[0].GetProperty("sessionId").ToString());
            Console.WriteLine(result[0].GetProperty("requestId").ToString());
            Console.WriteLine(result[0].GetProperty("clientRequestId").ToString());
            Console.WriteLine(result[0].GetProperty("receivedDateTime").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("url").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("method").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("contentLength").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("contentType").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("userAgent").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("<key>").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("statusCode").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
            Console.WriteLine(result[0].GetProperty("digest").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FaceSessionClient_GetLivenessSessionAuditEntries_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response<IReadOnlyList<LivenessSessionAuditEntry>> response = client.GetLivenessSessionAuditEntries("<sessionId>", start: "<start>", top: 1234);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FaceSessionClient_GetLivenessSessionAuditEntries_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response<IReadOnlyList<LivenessSessionAuditEntry>> response = await client.GetLivenessSessionAuditEntriesAsync("<sessionId>", start: "<start>", top: 1234);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_CreateLivenessWithVerifySession_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                livenessOperationMode = "<livenessOperationMode>",
                deviceCorrelationId = "<deviceCorrelationId>",
            });
            Response response = client.CreateLivenessWithVerifySession(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("sessionId").ToString());
            Console.WriteLine(result.GetProperty("authToken").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_CreateLivenessWithVerifySession_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                livenessOperationMode = "<livenessOperationMode>",
                deviceCorrelationId = "<deviceCorrelationId>",
            });
            Response response = await client.CreateLivenessWithVerifySessionAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("sessionId").ToString());
            Console.WriteLine(result.GetProperty("authToken").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_CreateLivenessWithVerifySession_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            LivenessSessionCreationContent livenessSessionCreationContent = new LivenessSessionCreationContent("<livenessOperationMode>", "<deviceCorrelationId>");
            Response<LivenessSessionCreationResult> response = client.CreateLivenessWithVerifySession(livenessSessionCreationContent);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_CreateLivenessWithVerifySession_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            LivenessSessionCreationContent livenessSessionCreationContent = new LivenessSessionCreationContent("<livenessOperationMode>", "<deviceCorrelationId>");
            Response<LivenessSessionCreationResult> response = await client.CreateLivenessWithVerifySessionAsync(livenessSessionCreationContent);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_CreateLivenessWithVerifySession_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                livenessOperationMode = "<livenessOperationMode>",
                sendResultsToClient = true,
                deviceCorrelationIdSetInClient = true,
                deviceCorrelationId = "<deviceCorrelationId>",
                authTokenTimeToLiveInSeconds = 1234,
            });
            Response response = client.CreateLivenessWithVerifySession(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("sessionId").ToString());
            Console.WriteLine(result.GetProperty("authToken").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_CreateLivenessWithVerifySession_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                livenessOperationMode = "<livenessOperationMode>",
                sendResultsToClient = true,
                deviceCorrelationIdSetInClient = true,
                deviceCorrelationId = "<deviceCorrelationId>",
                authTokenTimeToLiveInSeconds = 1234,
            });
            Response response = await client.CreateLivenessWithVerifySessionAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("sessionId").ToString());
            Console.WriteLine(result.GetProperty("authToken").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_CreateLivenessWithVerifySession_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            LivenessSessionCreationContent livenessSessionCreationContent = new LivenessSessionCreationContent("<livenessOperationMode>", "<deviceCorrelationId>")
            {
                SendResultsToClient = true,
                DeviceCorrelationIdSetInClient = true,
                AuthTokenTimeToLiveInSeconds = 1234,
            };
            Response<LivenessSessionCreationResult> response = client.CreateLivenessWithVerifySession(livenessSessionCreationContent);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_CreateLivenessWithVerifySession_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            LivenessSessionCreationContent livenessSessionCreationContent = new LivenessSessionCreationContent("<livenessOperationMode>", "<deviceCorrelationId>")
            {
                SendResultsToClient = true,
                DeviceCorrelationIdSetInClient = true,
                AuthTokenTimeToLiveInSeconds = 1234,
            };
            Response<LivenessSessionCreationResult> response = await client.CreateLivenessWithVerifySessionAsync(livenessSessionCreationContent);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_CreateLivenessWithVerifySessionWithVerifyImage_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                Parameters = new
                {
                    livenessOperationMode = "<livenessOperationMode>",
                    deviceCorrelationId = "<deviceCorrelationId>",
                },
                VerifyImage = new object(),
            });
            Response response = client.CreateLivenessWithVerifySessionWithVerifyImage(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("sessionId").ToString());
            Console.WriteLine(result.GetProperty("authToken").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_CreateLivenessWithVerifySessionWithVerifyImage_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                Parameters = new
                {
                    livenessOperationMode = "<livenessOperationMode>",
                    deviceCorrelationId = "<deviceCorrelationId>",
                },
                VerifyImage = new object(),
            });
            Response response = await client.CreateLivenessWithVerifySessionWithVerifyImageAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("sessionId").ToString());
            Console.WriteLine(result.GetProperty("authToken").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_CreateLivenessWithVerifySessionWithVerifyImage_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            LivenessSessionWithVerifyImageCreationContent livenessSessionWithVerifyImageCreationContent = new LivenessSessionWithVerifyImageCreationContent(new LivenessSessionCreationContentForMultipart("<livenessOperationMode>", "<deviceCorrelationId>"), BinaryData.FromObjectAsJson(new object()));
            Response<LivenessSessionCreationResult> response = client.CreateLivenessWithVerifySessionWithVerifyImage(livenessSessionWithVerifyImageCreationContent);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_CreateLivenessWithVerifySessionWithVerifyImage_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            LivenessSessionWithVerifyImageCreationContent livenessSessionWithVerifyImageCreationContent = new LivenessSessionWithVerifyImageCreationContent(new LivenessSessionCreationContentForMultipart("<livenessOperationMode>", "<deviceCorrelationId>"), BinaryData.FromObjectAsJson(new object()));
            Response<LivenessSessionCreationResult> response = await client.CreateLivenessWithVerifySessionWithVerifyImageAsync(livenessSessionWithVerifyImageCreationContent);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_CreateLivenessWithVerifySessionWithVerifyImage_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                Parameters = new
                {
                    livenessOperationMode = "<livenessOperationMode>",
                    sendResultsToClient = true,
                    deviceCorrelationIdSetInClient = true,
                    deviceCorrelationId = "<deviceCorrelationId>",
                    authTokenTimeToLiveInSeconds = 1234,
                },
                VerifyImage = new object(),
            });
            Response response = client.CreateLivenessWithVerifySessionWithVerifyImage(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("sessionId").ToString());
            Console.WriteLine(result.GetProperty("authToken").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_CreateLivenessWithVerifySessionWithVerifyImage_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                Parameters = new
                {
                    livenessOperationMode = "<livenessOperationMode>",
                    sendResultsToClient = true,
                    deviceCorrelationIdSetInClient = true,
                    deviceCorrelationId = "<deviceCorrelationId>",
                    authTokenTimeToLiveInSeconds = 1234,
                },
                VerifyImage = new object(),
            });
            Response response = await client.CreateLivenessWithVerifySessionWithVerifyImageAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("sessionId").ToString());
            Console.WriteLine(result.GetProperty("authToken").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_CreateLivenessWithVerifySessionWithVerifyImage_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            LivenessSessionWithVerifyImageCreationContent livenessSessionWithVerifyImageCreationContent = new LivenessSessionWithVerifyImageCreationContent(new LivenessSessionCreationContentForMultipart("<livenessOperationMode>", "<deviceCorrelationId>")
            {
                SendResultsToClient = true,
                DeviceCorrelationIdSetInClient = true,
                AuthTokenTimeToLiveInSeconds = 1234,
            }, BinaryData.FromObjectAsJson(new object()));
            Response<LivenessSessionCreationResult> response = client.CreateLivenessWithVerifySessionWithVerifyImage(livenessSessionWithVerifyImageCreationContent);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_CreateLivenessWithVerifySessionWithVerifyImage_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            LivenessSessionWithVerifyImageCreationContent livenessSessionWithVerifyImageCreationContent = new LivenessSessionWithVerifyImageCreationContent(new LivenessSessionCreationContentForMultipart("<livenessOperationMode>", "<deviceCorrelationId>")
            {
                SendResultsToClient = true,
                DeviceCorrelationIdSetInClient = true,
                AuthTokenTimeToLiveInSeconds = 1234,
            }, BinaryData.FromObjectAsJson(new object()));
            Response<LivenessSessionCreationResult> response = await client.CreateLivenessWithVerifySessionWithVerifyImageAsync(livenessSessionWithVerifyImageCreationContent);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_DeleteLivenessWithVerifySession_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = client.DeleteLivenessWithVerifySession("<sessionId>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_DeleteLivenessWithVerifySession_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = await client.DeleteLivenessWithVerifySessionAsync("<sessionId>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_DeleteLivenessWithVerifySession_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = client.DeleteLivenessWithVerifySession("<sessionId>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_DeleteLivenessWithVerifySession_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = await client.DeleteLivenessWithVerifySessionAsync("<sessionId>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_GetLivenessWithVerifySessionResult_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = client.GetLivenessWithVerifySessionResult("<sessionId>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("createdDateTime").ToString());
            Console.WriteLine(result.GetProperty("sessionExpired").ToString());
            Console.WriteLine(result.GetProperty("deviceCorrelationId").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_GetLivenessWithVerifySessionResult_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = await client.GetLivenessWithVerifySessionResultAsync("<sessionId>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("createdDateTime").ToString());
            Console.WriteLine(result.GetProperty("sessionExpired").ToString());
            Console.WriteLine(result.GetProperty("deviceCorrelationId").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_GetLivenessWithVerifySessionResult_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response<LivenessWithVerifySession> response = client.GetLivenessWithVerifySessionResult("<sessionId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_GetLivenessWithVerifySessionResult_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response<LivenessWithVerifySession> response = await client.GetLivenessWithVerifySessionResultAsync("<sessionId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_GetLivenessWithVerifySessionResult_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = client.GetLivenessWithVerifySessionResult("<sessionId>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("createdDateTime").ToString());
            Console.WriteLine(result.GetProperty("sessionStartDateTime").ToString());
            Console.WriteLine(result.GetProperty("sessionExpired").ToString());
            Console.WriteLine(result.GetProperty("deviceCorrelationId").ToString());
            Console.WriteLine(result.GetProperty("authTokenTimeToLiveInSeconds").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("sessionId").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("requestId").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("clientRequestId").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("receivedDateTime").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("url").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("method").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("contentLength").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("contentType").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("userAgent").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("statusCode").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("digest").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_GetLivenessWithVerifySessionResult_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = await client.GetLivenessWithVerifySessionResultAsync("<sessionId>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("createdDateTime").ToString());
            Console.WriteLine(result.GetProperty("sessionStartDateTime").ToString());
            Console.WriteLine(result.GetProperty("sessionExpired").ToString());
            Console.WriteLine(result.GetProperty("deviceCorrelationId").ToString());
            Console.WriteLine(result.GetProperty("authTokenTimeToLiveInSeconds").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("sessionId").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("requestId").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("clientRequestId").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("receivedDateTime").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("url").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("method").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("contentLength").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("contentType").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("userAgent").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("statusCode").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("digest").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_GetLivenessWithVerifySessionResult_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response<LivenessWithVerifySession> response = client.GetLivenessWithVerifySessionResult("<sessionId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_GetLivenessWithVerifySessionResult_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response<LivenessWithVerifySession> response = await client.GetLivenessWithVerifySessionResultAsync("<sessionId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_GetLivenessWithVerifySessions_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = client.GetLivenessWithVerifySessions(null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("id").ToString());
            Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
            Console.WriteLine(result[0].GetProperty("sessionExpired").ToString());
            Console.WriteLine(result[0].GetProperty("deviceCorrelationId").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_GetLivenessWithVerifySessions_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = await client.GetLivenessWithVerifySessionsAsync(null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("id").ToString());
            Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
            Console.WriteLine(result[0].GetProperty("sessionExpired").ToString());
            Console.WriteLine(result[0].GetProperty("deviceCorrelationId").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_GetLivenessWithVerifySessions_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response<IReadOnlyList<LivenessSessionItem>> response = client.GetLivenessWithVerifySessions();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_GetLivenessWithVerifySessions_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response<IReadOnlyList<LivenessSessionItem>> response = await client.GetLivenessWithVerifySessionsAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_GetLivenessWithVerifySessions_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = client.GetLivenessWithVerifySessions("<start>", 1234, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("id").ToString());
            Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
            Console.WriteLine(result[0].GetProperty("sessionStartDateTime").ToString());
            Console.WriteLine(result[0].GetProperty("sessionExpired").ToString());
            Console.WriteLine(result[0].GetProperty("deviceCorrelationId").ToString());
            Console.WriteLine(result[0].GetProperty("authTokenTimeToLiveInSeconds").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_GetLivenessWithVerifySessions_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = await client.GetLivenessWithVerifySessionsAsync("<start>", 1234, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("id").ToString());
            Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
            Console.WriteLine(result[0].GetProperty("sessionStartDateTime").ToString());
            Console.WriteLine(result[0].GetProperty("sessionExpired").ToString());
            Console.WriteLine(result[0].GetProperty("deviceCorrelationId").ToString());
            Console.WriteLine(result[0].GetProperty("authTokenTimeToLiveInSeconds").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_GetLivenessWithVerifySessions_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response<IReadOnlyList<LivenessSessionItem>> response = client.GetLivenessWithVerifySessions(start: "<start>", top: 1234);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_GetLivenessWithVerifySessions_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response<IReadOnlyList<LivenessSessionItem>> response = await client.GetLivenessWithVerifySessionsAsync(start: "<start>", top: 1234);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FaceSessionClient_GetLivenessWithVerifySessionAuditEntries_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = client.GetLivenessWithVerifySessionAuditEntries("<sessionId>", null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("id").ToString());
            Console.WriteLine(result[0].GetProperty("sessionId").ToString());
            Console.WriteLine(result[0].GetProperty("requestId").ToString());
            Console.WriteLine(result[0].GetProperty("clientRequestId").ToString());
            Console.WriteLine(result[0].GetProperty("receivedDateTime").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("url").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("method").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("contentType").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("<key>").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("statusCode").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
            Console.WriteLine(result[0].GetProperty("digest").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FaceSessionClient_GetLivenessWithVerifySessionAuditEntries_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = await client.GetLivenessWithVerifySessionAuditEntriesAsync("<sessionId>", null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("id").ToString());
            Console.WriteLine(result[0].GetProperty("sessionId").ToString());
            Console.WriteLine(result[0].GetProperty("requestId").ToString());
            Console.WriteLine(result[0].GetProperty("clientRequestId").ToString());
            Console.WriteLine(result[0].GetProperty("receivedDateTime").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("url").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("method").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("contentType").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("<key>").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("statusCode").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
            Console.WriteLine(result[0].GetProperty("digest").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FaceSessionClient_GetLivenessWithVerifySessionAuditEntries_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response<IReadOnlyList<LivenessSessionAuditEntry>> response = client.GetLivenessWithVerifySessionAuditEntries("<sessionId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FaceSessionClient_GetLivenessWithVerifySessionAuditEntries_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response<IReadOnlyList<LivenessSessionAuditEntry>> response = await client.GetLivenessWithVerifySessionAuditEntriesAsync("<sessionId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FaceSessionClient_GetLivenessWithVerifySessionAuditEntries_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = client.GetLivenessWithVerifySessionAuditEntries("<sessionId>", "<start>", 1234, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("id").ToString());
            Console.WriteLine(result[0].GetProperty("sessionId").ToString());
            Console.WriteLine(result[0].GetProperty("requestId").ToString());
            Console.WriteLine(result[0].GetProperty("clientRequestId").ToString());
            Console.WriteLine(result[0].GetProperty("receivedDateTime").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("url").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("method").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("contentLength").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("contentType").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("userAgent").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("<key>").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("statusCode").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
            Console.WriteLine(result[0].GetProperty("digest").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FaceSessionClient_GetLivenessWithVerifySessionAuditEntries_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response response = await client.GetLivenessWithVerifySessionAuditEntriesAsync("<sessionId>", "<start>", 1234, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("id").ToString());
            Console.WriteLine(result[0].GetProperty("sessionId").ToString());
            Console.WriteLine(result[0].GetProperty("requestId").ToString());
            Console.WriteLine(result[0].GetProperty("clientRequestId").ToString());
            Console.WriteLine(result[0].GetProperty("receivedDateTime").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("url").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("method").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("contentLength").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("contentType").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("userAgent").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("<key>").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("statusCode").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
            Console.WriteLine(result[0].GetProperty("digest").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FaceSessionClient_GetLivenessWithVerifySessionAuditEntries_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response<IReadOnlyList<LivenessSessionAuditEntry>> response = client.GetLivenessWithVerifySessionAuditEntries("<sessionId>", start: "<start>", top: 1234);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FaceSessionClient_GetLivenessWithVerifySessionAuditEntries_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceSessionClient client = new FaceSessionClient(endpoint, credential);

            Response<IReadOnlyList<LivenessSessionAuditEntry>> response = await client.GetLivenessWithVerifySessionAuditEntriesAsync("<sessionId>", start: "<start>", top: 1234);
        }
    }
}
