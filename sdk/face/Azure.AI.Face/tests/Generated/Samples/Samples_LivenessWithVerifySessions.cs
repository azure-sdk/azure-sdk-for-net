// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.AI.Face;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.AI.Face.Samples
{
    public partial class Samples_LivenessWithVerifySessions
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_GetSessions_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            Response response = client.GetSessions(null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("id").ToString());
            Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
            Console.WriteLine(result[0].GetProperty("sessionExpired").ToString());
            Console.WriteLine(result[0].GetProperty("deviceCorrelationId").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_GetSessions_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            Response response = await client.GetSessionsAsync(null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("id").ToString());
            Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
            Console.WriteLine(result[0].GetProperty("sessionExpired").ToString());
            Console.WriteLine(result[0].GetProperty("deviceCorrelationId").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_GetSessions_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            Response<IReadOnlyList<LivenessSessionItem>> response = client.GetSessions();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_GetSessions_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            Response<IReadOnlyList<LivenessSessionItem>> response = await client.GetSessionsAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_GetSessions_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            Response response = client.GetSessions("<start>", 1234, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("id").ToString());
            Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
            Console.WriteLine(result[0].GetProperty("sessionStartDateTime").ToString());
            Console.WriteLine(result[0].GetProperty("sessionExpired").ToString());
            Console.WriteLine(result[0].GetProperty("deviceCorrelationId").ToString());
            Console.WriteLine(result[0].GetProperty("authTokenTimeToLiveInSeconds").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_GetSessions_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            Response response = await client.GetSessionsAsync("<start>", 1234, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("id").ToString());
            Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
            Console.WriteLine(result[0].GetProperty("sessionStartDateTime").ToString());
            Console.WriteLine(result[0].GetProperty("sessionExpired").ToString());
            Console.WriteLine(result[0].GetProperty("deviceCorrelationId").ToString());
            Console.WriteLine(result[0].GetProperty("authTokenTimeToLiveInSeconds").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_GetSessions_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            Response<IReadOnlyList<LivenessSessionItem>> response = client.GetSessions(start: "<start>", top: 1234);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_GetSessions_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            Response<IReadOnlyList<LivenessSessionItem>> response = await client.GetSessionsAsync(start: "<start>", top: 1234);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_GetSession_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            Response response = client.GetSession("<sessionId>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("createdDateTime").ToString());
            Console.WriteLine(result.GetProperty("sessionExpired").ToString());
            Console.WriteLine(result.GetProperty("deviceCorrelationId").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_GetSession_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            Response response = await client.GetSessionAsync("<sessionId>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("createdDateTime").ToString());
            Console.WriteLine(result.GetProperty("sessionExpired").ToString());
            Console.WriteLine(result.GetProperty("deviceCorrelationId").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_GetSession_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            Response<LivenessWithVerifySession> response = client.GetSession("<sessionId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_GetSession_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            Response<LivenessWithVerifySession> response = await client.GetSessionAsync("<sessionId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_GetSession_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            Response response = client.GetSession("<sessionId>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("createdDateTime").ToString());
            Console.WriteLine(result.GetProperty("sessionStartDateTime").ToString());
            Console.WriteLine(result.GetProperty("sessionExpired").ToString());
            Console.WriteLine(result.GetProperty("deviceCorrelationId").ToString());
            Console.WriteLine(result.GetProperty("authTokenTimeToLiveInSeconds").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("sessionId").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("requestId").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("clientRequestId").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("receivedDateTime").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("url").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("method").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("contentLength").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("contentType").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("userAgent").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("statusCode").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("digest").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_GetSession_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            Response response = await client.GetSessionAsync("<sessionId>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("createdDateTime").ToString());
            Console.WriteLine(result.GetProperty("sessionStartDateTime").ToString());
            Console.WriteLine(result.GetProperty("sessionExpired").ToString());
            Console.WriteLine(result.GetProperty("deviceCorrelationId").ToString());
            Console.WriteLine(result.GetProperty("authTokenTimeToLiveInSeconds").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("sessionId").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("requestId").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("clientRequestId").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("receivedDateTime").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("url").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("method").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("contentLength").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("contentType").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("userAgent").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("statusCode").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
            Console.WriteLine(result.GetProperty("result").GetProperty("digest").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_GetSession_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            Response<LivenessWithVerifySession> response = client.GetSession("<sessionId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_GetSession_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            Response<LivenessWithVerifySession> response = await client.GetSessionAsync("<sessionId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_DeleteSession_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            Response response = client.DeleteSession("<sessionId>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_DeleteSession_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            Response response = await client.DeleteSessionAsync("<sessionId>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_DeleteSession_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            Response response = client.DeleteSession("<sessionId>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_DeleteSession_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            Response response = await client.DeleteSessionAsync("<sessionId>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySessionAuditEntry_GetSessionAuditEntries_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            Response response = client.GetSessionAuditEntries("<sessionId>", null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("id").ToString());
            Console.WriteLine(result[0].GetProperty("sessionId").ToString());
            Console.WriteLine(result[0].GetProperty("requestId").ToString());
            Console.WriteLine(result[0].GetProperty("clientRequestId").ToString());
            Console.WriteLine(result[0].GetProperty("receivedDateTime").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("url").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("method").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("contentType").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("<key>").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("statusCode").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
            Console.WriteLine(result[0].GetProperty("digest").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySessionAuditEntry_GetSessionAuditEntries_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            Response response = await client.GetSessionAuditEntriesAsync("<sessionId>", null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("id").ToString());
            Console.WriteLine(result[0].GetProperty("sessionId").ToString());
            Console.WriteLine(result[0].GetProperty("requestId").ToString());
            Console.WriteLine(result[0].GetProperty("clientRequestId").ToString());
            Console.WriteLine(result[0].GetProperty("receivedDateTime").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("url").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("method").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("contentType").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("<key>").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("statusCode").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
            Console.WriteLine(result[0].GetProperty("digest").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySessionAuditEntry_GetSessionAuditEntries_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            Response<IReadOnlyList<LivenessWithVerifySessionAuditEntry>> response = client.GetSessionAuditEntries("<sessionId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySessionAuditEntry_GetSessionAuditEntries_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            Response<IReadOnlyList<LivenessWithVerifySessionAuditEntry>> response = await client.GetSessionAuditEntriesAsync("<sessionId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySessionAuditEntry_GetSessionAuditEntries_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            Response response = client.GetSessionAuditEntries("<sessionId>", "<start>", 1234, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("id").ToString());
            Console.WriteLine(result[0].GetProperty("sessionId").ToString());
            Console.WriteLine(result[0].GetProperty("requestId").ToString());
            Console.WriteLine(result[0].GetProperty("clientRequestId").ToString());
            Console.WriteLine(result[0].GetProperty("receivedDateTime").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("url").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("method").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("contentLength").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("contentType").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("userAgent").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("<key>").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("statusCode").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
            Console.WriteLine(result[0].GetProperty("digest").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySessionAuditEntry_GetSessionAuditEntries_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            Response response = await client.GetSessionAuditEntriesAsync("<sessionId>", "<start>", 1234, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("id").ToString());
            Console.WriteLine(result[0].GetProperty("sessionId").ToString());
            Console.WriteLine(result[0].GetProperty("requestId").ToString());
            Console.WriteLine(result[0].GetProperty("clientRequestId").ToString());
            Console.WriteLine(result[0].GetProperty("receivedDateTime").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("url").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("method").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("contentLength").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("contentType").ToString());
            Console.WriteLine(result[0].GetProperty("request").GetProperty("userAgent").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("<key>").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("statusCode").ToString());
            Console.WriteLine(result[0].GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
            Console.WriteLine(result[0].GetProperty("digest").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySessionAuditEntry_GetSessionAuditEntries_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            Response<IReadOnlyList<LivenessWithVerifySessionAuditEntry>> response = client.GetSessionAuditEntries("<sessionId>", start: "<start>", top: 1234);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySessionAuditEntry_GetSessionAuditEntries_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            Response<IReadOnlyList<LivenessWithVerifySessionAuditEntry>> response = await client.GetSessionAuditEntriesAsync("<sessionId>", start: "<start>", top: 1234);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_CreateSession_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            using RequestContent content = RequestContent.Create(new
            {
                livenessOperationMode = "<livenessOperationMode>",
                deviceCorrelationId = "<deviceCorrelationId>",
            });
            Response response = client.CreateSession(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("sessionId").ToString());
            Console.WriteLine(result.GetProperty("authToken").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_CreateSession_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            using RequestContent content = RequestContent.Create(new
            {
                livenessOperationMode = "<livenessOperationMode>",
                deviceCorrelationId = "<deviceCorrelationId>",
            });
            Response response = await client.CreateSessionAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("sessionId").ToString());
            Console.WriteLine(result.GetProperty("authToken").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_CreateSession_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            LivenessSessionCreationContent livenessSessionCreationContent = new LivenessSessionCreationContent("<livenessOperationMode>", "<deviceCorrelationId>");
            Response<LivenessSessionCreationResult> response = client.CreateSession(livenessSessionCreationContent);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_CreateSession_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            LivenessSessionCreationContent livenessSessionCreationContent = new LivenessSessionCreationContent("<livenessOperationMode>", "<deviceCorrelationId>");
            Response<LivenessSessionCreationResult> response = await client.CreateSessionAsync(livenessSessionCreationContent);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_CreateSession_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            using RequestContent content = RequestContent.Create(new
            {
                livenessOperationMode = "<livenessOperationMode>",
                sendResultsToClient = true,
                deviceCorrelationIdSetInClient = true,
                deviceCorrelationId = "<deviceCorrelationId>",
                authTokenTimeToLiveInSeconds = 1234,
            });
            Response response = client.CreateSession(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("sessionId").ToString());
            Console.WriteLine(result.GetProperty("authToken").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_CreateSession_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            using RequestContent content = RequestContent.Create(new
            {
                livenessOperationMode = "<livenessOperationMode>",
                sendResultsToClient = true,
                deviceCorrelationIdSetInClient = true,
                deviceCorrelationId = "<deviceCorrelationId>",
                authTokenTimeToLiveInSeconds = 1234,
            });
            Response response = await client.CreateSessionAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("sessionId").ToString());
            Console.WriteLine(result.GetProperty("authToken").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_CreateSession_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            LivenessSessionCreationContent livenessSessionCreationContent = new LivenessSessionCreationContent("<livenessOperationMode>", "<deviceCorrelationId>")
            {
                SendResultsToClient = true,
                DeviceCorrelationIdSetInClient = true,
                AuthTokenTimeToLiveInSeconds = 1234,
            };
            Response<LivenessSessionCreationResult> response = client.CreateSession(livenessSessionCreationContent);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_CreateSession_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            LivenessSessionCreationContent livenessSessionCreationContent = new LivenessSessionCreationContent("<livenessOperationMode>", "<deviceCorrelationId>")
            {
                SendResultsToClient = true,
                DeviceCorrelationIdSetInClient = true,
                AuthTokenTimeToLiveInSeconds = 1234,
            };
            Response<LivenessSessionCreationResult> response = await client.CreateSessionAsync(livenessSessionCreationContent);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_CreateSessionWithVerifyImage_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            using RequestContent content = RequestContent.Create(new
            {
                CreationContent = new
                {
                    livenessOperationMode = "<livenessOperationMode>",
                    deviceCorrelationId = "<deviceCorrelationId>",
                },
                VerifyImage = new object(),
            });
            Response response = client.CreateSessionWithVerifyImage(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("sessionId").ToString());
            Console.WriteLine(result.GetProperty("authToken").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_CreateSessionWithVerifyImage_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            using RequestContent content = RequestContent.Create(new
            {
                CreationContent = new
                {
                    livenessOperationMode = "<livenessOperationMode>",
                    deviceCorrelationId = "<deviceCorrelationId>",
                },
                VerifyImage = new object(),
            });
            Response response = await client.CreateSessionWithVerifyImageAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("sessionId").ToString());
            Console.WriteLine(result.GetProperty("authToken").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_CreateSessionWithVerifyImage_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            LivenessSessionWithVerifyImageCreationContent livenessSessionWithVerifyImageCreationContent = new LivenessSessionWithVerifyImageCreationContent(new LivenessSessionCreationContentForMultipart("<livenessOperationMode>", "<deviceCorrelationId>"), BinaryData.FromObjectAsJson(new object()));
            Response<LivenessSessionCreationResult> response = client.CreateSessionWithVerifyImage(livenessSessionWithVerifyImageCreationContent);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_CreateSessionWithVerifyImage_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            LivenessSessionWithVerifyImageCreationContent livenessSessionWithVerifyImageCreationContent = new LivenessSessionWithVerifyImageCreationContent(new LivenessSessionCreationContentForMultipart("<livenessOperationMode>", "<deviceCorrelationId>"), BinaryData.FromObjectAsJson(new object()));
            Response<LivenessSessionCreationResult> response = await client.CreateSessionWithVerifyImageAsync(livenessSessionWithVerifyImageCreationContent);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_CreateSessionWithVerifyImage_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            using RequestContent content = RequestContent.Create(new
            {
                CreationContent = new
                {
                    livenessOperationMode = "<livenessOperationMode>",
                    sendResultsToClient = true,
                    deviceCorrelationIdSetInClient = true,
                    deviceCorrelationId = "<deviceCorrelationId>",
                    authTokenTimeToLiveInSeconds = 1234,
                },
                VerifyImage = new object(),
            });
            Response response = client.CreateSessionWithVerifyImage(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("sessionId").ToString());
            Console.WriteLine(result.GetProperty("authToken").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_CreateSessionWithVerifyImage_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            using RequestContent content = RequestContent.Create(new
            {
                CreationContent = new
                {
                    livenessOperationMode = "<livenessOperationMode>",
                    sendResultsToClient = true,
                    deviceCorrelationIdSetInClient = true,
                    deviceCorrelationId = "<deviceCorrelationId>",
                    authTokenTimeToLiveInSeconds = 1234,
                },
                VerifyImage = new object(),
            });
            Response response = await client.CreateSessionWithVerifyImageAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("sessionId").ToString());
            Console.WriteLine(result.GetProperty("authToken").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_LivenessWithVerifySession_CreateSessionWithVerifyImage_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            LivenessSessionWithVerifyImageCreationContent livenessSessionWithVerifyImageCreationContent = new LivenessSessionWithVerifyImageCreationContent(new LivenessSessionCreationContentForMultipart("<livenessOperationMode>", "<deviceCorrelationId>")
            {
                SendResultsToClient = true,
                DeviceCorrelationIdSetInClient = true,
                AuthTokenTimeToLiveInSeconds = 1234,
            }, BinaryData.FromObjectAsJson(new object()));
            Response<LivenessSessionCreationResult> response = client.CreateSessionWithVerifyImage(livenessSessionWithVerifyImageCreationContent);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_LivenessWithVerifySession_CreateSessionWithVerifyImage_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LivenessWithVerifySessions client = new FaceClient(endpoint, credential).GetLivenessWithVerifySessionsClient();

            LivenessSessionWithVerifyImageCreationContent livenessSessionWithVerifyImageCreationContent = new LivenessSessionWithVerifyImageCreationContent(new LivenessSessionCreationContentForMultipart("<livenessOperationMode>", "<deviceCorrelationId>")
            {
                SendResultsToClient = true,
                DeviceCorrelationIdSetInClient = true,
                AuthTokenTimeToLiveInSeconds = 1234,
            }, BinaryData.FromObjectAsJson(new object()));
            Response<LivenessSessionCreationResult> response = await client.CreateSessionWithVerifyImageAsync(livenessSessionWithVerifyImageCreationContent);
        }
    }
}
