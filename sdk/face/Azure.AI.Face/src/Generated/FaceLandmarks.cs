// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Face
{
    /// <summary> A collection of 27-point face landmarks pointing to the important positions of face components. </summary>
    public partial class FaceLandmarks
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="FaceLandmarks"/>. </summary>
        /// <param name="pupilLeft"> Coordinates within an image. </param>
        /// <param name="pupilRight"> Coordinates within an image. </param>
        /// <param name="noseTip"> Coordinates within an image. </param>
        /// <param name="mouthLeft"> Coordinates within an image. </param>
        /// <param name="mouthRight"> Coordinates within an image. </param>
        /// <param name="eyebrowLeftOuter"> Coordinates within an image. </param>
        /// <param name="eyebrowLeftInner"> Coordinates within an image. </param>
        /// <param name="eyeLeftOuter"> Coordinates within an image. </param>
        /// <param name="eyeLeftTop"> Coordinates within an image. </param>
        /// <param name="eyeLeftBottom"> Coordinates within an image. </param>
        /// <param name="eyeLeftInner"> Coordinates within an image. </param>
        /// <param name="eyebrowRightInner"> Coordinates within an image. </param>
        /// <param name="eyebrowRightOuter"> Coordinates within an image. </param>
        /// <param name="eyeRightInner"> Coordinates within an image. </param>
        /// <param name="eyeRightTop"> Coordinates within an image. </param>
        /// <param name="eyeRightBottom"> Coordinates within an image. </param>
        /// <param name="eyeRightOuter"> Coordinates within an image. </param>
        /// <param name="noseRootLeft"> Coordinates within an image. </param>
        /// <param name="noseRootRight"> Coordinates within an image. </param>
        /// <param name="noseLeftAlarTop"> Coordinates within an image. </param>
        /// <param name="noseRightAlarTop"> Coordinates within an image. </param>
        /// <param name="noseLeftAlarOutTip"> Coordinates within an image. </param>
        /// <param name="noseRightAlarOutTip"> Coordinates within an image. </param>
        /// <param name="upperLipTop"> Coordinates within an image. </param>
        /// <param name="upperLipBottom"> Coordinates within an image. </param>
        /// <param name="underLipTop"> Coordinates within an image. </param>
        /// <param name="underLipBottom"> Coordinates within an image. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="pupilLeft"/>, <paramref name="pupilRight"/>, <paramref name="noseTip"/>, <paramref name="mouthLeft"/>, <paramref name="mouthRight"/>, <paramref name="eyebrowLeftOuter"/>, <paramref name="eyebrowLeftInner"/>, <paramref name="eyeLeftOuter"/>, <paramref name="eyeLeftTop"/>, <paramref name="eyeLeftBottom"/>, <paramref name="eyeLeftInner"/>, <paramref name="eyebrowRightInner"/>, <paramref name="eyebrowRightOuter"/>, <paramref name="eyeRightInner"/>, <paramref name="eyeRightTop"/>, <paramref name="eyeRightBottom"/>, <paramref name="eyeRightOuter"/>, <paramref name="noseRootLeft"/>, <paramref name="noseRootRight"/>, <paramref name="noseLeftAlarTop"/>, <paramref name="noseRightAlarTop"/>, <paramref name="noseLeftAlarOutTip"/>, <paramref name="noseRightAlarOutTip"/>, <paramref name="upperLipTop"/>, <paramref name="upperLipBottom"/>, <paramref name="underLipTop"/> or <paramref name="underLipBottom"/> is null. </exception>
        internal FaceLandmarks(LandmarkCoordinate pupilLeft, LandmarkCoordinate pupilRight, LandmarkCoordinate noseTip, LandmarkCoordinate mouthLeft, LandmarkCoordinate mouthRight, LandmarkCoordinate eyebrowLeftOuter, LandmarkCoordinate eyebrowLeftInner, LandmarkCoordinate eyeLeftOuter, LandmarkCoordinate eyeLeftTop, LandmarkCoordinate eyeLeftBottom, LandmarkCoordinate eyeLeftInner, LandmarkCoordinate eyebrowRightInner, LandmarkCoordinate eyebrowRightOuter, LandmarkCoordinate eyeRightInner, LandmarkCoordinate eyeRightTop, LandmarkCoordinate eyeRightBottom, LandmarkCoordinate eyeRightOuter, LandmarkCoordinate noseRootLeft, LandmarkCoordinate noseRootRight, LandmarkCoordinate noseLeftAlarTop, LandmarkCoordinate noseRightAlarTop, LandmarkCoordinate noseLeftAlarOutTip, LandmarkCoordinate noseRightAlarOutTip, LandmarkCoordinate upperLipTop, LandmarkCoordinate upperLipBottom, LandmarkCoordinate underLipTop, LandmarkCoordinate underLipBottom)
        {
            if (pupilLeft == null)
            {
                throw new ArgumentNullException(nameof(pupilLeft));
            }
            if (pupilRight == null)
            {
                throw new ArgumentNullException(nameof(pupilRight));
            }
            if (noseTip == null)
            {
                throw new ArgumentNullException(nameof(noseTip));
            }
            if (mouthLeft == null)
            {
                throw new ArgumentNullException(nameof(mouthLeft));
            }
            if (mouthRight == null)
            {
                throw new ArgumentNullException(nameof(mouthRight));
            }
            if (eyebrowLeftOuter == null)
            {
                throw new ArgumentNullException(nameof(eyebrowLeftOuter));
            }
            if (eyebrowLeftInner == null)
            {
                throw new ArgumentNullException(nameof(eyebrowLeftInner));
            }
            if (eyeLeftOuter == null)
            {
                throw new ArgumentNullException(nameof(eyeLeftOuter));
            }
            if (eyeLeftTop == null)
            {
                throw new ArgumentNullException(nameof(eyeLeftTop));
            }
            if (eyeLeftBottom == null)
            {
                throw new ArgumentNullException(nameof(eyeLeftBottom));
            }
            if (eyeLeftInner == null)
            {
                throw new ArgumentNullException(nameof(eyeLeftInner));
            }
            if (eyebrowRightInner == null)
            {
                throw new ArgumentNullException(nameof(eyebrowRightInner));
            }
            if (eyebrowRightOuter == null)
            {
                throw new ArgumentNullException(nameof(eyebrowRightOuter));
            }
            if (eyeRightInner == null)
            {
                throw new ArgumentNullException(nameof(eyeRightInner));
            }
            if (eyeRightTop == null)
            {
                throw new ArgumentNullException(nameof(eyeRightTop));
            }
            if (eyeRightBottom == null)
            {
                throw new ArgumentNullException(nameof(eyeRightBottom));
            }
            if (eyeRightOuter == null)
            {
                throw new ArgumentNullException(nameof(eyeRightOuter));
            }
            if (noseRootLeft == null)
            {
                throw new ArgumentNullException(nameof(noseRootLeft));
            }
            if (noseRootRight == null)
            {
                throw new ArgumentNullException(nameof(noseRootRight));
            }
            if (noseLeftAlarTop == null)
            {
                throw new ArgumentNullException(nameof(noseLeftAlarTop));
            }
            if (noseRightAlarTop == null)
            {
                throw new ArgumentNullException(nameof(noseRightAlarTop));
            }
            if (noseLeftAlarOutTip == null)
            {
                throw new ArgumentNullException(nameof(noseLeftAlarOutTip));
            }
            if (noseRightAlarOutTip == null)
            {
                throw new ArgumentNullException(nameof(noseRightAlarOutTip));
            }
            if (upperLipTop == null)
            {
                throw new ArgumentNullException(nameof(upperLipTop));
            }
            if (upperLipBottom == null)
            {
                throw new ArgumentNullException(nameof(upperLipBottom));
            }
            if (underLipTop == null)
            {
                throw new ArgumentNullException(nameof(underLipTop));
            }
            if (underLipBottom == null)
            {
                throw new ArgumentNullException(nameof(underLipBottom));
            }

            PupilLeft = pupilLeft;
            PupilRight = pupilRight;
            NoseTip = noseTip;
            MouthLeft = mouthLeft;
            MouthRight = mouthRight;
            EyebrowLeftOuter = eyebrowLeftOuter;
            EyebrowLeftInner = eyebrowLeftInner;
            EyeLeftOuter = eyeLeftOuter;
            EyeLeftTop = eyeLeftTop;
            EyeLeftBottom = eyeLeftBottom;
            EyeLeftInner = eyeLeftInner;
            EyebrowRightInner = eyebrowRightInner;
            EyebrowRightOuter = eyebrowRightOuter;
            EyeRightInner = eyeRightInner;
            EyeRightTop = eyeRightTop;
            EyeRightBottom = eyeRightBottom;
            EyeRightOuter = eyeRightOuter;
            NoseRootLeft = noseRootLeft;
            NoseRootRight = noseRootRight;
            NoseLeftAlarTop = noseLeftAlarTop;
            NoseRightAlarTop = noseRightAlarTop;
            NoseLeftAlarOutTip = noseLeftAlarOutTip;
            NoseRightAlarOutTip = noseRightAlarOutTip;
            UpperLipTop = upperLipTop;
            UpperLipBottom = upperLipBottom;
            UnderLipTop = underLipTop;
            UnderLipBottom = underLipBottom;
        }

        /// <summary> Initializes a new instance of <see cref="FaceLandmarks"/>. </summary>
        /// <param name="pupilLeft"> Coordinates within an image. </param>
        /// <param name="pupilRight"> Coordinates within an image. </param>
        /// <param name="noseTip"> Coordinates within an image. </param>
        /// <param name="mouthLeft"> Coordinates within an image. </param>
        /// <param name="mouthRight"> Coordinates within an image. </param>
        /// <param name="eyebrowLeftOuter"> Coordinates within an image. </param>
        /// <param name="eyebrowLeftInner"> Coordinates within an image. </param>
        /// <param name="eyeLeftOuter"> Coordinates within an image. </param>
        /// <param name="eyeLeftTop"> Coordinates within an image. </param>
        /// <param name="eyeLeftBottom"> Coordinates within an image. </param>
        /// <param name="eyeLeftInner"> Coordinates within an image. </param>
        /// <param name="eyebrowRightInner"> Coordinates within an image. </param>
        /// <param name="eyebrowRightOuter"> Coordinates within an image. </param>
        /// <param name="eyeRightInner"> Coordinates within an image. </param>
        /// <param name="eyeRightTop"> Coordinates within an image. </param>
        /// <param name="eyeRightBottom"> Coordinates within an image. </param>
        /// <param name="eyeRightOuter"> Coordinates within an image. </param>
        /// <param name="noseRootLeft"> Coordinates within an image. </param>
        /// <param name="noseRootRight"> Coordinates within an image. </param>
        /// <param name="noseLeftAlarTop"> Coordinates within an image. </param>
        /// <param name="noseRightAlarTop"> Coordinates within an image. </param>
        /// <param name="noseLeftAlarOutTip"> Coordinates within an image. </param>
        /// <param name="noseRightAlarOutTip"> Coordinates within an image. </param>
        /// <param name="upperLipTop"> Coordinates within an image. </param>
        /// <param name="upperLipBottom"> Coordinates within an image. </param>
        /// <param name="underLipTop"> Coordinates within an image. </param>
        /// <param name="underLipBottom"> Coordinates within an image. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal FaceLandmarks(LandmarkCoordinate pupilLeft, LandmarkCoordinate pupilRight, LandmarkCoordinate noseTip, LandmarkCoordinate mouthLeft, LandmarkCoordinate mouthRight, LandmarkCoordinate eyebrowLeftOuter, LandmarkCoordinate eyebrowLeftInner, LandmarkCoordinate eyeLeftOuter, LandmarkCoordinate eyeLeftTop, LandmarkCoordinate eyeLeftBottom, LandmarkCoordinate eyeLeftInner, LandmarkCoordinate eyebrowRightInner, LandmarkCoordinate eyebrowRightOuter, LandmarkCoordinate eyeRightInner, LandmarkCoordinate eyeRightTop, LandmarkCoordinate eyeRightBottom, LandmarkCoordinate eyeRightOuter, LandmarkCoordinate noseRootLeft, LandmarkCoordinate noseRootRight, LandmarkCoordinate noseLeftAlarTop, LandmarkCoordinate noseRightAlarTop, LandmarkCoordinate noseLeftAlarOutTip, LandmarkCoordinate noseRightAlarOutTip, LandmarkCoordinate upperLipTop, LandmarkCoordinate upperLipBottom, LandmarkCoordinate underLipTop, LandmarkCoordinate underLipBottom, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            PupilLeft = pupilLeft;
            PupilRight = pupilRight;
            NoseTip = noseTip;
            MouthLeft = mouthLeft;
            MouthRight = mouthRight;
            EyebrowLeftOuter = eyebrowLeftOuter;
            EyebrowLeftInner = eyebrowLeftInner;
            EyeLeftOuter = eyeLeftOuter;
            EyeLeftTop = eyeLeftTop;
            EyeLeftBottom = eyeLeftBottom;
            EyeLeftInner = eyeLeftInner;
            EyebrowRightInner = eyebrowRightInner;
            EyebrowRightOuter = eyebrowRightOuter;
            EyeRightInner = eyeRightInner;
            EyeRightTop = eyeRightTop;
            EyeRightBottom = eyeRightBottom;
            EyeRightOuter = eyeRightOuter;
            NoseRootLeft = noseRootLeft;
            NoseRootRight = noseRootRight;
            NoseLeftAlarTop = noseLeftAlarTop;
            NoseRightAlarTop = noseRightAlarTop;
            NoseLeftAlarOutTip = noseLeftAlarOutTip;
            NoseRightAlarOutTip = noseRightAlarOutTip;
            UpperLipTop = upperLipTop;
            UpperLipBottom = upperLipBottom;
            UnderLipTop = underLipTop;
            UnderLipBottom = underLipBottom;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="FaceLandmarks"/> for deserialization. </summary>
        internal FaceLandmarks()
        {
        }

        /// <summary> Coordinates within an image. </summary>
        public LandmarkCoordinate PupilLeft { get; }
        /// <summary> Coordinates within an image. </summary>
        public LandmarkCoordinate PupilRight { get; }
        /// <summary> Coordinates within an image. </summary>
        public LandmarkCoordinate NoseTip { get; }
        /// <summary> Coordinates within an image. </summary>
        public LandmarkCoordinate MouthLeft { get; }
        /// <summary> Coordinates within an image. </summary>
        public LandmarkCoordinate MouthRight { get; }
        /// <summary> Coordinates within an image. </summary>
        public LandmarkCoordinate EyebrowLeftOuter { get; }
        /// <summary> Coordinates within an image. </summary>
        public LandmarkCoordinate EyebrowLeftInner { get; }
        /// <summary> Coordinates within an image. </summary>
        public LandmarkCoordinate EyeLeftOuter { get; }
        /// <summary> Coordinates within an image. </summary>
        public LandmarkCoordinate EyeLeftTop { get; }
        /// <summary> Coordinates within an image. </summary>
        public LandmarkCoordinate EyeLeftBottom { get; }
        /// <summary> Coordinates within an image. </summary>
        public LandmarkCoordinate EyeLeftInner { get; }
        /// <summary> Coordinates within an image. </summary>
        public LandmarkCoordinate EyebrowRightInner { get; }
        /// <summary> Coordinates within an image. </summary>
        public LandmarkCoordinate EyebrowRightOuter { get; }
        /// <summary> Coordinates within an image. </summary>
        public LandmarkCoordinate EyeRightInner { get; }
        /// <summary> Coordinates within an image. </summary>
        public LandmarkCoordinate EyeRightTop { get; }
        /// <summary> Coordinates within an image. </summary>
        public LandmarkCoordinate EyeRightBottom { get; }
        /// <summary> Coordinates within an image. </summary>
        public LandmarkCoordinate EyeRightOuter { get; }
        /// <summary> Coordinates within an image. </summary>
        public LandmarkCoordinate NoseRootLeft { get; }
        /// <summary> Coordinates within an image. </summary>
        public LandmarkCoordinate NoseRootRight { get; }
        /// <summary> Coordinates within an image. </summary>
        public LandmarkCoordinate NoseLeftAlarTop { get; }
        /// <summary> Coordinates within an image. </summary>
        public LandmarkCoordinate NoseRightAlarTop { get; }
        /// <summary> Coordinates within an image. </summary>
        public LandmarkCoordinate NoseLeftAlarOutTip { get; }
        /// <summary> Coordinates within an image. </summary>
        public LandmarkCoordinate NoseRightAlarOutTip { get; }
        /// <summary> Coordinates within an image. </summary>
        public LandmarkCoordinate UpperLipTop { get; }
        /// <summary> Coordinates within an image. </summary>
        public LandmarkCoordinate UpperLipBottom { get; }
        /// <summary> Coordinates within an image. </summary>
        public LandmarkCoordinate UnderLipTop { get; }
        /// <summary> Coordinates within an image. </summary>
        public LandmarkCoordinate UnderLipBottom { get; }
    }
}
