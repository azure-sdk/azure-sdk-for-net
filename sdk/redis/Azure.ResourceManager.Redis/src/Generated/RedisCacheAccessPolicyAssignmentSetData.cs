// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Redis.Models;

namespace Azure.ResourceManager.Redis
{
    /// <summary>
    /// A class representing the RedisCacheAccessPolicyAssignmentSet data model.
    /// Response to an operation on access policy assignment
    /// </summary>
    public partial class RedisCacheAccessPolicyAssignmentSetData : ResourceData
    {
        /// <summary> Initializes a new instance of RedisCacheAccessPolicyAssignmentSetData. </summary>
        public RedisCacheAccessPolicyAssignmentSetData()
        {
            Assignments = new ChangeTrackingList<RedisCacheAccessPolicyAssignment>();
        }

        /// <summary> Initializes a new instance of RedisCacheAccessPolicyAssignmentSetData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="provisioningState"> Provisioning state of an access policy assignment set. </param>
        /// <param name="assignments"></param>
        internal RedisCacheAccessPolicyAssignmentSetData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, AccessPolicyAssignmentProvisioningState? provisioningState, IList<RedisCacheAccessPolicyAssignment> assignments) : base(id, name, resourceType, systemData)
        {
            ProvisioningState = provisioningState;
            Assignments = assignments;
        }

        /// <summary> Provisioning state of an access policy assignment set. </summary>
        public AccessPolicyAssignmentProvisioningState? ProvisioningState { get; }
        /// <summary> Gets the assignments. </summary>
        public IList<RedisCacheAccessPolicyAssignment> Assignments { get; }
    }
}
