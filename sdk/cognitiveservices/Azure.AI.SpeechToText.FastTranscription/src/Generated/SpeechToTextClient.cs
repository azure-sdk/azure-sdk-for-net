// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using Azure.Core;
using Azure.Core.Pipeline;

namespace Azure.AI.SpeechToText.FastTranscription
{
    // Data plane generated client.
    /// <summary> The SpeechToText service client. </summary>
    public partial class SpeechToTextClient
    {
        private const string AuthorizationHeader = "Ocp-Apim-Subscription-Key";
        private readonly AzureKeyCredential _keyCredential;
        private readonly HttpPipeline _pipeline;
        private readonly Uri _endpoint;

        /// <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        internal ClientDiagnostics ClientDiagnostics { get; }

        /// <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        public virtual HttpPipeline Pipeline => _pipeline;

        /// <summary> Initializes a new instance of SpeechToTextClient for mocking. </summary>
        protected SpeechToTextClient()
        {
        }

        /// <summary> Initializes a new instance of SpeechToTextClient. </summary>
        /// <param name="endpoint"> Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> or <paramref name="credential"/> is null. </exception>
        public SpeechToTextClient(Uri endpoint, AzureKeyCredential credential) : this(endpoint, credential, new SpeechToTextClientOptions())
        {
        }

        /// <summary> Initializes a new instance of SpeechToTextClient. </summary>
        /// <param name="endpoint"> Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> or <paramref name="credential"/> is null. </exception>
        public SpeechToTextClient(Uri endpoint, AzureKeyCredential credential, SpeechToTextClientOptions options)
        {
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            Argument.AssertNotNull(credential, nameof(credential));
            options ??= new SpeechToTextClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _keyCredential = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new AzureKeyCredentialPolicy(_keyCredential, AuthorizationHeader) }, new ResponseClassifier());
            _endpoint = endpoint;
        }

        private ClientCustomizations _cachedClientCustomizations;

        /// <summary> Initializes a new instance of ClientCustomizations. </summary>
        public virtual ClientCustomizations GetClientCustomizationsClient()
        {
            return Volatile.Read(ref _cachedClientCustomizations) ?? Interlocked.CompareExchange(ref _cachedClientCustomizations, new ClientCustomizations(ClientDiagnostics, _pipeline, _keyCredential, _endpoint), null) ?? _cachedClientCustomizations;
        }

        /// <summary> Initializes a new instance of FastTranscription. </summary>
        /// <param name="serviceApiVersionsQueryParameter"> The identifier of the transcription. The default value is "2024-11-15". </param>
        public virtual FastTranscription GetFastTranscriptionClient(ServiceApiVersions? serviceApiVersionsQueryParameter = null)
        {
            return new FastTranscription(ClientDiagnostics, _pipeline, _keyCredential, _endpoint, serviceApiVersionsQueryParameter);
        }
    }
}
