// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure;
using Azure.Core;

namespace Roles
{
    public partial class CallingPermissions : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("addParticipants"u8);
            writer.WriteBooleanValue(AddParticipants);
            writer.WritePropertyName("addPstnParticipants"u8);
            writer.WriteBooleanValue(AddPstnParticipants);
            writer.WritePropertyName("removeSelf"u8);
            writer.WriteBooleanValue(RemoveSelf);
            writer.WritePropertyName("leaveCall"u8);
            writer.WriteBooleanValue(LeaveCall);
            writer.WritePropertyName("removeParticipants"u8);
            writer.WriteBooleanValue(RemoveParticipants);
            writer.WritePropertyName("removePstnParticipant"u8);
            writer.WriteBooleanValue(RemovePstnParticipant);
            writer.WritePropertyName("listParticipants"u8);
            writer.WriteBooleanValue(ListParticipants);
            writer.WritePropertyName("getOwnData"u8);
            writer.WriteBooleanValue(GetOwnData);
            writer.WritePropertyName("getOthersData"u8);
            writer.WriteBooleanValue(GetOthersData);
            writer.WritePropertyName("updateOwnData"u8);
            writer.WriteBooleanValue(UpdateOwnData);
            writer.WritePropertyName("updateOthersData"u8);
            writer.WriteBooleanValue(UpdateOthersData);
            writer.WritePropertyName("getCallProperties"u8);
            writer.WriteBooleanValue(GetCallProperties);
            writer.WritePropertyName("updateCallProperties"u8);
            writer.WriteBooleanValue(UpdateCallProperties);
            writer.WritePropertyName("admitLobbyParticipants"u8);
            writer.WriteBooleanValue(AdmitLobbyParticipants);
            writer.WritePropertyName("denyLobbyParticipants"u8);
            writer.WriteBooleanValue(DenyLobbyParticipants);
            writer.WritePropertyName("bypassLobby"u8);
            writer.WriteBooleanValue(BypassLobby);
            writer.WritePropertyName("deleteCall"u8);
            writer.WriteBooleanValue(DeleteCall);
            writer.WritePropertyName("joinMeeting"u8);
            writer.WriteBooleanValue(JoinMeeting);
            writer.WritePropertyName("turnOnVideo"u8);
            writer.WriteBooleanValue(TurnOnVideo);
            writer.WritePropertyName("shareVideo"u8);
            writer.WriteBooleanValue(ShareVideo);
            writer.WritePropertyName("sendVideo"u8);
            writer.WriteBooleanValue(SendVideo);
            writer.WritePropertyName("restrictOthersVideo"u8);
            writer.WriteBooleanValue(RestrictOthersVideo);
            writer.WritePropertyName("unrestrictOthersVideo"u8);
            writer.WriteBooleanValue(UnrestrictOthersVideo);
            writer.WritePropertyName("turnOnAudio"u8);
            writer.WriteBooleanValue(TurnOnAudio);
            writer.WritePropertyName("shareAudio"u8);
            writer.WriteBooleanValue(ShareAudio);
            writer.WritePropertyName("sendAudio"u8);
            writer.WriteBooleanValue(SendAudio);
            writer.WritePropertyName("restrictOthersAudio"u8);
            writer.WriteBooleanValue(RestrictOthersAudio);
            writer.WritePropertyName("unrestrictOthersAudio"u8);
            writer.WriteBooleanValue(UnrestrictOthersAudio);
            writer.WritePropertyName("shareScreen"u8);
            writer.WriteBooleanValue(ShareScreen);
            writer.WritePropertyName("shareContent"u8);
            writer.WriteBooleanValue(ShareContent);
            writer.WritePropertyName("muteSelf"u8);
            writer.WriteBooleanValue(MuteSelf);
            writer.WritePropertyName("unmuteSelf"u8);
            writer.WriteBooleanValue(UnmuteSelf);
            writer.WritePropertyName("muteOthers"u8);
            writer.WriteBooleanValue(MuteOthers);
            writer.WritePropertyName("spotlightParticipants"u8);
            writer.WriteBooleanValue(SpotlightParticipants);
            writer.WritePropertyName("removeSpotlights"u8);
            writer.WriteBooleanValue(RemoveSpotlights);
            writer.WritePropertyName("removeParticipantsSpotlight"u8);
            writer.WriteBooleanValue(RemoveParticipantsSpotlight);
            writer.WritePropertyName("startRecording"u8);
            writer.WriteBooleanValue(StartRecording);
            writer.WritePropertyName("stopRecording"u8);
            writer.WriteBooleanValue(StopRecording);
            writer.WritePropertyName("startLiveCaptions"u8);
            writer.WriteBooleanValue(StartLiveCaptions);
            writer.WritePropertyName("stopLiveCaptions"u8);
            writer.WriteBooleanValue(StopLiveCaptions);
            writer.WritePropertyName("raiseHand"u8);
            writer.WriteBooleanValue(RaiseHand);
            writer.WritePropertyName("sendReaction"u8);
            writer.WriteBooleanValue(SendReaction);
            writer.WritePropertyName("hangUpForEveryOne"u8);
            writer.WriteBooleanValue(HangUpForEveryOne);
            writer.WritePropertyName("endCallForAll"u8);
            writer.WriteBooleanValue(EndCallForAll);
            writer.WriteEndObject();
        }

        internal static CallingPermissions DeserializeCallingPermissions(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            bool addParticipants = default;
            bool addPstnParticipants = default;
            bool removeSelf = default;
            bool leaveCall = default;
            bool removeParticipants = default;
            bool removePstnParticipant = default;
            bool listParticipants = default;
            bool getOwnData = default;
            bool getOthersData = default;
            bool updateOwnData = default;
            bool updateOthersData = default;
            bool getCallProperties = default;
            bool updateCallProperties = default;
            bool admitLobbyParticipants = default;
            bool denyLobbyParticipants = default;
            bool bypassLobby = default;
            bool deleteCall = default;
            bool joinMeeting = default;
            bool turnOnVideo = default;
            bool shareVideo = default;
            bool sendVideo = default;
            bool restrictOthersVideo = default;
            bool unrestrictOthersVideo = default;
            bool turnOnAudio = default;
            bool shareAudio = default;
            bool sendAudio = default;
            bool restrictOthersAudio = default;
            bool unrestrictOthersAudio = default;
            bool shareScreen = default;
            bool shareContent = default;
            bool muteSelf = default;
            bool unmuteSelf = default;
            bool muteOthers = default;
            bool spotlightParticipants = default;
            bool removeSpotlights = default;
            bool removeParticipantsSpotlight = default;
            bool startRecording = default;
            bool stopRecording = default;
            bool startLiveCaptions = default;
            bool stopLiveCaptions = default;
            bool raiseHand = default;
            bool sendReaction = default;
            bool hangUpForEveryOne = default;
            bool endCallForAll = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("addParticipants"u8))
                {
                    addParticipants = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("addPstnParticipants"u8))
                {
                    addPstnParticipants = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("removeSelf"u8))
                {
                    removeSelf = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("leaveCall"u8))
                {
                    leaveCall = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("removeParticipants"u8))
                {
                    removeParticipants = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("removePstnParticipant"u8))
                {
                    removePstnParticipant = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("listParticipants"u8))
                {
                    listParticipants = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("getOwnData"u8))
                {
                    getOwnData = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("getOthersData"u8))
                {
                    getOthersData = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("updateOwnData"u8))
                {
                    updateOwnData = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("updateOthersData"u8))
                {
                    updateOthersData = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("getCallProperties"u8))
                {
                    getCallProperties = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("updateCallProperties"u8))
                {
                    updateCallProperties = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("admitLobbyParticipants"u8))
                {
                    admitLobbyParticipants = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("denyLobbyParticipants"u8))
                {
                    denyLobbyParticipants = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("bypassLobby"u8))
                {
                    bypassLobby = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("deleteCall"u8))
                {
                    deleteCall = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("joinMeeting"u8))
                {
                    joinMeeting = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("turnOnVideo"u8))
                {
                    turnOnVideo = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("shareVideo"u8))
                {
                    shareVideo = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("sendVideo"u8))
                {
                    sendVideo = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("restrictOthersVideo"u8))
                {
                    restrictOthersVideo = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("unrestrictOthersVideo"u8))
                {
                    unrestrictOthersVideo = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("turnOnAudio"u8))
                {
                    turnOnAudio = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("shareAudio"u8))
                {
                    shareAudio = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("sendAudio"u8))
                {
                    sendAudio = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("restrictOthersAudio"u8))
                {
                    restrictOthersAudio = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("unrestrictOthersAudio"u8))
                {
                    unrestrictOthersAudio = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("shareScreen"u8))
                {
                    shareScreen = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("shareContent"u8))
                {
                    shareContent = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("muteSelf"u8))
                {
                    muteSelf = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("unmuteSelf"u8))
                {
                    unmuteSelf = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("muteOthers"u8))
                {
                    muteOthers = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("spotlightParticipants"u8))
                {
                    spotlightParticipants = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("removeSpotlights"u8))
                {
                    removeSpotlights = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("removeParticipantsSpotlight"u8))
                {
                    removeParticipantsSpotlight = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("startRecording"u8))
                {
                    startRecording = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("stopRecording"u8))
                {
                    stopRecording = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("startLiveCaptions"u8))
                {
                    startLiveCaptions = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("stopLiveCaptions"u8))
                {
                    stopLiveCaptions = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("raiseHand"u8))
                {
                    raiseHand = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("sendReaction"u8))
                {
                    sendReaction = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("hangUpForEveryOne"u8))
                {
                    hangUpForEveryOne = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("endCallForAll"u8))
                {
                    endCallForAll = property.Value.GetBoolean();
                    continue;
                }
            }
            return new CallingPermissions(addParticipants, addPstnParticipants, removeSelf, leaveCall, removeParticipants, removePstnParticipant, listParticipants, getOwnData, getOthersData, updateOwnData, updateOthersData, getCallProperties, updateCallProperties, admitLobbyParticipants, denyLobbyParticipants, bypassLobby, deleteCall, joinMeeting, turnOnVideo, shareVideo, sendVideo, restrictOthersVideo, unrestrictOthersVideo, turnOnAudio, shareAudio, sendAudio, restrictOthersAudio, unrestrictOthersAudio, shareScreen, shareContent, muteSelf, unmuteSelf, muteOthers, spotlightParticipants, removeSpotlights, removeParticipantsSpotlight, startRecording, stopRecording, startLiveCaptions, stopLiveCaptions, raiseHand, sendReaction, hangUpForEveryOne, endCallForAll);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static CallingPermissions FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeCallingPermissions(document.RootElement);
        }

        /// <summary> Convert into a Utf8JsonRequestContent. </summary>
        internal virtual RequestContent ToRequestContent()
        {
            var content = new Utf8JsonRequestContent();
            content.JsonWriter.WriteObjectValue(this);
            return content;
        }
    }
}
