// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ServiceFabricManagedClusters
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ManagedUnsupportedVMSizesOperations.
    /// </summary>
    public static partial class ManagedUnsupportedVMSizesOperationsExtensions
    {
            /// <summary>
            /// Get the lists of unsupported vm sizes for Service Fabric Managed Clusters.
            /// </summary>
            /// <remarks>
            /// Get the lists of unsupported vm sizes for Service Fabric Managed Clusters.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// The location for the cluster code versions. This is different from cluster
            /// location.
            /// </param>
            public static IPage<ManagedVMSize> List(this IManagedUnsupportedVMSizesOperations operations, string location)
            {
                return operations.ListAsync(location).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get the lists of unsupported vm sizes for Service Fabric Managed Clusters.
            /// </summary>
            /// <remarks>
            /// Get the lists of unsupported vm sizes for Service Fabric Managed Clusters.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// The location for the cluster code versions. This is different from cluster
            /// location.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<ManagedVMSize>> ListAsync(this IManagedUnsupportedVMSizesOperations operations, string location, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(location, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get unsupported vm size for Service Fabric Managed Clusters.
            /// </summary>
            /// <remarks>
            /// Get unsupported vm size for Service Fabric Managed Clusters.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// The location for the cluster code versions. This is different from cluster
            /// location.
            /// </param>
            /// <param name='vmSize'>
            /// VM Size name.
            /// </param>
            public static ManagedVMSize Get(this IManagedUnsupportedVMSizesOperations operations, string location, string vmSize)
            {
                return operations.GetAsync(location, vmSize).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get unsupported vm size for Service Fabric Managed Clusters.
            /// </summary>
            /// <remarks>
            /// Get unsupported vm size for Service Fabric Managed Clusters.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// The location for the cluster code versions. This is different from cluster
            /// location.
            /// </param>
            /// <param name='vmSize'>
            /// VM Size name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ManagedVMSize> GetAsync(this IManagedUnsupportedVMSizesOperations operations, string location, string vmSize, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(location, vmSize, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get the lists of unsupported vm sizes for Service Fabric Managed Clusters.
            /// </summary>
            /// <remarks>
            /// Get the lists of unsupported vm sizes for Service Fabric Managed Clusters.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<ManagedVMSize> ListNext(this IManagedUnsupportedVMSizesOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get the lists of unsupported vm sizes for Service Fabric Managed Clusters.
            /// </summary>
            /// <remarks>
            /// Get the lists of unsupported vm sizes for Service Fabric Managed Clusters.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<ManagedVMSize>> ListNextAsync(this IManagedUnsupportedVMSizesOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
