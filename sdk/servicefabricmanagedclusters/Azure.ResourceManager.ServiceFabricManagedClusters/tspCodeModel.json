{
 "$id": "1",
 "name": "Microsoft.ServiceFabric",
 "apiVersions": [
  "2024-11-01-preview"
 ],
 "enums": [
  {
   "$id": "2",
   "kind": "enum",
   "name": "ResourceProvisioningState",
   "crossLanguageDefinitionId": "Azure.ResourceManager.ResourceProvisioningState",
   "valueType": {
    "$id": "3",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "4",
     "kind": "enumvalue",
     "name": "Succeeded",
     "value": "Succeeded",
     "valueType": {
      "$id": "5",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "2"
     },
     "doc": "Resource has been created.",
     "decorators": []
    },
    {
     "$id": "6",
     "kind": "enumvalue",
     "name": "Failed",
     "value": "Failed",
     "valueType": {
      "$id": "7",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "2"
     },
     "doc": "Resource creation failed.",
     "decorators": []
    },
    {
     "$id": "8",
     "kind": "enumvalue",
     "name": "Canceled",
     "value": "Canceled",
     "valueType": {
      "$id": "9",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "2"
     },
     "doc": "Resource creation was canceled.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "The provisioning state of a resource type.",
   "isFixed": false,
   "isFlags": false,
   "usage": "LroPolling",
   "decorators": []
  },
  {
   "$id": "10",
   "kind": "enum",
   "name": "NodeTypeSkuScaleType",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeSkuScaleType",
   "valueType": {
    "$id": "11",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "12",
     "kind": "enumvalue",
     "name": "None",
     "value": "None",
     "valueType": {
      "$id": "13",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "10"
     },
     "doc": "Node count is not adjustable in any way (e.g. it is fixed).",
     "decorators": []
    },
    {
     "$id": "14",
     "kind": "enumvalue",
     "name": "Manual",
     "value": "Manual",
     "valueType": {
      "$id": "15",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "10"
     },
     "doc": "The user must manually scale out/in.",
     "decorators": []
    },
    {
     "$id": "16",
     "kind": "enumvalue",
     "name": "Automatic",
     "value": "Automatic",
     "valueType": {
      "$id": "17",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "10"
     },
     "doc": "Automatic scale is allowed.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "Node type capacity scale type.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Output,Json",
   "decorators": []
  },
  {
   "$id": "18",
   "kind": "enum",
   "name": "ServiceFabricManagedDataDiskType",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.DiskType",
   "valueType": {
    "$id": "19",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "20",
     "kind": "enumvalue",
     "name": "Standard_LRS",
     "value": "Standard_LRS",
     "valueType": {
      "$id": "21",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "18"
     },
     "doc": "Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access.",
     "decorators": []
    },
    {
     "$id": "22",
     "kind": "enumvalue",
     "name": "StandardSSD_LRS",
     "value": "StandardSSD_LRS",
     "valueType": {
      "$id": "23",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "18"
     },
     "doc": "Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test.",
     "decorators": []
    },
    {
     "$id": "24",
     "kind": "enumvalue",
     "name": "Premium_LRS",
     "value": "Premium_LRS",
     "valueType": {
      "$id": "25",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "18"
     },
     "doc": "Premium SSD locally redundant storage. Best for production and performance sensitive workloads.",
     "decorators": []
    },
    {
     "$id": "26",
     "kind": "enumvalue",
     "name": "PremiumV2_LRS",
     "value": "PremiumV2_LRS",
     "valueType": {
      "$id": "27",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "18"
     },
     "doc": "Premium SSD V2 locally redundant storage. Best for production and performance sensitive workloads that consistently require low latency and high IOPS and throughput.",
     "decorators": []
    },
    {
     "$id": "28",
     "kind": "enumvalue",
     "name": "StandardSSD_ZRS",
     "value": "StandardSSD_ZRS",
     "valueType": {
      "$id": "29",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "18"
     },
     "doc": "Standard SSD zone redundant storage. Best for web servers, lightly used enterprise applications and dev/test that need storage resiliency against zone failures.",
     "decorators": []
    },
    {
     "$id": "30",
     "kind": "enumvalue",
     "name": "Premium_ZRS",
     "value": "Premium_ZRS",
     "valueType": {
      "$id": "31",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "18"
     },
     "doc": "Premium SSD zone redundant storage. Best for production workloads that need storage resiliency against zone failures.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "Managed data disk type. IOPS and throughput are given by the disk size, to see more information go to https://docs.microsoft.com/en-us/azure/virtual-machines/disks-types.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "32",
   "kind": "enum",
   "name": "VmssExtensionSetupOrder",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VmssExtensionSetupOrder",
   "valueType": {
    "$id": "33",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "34",
     "kind": "enumvalue",
     "name": "BeforeSFRuntime",
     "value": "BeforeSFRuntime",
     "valueType": {
      "$id": "35",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "32"
     },
     "doc": "Indicates that the vm extension should run before the service fabric runtime starts.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "Vm extension setup order.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "36",
   "kind": "enum",
   "name": "NodeTypeFrontendConfigurationIPAddressType",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.IPAddressType",
   "valueType": {
    "$id": "37",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "38",
     "kind": "enumvalue",
     "name": "IPv4",
     "value": "IPv4",
     "valueType": {
      "$id": "39",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "36"
     },
     "doc": "IPv4 address type.",
     "decorators": []
    },
    {
     "$id": "40",
     "kind": "enumvalue",
     "name": "IPv6",
     "value": "IPv6",
     "valueType": {
      "$id": "41",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "36"
     },
     "doc": "IPv6 address type.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "The IP address type.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "42",
   "kind": "enum",
   "name": "ServiceFabricManagedNsgProtocol",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NsgProtocol",
   "valueType": {
    "$id": "43",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "44",
     "kind": "enumvalue",
     "name": "http",
     "value": "http",
     "valueType": {
      "$id": "45",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "42"
     },
     "doc": "Protocol applies to HTTP.",
     "decorators": []
    },
    {
     "$id": "46",
     "kind": "enumvalue",
     "name": "https",
     "value": "https",
     "valueType": {
      "$id": "47",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "42"
     },
     "doc": "Protocol applies to HTTPS.",
     "decorators": []
    },
    {
     "$id": "48",
     "kind": "enumvalue",
     "name": "tcp",
     "value": "tcp",
     "valueType": {
      "$id": "49",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "42"
     },
     "doc": "Protocol applies to TCP.",
     "decorators": []
    },
    {
     "$id": "50",
     "kind": "enumvalue",
     "name": "udp",
     "value": "udp",
     "valueType": {
      "$id": "51",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "42"
     },
     "doc": "Protocol applies to UDP.",
     "decorators": []
    },
    {
     "$id": "52",
     "kind": "enumvalue",
     "name": "icmp",
     "value": "icmp",
     "valueType": {
      "$id": "53",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "42"
     },
     "doc": "Protocol applies to ICMP.",
     "decorators": []
    },
    {
     "$id": "54",
     "kind": "enumvalue",
     "name": "AH",
     "value": "ah",
     "valueType": {
      "$id": "55",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "42"
     },
     "doc": "Protocol applies to AH.",
     "decorators": []
    },
    {
     "$id": "56",
     "kind": "enumvalue",
     "name": "esp",
     "value": "esp",
     "valueType": {
      "$id": "57",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "42"
     },
     "doc": "Protocol applies to ESP.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "Network protocol this rule applies to.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "58",
   "kind": "enum",
   "name": "ServiceFabricManagedNetworkTrafficAccess",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Access",
   "valueType": {
    "$id": "59",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "60",
     "kind": "enumvalue",
     "name": "allow",
     "value": "allow",
     "valueType": {
      "$id": "61",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "58"
     },
     "doc": "The network traffic is allowed.",
     "decorators": []
    },
    {
     "$id": "62",
     "kind": "enumvalue",
     "name": "deny",
     "value": "deny",
     "valueType": {
      "$id": "63",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "58"
     },
     "doc": "The network traffic is denied.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "The network traffic is allowed or denied.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "64",
   "kind": "enum",
   "name": "ServiceFabricManagedNetworkSecurityRuleDirection",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Direction",
   "valueType": {
    "$id": "65",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "66",
     "kind": "enumvalue",
     "name": "inbound",
     "value": "inbound",
     "valueType": {
      "$id": "67",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "64"
     },
     "doc": "Inbound direction.",
     "decorators": []
    },
    {
     "$id": "68",
     "kind": "enumvalue",
     "name": "outbound",
     "value": "outbound",
     "valueType": {
      "$id": "69",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "64"
     },
     "doc": "Outbound direction.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "Network security rule direction.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "70",
   "kind": "enum",
   "name": "ServiceFabricManagedResourceProvisioningState",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedResourceProvisioningState",
   "valueType": {
    "$id": "71",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "72",
     "kind": "enumvalue",
     "name": "None",
     "value": "None",
     "valueType": {
      "$id": "73",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "70"
     },
     "doc": "The resource does not have a provisioning state.",
     "decorators": []
    },
    {
     "$id": "74",
     "kind": "enumvalue",
     "name": "Creating",
     "value": "Creating",
     "valueType": {
      "$id": "75",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "70"
     },
     "doc": "The resource is being created.",
     "decorators": []
    },
    {
     "$id": "76",
     "kind": "enumvalue",
     "name": "Created",
     "value": "Created",
     "valueType": {
      "$id": "77",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "70"
     },
     "doc": "The resource is created.",
     "decorators": []
    },
    {
     "$id": "78",
     "kind": "enumvalue",
     "name": "Updating",
     "value": "Updating",
     "valueType": {
      "$id": "79",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "70"
     },
     "doc": "The resource is being updated.",
     "decorators": []
    },
    {
     "$id": "80",
     "kind": "enumvalue",
     "name": "Succeeded",
     "value": "Succeeded",
     "valueType": {
      "$id": "81",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "70"
     },
     "doc": "The resource provisioning has succeeded.",
     "decorators": []
    },
    {
     "$id": "82",
     "kind": "enumvalue",
     "name": "Failed",
     "value": "Failed",
     "valueType": {
      "$id": "83",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "70"
     },
     "doc": "The resource provisioning has failed.",
     "decorators": []
    },
    {
     "$id": "84",
     "kind": "enumvalue",
     "name": "Canceled",
     "value": "Canceled",
     "valueType": {
      "$id": "85",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "70"
     },
     "doc": "The resource provisioning has been canceled.",
     "decorators": []
    },
    {
     "$id": "86",
     "kind": "enumvalue",
     "name": "Deleting",
     "value": "Deleting",
     "valueType": {
      "$id": "87",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "70"
     },
     "doc": "The resource is being deleted.",
     "decorators": []
    },
    {
     "$id": "88",
     "kind": "enumvalue",
     "name": "Deleted",
     "value": "Deleted",
     "valueType": {
      "$id": "89",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "70"
     },
     "doc": "The resource has been deleted.",
     "decorators": []
    },
    {
     "$id": "90",
     "kind": "enumvalue",
     "name": "Other",
     "value": "Other",
     "valueType": {
      "$id": "91",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "70"
     },
     "doc": "The resource provisioning state is a state other than the previously specified states.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "The provisioning state of the managed resource.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "92",
   "kind": "enum",
   "name": "SpotNodeVmEvictionPolicyType",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.EvictionPolicyType",
   "valueType": {
    "$id": "93",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "94",
     "kind": "enumvalue",
     "name": "Delete",
     "value": "Delete",
     "valueType": {
      "$id": "95",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "92"
     },
     "doc": "Eviction policy will be Delete for SPOT vms.",
     "decorators": []
    },
    {
     "$id": "96",
     "kind": "enumvalue",
     "name": "Deallocate",
     "value": "Deallocate",
     "valueType": {
      "$id": "97",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "92"
     },
     "doc": "Eviction policy will be Deallocate for SPOT vms.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "Specifies the eviction policy for virtual machines in a SPOT node type.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "98",
   "kind": "enum",
   "name": "VmSetupAction",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VmSetupAction",
   "valueType": {
    "$id": "99",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "100",
     "kind": "enumvalue",
     "name": "EnableContainers",
     "value": "EnableContainers",
     "valueType": {
      "$id": "101",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "98"
     },
     "doc": "Enable windows containers feature.",
     "decorators": []
    },
    {
     "$id": "102",
     "kind": "enumvalue",
     "name": "EnableHyperV",
     "value": "EnableHyperV",
     "valueType": {
      "$id": "103",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "98"
     },
     "doc": "Enables windows HyperV feature.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "action to be performed on the vms before bootstrapping the service fabric runtime.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "104",
   "kind": "enum",
   "name": "ServiceFabricManagedClusterSecurityType",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.SecurityType",
   "valueType": {
    "$id": "105",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "106",
     "kind": "enumvalue",
     "name": "TrustedLaunch",
     "value": "TrustedLaunch",
     "valueType": {
      "$id": "107",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "104"
     },
     "doc": "Trusted Launch is a security type that secures generation 2 virtual machines.",
     "decorators": []
    },
    {
     "$id": "108",
     "kind": "enumvalue",
     "name": "Standard",
     "value": "Standard",
     "valueType": {
      "$id": "109",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "104"
     },
     "doc": "Standard is the default security type for all machines.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "Specifies the security type of the nodeType. Only Standard and TrustedLaunch are currently supported",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "110",
   "kind": "enum",
   "name": "ServiceFabricManagedClusterPrivateIPAddressVersion",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.PrivateIPAddressVersion",
   "valueType": {
    "$id": "111",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "112",
     "kind": "enumvalue",
     "name": "IPv4",
     "value": "IPv4",
     "valueType": {
      "$id": "113",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "110"
     },
     "doc": "The IP configuration's private IP is IPv4.",
     "decorators": []
    },
    {
     "$id": "114",
     "kind": "enumvalue",
     "name": "IPv6",
     "value": "IPv6",
     "valueType": {
      "$id": "115",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "110"
     },
     "doc": "The IP configuration's private IP is IPv6.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "Specifies whether the IP configuration's private IP is IPv4 or IPv6. Default is IPv4.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "116",
   "kind": "enum",
   "name": "ServiceFabricManagedClusterPublicIPAddressVersion",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.PublicIPAddressVersion",
   "valueType": {
    "$id": "117",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "118",
     "kind": "enumvalue",
     "name": "IPv4",
     "value": "IPv4",
     "valueType": {
      "$id": "119",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "116"
     },
     "doc": "The IP configuration's public IP is IPv4.",
     "decorators": []
    },
    {
     "$id": "120",
     "kind": "enumvalue",
     "name": "IPv6",
     "value": "IPv6",
     "valueType": {
      "$id": "121",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "116"
     },
     "doc": "The IP configuration's public IP is IPv6.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "Specifies whether the IP configuration's public IP is IPv4 or IPv6. Default is IPv4.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "122",
   "kind": "enum",
   "name": "createdByType",
   "crossLanguageDefinitionId": "Azure.ResourceManager.CommonTypes.createdByType",
   "valueType": {
    "$id": "123",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "124",
     "kind": "enumvalue",
     "name": "User",
     "value": "User",
     "valueType": {
      "$id": "125",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "122"
     },
     "doc": "The entity was created by a user.",
     "decorators": []
    },
    {
     "$id": "126",
     "kind": "enumvalue",
     "name": "Application",
     "value": "Application",
     "valueType": {
      "$id": "127",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "122"
     },
     "doc": "The entity was created by an application.",
     "decorators": []
    },
    {
     "$id": "128",
     "kind": "enumvalue",
     "name": "ManagedIdentity",
     "value": "ManagedIdentity",
     "valueType": {
      "$id": "129",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "122"
     },
     "doc": "The entity was created by a managed identity.",
     "decorators": []
    },
    {
     "$id": "130",
     "kind": "enumvalue",
     "name": "Key",
     "value": "Key",
     "valueType": {
      "$id": "131",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "122"
     },
     "doc": "The entity was created by a key.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "The kind of entity that created the resource.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "132",
   "kind": "enum",
   "name": "ServiceFabricManagedClusterUpdateType",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.UpdateType",
   "valueType": {
    "$id": "133",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "134",
     "kind": "enumvalue",
     "name": "Default",
     "value": "Default",
     "valueType": {
      "$id": "135",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "132"
     },
     "doc": "The operation will proceed in all specified nodes at the same time.",
     "decorators": []
    },
    {
     "$id": "136",
     "kind": "enumvalue",
     "name": "ByUpgradeDomain",
     "value": "ByUpgradeDomain",
     "valueType": {
      "$id": "137",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "132"
     },
     "doc": "The operation will proceed one upgrade domain at a time, checking the health in between each to continue.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "Specifies the way the operation will be performed.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Json",
   "decorators": []
  },
  {
   "$id": "138",
   "kind": "enum",
   "name": "FaultKind",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.FaultKind",
   "valueType": {
    "$id": "139",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "140",
     "kind": "enumvalue",
     "name": "Zone",
     "value": "Zone",
     "valueType": {
      "$id": "141",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "138"
     },
     "doc": "Simulates an availability zone down.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "The kind of fault simulation.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "142",
   "kind": "enum",
   "name": "FaultSimulationStatus",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.FaultSimulationStatus",
   "valueType": {
    "$id": "143",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "144",
     "kind": "enumvalue",
     "name": "Starting",
     "value": "Starting",
     "valueType": {
      "$id": "145",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "142"
     },
     "doc": "Indicates the fault simulation is starting. The simulation will have this status while the start operation is in progress.",
     "decorators": []
    },
    {
     "$id": "146",
     "kind": "enumvalue",
     "name": "Active",
     "value": "Active",
     "valueType": {
      "$id": "147",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "142"
     },
     "doc": "Indicates the fault simulation is active. The simulation will have this status after the start operation has completed successfully.",
     "decorators": []
    },
    {
     "$id": "148",
     "kind": "enumvalue",
     "name": "Stopping",
     "value": "Stopping",
     "valueType": {
      "$id": "149",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "142"
     },
     "doc": "Indicates the fault simulation is stopping. The simulation will have this status while the stop operation is in progress.",
     "decorators": []
    },
    {
     "$id": "150",
     "kind": "enumvalue",
     "name": "Done",
     "value": "Done",
     "valueType": {
      "$id": "151",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "142"
     },
     "doc": "Indicates the fault simulation is done. The simulation will have this status after the stop operation has completed successfully.",
     "decorators": []
    },
    {
     "$id": "152",
     "kind": "enumvalue",
     "name": "StartFailed",
     "value": "StartFailed",
     "valueType": {
      "$id": "153",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "142"
     },
     "doc": "Indicates the fault simulation has failed on start. The simulation will have this status after the start operation fails.",
     "decorators": []
    },
    {
     "$id": "154",
     "kind": "enumvalue",
     "name": "StopFailed",
     "value": "StopFailed",
     "valueType": {
      "$id": "155",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "142"
     },
     "doc": "Indicates the fault simulation has failed on stop. The simulation will have this status after the stop operation fails.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "Fault simulation status.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Output,Json,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "156",
   "kind": "enum",
   "name": "SfmcOperationStatus",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.SfmcOperationStatus",
   "valueType": {
    "$id": "157",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "158",
     "kind": "enumvalue",
     "name": "Created",
     "value": "Created",
     "valueType": {
      "$id": "159",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "156"
     },
     "doc": "Operation created.",
     "decorators": []
    },
    {
     "$id": "160",
     "kind": "enumvalue",
     "name": "Started",
     "value": "Started",
     "valueType": {
      "$id": "161",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "156"
     },
     "doc": "Operation started.",
     "decorators": []
    },
    {
     "$id": "162",
     "kind": "enumvalue",
     "name": "Succeeded",
     "value": "Succeeded",
     "valueType": {
      "$id": "163",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "156"
     },
     "doc": "Operation succeeded.",
     "decorators": []
    },
    {
     "$id": "164",
     "kind": "enumvalue",
     "name": "Failed",
     "value": "Failed",
     "valueType": {
      "$id": "165",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "156"
     },
     "doc": "Operation failed.",
     "decorators": []
    },
    {
     "$id": "166",
     "kind": "enumvalue",
     "name": "Aborted",
     "value": "Aborted",
     "valueType": {
      "$id": "167",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "156"
     },
     "doc": "Operation aborted.",
     "decorators": []
    },
    {
     "$id": "168",
     "kind": "enumvalue",
     "name": "Canceled",
     "value": "Canceled",
     "valueType": {
      "$id": "169",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "156"
     },
     "doc": "Operation canceled.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "Sfmc operation status.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Output,Json,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "170",
   "kind": "enum",
   "name": "ServiceFabricManagedClusterState",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ClusterState",
   "valueType": {
    "$id": "171",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "172",
     "kind": "enumvalue",
     "name": "WaitingForNodes",
     "value": "WaitingForNodes",
     "valueType": {
      "$id": "173",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "170"
     },
     "doc": "Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it.",
     "decorators": []
    },
    {
     "$id": "174",
     "kind": "enumvalue",
     "name": "Deploying",
     "value": "Deploying",
     "valueType": {
      "$id": "175",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "170"
     },
     "doc": "Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up.",
     "decorators": []
    },
    {
     "$id": "176",
     "kind": "enumvalue",
     "name": "BaselineUpgrade",
     "value": "BaselineUpgrade",
     "valueType": {
      "$id": "177",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "170"
     },
     "doc": "Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time.",
     "decorators": []
    },
    {
     "$id": "178",
     "kind": "enumvalue",
     "name": "Upgrading",
     "value": "Upgrading",
     "valueType": {
      "$id": "179",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "170"
     },
     "doc": "Indicates that the cluster is being upgraded with the user provided configuration.",
     "decorators": []
    },
    {
     "$id": "180",
     "kind": "enumvalue",
     "name": "UpgradeFailed",
     "value": "UpgradeFailed",
     "valueType": {
      "$id": "181",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "170"
     },
     "doc": "Indicates that the last upgrade for the cluster has failed.",
     "decorators": []
    },
    {
     "$id": "182",
     "kind": "enumvalue",
     "name": "Ready",
     "value": "Ready",
     "valueType": {
      "$id": "183",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "170"
     },
     "doc": "Indicates that the cluster is in a stable state.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "The current state of the cluster.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "184",
   "kind": "enum",
   "name": "ManagedClusterLoadBalancingRuleTransportProtocol",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Protocol",
   "valueType": {
    "$id": "185",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "186",
     "kind": "enumvalue",
     "name": "tcp",
     "value": "tcp",
     "valueType": {
      "$id": "187",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "184"
     },
     "doc": "Transport protocol is TCP.",
     "decorators": []
    },
    {
     "$id": "188",
     "kind": "enumvalue",
     "name": "udp",
     "value": "udp",
     "valueType": {
      "$id": "189",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "184"
     },
     "doc": "Transport protocol is UDP.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "The reference to the transport protocol used by the load balancing rule.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "190",
   "kind": "enum",
   "name": "ManagedClusterLoadBalanceProbeProtocol",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ProbeProtocol",
   "valueType": {
    "$id": "191",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "192",
     "kind": "enumvalue",
     "name": "tcp",
     "value": "tcp",
     "valueType": {
      "$id": "193",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "190"
     },
     "doc": "Probe protocol is TCP.",
     "decorators": []
    },
    {
     "$id": "194",
     "kind": "enumvalue",
     "name": "http",
     "value": "http",
     "valueType": {
      "$id": "195",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "190"
     },
     "doc": "Probe protocol is HTTP.",
     "decorators": []
    },
    {
     "$id": "196",
     "kind": "enumvalue",
     "name": "https",
     "value": "https",
     "valueType": {
      "$id": "197",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "190"
     },
     "doc": "Probe protocol is HTTPS.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "The reference to the load balancer probe used by the load balancing rule.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "198",
   "kind": "enum",
   "name": "ManagedClusterUpgradeMode",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ClusterUpgradeMode",
   "valueType": {
    "$id": "199",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "200",
     "kind": "enumvalue",
     "name": "Automatic",
     "value": "Automatic",
     "valueType": {
      "$id": "201",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "198"
     },
     "doc": "The cluster will be automatically upgraded to the latest Service Fabric runtime version, **clusterUpgradeCadence** will determine when the upgrade starts after the new version becomes available.",
     "decorators": []
    },
    {
     "$id": "202",
     "kind": "enumvalue",
     "name": "Manual",
     "value": "Manual",
     "valueType": {
      "$id": "203",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "198"
     },
     "doc": "The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "The upgrade mode of the cluster when new Service Fabric runtime version is available.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "204",
   "kind": "enum",
   "name": "ManagedClusterUpgradeCadence",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ClusterUpgradeCadence",
   "valueType": {
    "$id": "205",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "206",
     "kind": "enumvalue",
     "name": "Wave0",
     "value": "Wave0",
     "valueType": {
      "$id": "207",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "204"
     },
     "doc": "Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters.",
     "decorators": []
    },
    {
     "$id": "208",
     "kind": "enumvalue",
     "name": "Wave1",
     "value": "Wave1",
     "valueType": {
      "$id": "209",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "204"
     },
     "doc": "Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters.",
     "decorators": []
    },
    {
     "$id": "210",
     "kind": "enumvalue",
     "name": "Wave2",
     "value": "Wave2",
     "valueType": {
      "$id": "211",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "204"
     },
     "doc": "Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "212",
   "kind": "enum",
   "name": "ManagedClusterAddOnFeature",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterAddOnFeature",
   "valueType": {
    "$id": "213",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "214",
     "kind": "enumvalue",
     "name": "DnsService",
     "value": "DnsService",
     "valueType": {
      "$id": "215",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "212"
     },
     "doc": "Dns service",
     "decorators": []
    },
    {
     "$id": "216",
     "kind": "enumvalue",
     "name": "BackupRestoreService",
     "value": "BackupRestoreService",
     "valueType": {
      "$id": "217",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "212"
     },
     "doc": "Backup and restore service",
     "decorators": []
    },
    {
     "$id": "218",
     "kind": "enumvalue",
     "name": "ResourceMonitorService",
     "value": "ResourceMonitorService",
     "valueType": {
      "$id": "219",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "212"
     },
     "doc": "Resource monitor service",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "Available cluster add-on features",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "220",
   "kind": "enum",
   "name": "ManagedClusterSubnetPrivateEndpointNetworkPoliciesState",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.PrivateEndpointNetworkPolicies",
   "valueType": {
    "$id": "221",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "222",
     "kind": "enumvalue",
     "name": "enabled",
     "value": "enabled",
     "valueType": {
      "$id": "223",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "220"
     },
     "doc": "Enable apply network policies on private end point in the subnet.",
     "decorators": []
    },
    {
     "$id": "224",
     "kind": "enumvalue",
     "name": "disabled",
     "value": "disabled",
     "valueType": {
      "$id": "225",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "220"
     },
     "doc": "Disable apply network policies on private end point in the subnet.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "Enable or Disable apply network policies on private end point in the subnet.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "226",
   "kind": "enum",
   "name": "ManagedClusterSubnetPrivateLinkServiceNetworkPoliciesState",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.PrivateLinkServiceNetworkPolicies",
   "valueType": {
    "$id": "227",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "228",
     "kind": "enumvalue",
     "name": "enabled",
     "value": "enabled",
     "valueType": {
      "$id": "229",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "226"
     },
     "doc": "Enable apply network policies on private link service in the subnet.",
     "decorators": []
    },
    {
     "$id": "230",
     "kind": "enumvalue",
     "name": "disabled",
     "value": "disabled",
     "valueType": {
      "$id": "231",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "226"
     },
     "doc": "Disable apply network policies on private link service in the subnet.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "Enable or Disable apply network policies on private link service in the subnet.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "232",
   "kind": "enum",
   "name": "ZonalUpdateMode",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ZonalUpdateMode",
   "valueType": {
    "$id": "233",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "234",
     "kind": "enumvalue",
     "name": "Standard",
     "value": "Standard",
     "valueType": {
      "$id": "235",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "232"
     },
     "doc": "The cluster will use 5 upgrade domains for Cross Az Node types.",
     "decorators": []
    },
    {
     "$id": "236",
     "kind": "enumvalue",
     "name": "Fast",
     "value": "Fast",
     "valueType": {
      "$id": "237",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "232"
     },
     "doc": "The cluster will use a maximum of 3 upgrade domains per zone instead of 5 for Cross Az Node types for faster deployments.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "Indicates the update mode for Cross Az clusters.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "238",
   "kind": "enum",
   "name": "AutoGeneratedDomainNameLabelScope",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AutoGeneratedDomainNameLabelScope",
   "valueType": {
    "$id": "239",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "240",
     "kind": "enumvalue",
     "name": "TenantReuse",
     "value": "TenantReuse",
     "valueType": {
      "$id": "241",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "238"
     },
     "doc": "TenantReuse allows for the same hash to be created if the resource is created in the same Tenant with the same resource name.",
     "decorators": []
    },
    {
     "$id": "242",
     "kind": "enumvalue",
     "name": "SubscriptionReuse",
     "value": "SubscriptionReuse",
     "valueType": {
      "$id": "243",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "238"
     },
     "doc": "SubscriptionReuse allows for the same hash to be created if the resource is created in the same Subscription with the same resource name.",
     "decorators": []
    },
    {
     "$id": "244",
     "kind": "enumvalue",
     "name": "ResourceGroupReuse",
     "value": "ResourceGroupReuse",
     "valueType": {
      "$id": "245",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "238"
     },
     "doc": "ResourceGroupReuse allows for the same hash to be created if the resource is created in the same Resource Group with the same resource name.",
     "decorators": []
    },
    {
     "$id": "246",
     "kind": "enumvalue",
     "name": "NoReuse",
     "value": "NoReuse",
     "valueType": {
      "$id": "247",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "238"
     },
     "doc": "NoReuse will create a new hash regardless of the Subscription, Resource Group, Tenant and Resource name.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "This enum is the entrypoint to using a certificate from a public CA for your cluster. This property was introduced to solve the\ndomain squatting problem with new domains. A domain name will be generated in the following format: {clustername}.{hash}.{regionname}.sfmcdomain.\nThe hash portion comes from Azure DNS' Deterministic Name Library. The library creates a hash using the cluster's Tenant, Subscription, Resource Group\nand Resource Name using the AutoGeneratedDomainNameLabelScope/reuse policy chosen.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "248",
   "kind": "enum",
   "name": "SkuName",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.SkuName",
   "valueType": {
    "$id": "249",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "250",
     "kind": "enumvalue",
     "name": "Basic",
     "value": "Basic",
     "valueType": {
      "$id": "251",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "248"
     },
     "doc": "Basic requires a minimum of 3 nodes and allows only 1 node type.",
     "decorators": []
    },
    {
     "$id": "252",
     "kind": "enumvalue",
     "name": "Standard",
     "value": "Standard",
     "valueType": {
      "$id": "253",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "248"
     },
     "doc": "Requires a minimum of 5 nodes and allows 1 or more node type.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "Sku Name.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "254",
   "kind": "enum",
   "name": "ServiceFabricManagedClusterOSType",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.OsType",
   "valueType": {
    "$id": "255",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "256",
     "kind": "enumvalue",
     "name": "Windows",
     "value": "Windows",
     "valueType": {
      "$id": "257",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "254"
     },
     "doc": "Indicates os is Windows.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "Cluster operating system, the default will be Windows",
   "isFixed": false,
   "isFlags": false,
   "usage": "Output,Json",
   "decorators": []
  },
  {
   "$id": "258",
   "kind": "enum",
   "name": "ManagedClusterVersionEnvironment",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterVersionEnvironment",
   "valueType": {
    "$id": "259",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "260",
     "kind": "enumvalue",
     "name": "Windows",
     "value": "Windows",
     "valueType": {
      "$id": "261",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "258"
     },
     "doc": "Indicates os is Windows.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "The operating system of the cluster. The default means all.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input",
   "decorators": []
  },
  {
   "$id": "262",
   "kind": "enum",
   "name": "ServiceKind",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceKind",
   "valueType": {
    "$id": "263",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "264",
     "kind": "enumvalue",
     "name": "Stateless",
     "value": "Stateless",
     "valueType": {
      "$id": "265",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "262"
     },
     "doc": "Does not use Service Fabric to make its state highly available or reliable. The value is 0.",
     "decorators": []
    },
    {
     "$id": "266",
     "kind": "enumvalue",
     "name": "Stateful",
     "value": "Stateful",
     "valueType": {
      "$id": "267",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "262"
     },
     "doc": "Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 1.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "The kind of service (Stateless or Stateful).",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "268",
   "kind": "enum",
   "name": "PartitionScheme",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.PartitionScheme",
   "valueType": {
    "$id": "269",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "270",
     "kind": "enumvalue",
     "name": "Singleton",
     "value": "Singleton",
     "valueType": {
      "$id": "271",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "268"
     },
     "doc": "Indicates that the partition is based on string names, and is a SingletonPartitionScheme object, The value is 0.",
     "decorators": []
    },
    {
     "$id": "272",
     "kind": "enumvalue",
     "name": "UniformInt64Range",
     "value": "UniformInt64Range",
     "valueType": {
      "$id": "273",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "268"
     },
     "doc": "Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionScheme object. The value is 1.",
     "decorators": []
    },
    {
     "$id": "274",
     "kind": "enumvalue",
     "name": "Named",
     "value": "Named",
     "valueType": {
      "$id": "275",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "268"
     },
     "doc": "Indicates that the partition is based on string names, and is a NamedPartitionScheme object. The value is 2.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "Enumerates the ways that a service can be partitioned.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "276",
   "kind": "enum",
   "name": "ManagedServicePackageActivationMode",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServicePackageActivationMode",
   "valueType": {
    "$id": "277",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "278",
     "kind": "enumvalue",
     "name": "SharedProcess",
     "value": "SharedProcess",
     "valueType": {
      "$id": "279",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "276"
     },
     "doc": "Indicates the application package activation mode will use shared process.",
     "decorators": []
    },
    {
     "$id": "280",
     "kind": "enumvalue",
     "name": "ExclusiveProcess",
     "value": "ExclusiveProcess",
     "valueType": {
      "$id": "281",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "276"
     },
     "doc": "Indicates the application package activation mode will use exclusive process.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "The activation Mode of the service package",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "282",
   "kind": "enum",
   "name": "ManagedServiceCorrelationScheme",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceCorrelationScheme",
   "valueType": {
    "$id": "283",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "284",
     "kind": "enumvalue",
     "name": "AlignedAffinity",
     "value": "AlignedAffinity",
     "valueType": {
      "$id": "285",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "282"
     },
     "doc": "Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 0.",
     "decorators": []
    },
    {
     "$id": "286",
     "kind": "enumvalue",
     "name": "NonAlignedAffinity",
     "value": "NonAlignedAffinity",
     "valueType": {
      "$id": "287",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "282"
     },
     "doc": "Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 1.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "The service correlation scheme.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "288",
   "kind": "enum",
   "name": "ManagedServiceLoadMetricWeight",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceLoadMetricWeight",
   "valueType": {
    "$id": "289",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "290",
     "kind": "enumvalue",
     "name": "Zero",
     "value": "Zero",
     "valueType": {
      "$id": "291",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "288"
     },
     "doc": "Disables resource balancing for this metric. This value is zero.",
     "decorators": []
    },
    {
     "$id": "292",
     "kind": "enumvalue",
     "name": "Low",
     "value": "Low",
     "valueType": {
      "$id": "293",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "288"
     },
     "doc": "Specifies the metric weight of the service load as Low. The value is 1.",
     "decorators": []
    },
    {
     "$id": "294",
     "kind": "enumvalue",
     "name": "Medium",
     "value": "Medium",
     "valueType": {
      "$id": "295",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "288"
     },
     "doc": "Specifies the metric weight of the service load as Medium. The value is 2.",
     "decorators": []
    },
    {
     "$id": "296",
     "kind": "enumvalue",
     "name": "High",
     "value": "High",
     "valueType": {
      "$id": "297",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "288"
     },
     "doc": "Specifies the metric weight of the service load as High. The value is 3.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "Determines the metric weight relative to the other metrics that are configured for this service. During runtime, if two metrics end up in conflict, the Cluster Resource Manager prefers the metric with the higher weight.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "298",
   "kind": "enum",
   "name": "ServicePlacementPolicyType",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServicePlacementPolicyType",
   "valueType": {
    "$id": "299",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "300",
     "kind": "enumvalue",
     "name": "InvalidDomain",
     "value": "InvalidDomain",
     "valueType": {
      "$id": "301",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "298"
     },
     "doc": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 0.",
     "decorators": []
    },
    {
     "$id": "302",
     "kind": "enumvalue",
     "name": "RequiredDomain",
     "value": "RequiredDomain",
     "valueType": {
      "$id": "303",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "298"
     },
     "doc": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 1.",
     "decorators": []
    },
    {
     "$id": "304",
     "kind": "enumvalue",
     "name": "PreferredPrimaryDomain",
     "value": "PreferredPrimaryDomain",
     "valueType": {
      "$id": "305",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "298"
     },
     "doc": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 2.",
     "decorators": []
    },
    {
     "$id": "306",
     "kind": "enumvalue",
     "name": "RequiredDomainDistribution",
     "value": "RequiredDomainDistribution",
     "valueType": {
      "$id": "307",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "298"
     },
     "doc": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 3.",
     "decorators": []
    },
    {
     "$id": "308",
     "kind": "enumvalue",
     "name": "NonPartiallyPlaceService",
     "value": "NonPartiallyPlaceService",
     "valueType": {
      "$id": "309",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "298"
     },
     "doc": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 4.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "The type of placement policy for a service fabric service. Following are the possible values.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "310",
   "kind": "enum",
   "name": "ServiceFabricManagedServiceMoveCost",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.MoveCost",
   "valueType": {
    "$id": "311",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "312",
     "kind": "enumvalue",
     "name": "Zero",
     "value": "Zero",
     "valueType": {
      "$id": "313",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "310"
     },
     "doc": "Zero move cost. This value is zero.",
     "decorators": []
    },
    {
     "$id": "314",
     "kind": "enumvalue",
     "name": "Low",
     "value": "Low",
     "valueType": {
      "$id": "315",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "310"
     },
     "doc": "Specifies the move cost of the service as Low. The value is 1.",
     "decorators": []
    },
    {
     "$id": "316",
     "kind": "enumvalue",
     "name": "Medium",
     "value": "Medium",
     "valueType": {
      "$id": "317",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "310"
     },
     "doc": "Specifies the move cost of the service as Medium. The value is 2.",
     "decorators": []
    },
    {
     "$id": "318",
     "kind": "enumvalue",
     "name": "High",
     "value": "High",
     "valueType": {
      "$id": "319",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "310"
     },
     "doc": "Specifies the move cost of the service as High. The value is 3.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "Specifies the move cost for the service.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "320",
   "kind": "enum",
   "name": "ServiceScalingMechanismKind",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceScalingMechanismKind",
   "valueType": {
    "$id": "321",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "322",
     "kind": "enumvalue",
     "name": "ScalePartitionInstanceCount",
     "value": "ScalePartitionInstanceCount",
     "valueType": {
      "$id": "323",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "320"
     },
     "doc": "Represents a scaling mechanism for adding or removing instances of stateless service partition. The value is 0.",
     "decorators": []
    },
    {
     "$id": "324",
     "kind": "enumvalue",
     "name": "AddRemoveIncrementalNamedPartition",
     "value": "AddRemoveIncrementalNamedPartition",
     "valueType": {
      "$id": "325",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "320"
     },
     "doc": "Represents a scaling mechanism for adding or removing named partitions of a stateless service. The value is 1.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "Enumerates the ways that a service can be partitioned.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "326",
   "kind": "enum",
   "name": "ServiceScalingTriggerKind",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceScalingTriggerKind",
   "valueType": {
    "$id": "327",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "328",
     "kind": "enumvalue",
     "name": "AveragePartitionLoadTrigger",
     "value": "AveragePartitionLoadTrigger",
     "valueType": {
      "$id": "329",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "326"
     },
     "doc": "Represents a scaling trigger related to an average load of a metric/resource of a partition. The value is 0.",
     "decorators": []
    },
    {
     "$id": "330",
     "kind": "enumvalue",
     "name": "AverageServiceLoadTrigger",
     "value": "AverageServiceLoadTrigger",
     "valueType": {
      "$id": "331",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "326"
     },
     "doc": "Represents a scaling policy related to an average load of a metric/resource of a service. The value is 1.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "Enumerates the ways that a service can be partitioned.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "332",
   "kind": "enum",
   "name": "PolicyViolationCompensationAction",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.FailureAction",
   "valueType": {
    "$id": "333",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "334",
     "kind": "enumvalue",
     "name": "Rollback",
     "value": "Rollback",
     "valueType": {
      "$id": "335",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "332"
     },
     "doc": "Indicates that a rollback of the upgrade will be performed by Service Fabric if the upgrade fails.",
     "decorators": []
    },
    {
     "$id": "336",
     "kind": "enumvalue",
     "name": "Manual",
     "value": "Manual",
     "valueType": {
      "$id": "337",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "332"
     },
     "doc": "Indicates that a manual repair will need to be performed by the administrator if the upgrade fails. Service Fabric will not proceed to the next upgrade domain automatically.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "The compensating action to perform when a Monitored upgrade encounters monitoring policy or health policy violations. Invalid indicates the failure action is invalid. Rollback specifies that the upgrade will start rolling back automatically. Manual indicates that the upgrade will switch to UnmonitoredManual upgrade mode.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "338",
   "kind": "enum",
   "name": "RollingUpgradeMode",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.RollingUpgradeMode",
   "valueType": {
    "$id": "339",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "340",
     "kind": "enumvalue",
     "name": "Monitored",
     "value": "Monitored",
     "valueType": {
      "$id": "341",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "338"
     },
     "doc": "The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 0.",
     "decorators": []
    },
    {
     "$id": "342",
     "kind": "enumvalue",
     "name": "UnmonitoredAuto",
     "value": "UnmonitoredAuto",
     "valueType": {
      "$id": "343",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "338"
     },
     "doc": "The upgrade will proceed automatically without performing any health monitoring. The value is 1.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "The mode used to monitor health during a rolling upgrade. The values are Monitored, and UnmonitoredAuto.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "344",
   "kind": "enum",
   "name": "ManagedIdentityType",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedIdentityType",
   "valueType": {
    "$id": "345",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "346",
     "kind": "enumvalue",
     "name": "None",
     "value": "None",
     "valueType": {
      "$id": "347",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "344"
     },
     "doc": "Indicates that no identity is associated with the resource.",
     "decorators": []
    },
    {
     "$id": "348",
     "kind": "enumvalue",
     "name": "SystemAssigned",
     "value": "SystemAssigned",
     "valueType": {
      "$id": "349",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "344"
     },
     "doc": "Indicates that system assigned identity is associated with the resource.",
     "decorators": []
    },
    {
     "$id": "350",
     "kind": "enumvalue",
     "name": "UserAssigned",
     "value": "UserAssigned",
     "valueType": {
      "$id": "351",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "344"
     },
     "doc": "Indicates that user assigned identity is associated with the resource.",
     "decorators": []
    },
    {
     "$id": "352",
     "kind": "enumvalue",
     "name": "SystemAssigned, UserAssigned",
     "value": "SystemAssigned, UserAssigned",
     "valueType": {
      "$id": "353",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "344"
     },
     "doc": "Indicates that both system assigned and user assigned identity are associated with the resource.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "The type of managed identity for the resource.",
   "isFixed": true,
   "isFlags": false,
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "decorators": []
  },
  {
   "$id": "354",
   "kind": "enum",
   "name": "Versions",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Versions",
   "valueType": {
    "$id": "355",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "356",
     "kind": "enumvalue",
     "name": "v2024_11_01_preview",
     "value": "2024-11-01-preview",
     "valueType": {
      "$id": "357",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "354"
     },
     "doc": "The 2024-11-01-preview API version.",
     "decorators": []
    }
   ],
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "The available API versions.",
   "isFixed": true,
   "isFlags": false,
   "usage": "ApiVersionEnum",
   "decorators": []
  }
 ],
 "models": [
  {
   "$id": "358",
   "kind": "model",
   "name": "LongRunningOperationResult",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.LongRunningOperationResult",
   "usage": "Output,Json",
   "doc": "Long running operation result.",
   "decorators": [],
   "properties": [
    {
     "$id": "359",
     "kind": "property",
     "name": "name",
     "serializedName": "name",
     "doc": "The name of the operation.",
     "type": {
      "$id": "360",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.LongRunningOperationResult.name",
     "serializationOptions": {
      "$id": "361",
      "json": {
       "$id": "362",
       "name": "name"
      }
     }
    },
    {
     "$id": "363",
     "kind": "property",
     "name": "startTime",
     "serializedName": "startTime",
     "doc": "The start time of the operation.",
     "type": {
      "$id": "364",
      "kind": "utcDateTime",
      "name": "utcDateTime",
      "encode": "rfc3339",
      "wireType": {
       "$id": "365",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.LongRunningOperationResult.startTime",
     "serializationOptions": {
      "$id": "366",
      "json": {
       "$id": "367",
       "name": "startTime"
      }
     }
    },
    {
     "$id": "368",
     "kind": "property",
     "name": "endTime",
     "serializedName": "endTime",
     "doc": "The end time of the operation.",
     "type": {
      "$id": "369",
      "kind": "utcDateTime",
      "name": "utcDateTime",
      "encode": "rfc3339",
      "wireType": {
       "$id": "370",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.LongRunningOperationResult.endTime",
     "serializationOptions": {
      "$id": "371",
      "json": {
       "$id": "372",
       "name": "endTime"
      }
     }
    },
    {
     "$id": "373",
     "kind": "property",
     "name": "percentComplete",
     "serializedName": "percentComplete",
     "doc": "The completion percentage of the operation.",
     "type": {
      "$id": "374",
      "kind": "float64",
      "name": "float64",
      "crossLanguageDefinitionId": "TypeSpec.float64",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.LongRunningOperationResult.percentComplete",
     "serializationOptions": {
      "$id": "375",
      "json": {
       "$id": "376",
       "name": "percentComplete"
      }
     }
    },
    {
     "$id": "377",
     "kind": "property",
     "name": "status",
     "serializedName": "status",
     "doc": "The status of the operation.",
     "type": {
      "$id": "378",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.LongRunningOperationResult.status",
     "serializationOptions": {
      "$id": "379",
      "json": {
       "$id": "380",
       "name": "status"
      }
     }
    },
    {
     "$id": "381",
     "kind": "property",
     "name": "error",
     "serializedName": "error",
     "doc": "The operation error.",
     "type": {
      "$id": "382",
      "kind": "model",
      "name": "ErrorModelError",
      "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
      "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ErrorModelError",
      "usage": "Output,Json",
      "doc": "The error details.",
      "decorators": [],
      "properties": [
       {
        "$id": "383",
        "kind": "property",
        "name": "code",
        "serializedName": "code",
        "doc": "The error code.",
        "type": {
         "$id": "384",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ErrorModelError.code",
        "serializationOptions": {
         "$id": "385",
         "json": {
          "$id": "386",
          "name": "code"
         }
        }
       },
       {
        "$id": "387",
        "kind": "property",
        "name": "message",
        "serializedName": "message",
        "doc": "The error message.",
        "type": {
         "$id": "388",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ErrorModelError.message",
        "serializationOptions": {
         "$id": "389",
         "json": {
          "$id": "390",
          "name": "message"
         }
        }
       }
      ]
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.LongRunningOperationResult.error",
     "serializationOptions": {
      "$id": "391",
      "json": {
       "$id": "392",
       "name": "error"
      }
     }
    }
   ]
  },
  {
   "$ref": "382"
  },
  {
   "$id": "393",
   "kind": "model",
   "name": "ErrorResponse",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Azure.ResourceManager.CommonTypes.ErrorResponse",
   "usage": "Error,Json,Exception",
   "doc": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
   "decorators": [],
   "properties": [
    {
     "$id": "394",
     "kind": "property",
     "name": "error",
     "serializedName": "error",
     "doc": "The error object.",
     "type": {
      "$id": "395",
      "kind": "model",
      "name": "ErrorDetail",
      "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
      "crossLanguageDefinitionId": "Azure.ResourceManager.CommonTypes.ErrorDetail",
      "usage": "Json,Exception,LroPolling",
      "doc": "The error detail.",
      "decorators": [],
      "properties": [
       {
        "$id": "396",
        "kind": "property",
        "name": "code",
        "serializedName": "code",
        "doc": "The error code.",
        "type": {
         "$id": "397",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": true,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Azure.ResourceManager.CommonTypes.ErrorDetail.code",
        "serializationOptions": {
         "$id": "398",
         "json": {
          "$id": "399",
          "name": "code"
         }
        }
       },
       {
        "$id": "400",
        "kind": "property",
        "name": "message",
        "serializedName": "message",
        "doc": "The error message.",
        "type": {
         "$id": "401",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": true,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Azure.ResourceManager.CommonTypes.ErrorDetail.message",
        "serializationOptions": {
         "$id": "402",
         "json": {
          "$id": "403",
          "name": "message"
         }
        }
       },
       {
        "$id": "404",
        "kind": "property",
        "name": "target",
        "serializedName": "target",
        "doc": "The error target.",
        "type": {
         "$id": "405",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": true,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Azure.ResourceManager.CommonTypes.ErrorDetail.target",
        "serializationOptions": {
         "$id": "406",
         "json": {
          "$id": "407",
          "name": "target"
         }
        }
       },
       {
        "$id": "408",
        "kind": "property",
        "name": "details",
        "serializedName": "details",
        "doc": "The error details.",
        "type": {
         "$id": "409",
         "kind": "array",
         "name": "ArrayErrorDetail",
         "valueType": {
          "$ref": "395"
         },
         "crossLanguageDefinitionId": "TypeSpec.Array",
         "decorators": []
        },
        "optional": true,
        "readOnly": true,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Azure.ResourceManager.CommonTypes.ErrorDetail.details",
        "serializationOptions": {
         "$id": "410",
         "json": {
          "$id": "411",
          "name": "details"
         }
        }
       },
       {
        "$id": "412",
        "kind": "property",
        "name": "additionalInfo",
        "serializedName": "additionalInfo",
        "doc": "The error additional info.",
        "type": {
         "$id": "413",
         "kind": "array",
         "name": "ArrayErrorAdditionalInfo",
         "valueType": {
          "$id": "414",
          "kind": "model",
          "name": "ErrorAdditionalInfo",
          "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
          "crossLanguageDefinitionId": "Azure.ResourceManager.CommonTypes.ErrorAdditionalInfo",
          "usage": "Json,Exception,LroPolling",
          "doc": "The resource management error additional info.",
          "decorators": [],
          "properties": [
           {
            "$id": "415",
            "kind": "property",
            "name": "type",
            "serializedName": "type",
            "doc": "The additional info type.",
            "type": {
             "$id": "416",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": true,
            "readOnly": true,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Azure.ResourceManager.CommonTypes.ErrorAdditionalInfo.type",
            "serializationOptions": {
             "$id": "417",
             "json": {
              "$id": "418",
              "name": "type"
             }
            }
           },
           {
            "$id": "419",
            "kind": "property",
            "name": "info",
            "serializedName": "info",
            "doc": "The additional info.",
            "type": {
             "$id": "420",
             "kind": "model",
             "name": "ErrorAdditionalInfoInfo",
             "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
             "crossLanguageDefinitionId": "Azure.ResourceManager.CommonTypes.ErrorAdditionalInfo.info.anonymous",
             "usage": "Json,Exception,LroPolling",
             "decorators": [],
             "properties": []
            },
            "optional": true,
            "readOnly": true,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Azure.ResourceManager.CommonTypes.ErrorAdditionalInfo.info",
            "serializationOptions": {
             "$id": "421",
             "json": {
              "$id": "422",
              "name": "info"
             }
            }
           }
          ]
         },
         "crossLanguageDefinitionId": "TypeSpec.Array",
         "decorators": []
        },
        "optional": true,
        "readOnly": true,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Azure.ResourceManager.CommonTypes.ErrorDetail.additionalInfo",
        "serializationOptions": {
         "$id": "423",
         "json": {
          "$id": "424",
          "name": "additionalInfo"
         }
        }
       }
      ]
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Azure.ResourceManager.CommonTypes.ErrorResponse.error",
     "serializationOptions": {
      "$id": "425",
      "json": {
       "$id": "426",
       "name": "error"
      }
     }
    }
   ]
  },
  {
   "$ref": "395"
  },
  {
   "$ref": "414"
  },
  {
   "$ref": "420"
  },
  {
   "$id": "427",
   "kind": "model",
   "name": "ArmOperationStatusResourceProvisioningState",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Azure.ResourceManager.ArmOperationStatus",
   "usage": "LroPolling",
   "doc": "Standard Azure Resource Manager operation status response",
   "decorators": [],
   "properties": [
    {
     "$id": "428",
     "kind": "property",
     "name": "status",
     "serializedName": "status",
     "doc": "The operation status",
     "type": {
      "$ref": "2"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Azure.ResourceManager.ArmOperationStatus.status",
     "serializationOptions": {
      "$id": "429",
      "json": {
       "$id": "430",
       "name": "status"
      }
     }
    },
    {
     "$id": "431",
     "kind": "property",
     "name": "name",
     "serializedName": "name",
     "doc": "The name of the  operationStatus resource",
     "type": {
      "$id": "432",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": true,
     "readOnly": true,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Azure.ResourceManager.ArmOperationStatus.name",
     "serializationOptions": {
      "$id": "433",
      "json": {
       "$id": "434",
       "name": "name"
      }
     }
    },
    {
     "$id": "435",
     "kind": "property",
     "name": "startTime",
     "serializedName": "startTime",
     "doc": "Operation start time",
     "type": {
      "$id": "436",
      "kind": "utcDateTime",
      "name": "utcDateTime",
      "encode": "rfc3339",
      "wireType": {
       "$id": "437",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
      "decorators": []
     },
     "optional": true,
     "readOnly": true,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Azure.ResourceManager.ArmOperationStatus.startTime",
     "serializationOptions": {
      "$id": "438",
      "json": {
       "$id": "439",
       "name": "startTime"
      }
     }
    },
    {
     "$id": "440",
     "kind": "property",
     "name": "endTime",
     "serializedName": "endTime",
     "doc": "Operation complete time",
     "type": {
      "$id": "441",
      "kind": "utcDateTime",
      "name": "utcDateTime",
      "encode": "rfc3339",
      "wireType": {
       "$id": "442",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
      "decorators": []
     },
     "optional": true,
     "readOnly": true,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Azure.ResourceManager.ArmOperationStatus.endTime",
     "serializationOptions": {
      "$id": "443",
      "json": {
       "$id": "444",
       "name": "endTime"
      }
     }
    },
    {
     "$id": "445",
     "kind": "property",
     "name": "percentComplete",
     "serializedName": "percentComplete",
     "doc": "The progress made toward completing the operation",
     "type": {
      "$id": "446",
      "kind": "float64",
      "name": "float64",
      "crossLanguageDefinitionId": "TypeSpec.float64",
      "decorators": []
     },
     "optional": true,
     "readOnly": true,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Azure.ResourceManager.ArmOperationStatus.percentComplete",
     "serializationOptions": {
      "$id": "447",
      "json": {
       "$id": "448",
       "name": "percentComplete"
      }
     }
    },
    {
     "$id": "449",
     "kind": "property",
     "name": "error",
     "serializedName": "error",
     "doc": "Errors that occurred if the operation ended with Canceled or Failed status",
     "type": {
      "$ref": "395"
     },
     "optional": true,
     "readOnly": true,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Azure.ResourceManager.ArmOperationStatus.error",
     "serializationOptions": {
      "$id": "450",
      "json": {
       "$id": "451",
       "name": "error"
      }
     }
    }
   ]
  },
  {
   "$id": "452",
   "kind": "model",
   "name": "NodeTypeListSkuResult",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeListSkuResult",
   "usage": "Output,Json",
   "doc": "Node type available sku list results",
   "decorators": [],
   "properties": [
    {
     "$id": "453",
     "kind": "property",
     "name": "value",
     "serializedName": "value",
     "doc": "The NodeTypeAvailableSku items on this page",
     "type": {
      "$id": "454",
      "kind": "array",
      "name": "ArrayNodeTypeAvailableSku",
      "valueType": {
       "$id": "455",
       "kind": "model",
       "name": "NodeTypeAvailableSku",
       "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeAvailableSku",
       "usage": "Output,Json",
       "doc": "Defines the type of sku available for a node type",
       "decorators": [],
       "properties": [
        {
         "$id": "456",
         "kind": "property",
         "name": "-|resource-type",
         "serializedName": "resourceType",
         "doc": "The type of resource the sku applies to. Value: Microsoft.ServiceFabric/managedClusters/nodeTypes.",
         "type": {
          "$id": "457",
          "kind": "string",
          "name": "armResourceType",
          "crossLanguageDefinitionId": "Azure.Core.armResourceType",
          "baseType": {
           "$id": "458",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "decorators": []
         },
         "optional": true,
         "readOnly": true,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeAvailableSku.resourceType",
         "serializationOptions": {
          "$id": "459",
          "json": {
           "$id": "460",
           "name": "resourceType"
          }
         }
        },
        {
         "$id": "461",
         "kind": "property",
         "name": "sku",
         "serializedName": "sku",
         "doc": "The supported SKU for a for node type.",
         "type": {
          "$id": "462",
          "kind": "model",
          "name": "NodeTypeSupportedSku",
          "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeSupportedSku",
          "usage": "Output,Json",
          "doc": "Describes a node type supported sku.",
          "decorators": [],
          "properties": [
           {
            "$id": "463",
            "kind": "property",
            "name": "name",
            "serializedName": "name",
            "doc": "The sku name.",
            "type": {
             "$id": "464",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": true,
            "readOnly": true,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeSupportedSku.name",
            "serializationOptions": {
             "$id": "465",
             "json": {
              "$id": "466",
              "name": "name"
             }
            }
           },
           {
            "$id": "467",
            "kind": "property",
            "name": "tier",
            "serializedName": "tier",
            "doc": "Specifies the tier of the node type. Possible Values: **Standard**",
            "type": {
             "$id": "468",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": true,
            "readOnly": true,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeSupportedSku.tier",
            "serializationOptions": {
             "$id": "469",
             "json": {
              "$id": "470",
              "name": "tier"
             }
            }
           }
          ]
         },
         "optional": true,
         "readOnly": true,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeAvailableSku.sku",
         "serializationOptions": {
          "$id": "471",
          "json": {
           "$id": "472",
           "name": "sku"
          }
         }
        },
        {
         "$id": "473",
         "kind": "property",
         "name": "capacity",
         "serializedName": "capacity",
         "doc": "Provides information about how the node count can be scaled.",
         "type": {
          "$id": "474",
          "kind": "model",
          "name": "NodeTypeSkuCapacity",
          "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeSkuCapacity",
          "usage": "Output,Json",
          "doc": "Provides information about how node type can be scaled.",
          "decorators": [],
          "properties": [
           {
            "$id": "475",
            "kind": "property",
            "name": "minimum",
            "serializedName": "minimum",
            "doc": "Lowest permitted node count in a node type.",
            "type": {
             "$id": "476",
             "kind": "int32",
             "name": "int32",
             "crossLanguageDefinitionId": "TypeSpec.int32",
             "decorators": []
            },
            "optional": true,
            "readOnly": true,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeSkuCapacity.minimum",
            "serializationOptions": {
             "$id": "477",
             "json": {
              "$id": "478",
              "name": "minimum"
             }
            }
           },
           {
            "$id": "479",
            "kind": "property",
            "name": "maximum",
            "serializedName": "maximum",
            "doc": "Highest permitted node count in a node type.",
            "type": {
             "$id": "480",
             "kind": "int32",
             "name": "int32",
             "crossLanguageDefinitionId": "TypeSpec.int32",
             "decorators": []
            },
            "optional": true,
            "readOnly": true,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeSkuCapacity.maximum",
            "serializationOptions": {
             "$id": "481",
             "json": {
              "$id": "482",
              "name": "maximum"
             }
            }
           },
           {
            "$id": "483",
            "kind": "property",
            "name": "default",
            "serializedName": "default",
            "doc": "Default node count in a node type.",
            "type": {
             "$id": "484",
             "kind": "int32",
             "name": "int32",
             "crossLanguageDefinitionId": "TypeSpec.int32",
             "decorators": []
            },
            "optional": true,
            "readOnly": true,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeSkuCapacity.default",
            "serializationOptions": {
             "$id": "485",
             "json": {
              "$id": "486",
              "name": "default"
             }
            }
           },
           {
            "$id": "487",
            "kind": "property",
            "name": "scaleType",
            "serializedName": "scaleType",
            "doc": "Node type capacity scale type.",
            "type": {
             "$ref": "10"
            },
            "optional": true,
            "readOnly": true,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeSkuCapacity.scaleType",
            "serializationOptions": {
             "$id": "488",
             "json": {
              "$id": "489",
              "name": "scaleType"
             }
            }
           }
          ]
         },
         "optional": true,
         "readOnly": true,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeAvailableSku.capacity",
         "serializationOptions": {
          "$id": "490",
          "json": {
           "$id": "491",
           "name": "capacity"
          }
         }
        }
       ]
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeListSkuResult.value",
     "serializationOptions": {
      "$id": "492",
      "json": {
       "$id": "493",
       "name": "value"
      }
     }
    },
    {
     "$id": "494",
     "kind": "property",
     "name": "nextLink",
     "serializedName": "nextLink",
     "doc": "The link to the next page of items",
     "type": {
      "$id": "495",
      "kind": "url",
      "name": "ResourceLocation",
      "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
      "baseType": {
       "$id": "496",
       "kind": "url",
       "name": "url",
       "crossLanguageDefinitionId": "TypeSpec.url",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeListSkuResult.nextLink",
     "serializationOptions": {
      "$id": "497",
      "json": {
       "$id": "498",
       "name": "nextLink"
      }
     }
    }
   ]
  },
  {
   "$ref": "455"
  },
  {
   "$ref": "462"
  },
  {
   "$ref": "474"
  },
  {
   "$id": "499",
   "kind": "model",
   "name": "ServiceFabricManagedNodeType",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeType",
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "doc": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster.",
   "decorators": [],
   "baseModel": {
    "$id": "500",
    "kind": "model",
    "name": "ProxyResource",
    "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
    "crossLanguageDefinitionId": "Azure.ResourceManager.CommonTypes.ProxyResource",
    "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
    "doc": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
    "decorators": [],
    "baseModel": {
     "$id": "501",
     "kind": "model",
     "name": "Resource",
     "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
     "crossLanguageDefinitionId": "Azure.ResourceManager.CommonTypes.Resource",
     "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
     "doc": "Common fields that are returned in the response for all Azure Resource Manager resources",
     "decorators": [],
     "properties": [
      {
       "$id": "502",
       "kind": "property",
       "name": "id",
       "serializedName": "id",
       "doc": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
       "type": {
        "$id": "503",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "optional": true,
       "readOnly": true,
       "discriminator": false,
       "flatten": false,
       "decorators": [],
       "crossLanguageDefinitionId": "Azure.ResourceManager.CommonTypes.Resource.id",
       "serializationOptions": {
        "$id": "504",
        "json": {
         "$id": "505",
         "name": "id"
        }
       }
      },
      {
       "$id": "506",
       "kind": "property",
       "name": "name",
       "serializedName": "name",
       "doc": "The name of the resource",
       "type": {
        "$id": "507",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "optional": true,
       "readOnly": true,
       "discriminator": false,
       "flatten": false,
       "decorators": [],
       "crossLanguageDefinitionId": "Azure.ResourceManager.CommonTypes.Resource.name",
       "serializationOptions": {
        "$id": "508",
        "json": {
         "$id": "509",
         "name": "name"
        }
       }
      },
      {
       "$id": "510",
       "kind": "property",
       "name": "type",
       "serializedName": "type",
       "doc": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
       "type": {
        "$id": "511",
        "kind": "string",
        "name": "armResourceType",
        "crossLanguageDefinitionId": "Azure.Core.armResourceType",
        "baseType": {
         "$id": "512",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "decorators": []
       },
       "optional": true,
       "readOnly": true,
       "discriminator": false,
       "flatten": false,
       "decorators": [],
       "crossLanguageDefinitionId": "Azure.ResourceManager.CommonTypes.Resource.type",
       "serializationOptions": {
        "$id": "513",
        "json": {
         "$id": "514",
         "name": "type"
        }
       }
      },
      {
       "$id": "515",
       "kind": "property",
       "name": "systemData",
       "serializedName": "systemData",
       "doc": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
       "type": {
        "$id": "516",
        "kind": "model",
        "name": "SystemData",
        "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
        "crossLanguageDefinitionId": "Azure.ResourceManager.CommonTypes.SystemData",
        "usage": "Output,Json,LroInitial,LroFinalEnvelope",
        "doc": "Metadata pertaining to creation and last modification of the resource.",
        "decorators": [],
        "properties": [
         {
          "$id": "517",
          "kind": "property",
          "name": "createdBy",
          "serializedName": "createdBy",
          "doc": "The identity that created the resource.",
          "type": {
           "$id": "518",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "Azure.ResourceManager.CommonTypes.SystemData.createdBy",
          "serializationOptions": {
           "$id": "519",
           "json": {
            "$id": "520",
            "name": "createdBy"
           }
          }
         },
         {
          "$id": "521",
          "kind": "property",
          "name": "createdByType",
          "serializedName": "createdByType",
          "doc": "The type of identity that created the resource.",
          "type": {
           "$ref": "122"
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "Azure.ResourceManager.CommonTypes.SystemData.createdByType",
          "serializationOptions": {
           "$id": "522",
           "json": {
            "$id": "523",
            "name": "createdByType"
           }
          }
         },
         {
          "$id": "524",
          "kind": "property",
          "name": "createdAt",
          "serializedName": "createdAt",
          "doc": "The timestamp of resource creation (UTC).",
          "type": {
           "$id": "525",
           "kind": "utcDateTime",
           "name": "utcDateTime",
           "encode": "rfc3339",
           "wireType": {
            "$id": "526",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
           "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "Azure.ResourceManager.CommonTypes.SystemData.createdAt",
          "serializationOptions": {
           "$id": "527",
           "json": {
            "$id": "528",
            "name": "createdAt"
           }
          }
         },
         {
          "$id": "529",
          "kind": "property",
          "name": "lastModifiedBy",
          "serializedName": "lastModifiedBy",
          "doc": "The identity that last modified the resource.",
          "type": {
           "$id": "530",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "Azure.ResourceManager.CommonTypes.SystemData.lastModifiedBy",
          "serializationOptions": {
           "$id": "531",
           "json": {
            "$id": "532",
            "name": "lastModifiedBy"
           }
          }
         },
         {
          "$id": "533",
          "kind": "property",
          "name": "lastModifiedByType",
          "serializedName": "lastModifiedByType",
          "doc": "The type of identity that last modified the resource.",
          "type": {
           "$ref": "122"
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "Azure.ResourceManager.CommonTypes.SystemData.lastModifiedByType",
          "serializationOptions": {
           "$id": "534",
           "json": {
            "$id": "535",
            "name": "lastModifiedByType"
           }
          }
         },
         {
          "$id": "536",
          "kind": "property",
          "name": "lastModifiedAt",
          "serializedName": "lastModifiedAt",
          "doc": "The timestamp of resource last modification (UTC)",
          "type": {
           "$id": "537",
           "kind": "utcDateTime",
           "name": "utcDateTime",
           "encode": "rfc3339",
           "wireType": {
            "$id": "538",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
           "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "Azure.ResourceManager.CommonTypes.SystemData.lastModifiedAt",
          "serializationOptions": {
           "$id": "539",
           "json": {
            "$id": "540",
            "name": "lastModifiedAt"
           }
          }
         }
        ]
       },
       "optional": true,
       "readOnly": true,
       "discriminator": false,
       "flatten": false,
       "decorators": [],
       "crossLanguageDefinitionId": "Azure.ResourceManager.CommonTypes.Resource.systemData",
       "serializationOptions": {
        "$id": "541",
        "json": {
         "$id": "542",
         "name": "systemData"
        }
       }
      }
     ]
    },
    "properties": []
   },
   "properties": [
    {
     "$id": "543",
     "kind": "property",
     "name": "properties",
     "serializedName": "properties",
     "doc": "The node type properties",
     "type": {
      "$id": "544",
      "kind": "model",
      "name": "NodeTypeProperties",
      "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
      "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties",
      "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
      "doc": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster.",
      "decorators": [],
      "properties": [
       {
        "$id": "545",
        "kind": "property",
        "name": "isPrimary",
        "serializedName": "isPrimary",
        "doc": "Indicates the Service Fabric system services for the cluster will run on this node type. This setting cannot be changed once the node type is created.",
        "type": {
         "$id": "546",
         "kind": "boolean",
         "name": "boolean",
         "crossLanguageDefinitionId": "TypeSpec.boolean",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.isPrimary",
        "serializationOptions": {
         "$id": "547",
         "json": {
          "$id": "548",
          "name": "isPrimary"
         }
        }
       },
       {
        "$id": "549",
        "kind": "property",
        "name": "vmInstanceCount",
        "serializedName": "vmInstanceCount",
        "doc": "The number of nodes in the node type. **Values:** -1 - Use when auto scale rules are configured or sku.capacity is defined 0 - Not supported >0 - Use for manual scale.",
        "type": {
         "$id": "550",
         "kind": "int32",
         "name": "int32",
         "crossLanguageDefinitionId": "TypeSpec.int32",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.vmInstanceCount",
        "serializationOptions": {
         "$id": "551",
         "json": {
          "$id": "552",
          "name": "vmInstanceCount"
         }
        }
       },
       {
        "$id": "553",
        "kind": "property",
        "name": "DataDiskSizeInGB",
        "serializedName": "dataDiskSizeGB",
        "doc": "Disk size for the managed disk attached to the vms on the node type in GBs.",
        "type": {
         "$id": "554",
         "kind": "int32",
         "name": "int32",
         "crossLanguageDefinitionId": "TypeSpec.int32",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.dataDiskSizeGB",
        "serializationOptions": {
         "$id": "555",
         "json": {
          "$id": "556",
          "name": "dataDiskSizeGB"
         }
        }
       },
       {
        "$id": "557",
        "kind": "property",
        "name": "dataDiskType",
        "serializedName": "dataDiskType",
        "doc": "Managed data disk type. Specifies the storage account type for the managed disk",
        "type": {
         "$ref": "18"
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.dataDiskType",
        "serializationOptions": {
         "$id": "558",
         "json": {
          "$id": "559",
          "name": "dataDiskType"
         }
        }
       },
       {
        "$id": "560",
        "kind": "property",
        "name": "dataDiskLetter",
        "serializedName": "dataDiskLetter",
        "doc": "Managed data disk letter. It can not use the reserved letter C or D and it can not change after created.",
        "type": {
         "$id": "561",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.dataDiskLetter",
        "serializationOptions": {
         "$id": "562",
         "json": {
          "$id": "563",
          "name": "dataDiskLetter"
         }
        }
       },
       {
        "$id": "564",
        "kind": "property",
        "name": "placementProperties",
        "serializedName": "placementProperties",
        "doc": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.",
        "type": {
         "$id": "565",
         "kind": "dict",
         "keyType": {
          "$id": "566",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "valueType": {
          "$id": "567",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.placementProperties",
        "serializationOptions": {
         "$id": "568",
         "json": {
          "$id": "569",
          "name": "placementProperties"
         }
        }
       },
       {
        "$id": "570",
        "kind": "property",
        "name": "capacities",
        "serializedName": "capacities",
        "doc": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.",
        "type": {
         "$id": "571",
         "kind": "dict",
         "keyType": {
          "$id": "572",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "valueType": {
          "$id": "573",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.capacities",
        "serializationOptions": {
         "$id": "574",
         "json": {
          "$id": "575",
          "name": "capacities"
         }
        }
       },
       {
        "$id": "576",
        "kind": "property",
        "name": "applicationPorts",
        "serializedName": "applicationPorts",
        "doc": "The range of ports from which cluster assigned port to Service Fabric applications.",
        "type": {
         "$id": "577",
         "kind": "model",
         "name": "EndpointRangeDescription",
         "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
         "crossLanguageDefinitionId": "Microsoft.ServiceFabric.EndpointRangeDescription",
         "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
         "doc": "Port range details",
         "decorators": [],
         "properties": [
          {
           "$id": "578",
           "kind": "property",
           "name": "startPort",
           "serializedName": "startPort",
           "doc": "Starting port of a range of ports",
           "type": {
            "$id": "579",
            "kind": "int32",
            "name": "int32",
            "crossLanguageDefinitionId": "TypeSpec.int32",
            "decorators": []
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Microsoft.ServiceFabric.EndpointRangeDescription.startPort",
           "serializationOptions": {
            "$id": "580",
            "json": {
             "$id": "581",
             "name": "startPort"
            }
           }
          },
          {
           "$id": "582",
           "kind": "property",
           "name": "endPort",
           "serializedName": "endPort",
           "doc": "End port of a range of ports",
           "type": {
            "$id": "583",
            "kind": "int32",
            "name": "int32",
            "crossLanguageDefinitionId": "TypeSpec.int32",
            "decorators": []
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Microsoft.ServiceFabric.EndpointRangeDescription.endPort",
           "serializationOptions": {
            "$id": "584",
            "json": {
             "$id": "585",
             "name": "endPort"
            }
           }
          }
         ]
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.applicationPorts",
        "serializationOptions": {
         "$id": "586",
         "json": {
          "$id": "587",
          "name": "applicationPorts"
         }
        }
       },
       {
        "$id": "588",
        "kind": "property",
        "name": "ephemeralPorts",
        "serializedName": "ephemeralPorts",
        "doc": "The range of ephemeral ports that nodes in this node type should be configured with.",
        "type": {
         "$ref": "577"
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.ephemeralPorts",
        "serializationOptions": {
         "$id": "589",
         "json": {
          "$id": "590",
          "name": "ephemeralPorts"
         }
        }
       },
       {
        "$id": "591",
        "kind": "property",
        "name": "vmSize",
        "serializedName": "vmSize",
        "doc": "The size of virtual machines in the pool. All virtual machines in a pool are the same size. For example, Standard_D3.",
        "type": {
         "$id": "592",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.vmSize",
        "serializationOptions": {
         "$id": "593",
         "json": {
          "$id": "594",
          "name": "vmSize"
         }
        }
       },
       {
        "$id": "595",
        "kind": "property",
        "name": "vmImagePublisher",
        "serializedName": "vmImagePublisher",
        "doc": "The publisher of the Azure Virtual Machines Marketplace image. For example, Canonical or MicrosoftWindowsServer.",
        "type": {
         "$id": "596",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.vmImagePublisher",
        "serializationOptions": {
         "$id": "597",
         "json": {
          "$id": "598",
          "name": "vmImagePublisher"
         }
        }
       },
       {
        "$id": "599",
        "kind": "property",
        "name": "vmImageOffer",
        "serializedName": "vmImageOffer",
        "doc": "The offer type of the Azure Virtual Machines Marketplace image. For example, UbuntuServer or WindowsServer.",
        "type": {
         "$id": "600",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.vmImageOffer",
        "serializationOptions": {
         "$id": "601",
         "json": {
          "$id": "602",
          "name": "vmImageOffer"
         }
        }
       },
       {
        "$id": "603",
        "kind": "property",
        "name": "vmImageSku",
        "serializedName": "vmImageSku",
        "doc": "The SKU of the Azure Virtual Machines Marketplace image. For example, 14.04.0-LTS or 2012-R2-Datacenter.",
        "type": {
         "$id": "604",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.vmImageSku",
        "serializationOptions": {
         "$id": "605",
         "json": {
          "$id": "606",
          "name": "vmImageSku"
         }
        }
       },
       {
        "$id": "607",
        "kind": "property",
        "name": "vmImageVersion",
        "serializedName": "vmImageVersion",
        "doc": "The version of the Azure Virtual Machines Marketplace image. A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'.",
        "type": {
         "$id": "608",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.vmImageVersion",
        "serializationOptions": {
         "$id": "609",
         "json": {
          "$id": "610",
          "name": "vmImageVersion"
         }
        }
       },
       {
        "$id": "611",
        "kind": "property",
        "name": "vmSecrets",
        "serializedName": "vmSecrets",
        "doc": "The secrets to install in the virtual machines.",
        "type": {
         "$id": "612",
         "kind": "array",
         "name": "ArrayVaultSecretGroup",
         "valueType": {
          "$id": "613",
          "kind": "model",
          "name": "NodeTypeVaultSecretGroup",
          "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VaultSecretGroup",
          "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
          "doc": "Specifies set of certificates that should be installed onto the virtual machines.",
          "decorators": [],
          "properties": [
           {
            "$id": "614",
            "kind": "property",
            "name": "sourceVault",
            "serializedName": "sourceVault",
            "doc": "The relative URL of the Key Vault containing all of the certificates in VaultCertificates.",
            "type": {
             "$id": "615",
             "kind": "model",
             "name": "SubResource",
             "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
             "crossLanguageDefinitionId": "Microsoft.ServiceFabric.SubResource",
             "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
             "doc": "Azure resource identifier.",
             "decorators": [],
             "properties": [
              {
               "$id": "616",
               "kind": "property",
               "name": "id",
               "serializedName": "id",
               "doc": "Azure resource identifier.",
               "type": {
                "$id": "617",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
               },
               "optional": true,
               "readOnly": false,
               "discriminator": false,
               "flatten": false,
               "decorators": [],
               "crossLanguageDefinitionId": "Microsoft.ServiceFabric.SubResource.id",
               "serializationOptions": {
                "$id": "618",
                "json": {
                 "$id": "619",
                 "name": "id"
                }
               }
              }
             ]
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VaultSecretGroup.sourceVault",
            "serializationOptions": {
             "$id": "620",
             "json": {
              "$id": "621",
              "name": "sourceVault"
             }
            }
           },
           {
            "$id": "622",
            "kind": "property",
            "name": "vaultCertificates",
            "serializedName": "vaultCertificates",
            "doc": "The list of key vault references in SourceVault which contain certificates.",
            "type": {
             "$id": "623",
             "kind": "array",
             "name": "ArrayVaultCertificate",
             "valueType": {
              "$id": "624",
              "kind": "model",
              "name": "NodeTypeVaultCertificate",
              "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
              "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VaultCertificate",
              "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
              "doc": "Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM.",
              "decorators": [],
              "properties": [
               {
                "$id": "625",
                "kind": "property",
                "name": "certificateUrl",
                "serializedName": "certificateUrl",
                "doc": "This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add).",
                "type": {
                 "$id": "626",
                 "kind": "url",
                 "name": "url",
                 "crossLanguageDefinitionId": "TypeSpec.url",
                 "decorators": []
                },
                "optional": false,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VaultCertificate.certificateUrl",
                "serializationOptions": {
                 "$id": "627",
                 "json": {
                  "$id": "628",
                  "name": "certificateUrl"
                 }
                }
               },
               {
                "$id": "629",
                "kind": "property",
                "name": "certificateStore",
                "serializedName": "certificateStore",
                "doc": "For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name {UppercaseThumbprint}.crt for the X509 certificate file and {UppercaseThumbprint}.prv for private key. Both of these files are .pem formatted.",
                "type": {
                 "$id": "630",
                 "kind": "string",
                 "name": "string",
                 "crossLanguageDefinitionId": "TypeSpec.string",
                 "decorators": []
                },
                "optional": false,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VaultCertificate.certificateStore",
                "serializationOptions": {
                 "$id": "631",
                 "json": {
                  "$id": "632",
                  "name": "certificateStore"
                 }
                }
               }
              ]
             },
             "crossLanguageDefinitionId": "TypeSpec.Array",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VaultSecretGroup.vaultCertificates",
            "serializationOptions": {
             "$id": "633",
             "json": {
              "$id": "634",
              "name": "vaultCertificates"
             }
            }
           }
          ]
         },
         "crossLanguageDefinitionId": "TypeSpec.Array",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.vmSecrets",
        "serializationOptions": {
         "$id": "635",
         "json": {
          "$id": "636",
          "name": "vmSecrets"
         }
        }
       },
       {
        "$id": "637",
        "kind": "property",
        "name": "vmExtensions",
        "serializedName": "vmExtensions",
        "doc": "Set of extensions that should be installed onto the virtual machines.",
        "type": {
         "$id": "638",
         "kind": "array",
         "name": "ArrayVmssExtension",
         "valueType": {
          "$id": "639",
          "kind": "model",
          "name": "NodeTypeVmssExtension",
          "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VMSSExtension",
          "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
          "doc": "Specifies set of extensions that should be installed onto the virtual machines.",
          "decorators": [],
          "properties": [
           {
            "$id": "640",
            "kind": "property",
            "name": "name",
            "serializedName": "name",
            "doc": "The name of the extension.",
            "type": {
             "$id": "641",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VMSSExtension.name",
            "serializationOptions": {
             "$id": "642",
             "json": {
              "$id": "643",
              "name": "name"
             }
            }
           },
           {
            "$id": "644",
            "kind": "property",
            "name": "properties",
            "serializedName": "properties",
            "doc": "Describes the properties of a Virtual Machine Scale Set Extension.",
            "type": {
             "$id": "645",
             "kind": "model",
             "name": "VmssExtensionProperties",
             "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
             "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VMSSExtensionProperties",
             "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
             "doc": "Describes the properties of a Virtual Machine Scale Set Extension.",
             "decorators": [],
             "properties": [
              {
               "$id": "646",
               "kind": "property",
               "name": "publisher",
               "serializedName": "publisher",
               "doc": "The name of the extension handler publisher.",
               "type": {
                "$id": "647",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
               },
               "optional": false,
               "readOnly": false,
               "discriminator": false,
               "flatten": false,
               "decorators": [],
               "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VMSSExtensionProperties.publisher",
               "serializationOptions": {
                "$id": "648",
                "json": {
                 "$id": "649",
                 "name": "publisher"
                }
               }
              },
              {
               "$id": "650",
               "kind": "property",
               "name": "type",
               "serializedName": "type",
               "doc": "Specifies the type of the extension; an example is \"CustomScriptExtension\".",
               "type": {
                "$id": "651",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
               },
               "optional": false,
               "readOnly": false,
               "discriminator": false,
               "flatten": false,
               "decorators": [],
               "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VMSSExtensionProperties.type",
               "serializationOptions": {
                "$id": "652",
                "json": {
                 "$id": "653",
                 "name": "type"
                }
               }
              },
              {
               "$id": "654",
               "kind": "property",
               "name": "typeHandlerVersion",
               "serializedName": "typeHandlerVersion",
               "doc": "Specifies the version of the script handler.",
               "type": {
                "$id": "655",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
               },
               "optional": false,
               "readOnly": false,
               "discriminator": false,
               "flatten": false,
               "decorators": [],
               "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VMSSExtensionProperties.typeHandlerVersion",
               "serializationOptions": {
                "$id": "656",
                "json": {
                 "$id": "657",
                 "name": "typeHandlerVersion"
                }
               }
              },
              {
               "$id": "658",
               "kind": "property",
               "name": "autoUpgradeMinorVersion",
               "serializedName": "autoUpgradeMinorVersion",
               "doc": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.",
               "type": {
                "$id": "659",
                "kind": "boolean",
                "name": "boolean",
                "crossLanguageDefinitionId": "TypeSpec.boolean",
                "decorators": []
               },
               "optional": true,
               "readOnly": false,
               "discriminator": false,
               "flatten": false,
               "decorators": [],
               "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VMSSExtensionProperties.autoUpgradeMinorVersion",
               "serializationOptions": {
                "$id": "660",
                "json": {
                 "$id": "661",
                 "name": "autoUpgradeMinorVersion"
                }
               }
              },
              {
               "$id": "662",
               "kind": "property",
               "name": "settings",
               "serializedName": "settings",
               "doc": "Json formatted public settings for the extension.",
               "type": {
                "$id": "663",
                "kind": "model",
                "name": "VMSSExtensionPropertiesSettings",
                "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
                "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VMSSExtensionProperties.settings.anonymous",
                "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
                "decorators": [],
                "properties": []
               },
               "optional": true,
               "readOnly": false,
               "discriminator": false,
               "flatten": false,
               "decorators": [],
               "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VMSSExtensionProperties.settings",
               "serializationOptions": {
                "$id": "664",
                "json": {
                 "$id": "665",
                 "name": "settings"
                }
               }
              },
              {
               "$id": "666",
               "kind": "property",
               "name": "protectedSettings",
               "serializedName": "protectedSettings",
               "doc": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.",
               "type": {
                "$id": "667",
                "kind": "model",
                "name": "VMSSExtensionPropertiesProtectedSettings",
                "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
                "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VMSSExtensionProperties.protectedSettings.anonymous",
                "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
                "decorators": [],
                "properties": []
               },
               "optional": true,
               "readOnly": false,
               "discriminator": false,
               "flatten": false,
               "decorators": [],
               "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VMSSExtensionProperties.protectedSettings",
               "serializationOptions": {
                "$id": "668",
                "json": {
                 "$id": "669",
                 "name": "protectedSettings"
                }
               }
              },
              {
               "$id": "670",
               "kind": "property",
               "name": "forceUpdateTag",
               "serializedName": "forceUpdateTag",
               "doc": "If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed.",
               "type": {
                "$id": "671",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
               },
               "optional": true,
               "readOnly": false,
               "discriminator": false,
               "flatten": false,
               "decorators": [],
               "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VMSSExtensionProperties.forceUpdateTag",
               "serializationOptions": {
                "$id": "672",
                "json": {
                 "$id": "673",
                 "name": "forceUpdateTag"
                }
               }
              },
              {
               "$id": "674",
               "kind": "property",
               "name": "provisionAfterExtensions",
               "serializedName": "provisionAfterExtensions",
               "doc": "Collection of extension names after which this extension needs to be provisioned.",
               "type": {
                "$id": "675",
                "kind": "array",
                "name": "Array",
                "valueType": {
                 "$id": "676",
                 "kind": "string",
                 "name": "string",
                 "crossLanguageDefinitionId": "TypeSpec.string",
                 "decorators": []
                },
                "crossLanguageDefinitionId": "TypeSpec.Array",
                "decorators": []
               },
               "optional": true,
               "readOnly": false,
               "discriminator": false,
               "flatten": false,
               "decorators": [],
               "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VMSSExtensionProperties.provisionAfterExtensions",
               "serializationOptions": {
                "$id": "677",
                "json": {
                 "$id": "678",
                 "name": "provisionAfterExtensions"
                }
               }
              },
              {
               "$id": "679",
               "kind": "property",
               "name": "provisioningState",
               "serializedName": "provisioningState",
               "doc": "The provisioning state, which only appears in the response.",
               "type": {
                "$id": "680",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
               },
               "optional": true,
               "readOnly": true,
               "discriminator": false,
               "flatten": false,
               "decorators": [],
               "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VMSSExtensionProperties.provisioningState",
               "serializationOptions": {
                "$id": "681",
                "json": {
                 "$id": "682",
                 "name": "provisioningState"
                }
               }
              },
              {
               "$id": "683",
               "kind": "property",
               "name": "IsAutomaticUpgradeEnabled",
               "serializedName": "enableAutomaticUpgrade",
               "doc": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available.",
               "type": {
                "$id": "684",
                "kind": "boolean",
                "name": "boolean",
                "crossLanguageDefinitionId": "TypeSpec.boolean",
                "decorators": []
               },
               "optional": true,
               "readOnly": false,
               "discriminator": false,
               "flatten": false,
               "decorators": [],
               "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VMSSExtensionProperties.enableAutomaticUpgrade",
               "serializationOptions": {
                "$id": "685",
                "json": {
                 "$id": "686",
                 "name": "enableAutomaticUpgrade"
                }
               }
              },
              {
               "$id": "687",
               "kind": "property",
               "name": "setupOrder",
               "serializedName": "setupOrder",
               "doc": "Indicates the setup order for the extension.",
               "type": {
                "$id": "688",
                "kind": "array",
                "name": "ArrayVmssExtensionSetupOrder",
                "valueType": {
                 "$ref": "32"
                },
                "crossLanguageDefinitionId": "TypeSpec.Array",
                "decorators": []
               },
               "optional": true,
               "readOnly": false,
               "discriminator": false,
               "flatten": false,
               "decorators": [],
               "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VMSSExtensionProperties.setupOrder",
               "serializationOptions": {
                "$id": "689",
                "json": {
                 "$id": "690",
                 "name": "setupOrder"
                }
               }
              }
             ]
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": true,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VMSSExtension.properties",
            "serializationOptions": {
             "$id": "691",
             "json": {
              "$id": "692",
              "name": "properties"
             }
            }
           }
          ]
         },
         "crossLanguageDefinitionId": "TypeSpec.Array",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.vmExtensions",
        "serializationOptions": {
         "$id": "693",
         "json": {
          "$id": "694",
          "name": "vmExtensions"
         }
        }
       },
       {
        "$id": "695",
        "kind": "property",
        "name": "vmManagedIdentity",
        "serializedName": "vmManagedIdentity",
        "doc": "Identities to assign to the virtual machine scale set under the node type.",
        "type": {
         "$id": "696",
         "kind": "model",
         "name": "VmManagedIdentity",
         "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
         "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VmManagedIdentity",
         "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
         "doc": "Identities for the virtual machine scale set under the node type.",
         "decorators": [],
         "properties": [
          {
           "$id": "697",
           "kind": "property",
           "name": "-|arm-id",
           "serializedName": "userAssignedIdentities",
           "doc": "The list of user identities associated with the virtual machine scale set under the node type. Each entry will be an ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
           "type": {
            "$id": "698",
            "kind": "array",
            "name": "Array",
            "valueType": {
             "$id": "699",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "crossLanguageDefinitionId": "TypeSpec.Array",
            "decorators": []
           },
           "optional": true,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VmManagedIdentity.userAssignedIdentities",
           "serializationOptions": {
            "$id": "700",
            "json": {
             "$id": "701",
             "name": "userAssignedIdentities"
            }
           }
          }
         ]
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.vmManagedIdentity",
        "serializationOptions": {
         "$id": "702",
         "json": {
          "$id": "703",
          "name": "vmManagedIdentity"
         }
        }
       },
       {
        "$id": "704",
        "kind": "property",
        "name": "isStateless",
        "serializedName": "isStateless",
        "doc": "Indicates if the node type can only host Stateless workloads.",
        "type": {
         "$id": "705",
         "kind": "boolean",
         "name": "boolean",
         "crossLanguageDefinitionId": "TypeSpec.boolean",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.isStateless",
        "serializationOptions": {
         "$id": "706",
         "json": {
          "$id": "707",
          "name": "isStateless"
         }
        }
       },
       {
        "$id": "708",
        "kind": "property",
        "name": "HasMultiplePlacementGroups",
        "serializedName": "multiplePlacementGroups",
        "doc": "Indicates if scale set associated with the node type can be composed of multiple placement groups.",
        "type": {
         "$id": "709",
         "kind": "boolean",
         "name": "boolean",
         "crossLanguageDefinitionId": "TypeSpec.boolean",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.multiplePlacementGroups",
        "serializationOptions": {
         "$id": "710",
         "json": {
          "$id": "711",
          "name": "multiplePlacementGroups"
         }
        }
       },
       {
        "$id": "712",
        "kind": "property",
        "name": "frontendConfigurations",
        "serializedName": "frontendConfigurations",
        "doc": "Indicates the node type uses its own frontend configurations instead of the default one for the cluster. This setting can only be specified for non-primary node types and can not be added or removed after the node type is created.",
        "type": {
         "$id": "713",
         "kind": "array",
         "name": "ArrayFrontendConfiguration",
         "valueType": {
          "$id": "714",
          "kind": "model",
          "name": "NodeTypeFrontendConfiguration",
          "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.FrontendConfiguration",
          "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
          "doc": "Describes the frontend configurations for the node type.",
          "decorators": [],
          "properties": [
           {
            "$id": "715",
            "kind": "property",
            "name": "ipAddressType",
            "serializedName": "ipAddressType",
            "doc": "The IP address type of this frontend configuration. If omitted the default value is IPv4.",
            "type": {
             "$ref": "36"
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.FrontendConfiguration.ipAddressType",
            "serializationOptions": {
             "$id": "716",
             "json": {
              "$id": "717",
              "name": "ipAddressType"
             }
            }
           },
           {
            "$id": "718",
            "kind": "property",
            "name": "loadBalancerBackendAddressPoolId",
            "serializedName": "loadBalancerBackendAddressPoolId",
            "doc": "The resource Id of the Load Balancer backend address pool that the VM instances of the node type are associated with. The format of the resource Id is '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/backendAddressPools/{backendAddressPoolName}'.",
            "type": {
             "$id": "719",
             "kind": "string",
             "name": "armResourceIdentifier",
             "crossLanguageDefinitionId": "Azure.Core.armResourceIdentifier",
             "baseType": {
              "$id": "720",
              "kind": "string",
              "name": "string",
              "crossLanguageDefinitionId": "TypeSpec.string",
              "decorators": []
             },
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.FrontendConfiguration.loadBalancerBackendAddressPoolId",
            "serializationOptions": {
             "$id": "721",
             "json": {
              "$id": "722",
              "name": "loadBalancerBackendAddressPoolId"
             }
            }
           },
           {
            "$id": "723",
            "kind": "property",
            "name": "loadBalancerInboundNatPoolId",
            "serializedName": "loadBalancerInboundNatPoolId",
            "doc": "The resource Id of the Load Balancer inbound NAT pool that the VM instances of the node type are associated with. The format of the resource Id is '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/inboundNatPools/{inboundNatPoolName}'.",
            "type": {
             "$id": "724",
             "kind": "string",
             "name": "armResourceIdentifier",
             "crossLanguageDefinitionId": "Azure.Core.armResourceIdentifier",
             "baseType": {
              "$id": "725",
              "kind": "string",
              "name": "string",
              "crossLanguageDefinitionId": "TypeSpec.string",
              "decorators": []
             },
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.FrontendConfiguration.loadBalancerInboundNatPoolId",
            "serializationOptions": {
             "$id": "726",
             "json": {
              "$id": "727",
              "name": "loadBalancerInboundNatPoolId"
             }
            }
           },
           {
            "$id": "728",
            "kind": "property",
            "name": "applicationGatewayBackendAddressPoolId",
            "serializedName": "applicationGatewayBackendAddressPoolId",
            "doc": "The resource Id of application gateway backend address pool. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/backendAddressPools/{backendAddressPoolName}'.",
            "type": {
             "$id": "729",
             "kind": "string",
             "name": "armResourceIdentifier",
             "crossLanguageDefinitionId": "Azure.Core.armResourceIdentifier",
             "baseType": {
              "$id": "730",
              "kind": "string",
              "name": "string",
              "crossLanguageDefinitionId": "TypeSpec.string",
              "decorators": []
             },
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.FrontendConfiguration.applicationGatewayBackendAddressPoolId",
            "serializationOptions": {
             "$id": "731",
             "json": {
              "$id": "732",
              "name": "applicationGatewayBackendAddressPoolId"
             }
            }
           }
          ]
         },
         "crossLanguageDefinitionId": "TypeSpec.Array",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.frontendConfigurations",
        "serializationOptions": {
         "$id": "733",
         "json": {
          "$id": "734",
          "name": "frontendConfigurations"
         }
        }
       },
       {
        "$id": "735",
        "kind": "property",
        "name": "networkSecurityRules",
        "serializedName": "networkSecurityRules",
        "doc": "The Network Security Rules for this node type. This setting can only be specified for node types that are configured with frontend configurations.",
        "type": {
         "$id": "736",
         "kind": "array",
         "name": "ArrayNetworkSecurityRule",
         "valueType": {
          "$id": "737",
          "kind": "model",
          "name": "ServiceFabricManagedNetworkSecurityRule",
          "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NetworkSecurityRule",
          "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
          "doc": "Describes a network security rule.",
          "decorators": [],
          "properties": [
           {
            "$id": "738",
            "kind": "property",
            "name": "name",
            "serializedName": "name",
            "doc": "Network security rule name.",
            "type": {
             "$id": "739",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NetworkSecurityRule.name",
            "serializationOptions": {
             "$id": "740",
             "json": {
              "$id": "741",
              "name": "name"
             }
            }
           },
           {
            "$id": "742",
            "kind": "property",
            "name": "description",
            "serializedName": "description",
            "doc": "Network security rule description.",
            "type": {
             "$id": "743",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NetworkSecurityRule.description",
            "serializationOptions": {
             "$id": "744",
             "json": {
              "$id": "745",
              "name": "description"
             }
            }
           },
           {
            "$id": "746",
            "kind": "property",
            "name": "protocol",
            "serializedName": "protocol",
            "doc": "Network protocol this rule applies to.",
            "type": {
             "$ref": "42"
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NetworkSecurityRule.protocol",
            "serializationOptions": {
             "$id": "747",
             "json": {
              "$id": "748",
              "name": "protocol"
             }
            }
           },
           {
            "$id": "749",
            "kind": "property",
            "name": "sourceAddressPrefixes",
            "serializedName": "sourceAddressPrefixes",
            "doc": "The CIDR or source IP ranges.",
            "type": {
             "$id": "750",
             "kind": "array",
             "name": "Array",
             "valueType": {
              "$id": "751",
              "kind": "string",
              "name": "string",
              "crossLanguageDefinitionId": "TypeSpec.string",
              "decorators": []
             },
             "crossLanguageDefinitionId": "TypeSpec.Array",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NetworkSecurityRule.sourceAddressPrefixes",
            "serializationOptions": {
             "$id": "752",
             "json": {
              "$id": "753",
              "name": "sourceAddressPrefixes"
             }
            }
           },
           {
            "$id": "754",
            "kind": "property",
            "name": "destinationAddressPrefixes",
            "serializedName": "destinationAddressPrefixes",
            "doc": "The destination address prefixes. CIDR or destination IP ranges.",
            "type": {
             "$id": "755",
             "kind": "array",
             "name": "Array",
             "valueType": {
              "$id": "756",
              "kind": "string",
              "name": "string",
              "crossLanguageDefinitionId": "TypeSpec.string",
              "decorators": []
             },
             "crossLanguageDefinitionId": "TypeSpec.Array",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NetworkSecurityRule.destinationAddressPrefixes",
            "serializationOptions": {
             "$id": "757",
             "json": {
              "$id": "758",
              "name": "destinationAddressPrefixes"
             }
            }
           },
           {
            "$id": "759",
            "kind": "property",
            "name": "sourcePortRanges",
            "serializedName": "sourcePortRanges",
            "doc": "The source port ranges.",
            "type": {
             "$id": "760",
             "kind": "array",
             "name": "Array",
             "valueType": {
              "$id": "761",
              "kind": "string",
              "name": "string",
              "crossLanguageDefinitionId": "TypeSpec.string",
              "decorators": []
             },
             "crossLanguageDefinitionId": "TypeSpec.Array",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NetworkSecurityRule.sourcePortRanges",
            "serializationOptions": {
             "$id": "762",
             "json": {
              "$id": "763",
              "name": "sourcePortRanges"
             }
            }
           },
           {
            "$id": "764",
            "kind": "property",
            "name": "destinationPortRanges",
            "serializedName": "destinationPortRanges",
            "doc": "The destination port ranges.",
            "type": {
             "$id": "765",
             "kind": "array",
             "name": "Array",
             "valueType": {
              "$id": "766",
              "kind": "string",
              "name": "string",
              "crossLanguageDefinitionId": "TypeSpec.string",
              "decorators": []
             },
             "crossLanguageDefinitionId": "TypeSpec.Array",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NetworkSecurityRule.destinationPortRanges",
            "serializationOptions": {
             "$id": "767",
             "json": {
              "$id": "768",
              "name": "destinationPortRanges"
             }
            }
           },
           {
            "$id": "769",
            "kind": "property",
            "name": "sourceAddressPrefix",
            "serializedName": "sourceAddressPrefix",
            "doc": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.",
            "type": {
             "$id": "770",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NetworkSecurityRule.sourceAddressPrefix",
            "serializationOptions": {
             "$id": "771",
             "json": {
              "$id": "772",
              "name": "sourceAddressPrefix"
             }
            }
           },
           {
            "$id": "773",
            "kind": "property",
            "name": "destinationAddressPrefix",
            "serializedName": "destinationAddressPrefix",
            "doc": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.",
            "type": {
             "$id": "774",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NetworkSecurityRule.destinationAddressPrefix",
            "serializationOptions": {
             "$id": "775",
             "json": {
              "$id": "776",
              "name": "destinationAddressPrefix"
             }
            }
           },
           {
            "$id": "777",
            "kind": "property",
            "name": "sourcePortRange",
            "serializedName": "sourcePortRange",
            "doc": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.",
            "type": {
             "$id": "778",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NetworkSecurityRule.sourcePortRange",
            "serializationOptions": {
             "$id": "779",
             "json": {
              "$id": "780",
              "name": "sourcePortRange"
             }
            }
           },
           {
            "$id": "781",
            "kind": "property",
            "name": "destinationPortRange",
            "serializedName": "destinationPortRange",
            "doc": "he destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.",
            "type": {
             "$id": "782",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NetworkSecurityRule.destinationPortRange",
            "serializationOptions": {
             "$id": "783",
             "json": {
              "$id": "784",
              "name": "destinationPortRange"
             }
            }
           },
           {
            "$id": "785",
            "kind": "property",
            "name": "access",
            "serializedName": "access",
            "doc": "The network traffic is allowed or denied.",
            "type": {
             "$ref": "58"
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NetworkSecurityRule.access",
            "serializationOptions": {
             "$id": "786",
             "json": {
              "$id": "787",
              "name": "access"
             }
            }
           },
           {
            "$id": "788",
            "kind": "property",
            "name": "priority",
            "serializedName": "priority",
            "doc": "The priority of the rule. The value can be in the range 1000 to 3000. Values outside this range are reserved for Service Fabric ManagerCluster Resource Provider. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
            "type": {
             "$id": "789",
             "kind": "int32",
             "name": "int32",
             "crossLanguageDefinitionId": "TypeSpec.int32",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NetworkSecurityRule.priority",
            "serializationOptions": {
             "$id": "790",
             "json": {
              "$id": "791",
              "name": "priority"
             }
            }
           },
           {
            "$id": "792",
            "kind": "property",
            "name": "direction",
            "serializedName": "direction",
            "doc": "Network security rule direction.",
            "type": {
             "$ref": "64"
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NetworkSecurityRule.direction",
            "serializationOptions": {
             "$id": "793",
             "json": {
              "$id": "794",
              "name": "direction"
             }
            }
           }
          ]
         },
         "crossLanguageDefinitionId": "TypeSpec.Array",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.networkSecurityRules",
        "serializationOptions": {
         "$id": "795",
         "json": {
          "$id": "796",
          "name": "networkSecurityRules"
         }
        }
       },
       {
        "$id": "797",
        "kind": "property",
        "name": "additionalDataDisks",
        "serializedName": "additionalDataDisks",
        "doc": "Additional managed data disks.",
        "type": {
         "$id": "798",
         "kind": "array",
         "name": "ArrayVmssDataDisk",
         "valueType": {
          "$id": "799",
          "kind": "model",
          "name": "NodeTypeVmssDataDisk",
          "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VmssDataDisk",
          "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
          "doc": "Managed data disk description.",
          "decorators": [],
          "properties": [
           {
            "$id": "800",
            "kind": "property",
            "name": "lun",
            "serializedName": "lun",
            "doc": "Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM. Lun 0 is reserved for the service fabric data disk.",
            "type": {
             "$id": "801",
             "kind": "int32",
             "name": "int32",
             "crossLanguageDefinitionId": "TypeSpec.int32",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VmssDataDisk.lun",
            "serializationOptions": {
             "$id": "802",
             "json": {
              "$id": "803",
              "name": "lun"
             }
            }
           },
           {
            "$id": "804",
            "kind": "property",
            "name": "DiskSizeInGB",
            "serializedName": "diskSizeGB",
            "doc": "Disk size for each vm in the node type in GBs.",
            "type": {
             "$id": "805",
             "kind": "int32",
             "name": "int32",
             "crossLanguageDefinitionId": "TypeSpec.int32",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VmssDataDisk.diskSizeGB",
            "serializationOptions": {
             "$id": "806",
             "json": {
              "$id": "807",
              "name": "diskSizeGB"
             }
            }
           },
           {
            "$id": "808",
            "kind": "property",
            "name": "diskType",
            "serializedName": "diskType",
            "doc": "Managed data disk type. Specifies the storage account type for the managed disk",
            "type": {
             "$ref": "18"
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VmssDataDisk.diskType",
            "serializationOptions": {
             "$id": "809",
             "json": {
              "$id": "810",
              "name": "diskType"
             }
            }
           },
           {
            "$id": "811",
            "kind": "property",
            "name": "diskLetter",
            "serializedName": "diskLetter",
            "doc": "Managed data disk letter. It can not use the reserved letter C or D and it can not change after created.",
            "type": {
             "$id": "812",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VmssDataDisk.diskLetter",
            "serializationOptions": {
             "$id": "813",
             "json": {
              "$id": "814",
              "name": "diskLetter"
             }
            }
           }
          ]
         },
         "crossLanguageDefinitionId": "TypeSpec.Array",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.additionalDataDisks",
        "serializationOptions": {
         "$id": "815",
         "json": {
          "$id": "816",
          "name": "additionalDataDisks"
         }
        }
       },
       {
        "$id": "817",
        "kind": "property",
        "name": "IsEncryptionAtHostEnabled",
        "serializedName": "enableEncryptionAtHost",
        "doc": "Enable or disable the Host Encryption for the virtual machines on the node type. This will enable the encryption for all the disks including Resource/Temp disk at host itself. Default: The Encryption at host will be disabled unless this property is set to true for the resource.",
        "type": {
         "$id": "818",
         "kind": "boolean",
         "name": "boolean",
         "crossLanguageDefinitionId": "TypeSpec.boolean",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.enableEncryptionAtHost",
        "serializationOptions": {
         "$id": "819",
         "json": {
          "$id": "820",
          "name": "enableEncryptionAtHost"
         }
        }
       },
       {
        "$id": "821",
        "kind": "property",
        "name": "provisioningState",
        "serializedName": "provisioningState",
        "doc": "The provisioning state of the node type resource.",
        "type": {
         "$ref": "70"
        },
        "optional": true,
        "readOnly": true,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.provisioningState",
        "serializationOptions": {
         "$id": "822",
         "json": {
          "$id": "823",
          "name": "provisioningState"
         }
        }
       },
       {
        "$id": "824",
        "kind": "property",
        "name": "IsAcceleratedNetworkingEnabled",
        "serializedName": "enableAcceleratedNetworking",
        "doc": "Specifies whether the network interface is accelerated networking-enabled.",
        "type": {
         "$id": "825",
         "kind": "boolean",
         "name": "boolean",
         "crossLanguageDefinitionId": "TypeSpec.boolean",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.enableAcceleratedNetworking",
        "serializationOptions": {
         "$id": "826",
         "json": {
          "$id": "827",
          "name": "enableAcceleratedNetworking"
         }
        }
       },
       {
        "$id": "828",
        "kind": "property",
        "name": "useDefaultPublicLoadBalancer",
        "serializedName": "useDefaultPublicLoadBalancer",
        "doc": "Specifies whether the use public load balancer. If not specified and the node type doesn't have its own frontend configuration, it will be attached to the default load balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is true, then the frontend has to be an Internal Load Balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is false or not set, then the custom load balancer must include a public load balancer to provide outbound connectivity.",
        "type": {
         "$id": "829",
         "kind": "boolean",
         "name": "boolean",
         "crossLanguageDefinitionId": "TypeSpec.boolean",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.useDefaultPublicLoadBalancer",
        "serializationOptions": {
         "$id": "830",
         "json": {
          "$id": "831",
          "name": "useDefaultPublicLoadBalancer"
         }
        }
       },
       {
        "$id": "832",
        "kind": "property",
        "name": "useTempDataDisk",
        "serializedName": "useTempDataDisk",
        "doc": "Specifies whether to use the temporary disk for the service fabric data root, in which case no managed data disk will be attached and the temporary disk will be used. It is only allowed for stateless node types.",
        "type": {
         "$id": "833",
         "kind": "boolean",
         "name": "boolean",
         "crossLanguageDefinitionId": "TypeSpec.boolean",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.useTempDataDisk",
        "serializationOptions": {
         "$id": "834",
         "json": {
          "$id": "835",
          "name": "useTempDataDisk"
         }
        }
       },
       {
        "$id": "836",
        "kind": "property",
        "name": "IsOverProvisioningEnabled",
        "serializedName": "enableOverProvisioning",
        "doc": "Specifies whether the node type should be overprovisioned. It is only allowed for stateless node types.",
        "type": {
         "$id": "837",
         "kind": "boolean",
         "name": "boolean",
         "crossLanguageDefinitionId": "TypeSpec.boolean",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.enableOverProvisioning",
        "serializationOptions": {
         "$id": "838",
         "json": {
          "$id": "839",
          "name": "enableOverProvisioning"
         }
        }
       },
       {
        "$id": "840",
        "kind": "property",
        "name": "zones",
        "serializedName": "zones",
        "doc": "Specifies the availability zones where the node type would span across. If the cluster is not spanning across availability zones, initiates az migration for the cluster.",
        "type": {
         "$id": "841",
         "kind": "array",
         "name": "Array",
         "valueType": {
          "$id": "842",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "crossLanguageDefinitionId": "TypeSpec.Array",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.zones",
        "serializationOptions": {
         "$id": "843",
         "json": {
          "$id": "844",
          "name": "zones"
         }
        }
       },
       {
        "$id": "845",
        "kind": "property",
        "name": "isSpotVM",
        "serializedName": "isSpotVM",
        "doc": "Indicates whether the node type will be Spot Virtual Machines. Azure will allocate the VMs if there is capacity available and the VMs can be evicted at any time.",
        "type": {
         "$id": "846",
         "kind": "boolean",
         "name": "boolean",
         "crossLanguageDefinitionId": "TypeSpec.boolean",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.isSpotVM",
        "serializationOptions": {
         "$id": "847",
         "json": {
          "$id": "848",
          "name": "isSpotVM"
         }
        }
       },
       {
        "$id": "849",
        "kind": "property",
        "name": "hostGroupId",
        "serializedName": "hostGroupId",
        "doc": "Specifies the full host group resource Id. This property is used for deploying on azure dedicated hosts.",
        "type": {
         "$id": "850",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.hostGroupId",
        "serializationOptions": {
         "$id": "851",
         "json": {
          "$id": "852",
          "name": "hostGroupId"
         }
        }
       },
       {
        "$id": "853",
        "kind": "property",
        "name": "useEphemeralOSDisk",
        "serializedName": "useEphemeralOSDisk",
        "doc": "Indicates whether to use ephemeral os disk. The sku selected on the vmSize property needs to support this feature.",
        "type": {
         "$id": "854",
         "kind": "boolean",
         "name": "boolean",
         "crossLanguageDefinitionId": "TypeSpec.boolean",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.useEphemeralOSDisk",
        "serializationOptions": {
         "$id": "855",
         "json": {
          "$id": "856",
          "name": "useEphemeralOSDisk"
         }
        }
       },
       {
        "$id": "857",
        "kind": "property",
        "name": "spotRestoreTimeout",
        "serializedName": "spotRestoreTimeout",
        "doc": "Indicates the time duration after which the platform will not try to restore the VMSS SPOT instances specified as ISO 8601.",
        "type": {
         "$id": "858",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.spotRestoreTimeout",
        "serializationOptions": {
         "$id": "859",
         "json": {
          "$id": "860",
          "name": "spotRestoreTimeout"
         }
        }
       },
       {
        "$id": "861",
        "kind": "property",
        "name": "evictionPolicy",
        "serializedName": "evictionPolicy",
        "doc": "Specifies the eviction policy for virtual machines in a SPOT node type. Default is Delete.",
        "type": {
         "$ref": "92"
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.evictionPolicy",
        "serializationOptions": {
         "$id": "862",
         "json": {
          "$id": "863",
          "name": "evictionPolicy"
         }
        }
       },
       {
        "$id": "864",
        "kind": "property",
        "name": "vmImageResourceId",
        "serializedName": "vmImageResourceId",
        "doc": "Indicates the resource id of the vm image. This parameter is used for custom vm image.",
        "type": {
         "$id": "865",
         "kind": "string",
         "name": "armResourceIdentifier",
         "crossLanguageDefinitionId": "Azure.Core.armResourceIdentifier",
         "baseType": {
          "$id": "866",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.vmImageResourceId",
        "serializationOptions": {
         "$id": "867",
         "json": {
          "$id": "868",
          "name": "vmImageResourceId"
         }
        }
       },
       {
        "$id": "869",
        "kind": "property",
        "name": "subnetId",
        "serializedName": "subnetId",
        "doc": "Indicates the resource id of the subnet for the node type.",
        "type": {
         "$id": "870",
         "kind": "string",
         "name": "armResourceIdentifier",
         "crossLanguageDefinitionId": "Azure.Core.armResourceIdentifier",
         "baseType": {
          "$id": "871",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.subnetId",
        "serializationOptions": {
         "$id": "872",
         "json": {
          "$id": "873",
          "name": "subnetId"
         }
        }
       },
       {
        "$id": "874",
        "kind": "property",
        "name": "vmSetupActions",
        "serializedName": "vmSetupActions",
        "doc": "Specifies the actions to be performed on the vms before bootstrapping the service fabric runtime.",
        "type": {
         "$id": "875",
         "kind": "array",
         "name": "ArrayVmSetupAction",
         "valueType": {
          "$ref": "98"
         },
         "crossLanguageDefinitionId": "TypeSpec.Array",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.vmSetupActions",
        "serializationOptions": {
         "$id": "876",
         "json": {
          "$id": "877",
          "name": "vmSetupActions"
         }
        }
       },
       {
        "$id": "878",
        "kind": "property",
        "name": "securityType",
        "serializedName": "securityType",
        "doc": "Specifies the security type of the nodeType. Only Standard and TrustedLaunch are currently supported",
        "type": {
         "$ref": "104"
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.securityType",
        "serializationOptions": {
         "$id": "879",
         "json": {
          "$id": "880",
          "name": "securityType"
         }
        }
       },
       {
        "$id": "881",
        "kind": "property",
        "name": "IsSecureBootEnabled",
        "serializedName": "secureBootEnabled",
        "doc": "Specifies whether secure boot should be enabled on the nodeType. Can only be used with TrustedLaunch SecurityType",
        "type": {
         "$id": "882",
         "kind": "boolean",
         "name": "boolean",
         "crossLanguageDefinitionId": "TypeSpec.boolean",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.secureBootEnabled",
        "serializationOptions": {
         "$id": "883",
         "json": {
          "$id": "884",
          "name": "secureBootEnabled"
         }
        }
       },
       {
        "$id": "885",
        "kind": "property",
        "name": "IsNodePublicIPEnabled",
        "serializedName": "enableNodePublicIP",
        "doc": "Specifies whether each node is allocated its own public IPv4 address. This is only supported on secondary node types with custom Load Balancers.",
        "type": {
         "$id": "886",
         "kind": "boolean",
         "name": "boolean",
         "crossLanguageDefinitionId": "TypeSpec.boolean",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.enableNodePublicIP",
        "serializationOptions": {
         "$id": "887",
         "json": {
          "$id": "888",
          "name": "enableNodePublicIP"
         }
        }
       },
       {
        "$id": "889",
        "kind": "property",
        "name": "IsNodePublicIPv6Enabled",
        "serializedName": "enableNodePublicIPv6",
        "doc": "Specifies whether each node is allocated its own public IPv6 address. This is only supported on secondary node types with custom Load Balancers.",
        "type": {
         "$id": "890",
         "kind": "boolean",
         "name": "boolean",
         "crossLanguageDefinitionId": "TypeSpec.boolean",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.enableNodePublicIPv6",
        "serializationOptions": {
         "$id": "891",
         "json": {
          "$id": "892",
          "name": "enableNodePublicIPv6"
         }
        }
       },
       {
        "$id": "893",
        "kind": "property",
        "name": "vmSharedGalleryImageId",
        "serializedName": "vmSharedGalleryImageId",
        "doc": "Indicates the resource id of the vm shared galleries image. This parameter is used for custom vm image.",
        "type": {
         "$id": "894",
         "kind": "string",
         "name": "armResourceIdentifier",
         "crossLanguageDefinitionId": "Azure.Core.armResourceIdentifier",
         "baseType": {
          "$id": "895",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.vmSharedGalleryImageId",
        "serializationOptions": {
         "$id": "896",
         "json": {
          "$id": "897",
          "name": "vmSharedGalleryImageId"
         }
        }
       },
       {
        "$id": "898",
        "kind": "property",
        "name": "natGatewayId",
        "serializedName": "natGatewayId",
        "doc": "Specifies the resource id of a NAT Gateway to attach to the subnet of this node type. Node type must use custom load balancer.",
        "type": {
         "$id": "899",
         "kind": "string",
         "name": "armResourceIdentifier",
         "crossLanguageDefinitionId": "Azure.Core.armResourceIdentifier",
         "baseType": {
          "$id": "900",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.natGatewayId",
        "serializationOptions": {
         "$id": "901",
         "json": {
          "$id": "902",
          "name": "natGatewayId"
         }
        }
       },
       {
        "$id": "903",
        "kind": "property",
        "name": "natConfigurations",
        "serializedName": "natConfigurations",
        "doc": "Specifies the NAT configuration on default public Load Balancer for the node type. This is only supported for node types use the default public Load Balancer.",
        "type": {
         "$id": "904",
         "kind": "array",
         "name": "ArrayNodeTypeNatConfig",
         "valueType": {
          "$id": "905",
          "kind": "model",
          "name": "NodeTypeNatConfig",
          "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeNatConfig",
          "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
          "doc": "Provides information about NAT configuration on the default public Load Balancer for the node type.",
          "decorators": [],
          "properties": [
           {
            "$id": "906",
            "kind": "property",
            "name": "backendPort",
            "serializedName": "backendPort",
            "doc": "The internal port for the NAT configuration.",
            "type": {
             "$id": "907",
             "kind": "int32",
             "name": "int32",
             "crossLanguageDefinitionId": "TypeSpec.int32",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeNatConfig.backendPort",
            "serializationOptions": {
             "$id": "908",
             "json": {
              "$id": "909",
              "name": "backendPort"
             }
            }
           },
           {
            "$id": "910",
            "kind": "property",
            "name": "frontendPortRangeStart",
            "serializedName": "frontendPortRangeStart",
            "doc": "The port range start for the external endpoint.",
            "type": {
             "$id": "911",
             "kind": "int32",
             "name": "int32",
             "crossLanguageDefinitionId": "TypeSpec.int32",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeNatConfig.frontendPortRangeStart",
            "serializationOptions": {
             "$id": "912",
             "json": {
              "$id": "913",
              "name": "frontendPortRangeStart"
             }
            }
           },
           {
            "$id": "914",
            "kind": "property",
            "name": "frontendPortRangeEnd",
            "serializedName": "frontendPortRangeEnd",
            "doc": "The port range end for the external endpoint.",
            "type": {
             "$id": "915",
             "kind": "int32",
             "name": "int32",
             "crossLanguageDefinitionId": "TypeSpec.int32",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeNatConfig.frontendPortRangeEnd",
            "serializationOptions": {
             "$id": "916",
             "json": {
              "$id": "917",
              "name": "frontendPortRangeEnd"
             }
            }
           }
          ]
         },
         "crossLanguageDefinitionId": "TypeSpec.Array",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.natConfigurations",
        "serializationOptions": {
         "$id": "918",
         "json": {
          "$id": "919",
          "name": "natConfigurations"
         }
        }
       },
       {
        "$id": "920",
        "kind": "property",
        "name": "vmImagePlan",
        "serializedName": "vmImagePlan",
        "doc": "Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started ->. Enter any required information and then click Save.",
        "type": {
         "$id": "921",
         "kind": "model",
         "name": "VmImagePlan",
         "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
         "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VmImagePlan",
         "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
         "doc": "Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started. Enter any required information and then click Save.",
         "decorators": [],
         "properties": [
          {
           "$id": "922",
           "kind": "property",
           "name": "name",
           "serializedName": "name",
           "doc": "The plan ID.",
           "type": {
            "$id": "923",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           "optional": true,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VmImagePlan.name",
           "serializationOptions": {
            "$id": "924",
            "json": {
             "$id": "925",
             "name": "name"
            }
           }
          },
          {
           "$id": "926",
           "kind": "property",
           "name": "product",
           "serializedName": "product",
           "doc": "Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.",
           "type": {
            "$id": "927",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           "optional": true,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VmImagePlan.product",
           "serializationOptions": {
            "$id": "928",
            "json": {
             "$id": "929",
             "name": "product"
            }
           }
          },
          {
           "$id": "930",
           "kind": "property",
           "name": "promotionCode",
           "serializedName": "promotionCode",
           "doc": "The promotion code.",
           "type": {
            "$id": "931",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           "optional": true,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VmImagePlan.promotionCode",
           "serializationOptions": {
            "$id": "932",
            "json": {
             "$id": "933",
             "name": "promotionCode"
            }
           }
          },
          {
           "$id": "934",
           "kind": "property",
           "name": "publisher",
           "serializedName": "publisher",
           "doc": "The publisher ID.",
           "type": {
            "$id": "935",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           "optional": true,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VmImagePlan.publisher",
           "serializationOptions": {
            "$id": "936",
            "json": {
             "$id": "937",
             "name": "publisher"
            }
           }
          }
         ]
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.vmImagePlan",
        "serializationOptions": {
         "$id": "938",
         "json": {
          "$id": "939",
          "name": "vmImagePlan"
         }
        }
       },
       {
        "$id": "940",
        "kind": "property",
        "name": "serviceArtifactReferenceId",
        "serializedName": "serviceArtifactReferenceId",
        "doc": "Specifies the service artifact reference id used to set same image version for all virtual machines in the scale set when using 'latest' image version.",
        "type": {
         "$id": "941",
         "kind": "string",
         "name": "armResourceIdentifier",
         "crossLanguageDefinitionId": "Azure.Core.armResourceIdentifier",
         "baseType": {
          "$id": "942",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.serviceArtifactReferenceId",
        "serializationOptions": {
         "$id": "943",
         "json": {
          "$id": "944",
          "name": "serviceArtifactReferenceId"
         }
        }
       },
       {
        "$id": "945",
        "kind": "property",
        "name": "dscpConfigurationId",
        "serializedName": "dscpConfigurationId",
        "doc": "Specifies the resource id of the DSCP configuration to apply to the node type network interface.",
        "type": {
         "$id": "946",
         "kind": "string",
         "name": "armResourceIdentifier",
         "crossLanguageDefinitionId": "Azure.Core.armResourceIdentifier",
         "baseType": {
          "$id": "947",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.dscpConfigurationId",
        "serializationOptions": {
         "$id": "948",
         "json": {
          "$id": "949",
          "name": "dscpConfigurationId"
         }
        }
       },
       {
        "$id": "950",
        "kind": "property",
        "name": "additionalNetworkInterfaceConfigurations",
        "serializedName": "additionalNetworkInterfaceConfigurations",
        "doc": "Specifies the settings for any additional secondary network interfaces to attach to the node type.",
        "type": {
         "$id": "951",
         "kind": "array",
         "name": "ArrayAdditionalNetworkInterfaceConfiguration",
         "valueType": {
          "$id": "952",
          "kind": "model",
          "name": "AdditionalNetworkInterfaceConfiguration",
          "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AdditionalNetworkInterfaceConfiguration",
          "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
          "doc": "Specifies the settings for a network interface to attach to the node type.",
          "decorators": [],
          "properties": [
           {
            "$id": "953",
            "kind": "property",
            "name": "name",
            "serializedName": "name",
            "doc": "Name of the network interface.",
            "type": {
             "$id": "954",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AdditionalNetworkInterfaceConfiguration.name",
            "serializationOptions": {
             "$id": "955",
             "json": {
              "$id": "956",
              "name": "name"
             }
            }
           },
           {
            "$id": "957",
            "kind": "property",
            "name": "enableAcceleratedNetworking",
            "serializedName": "enableAcceleratedNetworking",
            "doc": "Specifies whether the network interface is accelerated networking-enabled.",
            "type": {
             "$id": "958",
             "kind": "boolean",
             "name": "boolean",
             "crossLanguageDefinitionId": "TypeSpec.boolean",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AdditionalNetworkInterfaceConfiguration.enableAcceleratedNetworking",
            "serializationOptions": {
             "$id": "959",
             "json": {
              "$id": "960",
              "name": "enableAcceleratedNetworking"
             }
            }
           },
           {
            "$id": "961",
            "kind": "property",
            "name": "dscpConfiguration",
            "serializedName": "dscpConfiguration",
            "doc": "Specifies the DSCP configuration to apply to the network interface.",
            "type": {
             "$ref": "615"
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AdditionalNetworkInterfaceConfiguration.dscpConfiguration",
            "serializationOptions": {
             "$id": "962",
             "json": {
              "$id": "963",
              "name": "dscpConfiguration"
             }
            }
           },
           {
            "$id": "964",
            "kind": "property",
            "name": "ipConfigurations",
            "serializedName": "ipConfigurations",
            "doc": "Specifies the IP configurations of the network interface.",
            "type": {
             "$id": "965",
             "kind": "array",
             "name": "ArrayIpConfiguration",
             "valueType": {
              "$id": "966",
              "kind": "model",
              "name": "ServiceFabricManagedClusterIPConfiguration",
              "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
              "crossLanguageDefinitionId": "Microsoft.ServiceFabric.IpConfiguration",
              "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
              "doc": "Specifies an IP configuration of the network interface.",
              "decorators": [],
              "properties": [
               {
                "$id": "967",
                "kind": "property",
                "name": "name",
                "serializedName": "name",
                "doc": "Name of the network interface.",
                "type": {
                 "$id": "968",
                 "kind": "string",
                 "name": "string",
                 "crossLanguageDefinitionId": "TypeSpec.string",
                 "decorators": []
                },
                "optional": false,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "Microsoft.ServiceFabric.IpConfiguration.name",
                "serializationOptions": {
                 "$id": "969",
                 "json": {
                  "$id": "970",
                  "name": "name"
                 }
                }
               },
               {
                "$id": "971",
                "kind": "property",
                "name": "applicationGatewayBackendAddressPools",
                "serializedName": "applicationGatewayBackendAddressPools",
                "doc": "Specifies an array of references to backend address pools of application gateways. A node type can reference backend address pools of multiple application gateways. Multiple node types cannot use the same application gateway.",
                "type": {
                 "$id": "972",
                 "kind": "array",
                 "name": "ArraySubResource",
                 "valueType": {
                  "$ref": "615"
                 },
                 "crossLanguageDefinitionId": "TypeSpec.Array",
                 "decorators": []
                },
                "optional": true,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "Microsoft.ServiceFabric.IpConfiguration.applicationGatewayBackendAddressPools",
                "serializationOptions": {
                 "$id": "973",
                 "json": {
                  "$id": "974",
                  "name": "applicationGatewayBackendAddressPools"
                 }
                }
               },
               {
                "$id": "975",
                "kind": "property",
                "name": "loadBalancerBackendAddressPools",
                "serializedName": "loadBalancerBackendAddressPools",
                "doc": "Specifies an array of references to backend address pools of load balancers. A node type can reference backend address pools of one public and one internal load balancer. Multiple node types cannot use the same basic sku load balancer.",
                "type": {
                 "$id": "976",
                 "kind": "array",
                 "name": "ArraySubResource",
                 "valueType": {
                  "$ref": "615"
                 },
                 "crossLanguageDefinitionId": "TypeSpec.Array",
                 "decorators": []
                },
                "optional": true,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "Microsoft.ServiceFabric.IpConfiguration.loadBalancerBackendAddressPools",
                "serializationOptions": {
                 "$id": "977",
                 "json": {
                  "$id": "978",
                  "name": "loadBalancerBackendAddressPools"
                 }
                }
               },
               {
                "$id": "979",
                "kind": "property",
                "name": "loadBalancerInboundNatPools",
                "serializedName": "loadBalancerInboundNatPools",
                "doc": "Specifies an array of references to inbound Nat pools of the load balancers. A node type can reference inbound nat pools of one public and one internal load balancer. Multiple node types cannot use the same basic sku load balancer.",
                "type": {
                 "$id": "980",
                 "kind": "array",
                 "name": "ArraySubResource",
                 "valueType": {
                  "$ref": "615"
                 },
                 "crossLanguageDefinitionId": "TypeSpec.Array",
                 "decorators": []
                },
                "optional": true,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "Microsoft.ServiceFabric.IpConfiguration.loadBalancerInboundNatPools",
                "serializationOptions": {
                 "$id": "981",
                 "json": {
                  "$id": "982",
                  "name": "loadBalancerInboundNatPools"
                 }
                }
               },
               {
                "$id": "983",
                "kind": "property",
                "name": "subnet",
                "serializedName": "subnet",
                "doc": "Specifies the subnet of the network interface.",
                "type": {
                 "$ref": "615"
                },
                "optional": true,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "Microsoft.ServiceFabric.IpConfiguration.subnet",
                "serializationOptions": {
                 "$id": "984",
                 "json": {
                  "$id": "985",
                  "name": "subnet"
                 }
                }
               },
               {
                "$id": "986",
                "kind": "property",
                "name": "privateIPAddressVersion",
                "serializedName": "privateIPAddressVersion",
                "doc": "Specifies whether the IP configuration's private IP is IPv4 or IPv6. Default is IPv4.",
                "type": {
                 "$ref": "110"
                },
                "optional": true,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "Microsoft.ServiceFabric.IpConfiguration.privateIPAddressVersion",
                "serializationOptions": {
                 "$id": "987",
                 "json": {
                  "$id": "988",
                  "name": "privateIPAddressVersion"
                 }
                }
               },
               {
                "$id": "989",
                "kind": "property",
                "name": "publicIPAddressConfiguration",
                "serializedName": "publicIPAddressConfiguration",
                "doc": "The public IP address configuration of the network interface.",
                "type": {
                 "$id": "990",
                 "kind": "model",
                 "name": "ServiceFabricManagedClusterPublicIPAddressConfiguration",
                 "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
                 "crossLanguageDefinitionId": "Microsoft.ServiceFabric.PublicIPAddressConfiguration",
                 "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
                 "doc": "The public IP address configuration of the network interface.",
                 "decorators": [],
                 "properties": [
                  {
                   "$id": "991",
                   "kind": "property",
                   "name": "name",
                   "serializedName": "name",
                   "doc": "Name of the network interface.",
                   "type": {
                    "$id": "992",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                   },
                   "optional": false,
                   "readOnly": false,
                   "discriminator": false,
                   "flatten": false,
                   "decorators": [],
                   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.PublicIPAddressConfiguration.name",
                   "serializationOptions": {
                    "$id": "993",
                    "json": {
                     "$id": "994",
                     "name": "name"
                    }
                   }
                  },
                  {
                   "$id": "995",
                   "kind": "property",
                   "name": "ipTags",
                   "serializedName": "ipTags",
                   "doc": "Specifies the list of IP tags associated with the public IP address.",
                   "type": {
                    "$id": "996",
                    "kind": "array",
                    "name": "ArrayIpTag",
                    "valueType": {
                     "$id": "997",
                     "kind": "model",
                     "name": "ManagedClusterIPTag",
                     "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
                     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.IpTag",
                     "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
                     "doc": "The IP tag associated with the public IP address.",
                     "decorators": [],
                     "properties": [
                      {
                       "$id": "998",
                       "kind": "property",
                       "name": "ipTagType",
                       "serializedName": "ipTagType",
                       "doc": "IP tag type. Example: FirstPartyUsage.",
                       "type": {
                        "$id": "999",
                        "kind": "string",
                        "name": "string",
                        "crossLanguageDefinitionId": "TypeSpec.string",
                        "decorators": []
                       },
                       "optional": false,
                       "readOnly": false,
                       "discriminator": false,
                       "flatten": false,
                       "decorators": [],
                       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.IpTag.ipTagType",
                       "serializationOptions": {
                        "$id": "1000",
                        "json": {
                         "$id": "1001",
                         "name": "ipTagType"
                        }
                       }
                      },
                      {
                       "$id": "1002",
                       "kind": "property",
                       "name": "tag",
                       "serializedName": "tag",
                       "doc": "IP tag associated with the public IP. Example: SQL, Storage etc.",
                       "type": {
                        "$id": "1003",
                        "kind": "string",
                        "name": "string",
                        "crossLanguageDefinitionId": "TypeSpec.string",
                        "decorators": []
                       },
                       "optional": false,
                       "readOnly": false,
                       "discriminator": false,
                       "flatten": false,
                       "decorators": [],
                       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.IpTag.tag",
                       "serializationOptions": {
                        "$id": "1004",
                        "json": {
                         "$id": "1005",
                         "name": "tag"
                        }
                       }
                      }
                     ]
                    },
                    "crossLanguageDefinitionId": "TypeSpec.Array",
                    "decorators": []
                   },
                   "optional": true,
                   "readOnly": false,
                   "discriminator": false,
                   "flatten": false,
                   "decorators": [],
                   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.PublicIPAddressConfiguration.ipTags",
                   "serializationOptions": {
                    "$id": "1006",
                    "json": {
                     "$id": "1007",
                     "name": "ipTags"
                    }
                   }
                  },
                  {
                   "$id": "1008",
                   "kind": "property",
                   "name": "publicIPAddressVersion",
                   "serializedName": "publicIPAddressVersion",
                   "doc": "Specifies whether the IP configuration's public IP is IPv4 or IPv6. Default is IPv4.",
                   "type": {
                    "$ref": "116"
                   },
                   "optional": true,
                   "readOnly": false,
                   "discriminator": false,
                   "flatten": false,
                   "decorators": [],
                   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.PublicIPAddressConfiguration.publicIPAddressVersion",
                   "serializationOptions": {
                    "$id": "1009",
                    "json": {
                     "$id": "1010",
                     "name": "publicIPAddressVersion"
                    }
                   }
                  }
                 ]
                },
                "optional": true,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "Microsoft.ServiceFabric.IpConfiguration.publicIPAddressConfiguration",
                "serializationOptions": {
                 "$id": "1011",
                 "json": {
                  "$id": "1012",
                  "name": "publicIPAddressConfiguration"
                 }
                }
               }
              ]
             },
             "crossLanguageDefinitionId": "TypeSpec.Array",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AdditionalNetworkInterfaceConfiguration.ipConfigurations",
            "serializationOptions": {
             "$id": "1013",
             "json": {
              "$id": "1014",
              "name": "ipConfigurations"
             }
            }
           }
          ]
         },
         "crossLanguageDefinitionId": "TypeSpec.Array",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.additionalNetworkInterfaceConfigurations",
        "serializationOptions": {
         "$id": "1015",
         "json": {
          "$id": "1016",
          "name": "additionalNetworkInterfaceConfigurations"
         }
        }
       },
       {
        "$id": "1017",
        "kind": "property",
        "name": "computerNamePrefix",
        "serializedName": "computerNamePrefix",
        "doc": "Specifies the computer name prefix. Limited to 9 characters. If specified, allows for a longer name to be specified for the node type name.",
        "type": {
         "$id": "1018",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.computerNamePrefix",
        "serializationOptions": {
         "$id": "1019",
         "json": {
          "$id": "1020",
          "name": "computerNamePrefix"
         }
        }
       },
       {
        "$id": "1021",
        "kind": "property",
        "name": "vmApplications",
        "serializedName": "vmApplications",
        "doc": "Specifies the gallery applications that should be made available to the underlying VMSS.",
        "type": {
         "$id": "1022",
         "kind": "array",
         "name": "ArrayVmApplication",
         "valueType": {
          "$id": "1023",
          "kind": "model",
          "name": "ServiceFabricManagedVmApplication",
          "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VmApplication",
          "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
          "doc": "Specifies the gallery application that should be made available to the underlying VMSS.",
          "decorators": [],
          "properties": [
           {
            "$id": "1024",
            "kind": "property",
            "name": "configurationReference",
            "serializedName": "configurationReference",
            "doc": "Optional, Specifies the uri to an azure blob that will replace the default configuration for the package if provided.",
            "type": {
             "$id": "1025",
             "kind": "url",
             "name": "url",
             "crossLanguageDefinitionId": "TypeSpec.url",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VmApplication.configurationReference",
            "serializationOptions": {
             "$id": "1026",
             "json": {
              "$id": "1027",
              "name": "configurationReference"
             }
            }
           },
           {
            "$id": "1028",
            "kind": "property",
            "name": "enableAutomaticUpgrade",
            "serializedName": "enableAutomaticUpgrade",
            "doc": "If set to true, when a new Gallery Application version is available in PIR/SIG, it will be automatically updated for the underlying VMSS.",
            "type": {
             "$id": "1029",
             "kind": "boolean",
             "name": "boolean",
             "crossLanguageDefinitionId": "TypeSpec.boolean",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VmApplication.enableAutomaticUpgrade",
            "serializationOptions": {
             "$id": "1030",
             "json": {
              "$id": "1031",
              "name": "enableAutomaticUpgrade"
             }
            }
           },
           {
            "$id": "1032",
            "kind": "property",
            "name": "order",
            "serializedName": "order",
            "doc": "Optional, Specifies the order in which the packages have to be installed.",
            "type": {
             "$id": "1033",
             "kind": "int32",
             "name": "int32",
             "crossLanguageDefinitionId": "TypeSpec.int32",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VmApplication.order",
            "serializationOptions": {
             "$id": "1034",
             "json": {
              "$id": "1035",
              "name": "order"
             }
            }
           },
           {
            "$id": "1036",
            "kind": "property",
            "name": "packageReferenceId",
            "serializedName": "packageReferenceId",
            "doc": "Specifies the GalleryApplicationVersion resource id on the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{application}/versions/{version}.",
            "type": {
             "$id": "1037",
             "kind": "string",
             "name": "armResourceIdentifier",
             "crossLanguageDefinitionId": "Azure.Core.armResourceIdentifier",
             "baseType": {
              "$id": "1038",
              "kind": "string",
              "name": "string",
              "crossLanguageDefinitionId": "TypeSpec.string",
              "decorators": []
             },
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VmApplication.packageReferenceId",
            "serializationOptions": {
             "$id": "1039",
             "json": {
              "$id": "1040",
              "name": "packageReferenceId"
             }
            }
           },
           {
            "$id": "1041",
            "kind": "property",
            "name": "vmGalleryTags",
            "serializedName": "vmGalleryTags",
            "doc": "Optional, Specifies a passthrough value for more generic context. Accepts a JSON-formatted string e.g. '{\"Tag1\":\"Value1\",\"Tag2\":\"Value2\"}'.",
            "type": {
             "$id": "1042",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VmApplication.vmGalleryTags",
            "serializationOptions": {
             "$id": "1043",
             "json": {
              "$id": "1044",
              "name": "vmGalleryTags"
             }
            }
           },
           {
            "$id": "1045",
            "kind": "property",
            "name": "treatFailureAsDeploymentFailure",
            "serializedName": "treatFailureAsDeploymentFailure",
            "doc": "Optional, If true, any failure for any operation in the VmApplication will fail the deployment.",
            "type": {
             "$id": "1046",
             "kind": "boolean",
             "name": "boolean",
             "crossLanguageDefinitionId": "TypeSpec.boolean",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VmApplication.treatFailureAsDeploymentFailure",
            "serializationOptions": {
             "$id": "1047",
             "json": {
              "$id": "1048",
              "name": "treatFailureAsDeploymentFailure"
             }
            }
           }
          ]
         },
         "crossLanguageDefinitionId": "TypeSpec.Array",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeProperties.vmApplications",
        "serializationOptions": {
         "$id": "1049",
         "json": {
          "$id": "1050",
          "name": "vmApplications"
         }
        }
       }
      ]
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": true,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeType.properties",
     "serializationOptions": {
      "$id": "1051",
      "json": {
       "$id": "1052",
       "name": "properties"
      }
     }
    },
    {
     "$id": "1053",
     "kind": "property",
     "name": "tags",
     "serializedName": "tags",
     "doc": "Resource tags.",
     "type": {
      "$id": "1054",
      "kind": "dict",
      "keyType": {
       "$id": "1055",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "valueType": {
       "$id": "1056",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeType.tags",
     "serializationOptions": {
      "$id": "1057",
      "json": {
       "$id": "1058",
       "name": "tags"
      }
     }
    },
    {
     "$id": "1059",
     "kind": "property",
     "name": "sku",
     "serializedName": "sku",
     "doc": "The node type sku.",
     "type": {
      "$id": "1060",
      "kind": "model",
      "name": "NodeTypeSku",
      "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
      "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeSku",
      "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
      "doc": "Describes a node type sku.",
      "decorators": [],
      "properties": [
       {
        "$id": "1061",
        "kind": "property",
        "name": "name",
        "serializedName": "name",
        "doc": "The sku name. Name is internally generated and is used in auto-scale scenarios. Property does not allow to be changed to other values than generated. To avoid deployment errors please omit the property.",
        "type": {
         "$id": "1062",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeSku.name",
        "serializationOptions": {
         "$id": "1063",
         "json": {
          "$id": "1064",
          "name": "name"
         }
        }
       },
       {
        "$id": "1065",
        "kind": "property",
        "name": "tier",
        "serializedName": "tier",
        "doc": "Specifies the tier of the node type. Possible Values: **Standard**",
        "type": {
         "$id": "1066",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeSku.tier",
        "serializationOptions": {
         "$id": "1067",
         "json": {
          "$id": "1068",
          "name": "tier"
         }
        }
       },
       {
        "$id": "1069",
        "kind": "property",
        "name": "capacity",
        "serializedName": "capacity",
        "doc": "The number of nodes in the node type. If present in request it will override properties.vmInstanceCount.",
        "type": {
         "$id": "1070",
         "kind": "int32",
         "name": "int32",
         "crossLanguageDefinitionId": "TypeSpec.int32",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeSku.capacity",
        "serializationOptions": {
         "$id": "1071",
         "json": {
          "$id": "1072",
          "name": "capacity"
         }
        }
       }
      ]
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeType.sku",
     "serializationOptions": {
      "$id": "1073",
      "json": {
       "$id": "1074",
       "name": "sku"
      }
     }
    }
   ]
  },
  {
   "$ref": "544"
  },
  {
   "$ref": "577"
  },
  {
   "$ref": "613"
  },
  {
   "$ref": "615"
  },
  {
   "$ref": "624"
  },
  {
   "$ref": "639"
  },
  {
   "$ref": "645"
  },
  {
   "$ref": "663"
  },
  {
   "$ref": "667"
  },
  {
   "$ref": "696"
  },
  {
   "$ref": "714"
  },
  {
   "$ref": "737"
  },
  {
   "$ref": "799"
  },
  {
   "$ref": "905"
  },
  {
   "$ref": "921"
  },
  {
   "$ref": "952"
  },
  {
   "$ref": "966"
  },
  {
   "$ref": "990"
  },
  {
   "$ref": "997"
  },
  {
   "$ref": "1023"
  },
  {
   "$ref": "1060"
  },
  {
   "$ref": "500"
  },
  {
   "$ref": "501"
  },
  {
   "$ref": "516"
  },
  {
   "$id": "1075",
   "kind": "model",
   "name": "NodeTypeUpdateParameters",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeUpdateParameters",
   "usage": "Input,Json",
   "doc": "Node type update request",
   "decorators": [],
   "properties": [
    {
     "$id": "1076",
     "kind": "property",
     "name": "tags",
     "serializedName": "tags",
     "doc": "Node type update parameters",
     "type": {
      "$id": "1077",
      "kind": "dict",
      "keyType": {
       "$id": "1078",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "valueType": {
       "$id": "1079",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeUpdateParameters.tags",
     "serializationOptions": {
      "$id": "1080",
      "json": {
       "$id": "1081",
       "name": "tags"
      }
     }
    },
    {
     "$id": "1082",
     "kind": "property",
     "name": "sku",
     "serializedName": "sku",
     "doc": "The node type sku.",
     "type": {
      "$ref": "1060"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeUpdateParameters.sku",
     "serializationOptions": {
      "$id": "1083",
      "json": {
       "$id": "1084",
       "name": "sku"
      }
     }
    }
   ]
  },
  {
   "$id": "1085",
   "kind": "model",
   "name": "NodeTypeListResult",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Azure.ResourceManager.ResourceListResult",
   "usage": "Output,Json",
   "doc": "The response of a NodeType list operation.",
   "decorators": [],
   "properties": [
    {
     "$id": "1086",
     "kind": "property",
     "name": "value",
     "serializedName": "value",
     "doc": "The NodeType items on this page",
     "type": {
      "$id": "1087",
      "kind": "array",
      "name": "ArrayNodeType",
      "valueType": {
       "$ref": "499"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Azure.ResourceManager.ResourceListResult.value",
     "serializationOptions": {
      "$id": "1088",
      "json": {
       "$id": "1089",
       "name": "value"
      }
     }
    },
    {
     "$id": "1090",
     "kind": "property",
     "name": "nextLink",
     "serializedName": "nextLink",
     "doc": "The link to the next page of items",
     "type": {
      "$id": "1091",
      "kind": "url",
      "name": "ResourceLocation",
      "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
      "baseType": {
       "$id": "1092",
       "kind": "url",
       "name": "url",
       "crossLanguageDefinitionId": "TypeSpec.url",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Azure.ResourceManager.ResourceListResult.nextLink",
     "serializationOptions": {
      "$id": "1093",
      "json": {
       "$id": "1094",
       "name": "nextLink"
      }
     }
    }
   ]
  },
  {
   "$id": "1095",
   "kind": "model",
   "name": "NodeTypeActionContent",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeActionParameters",
   "usage": "Input,Json",
   "doc": "Parameters for Node type action. If nodes are not specified on the parameters, the operation will be performed in all nodes of the node type one upgrade domain at a time.",
   "decorators": [],
   "properties": [
    {
     "$id": "1096",
     "kind": "property",
     "name": "nodes",
     "serializedName": "nodes",
     "doc": "List of node names from the node type.",
     "type": {
      "$id": "1097",
      "kind": "array",
      "name": "Array",
      "valueType": {
       "$id": "1098",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeActionParameters.nodes",
     "serializationOptions": {
      "$id": "1099",
      "json": {
       "$id": "1100",
       "name": "nodes"
      }
     }
    },
    {
     "$id": "1101",
     "kind": "property",
     "name": "IsForced",
     "serializedName": "force",
     "doc": "Force the action to go through.",
     "type": {
      "$id": "1102",
      "kind": "boolean",
      "name": "boolean",
      "crossLanguageDefinitionId": "TypeSpec.boolean",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeActionParameters.force",
     "serializationOptions": {
      "$id": "1103",
      "json": {
       "$id": "1104",
       "name": "force"
      }
     }
    },
    {
     "$id": "1105",
     "kind": "property",
     "name": "updateType",
     "serializedName": "updateType",
     "doc": "Specifies the way the operation will be performed.",
     "type": {
      "$ref": "132"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeActionParameters.updateType",
     "serializationOptions": {
      "$id": "1106",
      "json": {
       "$id": "1107",
       "name": "updateType"
      }
     }
    }
   ]
  },
  {
   "$id": "1108",
   "kind": "model",
   "name": "FaultSimulationContent",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.FaultSimulationContent",
   "usage": "Input,Output,Json,LroFinalEnvelope",
   "doc": "Parameters for Fault Simulation action.",
   "decorators": [],
   "discriminatorProperty": {
    "$id": "1109",
    "kind": "property",
    "name": "faultKind",
    "serializedName": "faultKind",
    "doc": "The kind of fault to be simulated.",
    "type": {
     "$ref": "138"
    },
    "optional": false,
    "readOnly": false,
    "discriminator": true,
    "flatten": false,
    "decorators": [],
    "crossLanguageDefinitionId": "Microsoft.ServiceFabric.FaultSimulationContent.faultKind",
    "serializationOptions": {
     "$id": "1110",
     "json": {
      "$id": "1111",
      "name": "faultKind"
     }
    }
   },
   "properties": [
    {
     "$ref": "1109"
    },
    {
     "$id": "1112",
     "kind": "property",
     "name": "force",
     "serializedName": "force",
     "doc": "Force the action to go through without any check on the cluster.",
     "type": {
      "$id": "1113",
      "kind": "boolean",
      "name": "boolean",
      "crossLanguageDefinitionId": "TypeSpec.boolean",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.FaultSimulationContent.force",
     "serializationOptions": {
      "$id": "1114",
      "json": {
       "$id": "1115",
       "name": "force"
      }
     }
    },
    {
     "$id": "1116",
     "kind": "property",
     "name": "constraints",
     "serializedName": "constraints",
     "doc": "Constraints for Fault Simulation action.",
     "type": {
      "$id": "1117",
      "kind": "model",
      "name": "FaultSimulationConstraints",
      "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
      "crossLanguageDefinitionId": "Microsoft.ServiceFabric.FaultSimulationConstraints",
      "usage": "Input,Output,Json,LroFinalEnvelope",
      "doc": "Constraints for Fault Simulation action.",
      "decorators": [],
      "properties": [
       {
        "$id": "1118",
        "kind": "property",
        "name": "expirationTime",
        "serializedName": "expirationTime",
        "doc": "The absolute expiration timestamp (UTC) after which this fault simulation should be stopped if it's still active.",
        "type": {
         "$id": "1119",
         "kind": "utcDateTime",
         "name": "utcDateTime",
         "encode": "rfc3339",
         "wireType": {
          "$id": "1120",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.FaultSimulationConstraints.expirationTime",
        "serializationOptions": {
         "$id": "1121",
         "json": {
          "$id": "1122",
          "name": "expirationTime"
         }
        }
       }
      ]
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.FaultSimulationContent.constraints",
     "serializationOptions": {
      "$id": "1123",
      "json": {
       "$id": "1124",
       "name": "constraints"
      }
     }
    }
   ],
   "discriminatedSubtypes": {
    "$id": "1125",
    "Zone": {
     "$id": "1126",
     "kind": "model",
     "name": "ZoneFaultSimulationContent",
     "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ZoneFaultSimulationContent",
     "usage": "Input,Output,Json,LroFinalEnvelope",
     "doc": "Parameters for Zone Fault Simulation action.",
     "discriminatorValue": "Zone",
     "decorators": [],
     "baseModel": {
      "$ref": "1108"
     },
     "properties": [
      {
       "$id": "1127",
       "kind": "property",
       "name": "zones",
       "serializedName": "zones",
       "doc": "Indicates the zones of the fault simulation.",
       "type": {
        "$id": "1128",
        "kind": "array",
        "name": "Array",
        "valueType": {
         "$id": "1129",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "crossLanguageDefinitionId": "TypeSpec.Array",
        "decorators": []
       },
       "optional": true,
       "readOnly": false,
       "discriminator": false,
       "flatten": false,
       "decorators": [],
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ZoneFaultSimulationContent.zones",
       "serializationOptions": {
        "$id": "1130",
        "json": {
         "$id": "1131",
         "name": "zones"
        }
       }
      },
      {
       "$id": "1132",
       "kind": "property",
       "name": "faultKind",
       "serializedName": "faultKind",
       "doc": "The kind of fault simulation.",
       "type": {
        "$id": "1133",
        "kind": "constant",
        "valueType": {
         "$id": "1134",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "Zone",
        "decorators": []
       },
       "optional": false,
       "readOnly": false,
       "discriminator": true,
       "flatten": false,
       "decorators": [],
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ZoneFaultSimulationContent.faultKind",
       "serializationOptions": {
        "$id": "1135",
        "json": {
         "$id": "1136",
         "name": "faultKind"
        }
       }
      }
     ]
    }
   }
  },
  {
   "$ref": "1117"
  },
  {
   "$ref": "1126"
  },
  {
   "$id": "1137",
   "kind": "model",
   "name": "FaultSimulation",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.FaultSimulation",
   "usage": "Output,Json,LroFinalEnvelope",
   "doc": "Fault simulation object with status.",
   "decorators": [],
   "properties": [
    {
     "$id": "1138",
     "kind": "property",
     "name": "simulationId",
     "serializedName": "simulationId",
     "doc": "unique identifier for the fault simulation.",
     "type": {
      "$id": "1139",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.FaultSimulation.simulationId",
     "serializationOptions": {
      "$id": "1140",
      "json": {
       "$id": "1141",
       "name": "simulationId"
      }
     }
    },
    {
     "$id": "1142",
     "kind": "property",
     "name": "status",
     "serializedName": "status",
     "doc": "Fault simulation status",
     "type": {
      "$ref": "142"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.FaultSimulation.status",
     "serializationOptions": {
      "$id": "1143",
      "json": {
       "$id": "1144",
       "name": "status"
      }
     }
    },
    {
     "$id": "1145",
     "kind": "property",
     "name": "startTime",
     "serializedName": "startTime",
     "doc": "The start time of the fault simulation.",
     "type": {
      "$id": "1146",
      "kind": "utcDateTime",
      "name": "utcDateTime",
      "encode": "rfc3339",
      "wireType": {
       "$id": "1147",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.FaultSimulation.startTime",
     "serializationOptions": {
      "$id": "1148",
      "json": {
       "$id": "1149",
       "name": "startTime"
      }
     }
    },
    {
     "$id": "1150",
     "kind": "property",
     "name": "endTime",
     "serializedName": "endTime",
     "doc": "The end time of the fault simulation.",
     "type": {
      "$id": "1151",
      "kind": "utcDateTime",
      "name": "utcDateTime",
      "encode": "rfc3339",
      "wireType": {
       "$id": "1152",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.FaultSimulation.endTime",
     "serializationOptions": {
      "$id": "1153",
      "json": {
       "$id": "1154",
       "name": "endTime"
      }
     }
    },
    {
     "$id": "1155",
     "kind": "property",
     "name": "details",
     "serializedName": "details",
     "doc": "Fault simulation details",
     "type": {
      "$id": "1156",
      "kind": "model",
      "name": "FaultSimulationDetails",
      "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
      "crossLanguageDefinitionId": "Microsoft.ServiceFabric.FaultSimulationDetails",
      "usage": "Output,Json,LroFinalEnvelope",
      "doc": "Details for Fault Simulation.",
      "decorators": [],
      "properties": [
       {
        "$id": "1157",
        "kind": "property",
        "name": "clusterId",
        "serializedName": "clusterId",
        "doc": "unique identifier for the cluster resource.",
        "type": {
         "$id": "1158",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.FaultSimulationDetails.clusterId",
        "serializationOptions": {
         "$id": "1159",
         "json": {
          "$id": "1160",
          "name": "clusterId"
         }
        }
       },
       {
        "$id": "1161",
        "kind": "property",
        "name": "operationId",
        "serializedName": "operationId",
        "doc": "unique identifier for the operation associated with the fault simulation.",
        "type": {
         "$id": "1162",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.FaultSimulationDetails.operationId",
        "serializationOptions": {
         "$id": "1163",
         "json": {
          "$id": "1164",
          "name": "operationId"
         }
        }
       },
       {
        "$id": "1165",
        "kind": "property",
        "name": "nodeTypeFaultSimulation",
        "serializedName": "nodeTypeFaultSimulation",
        "doc": "List of node type simulations associated with the cluster fault simulation.",
        "type": {
         "$id": "1166",
         "kind": "array",
         "name": "ArrayNodeTypeFaultSimulation",
         "valueType": {
          "$id": "1167",
          "kind": "model",
          "name": "NodeTypeFaultSimulation",
          "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeFaultSimulation",
          "usage": "Output,Json,LroFinalEnvelope",
          "doc": "Node type fault simulation object with status.",
          "decorators": [],
          "properties": [
           {
            "$id": "1168",
            "kind": "property",
            "name": "nodeTypeName",
            "serializedName": "nodeTypeName",
            "doc": "Node type name.",
            "type": {
             "$id": "1169",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeFaultSimulation.nodeTypeName",
            "serializationOptions": {
             "$id": "1170",
             "json": {
              "$id": "1171",
              "name": "nodeTypeName"
             }
            }
           },
           {
            "$id": "1172",
            "kind": "property",
            "name": "status",
            "serializedName": "status",
            "doc": "Fault simulation status",
            "type": {
             "$ref": "142"
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeFaultSimulation.status",
            "serializationOptions": {
             "$id": "1173",
             "json": {
              "$id": "1174",
              "name": "status"
             }
            }
           },
           {
            "$id": "1175",
            "kind": "property",
            "name": "operationId",
            "serializedName": "operationId",
            "doc": "Current or latest asynchronous operation identifier on the node type.",
            "type": {
             "$id": "1176",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeFaultSimulation.operationId",
            "serializationOptions": {
             "$id": "1177",
             "json": {
              "$id": "1178",
              "name": "operationId"
             }
            }
           },
           {
            "$id": "1179",
            "kind": "property",
            "name": "operationStatus",
            "serializedName": "operationStatus",
            "doc": "Current or latest asynchronous operation status on the node type",
            "type": {
             "$ref": "156"
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeFaultSimulation.operationStatus",
            "serializationOptions": {
             "$id": "1180",
             "json": {
              "$id": "1181",
              "name": "operationStatus"
             }
            }
           }
          ]
         },
         "crossLanguageDefinitionId": "TypeSpec.Array",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.FaultSimulationDetails.nodeTypeFaultSimulation",
        "serializationOptions": {
         "$id": "1182",
         "json": {
          "$id": "1183",
          "name": "nodeTypeFaultSimulation"
         }
        }
       },
       {
        "$id": "1184",
        "kind": "property",
        "name": "parameters",
        "serializedName": "parameters",
        "doc": "Fault simulation parameters.",
        "type": {
         "$ref": "1108"
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.FaultSimulationDetails.parameters",
        "serializationOptions": {
         "$id": "1185",
         "json": {
          "$id": "1186",
          "name": "parameters"
         }
        }
       }
      ]
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.FaultSimulation.details",
     "serializationOptions": {
      "$id": "1187",
      "json": {
       "$id": "1188",
       "name": "details"
      }
     }
    }
   ]
  },
  {
   "$ref": "1156"
  },
  {
   "$ref": "1167"
  },
  {
   "$id": "1189",
   "kind": "model",
   "name": "FaultSimulationIdContent",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.FaultSimulationIdContent",
   "usage": "Input,Json",
   "doc": "Parameters for Fault Simulation id.",
   "decorators": [],
   "properties": [
    {
     "$id": "1190",
     "kind": "property",
     "name": "simulationId",
     "serializedName": "simulationId",
     "doc": "unique identifier for the fault simulation.",
     "type": {
      "$id": "1191",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.FaultSimulationIdContent.simulationId",
     "serializationOptions": {
      "$id": "1192",
      "json": {
       "$id": "1193",
       "name": "simulationId"
      }
     }
    }
   ]
  },
  {
   "$id": "1194",
   "kind": "model",
   "name": "FaultSimulationListResult",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.FaultSimulationListResult",
   "usage": "Output,Json",
   "doc": "Fault simulation list results",
   "decorators": [],
   "properties": [
    {
     "$id": "1195",
     "kind": "property",
     "name": "value",
     "serializedName": "value",
     "doc": "The FaultSimulation items on this page",
     "type": {
      "$id": "1196",
      "kind": "array",
      "name": "ArrayFaultSimulation",
      "valueType": {
       "$ref": "1137"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.FaultSimulationListResult.value",
     "serializationOptions": {
      "$id": "1197",
      "json": {
       "$id": "1198",
       "name": "value"
      }
     }
    },
    {
     "$id": "1199",
     "kind": "property",
     "name": "nextLink",
     "serializedName": "nextLink",
     "doc": "The link to the next page of items",
     "type": {
      "$id": "1200",
      "kind": "url",
      "name": "ResourceLocation",
      "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
      "baseType": {
       "$id": "1201",
       "kind": "url",
       "name": "url",
       "crossLanguageDefinitionId": "TypeSpec.url",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.FaultSimulationListResult.nextLink",
     "serializationOptions": {
      "$id": "1202",
      "json": {
       "$id": "1203",
       "name": "nextLink"
      }
     }
    }
   ]
  },
  {
   "$id": "1204",
   "kind": "model",
   "name": "ManagedMaintenanceWindowStatus",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedMaintenanceWindowStatusContent",
   "usage": "Output,Json",
   "doc": "Describes the maintenance window status of the Service Fabric Managed Cluster.",
   "decorators": [],
   "properties": [
    {
     "$id": "1205",
     "kind": "property",
     "name": "isWindowEnabled",
     "serializedName": "isWindowEnabled",
     "doc": "If maintenance window is enabled on this cluster.",
     "type": {
      "$id": "1206",
      "kind": "boolean",
      "name": "boolean",
      "crossLanguageDefinitionId": "TypeSpec.boolean",
      "decorators": []
     },
     "optional": true,
     "readOnly": true,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedMaintenanceWindowStatusContent.isWindowEnabled",
     "serializationOptions": {
      "$id": "1207",
      "json": {
       "$id": "1208",
       "name": "isWindowEnabled"
      }
     }
    },
    {
     "$id": "1209",
     "kind": "property",
     "name": "isRegionReady",
     "serializedName": "isRegionReady",
     "doc": "Indicates if the region is ready to configure maintenance windows.",
     "type": {
      "$id": "1210",
      "kind": "boolean",
      "name": "boolean",
      "crossLanguageDefinitionId": "TypeSpec.boolean",
      "decorators": []
     },
     "optional": true,
     "readOnly": true,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedMaintenanceWindowStatusContent.isRegionReady",
     "serializationOptions": {
      "$id": "1211",
      "json": {
       "$id": "1212",
       "name": "isRegionReady"
      }
     }
    },
    {
     "$id": "1213",
     "kind": "property",
     "name": "isWindowActive",
     "serializedName": "isWindowActive",
     "doc": "If maintenance window is active.",
     "type": {
      "$id": "1214",
      "kind": "boolean",
      "name": "boolean",
      "crossLanguageDefinitionId": "TypeSpec.boolean",
      "decorators": []
     },
     "optional": true,
     "readOnly": true,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedMaintenanceWindowStatusContent.isWindowActive",
     "serializationOptions": {
      "$id": "1215",
      "json": {
       "$id": "1216",
       "name": "isWindowActive"
      }
     }
    },
    {
     "$id": "1217",
     "kind": "property",
     "name": "canApplyUpdates",
     "serializedName": "canApplyUpdates",
     "doc": "If updates can be applied.",
     "type": {
      "$id": "1218",
      "kind": "boolean",
      "name": "boolean",
      "crossLanguageDefinitionId": "TypeSpec.boolean",
      "decorators": []
     },
     "optional": true,
     "readOnly": true,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedMaintenanceWindowStatusContent.canApplyUpdates",
     "serializationOptions": {
      "$id": "1219",
      "json": {
       "$id": "1220",
       "name": "canApplyUpdates"
      }
     }
    },
    {
     "$id": "1221",
     "kind": "property",
     "name": "LastWindowStatusUpdatedOn",
     "serializedName": "lastWindowStatusUpdateAtUTC",
     "doc": "Last window update time in UTC.",
     "type": {
      "$id": "1222",
      "kind": "utcDateTime",
      "name": "utcDateTime",
      "encode": "rfc3339",
      "wireType": {
       "$id": "1223",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
      "decorators": []
     },
     "optional": true,
     "readOnly": true,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedMaintenanceWindowStatusContent.lastWindowStatusUpdateAtUTC",
     "serializationOptions": {
      "$id": "1224",
      "json": {
       "$id": "1225",
       "name": "lastWindowStatusUpdateAtUTC"
      }
     }
    },
    {
     "$id": "1226",
     "kind": "property",
     "name": "LastWindowStartOn",
     "serializedName": "lastWindowStartTimeUTC",
     "doc": "Last window start time in UTC.",
     "type": {
      "$id": "1227",
      "kind": "utcDateTime",
      "name": "utcDateTime",
      "encode": "rfc3339",
      "wireType": {
       "$id": "1228",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
      "decorators": []
     },
     "optional": true,
     "readOnly": true,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedMaintenanceWindowStatusContent.lastWindowStartTimeUTC",
     "serializationOptions": {
      "$id": "1229",
      "json": {
       "$id": "1230",
       "name": "lastWindowStartTimeUTC"
      }
     }
    },
    {
     "$id": "1231",
     "kind": "property",
     "name": "LastWindowEndOn",
     "serializedName": "lastWindowEndTimeUTC",
     "doc": "Last window end time in UTC.",
     "type": {
      "$id": "1232",
      "kind": "utcDateTime",
      "name": "utcDateTime",
      "encode": "rfc3339",
      "wireType": {
       "$id": "1233",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
      "decorators": []
     },
     "optional": true,
     "readOnly": true,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedMaintenanceWindowStatusContent.lastWindowEndTimeUTC",
     "serializationOptions": {
      "$id": "1234",
      "json": {
       "$id": "1235",
       "name": "lastWindowEndTimeUTC"
      }
     }
    }
   ]
  },
  {
   "$id": "1236",
   "kind": "model",
   "name": "ManagedAzResiliencyStatus",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedAzResiliencyStatusContent",
   "usage": "Output,Json",
   "doc": "Describes the result of the request to list Managed VM Sizes for Service Fabric Managed Clusters.",
   "decorators": [],
   "properties": [
    {
     "$id": "1237",
     "kind": "property",
     "name": "baseResourceStatus",
     "serializedName": "baseResourceStatus",
     "doc": "List of Managed VM Sizes for Service Fabric Managed Clusters.",
     "type": {
      "$id": "1238",
      "kind": "array",
      "name": "ArrayResourceAzStatus",
      "valueType": {
       "$id": "1239",
       "kind": "model",
       "name": "ResourceAzStatus",
       "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ResourceAzStatus",
       "usage": "Output,Json",
       "doc": "Describes Az Resiliency status of Base resources",
       "decorators": [],
       "properties": [
        {
         "$id": "1240",
         "kind": "property",
         "name": "resourceName",
         "serializedName": "resourceName",
         "doc": "VM Size properties.",
         "type": {
          "$id": "1241",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": true,
         "readOnly": true,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ResourceAzStatus.resourceName",
         "serializationOptions": {
          "$id": "1242",
          "json": {
           "$id": "1243",
           "name": "resourceName"
          }
         }
        },
        {
         "$id": "1244",
         "kind": "property",
         "name": "-|resource-type",
         "serializedName": "resourceType",
         "doc": "VM Size id.",
         "type": {
          "$id": "1245",
          "kind": "string",
          "name": "armResourceType",
          "crossLanguageDefinitionId": "Azure.Core.armResourceType",
          "baseType": {
           "$id": "1246",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "decorators": []
         },
         "optional": true,
         "readOnly": true,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ResourceAzStatus.resourceType",
         "serializationOptions": {
          "$id": "1247",
          "json": {
           "$id": "1248",
           "name": "resourceType"
          }
         }
        },
        {
         "$id": "1249",
         "kind": "property",
         "name": "isZoneResilient",
         "serializedName": "isZoneResilient",
         "doc": "VM Size name.",
         "type": {
          "$id": "1250",
          "kind": "boolean",
          "name": "boolean",
          "crossLanguageDefinitionId": "TypeSpec.boolean",
          "decorators": []
         },
         "optional": true,
         "readOnly": true,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ResourceAzStatus.isZoneResilient",
         "serializationOptions": {
          "$id": "1251",
          "json": {
           "$id": "1252",
           "name": "isZoneResilient"
          }
         }
        },
        {
         "$id": "1253",
         "kind": "property",
         "name": "details",
         "serializedName": "details",
         "doc": "Zone resiliency status details for the resource.",
         "type": {
          "$id": "1254",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": true,
         "readOnly": true,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ResourceAzStatus.details",
         "serializationOptions": {
          "$id": "1255",
          "json": {
           "$id": "1256",
           "name": "details"
          }
         }
        }
       ]
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedAzResiliencyStatusContent.baseResourceStatus",
     "serializationOptions": {
      "$id": "1257",
      "json": {
       "$id": "1258",
       "name": "baseResourceStatus"
      }
     }
    },
    {
     "$id": "1259",
     "kind": "property",
     "name": "isClusterZoneResilient",
     "serializedName": "isClusterZoneResilient",
     "doc": "URL to get the next set of Managed VM Sizes if there are any.",
     "type": {
      "$id": "1260",
      "kind": "boolean",
      "name": "boolean",
      "crossLanguageDefinitionId": "TypeSpec.boolean",
      "decorators": []
     },
     "optional": true,
     "readOnly": true,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedAzResiliencyStatusContent.isClusterZoneResilient",
     "serializationOptions": {
      "$id": "1261",
      "json": {
       "$id": "1262",
       "name": "isClusterZoneResilient"
      }
     }
    }
   ]
  },
  {
   "$ref": "1239"
  },
  {
   "$id": "1263",
   "kind": "model",
   "name": "ServiceFabricManagedCluster",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedCluster",
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "doc": "The managed cluster resource",
   "decorators": [],
   "baseModel": {
    "$id": "1264",
    "kind": "model",
    "name": "TrackedResource",
    "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
    "crossLanguageDefinitionId": "Azure.ResourceManager.CommonTypes.TrackedResource",
    "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
    "doc": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
    "decorators": [],
    "baseModel": {
     "$ref": "501"
    },
    "properties": [
     {
      "$id": "1265",
      "kind": "property",
      "name": "tags",
      "serializedName": "tags",
      "doc": "Resource tags.",
      "type": {
       "$id": "1266",
       "kind": "dict",
       "keyType": {
        "$id": "1267",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "valueType": {
        "$id": "1268",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "decorators": []
      },
      "optional": true,
      "readOnly": false,
      "discriminator": false,
      "flatten": false,
      "decorators": [],
      "crossLanguageDefinitionId": "Azure.ResourceManager.CommonTypes.TrackedResource.tags",
      "serializationOptions": {
       "$id": "1269",
       "json": {
        "$id": "1270",
        "name": "tags"
       }
      }
     },
     {
      "$id": "1271",
      "kind": "property",
      "name": "location",
      "serializedName": "location",
      "doc": "The geo-location where the resource lives",
      "type": {
       "$id": "1272",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "optional": false,
      "readOnly": false,
      "discriminator": false,
      "flatten": false,
      "decorators": [],
      "crossLanguageDefinitionId": "Azure.ResourceManager.CommonTypes.TrackedResource.location",
      "serializationOptions": {
       "$id": "1273",
       "json": {
        "$id": "1274",
        "name": "location"
       }
      }
     }
    ]
   },
   "properties": [
    {
     "$id": "1275",
     "kind": "property",
     "name": "properties",
     "serializedName": "properties",
     "doc": "The managed cluster resource properties",
     "type": {
      "$id": "1276",
      "kind": "model",
      "name": "ManagedClusterProperties",
      "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
      "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties",
      "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
      "doc": "Describes the managed cluster resource properties.",
      "decorators": [],
      "properties": [
       {
        "$id": "1277",
        "kind": "property",
        "name": "dnsName",
        "serializedName": "dnsName",
        "doc": "The cluster dns name.",
        "type": {
         "$id": "1278",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.dnsName",
        "serializationOptions": {
         "$id": "1279",
         "json": {
          "$id": "1280",
          "name": "dnsName"
         }
        }
       },
       {
        "$id": "1281",
        "kind": "property",
        "name": "fqdn",
        "serializedName": "fqdn",
        "doc": "The fully qualified domain name associated with the public load balancer of the cluster.",
        "type": {
         "$id": "1282",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": true,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.fqdn",
        "serializationOptions": {
         "$id": "1283",
         "json": {
          "$id": "1284",
          "name": "fqdn"
         }
        }
       },
       {
        "$id": "1285",
        "kind": "property",
        "name": "ipv4Address",
        "serializedName": "ipv4Address",
        "doc": "The IPv4 address associated with the public load balancer of the cluster.",
        "type": {
         "$id": "1286",
         "kind": "string",
         "name": "ipV4Address",
         "crossLanguageDefinitionId": "Azure.Core.ipV4Address",
         "baseType": {
          "$id": "1287",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "decorators": []
        },
        "optional": true,
        "readOnly": true,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.ipv4Address",
        "serializationOptions": {
         "$id": "1288",
         "json": {
          "$id": "1289",
          "name": "ipv4Address"
         }
        }
       },
       {
        "$id": "1290",
        "kind": "property",
        "name": "-|uuid",
        "serializedName": "clusterId",
        "doc": "A service generated unique identifier for the cluster resource.",
        "type": {
         "$id": "1291",
         "kind": "string",
         "name": "uuid",
         "crossLanguageDefinitionId": "Azure.Core.uuid",
         "baseType": {
          "$id": "1292",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "decorators": []
        },
        "optional": true,
        "readOnly": true,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.clusterId",
        "serializationOptions": {
         "$id": "1293",
         "json": {
          "$id": "1294",
          "name": "clusterId"
         }
        }
       },
       {
        "$id": "1295",
        "kind": "property",
        "name": "clusterState",
        "serializedName": "clusterState",
        "doc": "The current state of the cluster.",
        "type": {
         "$ref": "170"
        },
        "optional": true,
        "readOnly": true,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.clusterState",
        "serializationOptions": {
         "$id": "1296",
         "json": {
          "$id": "1297",
          "name": "clusterState"
         }
        }
       },
       {
        "$id": "1298",
        "kind": "property",
        "name": "-|any",
        "serializedName": "clusterCertificateThumbprints",
        "doc": "List of thumbprints of the cluster certificates.",
        "type": {
         "$id": "1299",
         "kind": "array",
         "name": "Array",
         "valueType": {
          "$id": "1300",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "crossLanguageDefinitionId": "TypeSpec.Array",
         "decorators": []
        },
        "optional": true,
        "readOnly": true,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.clusterCertificateThumbprints",
        "serializationOptions": {
         "$id": "1301",
         "json": {
          "$id": "1302",
          "name": "clusterCertificateThumbprints"
         }
        }
       },
       {
        "$id": "1303",
        "kind": "property",
        "name": "clientConnectionPort",
        "serializedName": "clientConnectionPort",
        "doc": "The port used for client connections to the cluster.",
        "type": {
         "$id": "1304",
         "kind": "int32",
         "name": "int32",
         "crossLanguageDefinitionId": "TypeSpec.int32",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.clientConnectionPort",
        "serializationOptions": {
         "$id": "1305",
         "json": {
          "$id": "1306",
          "name": "clientConnectionPort"
         }
        }
       },
       {
        "$id": "1307",
        "kind": "property",
        "name": "httpGatewayConnectionPort",
        "serializedName": "httpGatewayConnectionPort",
        "doc": "The port used for HTTP connections to the cluster.",
        "type": {
         "$id": "1308",
         "kind": "int32",
         "name": "int32",
         "crossLanguageDefinitionId": "TypeSpec.int32",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.httpGatewayConnectionPort",
        "serializationOptions": {
         "$id": "1309",
         "json": {
          "$id": "1310",
          "name": "httpGatewayConnectionPort"
         }
        }
       },
       {
        "$id": "1311",
        "kind": "property",
        "name": "adminUserName",
        "serializedName": "adminUserName",
        "doc": "VM admin user name.",
        "type": {
         "$id": "1312",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.adminUserName",
        "serializationOptions": {
         "$id": "1313",
         "json": {
          "$id": "1314",
          "name": "adminUserName"
         }
        }
       },
       {
        "$id": "1315",
        "kind": "property",
        "name": "adminPassword",
        "serializedName": "adminPassword",
        "doc": "VM admin user password.",
        "type": {
         "$id": "1316",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.adminPassword",
        "serializationOptions": {
         "$id": "1317",
         "json": {
          "$id": "1318",
          "name": "adminPassword"
         }
        }
       },
       {
        "$id": "1319",
        "kind": "property",
        "name": "loadBalancingRules",
        "serializedName": "loadBalancingRules",
        "doc": "Load balancing rules that are applied to the public load balancer of the cluster.",
        "type": {
         "$id": "1320",
         "kind": "array",
         "name": "ArrayLoadBalancingRule",
         "valueType": {
          "$id": "1321",
          "kind": "model",
          "name": "ManagedClusterLoadBalancingRule",
          "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.LoadBalancingRule",
          "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
          "doc": "Describes a load balancing rule.",
          "decorators": [],
          "properties": [
           {
            "$id": "1322",
            "kind": "property",
            "name": "frontendPort",
            "serializedName": "frontendPort",
            "doc": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 1 and 65534.",
            "type": {
             "$id": "1323",
             "kind": "int32",
             "name": "int32",
             "crossLanguageDefinitionId": "TypeSpec.int32",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.LoadBalancingRule.frontendPort",
            "serializationOptions": {
             "$id": "1324",
             "json": {
              "$id": "1325",
              "name": "frontendPort"
             }
            }
           },
           {
            "$id": "1326",
            "kind": "property",
            "name": "backendPort",
            "serializedName": "backendPort",
            "doc": "The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.",
            "type": {
             "$id": "1327",
             "kind": "int32",
             "name": "int32",
             "crossLanguageDefinitionId": "TypeSpec.int32",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.LoadBalancingRule.backendPort",
            "serializationOptions": {
             "$id": "1328",
             "json": {
              "$id": "1329",
              "name": "backendPort"
             }
            }
           },
           {
            "$id": "1330",
            "kind": "property",
            "name": "protocol",
            "serializedName": "protocol",
            "doc": "The reference to the transport protocol used by the load balancing rule.",
            "type": {
             "$ref": "184"
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.LoadBalancingRule.protocol",
            "serializationOptions": {
             "$id": "1331",
             "json": {
              "$id": "1332",
              "name": "protocol"
             }
            }
           },
           {
            "$id": "1333",
            "kind": "property",
            "name": "probePort",
            "serializedName": "probePort",
            "doc": "The prob port used by the load balancing rule. Acceptable values are between 1 and 65535.",
            "type": {
             "$id": "1334",
             "kind": "int32",
             "name": "int32",
             "crossLanguageDefinitionId": "TypeSpec.int32",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.LoadBalancingRule.probePort",
            "serializationOptions": {
             "$id": "1335",
             "json": {
              "$id": "1336",
              "name": "probePort"
             }
            }
           },
           {
            "$id": "1337",
            "kind": "property",
            "name": "probeProtocol",
            "serializedName": "probeProtocol",
            "doc": "the reference to the load balancer probe used by the load balancing rule.",
            "type": {
             "$ref": "190"
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.LoadBalancingRule.probeProtocol",
            "serializationOptions": {
             "$id": "1338",
             "json": {
              "$id": "1339",
              "name": "probeProtocol"
             }
            }
           },
           {
            "$id": "1340",
            "kind": "property",
            "name": "probeRequestPath",
            "serializedName": "probeRequestPath",
            "doc": "The probe request path. Only supported for HTTP/HTTPS probes.",
            "type": {
             "$id": "1341",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.LoadBalancingRule.probeRequestPath",
            "serializationOptions": {
             "$id": "1342",
             "json": {
              "$id": "1343",
              "name": "probeRequestPath"
             }
            }
           },
           {
            "$id": "1344",
            "kind": "property",
            "name": "loadDistribution",
            "serializedName": "loadDistribution",
            "doc": "The load distribution policy for this rule.",
            "type": {
             "$id": "1345",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.LoadBalancingRule.loadDistribution",
            "serializationOptions": {
             "$id": "1346",
             "json": {
              "$id": "1347",
              "name": "loadDistribution"
             }
            }
           }
          ]
         },
         "crossLanguageDefinitionId": "TypeSpec.Array",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.loadBalancingRules",
        "serializationOptions": {
         "$id": "1348",
         "json": {
          "$id": "1349",
          "name": "loadBalancingRules"
         }
        }
       },
       {
        "$id": "1350",
        "kind": "property",
        "name": "IsRdpAccessAllowed",
        "serializedName": "allowRdpAccess",
        "doc": "Setting this to true enables RDP access to the VM. The default NSG rule opens RDP port to Internet which can be overridden with custom Network Security Rules. The default value for this setting is false.",
        "type": {
         "$id": "1351",
         "kind": "boolean",
         "name": "boolean",
         "crossLanguageDefinitionId": "TypeSpec.boolean",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.allowRdpAccess",
        "serializationOptions": {
         "$id": "1352",
         "json": {
          "$id": "1353",
          "name": "allowRdpAccess"
         }
        }
       },
       {
        "$id": "1354",
        "kind": "property",
        "name": "networkSecurityRules",
        "serializedName": "networkSecurityRules",
        "doc": "Custom Network Security Rules that are applied to the Virtual Network of the cluster.",
        "type": {
         "$id": "1355",
         "kind": "array",
         "name": "ArrayNetworkSecurityRule",
         "valueType": {
          "$ref": "737"
         },
         "crossLanguageDefinitionId": "TypeSpec.Array",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.networkSecurityRules",
        "serializationOptions": {
         "$id": "1356",
         "json": {
          "$id": "1357",
          "name": "networkSecurityRules"
         }
        }
       },
       {
        "$id": "1358",
        "kind": "property",
        "name": "clients",
        "serializedName": "clients",
        "doc": "Client certificates that are allowed to manage the cluster.",
        "type": {
         "$id": "1359",
         "kind": "array",
         "name": "ArrayClientCertificate",
         "valueType": {
          "$id": "1360",
          "kind": "model",
          "name": "ManagedClusterClientCertificate",
          "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ClientCertificate",
          "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
          "doc": "Client certificate definition.",
          "decorators": [],
          "properties": [
           {
            "$id": "1361",
            "kind": "property",
            "name": "isAdmin",
            "serializedName": "isAdmin",
            "doc": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster.",
            "type": {
             "$id": "1362",
             "kind": "boolean",
             "name": "boolean",
             "crossLanguageDefinitionId": "TypeSpec.boolean",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ClientCertificate.isAdmin",
            "serializationOptions": {
             "$id": "1363",
             "json": {
              "$id": "1364",
              "name": "isAdmin"
             }
            }
           },
           {
            "$id": "1365",
            "kind": "property",
            "name": "thumbprint",
            "serializedName": "thumbprint",
            "doc": "Certificate thumbprint.",
            "type": {
             "$id": "1366",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ClientCertificate.thumbprint",
            "serializationOptions": {
             "$id": "1367",
             "json": {
              "$id": "1368",
              "name": "thumbprint"
             }
            }
           },
           {
            "$id": "1369",
            "kind": "property",
            "name": "commonName",
            "serializedName": "commonName",
            "doc": "Certificate common name.",
            "type": {
             "$id": "1370",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ClientCertificate.commonName",
            "serializationOptions": {
             "$id": "1371",
             "json": {
              "$id": "1372",
              "name": "commonName"
             }
            }
           },
           {
            "$id": "1373",
            "kind": "property",
            "name": "issuerThumbprint",
            "serializedName": "issuerThumbprint",
            "doc": "Issuer thumbprint for the certificate. Only used together with CommonName.",
            "type": {
             "$id": "1374",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ClientCertificate.issuerThumbprint",
            "serializationOptions": {
             "$id": "1375",
             "json": {
              "$id": "1376",
              "name": "issuerThumbprint"
             }
            }
           }
          ]
         },
         "crossLanguageDefinitionId": "TypeSpec.Array",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.clients",
        "serializationOptions": {
         "$id": "1377",
         "json": {
          "$id": "1378",
          "name": "clients"
         }
        }
       },
       {
        "$id": "1379",
        "kind": "property",
        "name": "azureActiveDirectory",
        "serializedName": "azureActiveDirectory",
        "doc": "The AAD authentication settings of the cluster.",
        "type": {
         "$id": "1380",
         "kind": "model",
         "name": "ManagedClusterAzureActiveDirectory",
         "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
         "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AzureActiveDirectory",
         "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
         "doc": "The settings to enable AAD authentication on the cluster.",
         "decorators": [],
         "properties": [
          {
           "$id": "1381",
           "kind": "property",
           "name": "tenantId",
           "serializedName": "tenantId",
           "doc": "Azure active directory tenant id.",
           "type": {
            "$id": "1382",
            "kind": "string",
            "name": "uuid",
            "crossLanguageDefinitionId": "Azure.Core.uuid",
            "baseType": {
             "$id": "1383",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "decorators": []
           },
           "optional": true,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AzureActiveDirectory.tenantId",
           "serializationOptions": {
            "$id": "1384",
            "json": {
             "$id": "1385",
             "name": "tenantId"
            }
           }
          },
          {
           "$id": "1386",
           "kind": "property",
           "name": "clusterApplication",
           "serializedName": "clusterApplication",
           "doc": "Azure active directory cluster application id.",
           "type": {
            "$id": "1387",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           "optional": true,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AzureActiveDirectory.clusterApplication",
           "serializationOptions": {
            "$id": "1388",
            "json": {
             "$id": "1389",
             "name": "clusterApplication"
            }
           }
          },
          {
           "$id": "1390",
           "kind": "property",
           "name": "clientApplication",
           "serializedName": "clientApplication",
           "doc": "Azure active directory client application id.",
           "type": {
            "$id": "1391",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           "optional": true,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AzureActiveDirectory.clientApplication",
           "serializationOptions": {
            "$id": "1392",
            "json": {
             "$id": "1393",
             "name": "clientApplication"
            }
           }
          }
         ]
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.azureActiveDirectory",
        "serializationOptions": {
         "$id": "1394",
         "json": {
          "$id": "1395",
          "name": "azureActiveDirectory"
         }
        }
       },
       {
        "$id": "1396",
        "kind": "property",
        "name": "fabricSettings",
        "serializedName": "fabricSettings",
        "doc": "The list of custom fabric settings to configure the cluster.",
        "type": {
         "$id": "1397",
         "kind": "array",
         "name": "ArraySettingsSectionDescription",
         "valueType": {
          "$id": "1398",
          "kind": "model",
          "name": "ClusterFabricSettingsSection",
          "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.SettingsSectionDescription",
          "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
          "doc": "Describes a section in the fabric settings of the cluster.",
          "decorators": [],
          "properties": [
           {
            "$id": "1399",
            "kind": "property",
            "name": "name",
            "serializedName": "name",
            "doc": "The section name of the fabric settings.",
            "type": {
             "$id": "1400",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.SettingsSectionDescription.name",
            "serializationOptions": {
             "$id": "1401",
             "json": {
              "$id": "1402",
              "name": "name"
             }
            }
           },
           {
            "$id": "1403",
            "kind": "property",
            "name": "parameters",
            "serializedName": "parameters",
            "doc": "The collection of parameters in the section.",
            "type": {
             "$id": "1404",
             "kind": "array",
             "name": "ArraySettingsParameterDescription",
             "valueType": {
              "$id": "1405",
              "kind": "model",
              "name": "ClusterFabricSettingsParameterDescription",
              "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
              "crossLanguageDefinitionId": "Microsoft.ServiceFabric.SettingsParameterDescription",
              "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
              "doc": "Describes a parameter in fabric settings of the cluster.",
              "decorators": [],
              "properties": [
               {
                "$id": "1406",
                "kind": "property",
                "name": "name",
                "serializedName": "name",
                "doc": "The parameter name of fabric setting.",
                "type": {
                 "$id": "1407",
                 "kind": "string",
                 "name": "string",
                 "crossLanguageDefinitionId": "TypeSpec.string",
                 "decorators": []
                },
                "optional": false,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "Microsoft.ServiceFabric.SettingsParameterDescription.name",
                "serializationOptions": {
                 "$id": "1408",
                 "json": {
                  "$id": "1409",
                  "name": "name"
                 }
                }
               },
               {
                "$id": "1410",
                "kind": "property",
                "name": "value",
                "serializedName": "value",
                "doc": "The parameter value of fabric setting.",
                "type": {
                 "$id": "1411",
                 "kind": "string",
                 "name": "string",
                 "crossLanguageDefinitionId": "TypeSpec.string",
                 "decorators": []
                },
                "optional": false,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "Microsoft.ServiceFabric.SettingsParameterDescription.value",
                "serializationOptions": {
                 "$id": "1412",
                 "json": {
                  "$id": "1413",
                  "name": "value"
                 }
                }
               }
              ]
             },
             "crossLanguageDefinitionId": "TypeSpec.Array",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.SettingsSectionDescription.parameters",
            "serializationOptions": {
             "$id": "1414",
             "json": {
              "$id": "1415",
              "name": "parameters"
             }
            }
           }
          ]
         },
         "crossLanguageDefinitionId": "TypeSpec.Array",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.fabricSettings",
        "serializationOptions": {
         "$id": "1416",
         "json": {
          "$id": "1417",
          "name": "fabricSettings"
         }
        }
       },
       {
        "$id": "1418",
        "kind": "property",
        "name": "provisioningState",
        "serializedName": "provisioningState",
        "doc": "The provisioning state of the managed cluster resource.",
        "type": {
         "$ref": "70"
        },
        "optional": true,
        "readOnly": true,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.provisioningState",
        "serializationOptions": {
         "$id": "1419",
         "json": {
          "$id": "1420",
          "name": "provisioningState"
         }
        }
       },
       {
        "$id": "1421",
        "kind": "property",
        "name": "clusterCodeVersion",
        "serializedName": "clusterCodeVersion",
        "doc": "The Service Fabric runtime version of the cluster. This property is required when **clusterUpgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.",
        "type": {
         "$id": "1422",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.clusterCodeVersion",
        "serializationOptions": {
         "$id": "1423",
         "json": {
          "$id": "1424",
          "name": "clusterCodeVersion"
         }
        }
       },
       {
        "$id": "1425",
        "kind": "property",
        "name": "clusterUpgradeMode",
        "serializedName": "clusterUpgradeMode",
        "doc": "The upgrade mode of the cluster when new Service Fabric runtime version is available.",
        "type": {
         "$ref": "198"
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.clusterUpgradeMode",
        "serializationOptions": {
         "$id": "1426",
         "json": {
          "$id": "1427",
          "name": "clusterUpgradeMode"
         }
        }
       },
       {
        "$id": "1428",
        "kind": "property",
        "name": "clusterUpgradeCadence",
        "serializedName": "clusterUpgradeCadence",
        "doc": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **clusterUpgradeMode** is set to 'Automatic'.",
        "type": {
         "$ref": "204"
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.clusterUpgradeCadence",
        "serializationOptions": {
         "$id": "1429",
         "json": {
          "$id": "1430",
          "name": "clusterUpgradeCadence"
         }
        }
       },
       {
        "$id": "1431",
        "kind": "property",
        "name": "AddOnFeatures",
        "serializedName": "addonFeatures",
        "doc": "List of add-on features to enable on the cluster.",
        "type": {
         "$id": "1432",
         "kind": "array",
         "name": "ArrayManagedClusterAddOnFeature",
         "valueType": {
          "$ref": "212"
         },
         "crossLanguageDefinitionId": "TypeSpec.Array",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.addonFeatures",
        "serializationOptions": {
         "$id": "1433",
         "json": {
          "$id": "1434",
          "name": "addonFeatures"
         }
        }
       },
       {
        "$id": "1435",
        "kind": "property",
        "name": "IsAutoOSUpgradeEnabled",
        "serializedName": "enableAutoOSUpgrade",
        "doc": "Enables automatic OS upgrade for node types created using OS images with version 'latest'. The default value for this setting is false.",
        "type": {
         "$id": "1436",
         "kind": "boolean",
         "name": "boolean",
         "crossLanguageDefinitionId": "TypeSpec.boolean",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.enableAutoOSUpgrade",
        "serializationOptions": {
         "$id": "1437",
         "json": {
          "$id": "1438",
          "name": "enableAutoOSUpgrade"
         }
        }
       },
       {
        "$id": "1439",
        "kind": "property",
        "name": "HasZoneResiliency",
        "serializedName": "zonalResiliency",
        "doc": "Indicates if the cluster has zone resiliency.",
        "type": {
         "$id": "1440",
         "kind": "boolean",
         "name": "boolean",
         "crossLanguageDefinitionId": "TypeSpec.boolean",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.zonalResiliency",
        "serializationOptions": {
         "$id": "1441",
         "json": {
          "$id": "1442",
          "name": "zonalResiliency"
         }
        }
       },
       {
        "$id": "1443",
        "kind": "property",
        "name": "applicationTypeVersionsCleanupPolicy",
        "serializedName": "applicationTypeVersionsCleanupPolicy",
        "doc": "The policy used to clean up unused versions.",
        "type": {
         "$id": "1444",
         "kind": "model",
         "name": "ApplicationTypeVersionsCleanupPolicy",
         "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
         "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeVersionsCleanupPolicy",
         "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
         "doc": "The policy used to clean up unused versions. When the policy is not specified explicitly, the default unused application versions to keep will be 3.",
         "decorators": [],
         "properties": [
          {
           "$id": "1445",
           "kind": "property",
           "name": "maxUnusedVersionsToKeep",
           "serializedName": "maxUnusedVersionsToKeep",
           "doc": "Number of unused versions per application type to keep.",
           "type": {
            "$id": "1446",
            "kind": "int32",
            "name": "int32",
            "crossLanguageDefinitionId": "TypeSpec.int32",
            "decorators": []
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeVersionsCleanupPolicy.maxUnusedVersionsToKeep",
           "serializationOptions": {
            "$id": "1447",
            "json": {
             "$id": "1448",
             "name": "maxUnusedVersionsToKeep"
            }
           }
          }
         ]
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.applicationTypeVersionsCleanupPolicy",
        "serializationOptions": {
         "$id": "1449",
         "json": {
          "$id": "1450",
          "name": "applicationTypeVersionsCleanupPolicy"
         }
        }
       },
       {
        "$id": "1451",
        "kind": "property",
        "name": "IsIPv6Enabled",
        "serializedName": "enableIpv6",
        "doc": "Setting this to true creates IPv6 address space for the default VNet used by the cluster. This setting cannot be changed once the cluster is created. The default value for this setting is false.",
        "type": {
         "$id": "1452",
         "kind": "boolean",
         "name": "boolean",
         "crossLanguageDefinitionId": "TypeSpec.boolean",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.enableIpv6",
        "serializationOptions": {
         "$id": "1453",
         "json": {
          "$id": "1454",
          "name": "enableIpv6"
         }
        }
       },
       {
        "$id": "1455",
        "kind": "property",
        "name": "subnetId",
        "serializedName": "subnetId",
        "doc": "If specified, the node types for the cluster are created in this subnet instead of the default VNet. The **networkSecurityRules** specified for the cluster are also applied to this subnet. This setting cannot be changed once the cluster is created.",
        "type": {
         "$id": "1456",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.subnetId",
        "serializationOptions": {
         "$id": "1457",
         "json": {
          "$id": "1458",
          "name": "subnetId"
         }
        }
       },
       {
        "$id": "1459",
        "kind": "property",
        "name": "ipTags",
        "serializedName": "ipTags",
        "doc": "The list of IP tags associated with the default public IP address of the cluster.",
        "type": {
         "$id": "1460",
         "kind": "array",
         "name": "ArrayIpTag",
         "valueType": {
          "$ref": "997"
         },
         "crossLanguageDefinitionId": "TypeSpec.Array",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.ipTags",
        "serializationOptions": {
         "$id": "1461",
         "json": {
          "$id": "1462",
          "name": "ipTags"
         }
        }
       },
       {
        "$id": "1463",
        "kind": "property",
        "name": "ipv6Address",
        "serializedName": "ipv6Address",
        "doc": "IPv6 address for the cluster if IPv6 is enabled.",
        "type": {
         "$id": "1464",
         "kind": "string",
         "name": "ipV6Address",
         "crossLanguageDefinitionId": "Azure.Core.ipV6Address",
         "baseType": {
          "$id": "1465",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "decorators": []
        },
        "optional": true,
        "readOnly": true,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.ipv6Address",
        "serializationOptions": {
         "$id": "1466",
         "json": {
          "$id": "1467",
          "name": "ipv6Address"
         }
        }
       },
       {
        "$id": "1468",
        "kind": "property",
        "name": "IsServicePublicIPEnabled",
        "serializedName": "enableServicePublicIP",
        "doc": "Setting this to true will link the IPv4 address as the ServicePublicIP of the IPv6 address. It can only be set to True if IPv6 is enabled on the cluster.",
        "type": {
         "$id": "1469",
         "kind": "boolean",
         "name": "boolean",
         "crossLanguageDefinitionId": "TypeSpec.boolean",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.enableServicePublicIP",
        "serializationOptions": {
         "$id": "1470",
         "json": {
          "$id": "1471",
          "name": "enableServicePublicIP"
         }
        }
       },
       {
        "$id": "1472",
        "kind": "property",
        "name": "auxiliarySubnets",
        "serializedName": "auxiliarySubnets",
        "doc": "Auxiliary subnets for the cluster.",
        "type": {
         "$id": "1473",
         "kind": "array",
         "name": "ArraySubnet",
         "valueType": {
          "$id": "1474",
          "kind": "model",
          "name": "ManagedClusterSubnet",
          "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Subnet",
          "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
          "doc": "Describes a Subnet.",
          "decorators": [],
          "properties": [
           {
            "$id": "1475",
            "kind": "property",
            "name": "name",
            "serializedName": "name",
            "doc": "Subnet name.",
            "type": {
             "$id": "1476",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Subnet.name",
            "serializationOptions": {
             "$id": "1477",
             "json": {
              "$id": "1478",
              "name": "name"
             }
            }
           },
           {
            "$id": "1479",
            "kind": "property",
            "name": "IsIPv6Enabled",
            "serializedName": "enableIpv6",
            "doc": "Indicates wether to enable Ipv6 or not. If not provided, it will take the same configuration as the cluster.",
            "type": {
             "$id": "1480",
             "kind": "boolean",
             "name": "boolean",
             "crossLanguageDefinitionId": "TypeSpec.boolean",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Subnet.enableIpv6",
            "serializationOptions": {
             "$id": "1481",
             "json": {
              "$id": "1482",
              "name": "enableIpv6"
             }
            }
           },
           {
            "$id": "1483",
            "kind": "property",
            "name": "privateEndpointNetworkPolicies",
            "serializedName": "privateEndpointNetworkPolicies",
            "doc": "Enable or Disable apply network policies on private end point in the subnet.",
            "type": {
             "$ref": "220"
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Subnet.privateEndpointNetworkPolicies",
            "serializationOptions": {
             "$id": "1484",
             "json": {
              "$id": "1485",
              "name": "privateEndpointNetworkPolicies"
             }
            }
           },
           {
            "$id": "1486",
            "kind": "property",
            "name": "privateLinkServiceNetworkPolicies",
            "serializedName": "privateLinkServiceNetworkPolicies",
            "doc": "Enable or Disable apply network policies on private link service in the subnet.",
            "type": {
             "$ref": "226"
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Subnet.privateLinkServiceNetworkPolicies",
            "serializationOptions": {
             "$id": "1487",
             "json": {
              "$id": "1488",
              "name": "privateLinkServiceNetworkPolicies"
             }
            }
           },
           {
            "$id": "1489",
            "kind": "property",
            "name": "networkSecurityGroupId",
            "serializedName": "networkSecurityGroupId",
            "doc": "Full resource id for the network security group.",
            "type": {
             "$id": "1490",
             "kind": "string",
             "name": "armResourceIdentifier",
             "crossLanguageDefinitionId": "Azure.Core.armResourceIdentifier",
             "baseType": {
              "$id": "1491",
              "kind": "string",
              "name": "string",
              "crossLanguageDefinitionId": "TypeSpec.string",
              "decorators": []
             },
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Subnet.networkSecurityGroupId",
            "serializationOptions": {
             "$id": "1492",
             "json": {
              "$id": "1493",
              "name": "networkSecurityGroupId"
             }
            }
           }
          ]
         },
         "crossLanguageDefinitionId": "TypeSpec.Array",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.auxiliarySubnets",
        "serializationOptions": {
         "$id": "1494",
         "json": {
          "$id": "1495",
          "name": "auxiliarySubnets"
         }
        }
       },
       {
        "$id": "1496",
        "kind": "property",
        "name": "serviceEndpoints",
        "serializedName": "serviceEndpoints",
        "doc": "Service endpoints for subnets in the cluster.",
        "type": {
         "$id": "1497",
         "kind": "array",
         "name": "ArrayServiceEndpoint",
         "valueType": {
          "$id": "1498",
          "kind": "model",
          "name": "ManagedClusterServiceEndpoint",
          "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceEndpoint",
          "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
          "doc": "The service endpoint properties.",
          "decorators": [],
          "properties": [
           {
            "$id": "1499",
            "kind": "property",
            "name": "service",
            "serializedName": "service",
            "doc": "The type of the endpoint service.",
            "type": {
             "$id": "1500",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceEndpoint.service",
            "serializationOptions": {
             "$id": "1501",
             "json": {
              "$id": "1502",
              "name": "service"
             }
            }
           },
           {
            "$id": "1503",
            "kind": "property",
            "name": "-|azure-location",
            "serializedName": "locations",
            "doc": "A list of locations.",
            "type": {
             "$id": "1504",
             "kind": "array",
             "name": "Array",
             "valueType": {
              "$id": "1505",
              "kind": "string",
              "name": "string",
              "crossLanguageDefinitionId": "TypeSpec.string",
              "decorators": []
             },
             "crossLanguageDefinitionId": "TypeSpec.Array",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceEndpoint.locations",
            "serializationOptions": {
             "$id": "1506",
             "json": {
              "$id": "1507",
              "name": "locations"
             }
            }
           }
          ]
         },
         "crossLanguageDefinitionId": "TypeSpec.Array",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.serviceEndpoints",
        "serializationOptions": {
         "$id": "1508",
         "json": {
          "$id": "1509",
          "name": "serviceEndpoints"
         }
        }
       },
       {
        "$id": "1510",
        "kind": "property",
        "name": "zonalUpdateMode",
        "serializedName": "zonalUpdateMode",
        "doc": "Indicates the update mode for Cross Az clusters.",
        "type": {
         "$ref": "232"
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.zonalUpdateMode",
        "serializationOptions": {
         "$id": "1511",
         "json": {
          "$id": "1512",
          "name": "zonalUpdateMode"
         }
        }
       },
       {
        "$id": "1513",
        "kind": "property",
        "name": "useCustomVnet",
        "serializedName": "useCustomVnet",
        "doc": "For new clusters, this parameter indicates that it uses Bring your own VNet, but the subnet is specified at node type level; and for such clusters, the subnetId property is required for node types.",
        "type": {
         "$id": "1514",
         "kind": "boolean",
         "name": "boolean",
         "crossLanguageDefinitionId": "TypeSpec.boolean",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.useCustomVnet",
        "serializationOptions": {
         "$id": "1515",
         "json": {
          "$id": "1516",
          "name": "useCustomVnet"
         }
        }
       },
       {
        "$id": "1517",
        "kind": "property",
        "name": "publicIPPrefixId",
        "serializedName": "publicIPPrefixId",
        "doc": "Specify the resource id of a public IPv4 prefix that the load balancer will allocate a public IPv4 address from. This setting cannot be changed once the cluster is created.",
        "type": {
         "$id": "1518",
         "kind": "string",
         "name": "armResourceIdentifier",
         "crossLanguageDefinitionId": "Azure.Core.armResourceIdentifier",
         "baseType": {
          "$id": "1519",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.publicIPPrefixId",
        "serializationOptions": {
         "$id": "1520",
         "json": {
          "$id": "1521",
          "name": "publicIPPrefixId"
         }
        }
       },
       {
        "$id": "1522",
        "kind": "property",
        "name": "publicIPv6PrefixId",
        "serializedName": "publicIPv6PrefixId",
        "doc": "Specify the resource id of a public IPv6 prefix that the load balancer will allocate a public IPv6 address from. This setting cannot be changed once the cluster is created.",
        "type": {
         "$id": "1523",
         "kind": "string",
         "name": "armResourceIdentifier",
         "crossLanguageDefinitionId": "Azure.Core.armResourceIdentifier",
         "baseType": {
          "$id": "1524",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.publicIPv6PrefixId",
        "serializationOptions": {
         "$id": "1525",
         "json": {
          "$id": "1526",
          "name": "publicIPv6PrefixId"
         }
        }
       },
       {
        "$id": "1527",
        "kind": "property",
        "name": "ddosProtectionPlanId",
        "serializedName": "ddosProtectionPlanId",
        "doc": "Specify the resource id of a DDoS network protection plan that will be associated with the virtual network of the cluster.",
        "type": {
         "$id": "1528",
         "kind": "string",
         "name": "armResourceIdentifier",
         "crossLanguageDefinitionId": "Azure.Core.armResourceIdentifier",
         "baseType": {
          "$id": "1529",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.ddosProtectionPlanId",
        "serializationOptions": {
         "$id": "1530",
         "json": {
          "$id": "1531",
          "name": "ddosProtectionPlanId"
         }
        }
       },
       {
        "$id": "1532",
        "kind": "property",
        "name": "upgradeDescription",
        "serializedName": "upgradeDescription",
        "doc": "The policy to use when upgrading the cluster.",
        "type": {
         "$id": "1533",
         "kind": "model",
         "name": "ManagedClusterUpgradePolicy",
         "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
         "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ClusterUpgradePolicy",
         "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
         "doc": "Describes the policy used when upgrading the cluster.",
         "decorators": [],
         "properties": [
          {
           "$id": "1534",
           "kind": "property",
           "name": "forceRestart",
           "serializedName": "forceRestart",
           "doc": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).",
           "type": {
            "$id": "1535",
            "kind": "boolean",
            "name": "boolean",
            "crossLanguageDefinitionId": "TypeSpec.boolean",
            "decorators": []
           },
           "optional": true,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ClusterUpgradePolicy.forceRestart",
           "serializationOptions": {
            "$id": "1536",
            "json": {
             "$id": "1537",
             "name": "forceRestart"
            }
           }
          },
          {
           "$id": "1538",
           "kind": "property",
           "name": "healthPolicy",
           "serializedName": "healthPolicy",
           "doc": "The cluster health policy defines a health policy used to evaluate the health of the cluster during a cluster upgrade.",
           "type": {
            "$id": "1539",
            "kind": "model",
            "name": "ManagedClusterHealthPolicy",
            "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ClusterHealthPolicy",
            "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
            "doc": "Defines a health policy used to evaluate the health of the cluster or of a cluster node.",
            "decorators": [],
            "properties": [
             {
              "$id": "1540",
              "kind": "property",
              "name": "maxPercentUnhealthyNodes",
              "serializedName": "maxPercentUnhealthyNodes",
              "doc": "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.",
              "type": {
               "$id": "1541",
               "kind": "int32",
               "name": "int32",
               "crossLanguageDefinitionId": "TypeSpec.int32",
               "decorators": []
              },
              "optional": false,
              "readOnly": false,
              "discriminator": false,
              "flatten": false,
              "decorators": [],
              "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ClusterHealthPolicy.maxPercentUnhealthyNodes",
              "serializationOptions": {
               "$id": "1542",
               "json": {
                "$id": "1543",
                "name": "maxPercentUnhealthyNodes"
               }
              }
             },
             {
              "$id": "1544",
              "kind": "property",
              "name": "maxPercentUnhealthyApplications",
              "serializedName": "maxPercentUnhealthyApplications",
              "doc": "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.\nThe computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.",
              "type": {
               "$id": "1545",
               "kind": "int32",
               "name": "int32",
               "crossLanguageDefinitionId": "TypeSpec.int32",
               "decorators": []
              },
              "optional": false,
              "readOnly": false,
              "discriminator": false,
              "flatten": false,
              "decorators": [],
              "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ClusterHealthPolicy.maxPercentUnhealthyApplications",
              "serializationOptions": {
               "$id": "1546",
               "json": {
                "$id": "1547",
                "name": "maxPercentUnhealthyApplications"
               }
              }
             }
            ]
           },
           "optional": true,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ClusterUpgradePolicy.healthPolicy",
           "serializationOptions": {
            "$id": "1548",
            "json": {
             "$id": "1549",
             "name": "healthPolicy"
            }
           }
          },
          {
           "$id": "1550",
           "kind": "property",
           "name": "deltaHealthPolicy",
           "serializedName": "deltaHealthPolicy",
           "doc": "The cluster delta health policy defines a health policy used to evaluate the health of the cluster during a cluster upgrade.",
           "type": {
            "$id": "1551",
            "kind": "model",
            "name": "ManagedClusterUpgradeDeltaHealthPolicy",
            "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ClusterUpgradeDeltaHealthPolicy",
            "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
            "doc": "Describes the delta health policies for the cluster upgrade.",
            "decorators": [],
            "properties": [
             {
              "$id": "1552",
              "kind": "property",
              "name": "maxPercentDeltaUnhealthyNodes",
              "serializedName": "maxPercentDeltaUnhealthyNodes",
              "doc": "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.",
              "type": {
               "$id": "1553",
               "kind": "int32",
               "name": "int32",
               "crossLanguageDefinitionId": "TypeSpec.int32",
               "decorators": []
              },
              "optional": false,
              "readOnly": false,
              "discriminator": false,
              "flatten": false,
              "decorators": [],
              "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ClusterUpgradeDeltaHealthPolicy.maxPercentDeltaUnhealthyNodes",
              "serializationOptions": {
               "$id": "1554",
               "json": {
                "$id": "1555",
                "name": "maxPercentDeltaUnhealthyNodes"
               }
              }
             },
             {
              "$id": "1556",
              "kind": "property",
              "name": "maxPercentUpgradeDomainDeltaUnhealthyNodes",
              "serializedName": "maxPercentUpgradeDomainDeltaUnhealthyNodes",
              "doc": "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.",
              "type": {
               "$id": "1557",
               "kind": "int32",
               "name": "int32",
               "crossLanguageDefinitionId": "TypeSpec.int32",
               "decorators": []
              },
              "optional": true,
              "readOnly": false,
              "discriminator": false,
              "flatten": false,
              "decorators": [],
              "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ClusterUpgradeDeltaHealthPolicy.maxPercentUpgradeDomainDeltaUnhealthyNodes",
              "serializationOptions": {
               "$id": "1558",
               "json": {
                "$id": "1559",
                "name": "maxPercentUpgradeDomainDeltaUnhealthyNodes"
               }
              }
             },
             {
              "$id": "1560",
              "kind": "property",
              "name": "maxPercentDeltaUnhealthyApplications",
              "serializedName": "maxPercentDeltaUnhealthyApplications",
              "doc": "The maximum allowed percentage of applications health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.\nNOTE: This value will overwrite the value specified in properties.UpgradeDescription.HealthPolicy.MaxPercentUnhealthyApplications",
              "type": {
               "$id": "1561",
               "kind": "int32",
               "name": "int32",
               "crossLanguageDefinitionId": "TypeSpec.int32",
               "decorators": []
              },
              "optional": true,
              "readOnly": false,
              "discriminator": false,
              "flatten": false,
              "decorators": [],
              "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ClusterUpgradeDeltaHealthPolicy.maxPercentDeltaUnhealthyApplications",
              "serializationOptions": {
               "$id": "1562",
               "json": {
                "$id": "1563",
                "name": "maxPercentDeltaUnhealthyApplications"
               }
              }
             }
            ]
           },
           "optional": true,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ClusterUpgradePolicy.deltaHealthPolicy",
           "serializationOptions": {
            "$id": "1564",
            "json": {
             "$id": "1565",
             "name": "deltaHealthPolicy"
            }
           }
          },
          {
           "$id": "1566",
           "kind": "property",
           "name": "monitoringPolicy",
           "serializedName": "monitoringPolicy",
           "doc": "The cluster monitoring policy describes the parameters for monitoring an upgrade in Monitored mode.",
           "type": {
            "$id": "1567",
            "kind": "model",
            "name": "ManagedClusterMonitoringPolicy",
            "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ClusterMonitoringPolicy",
            "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
            "doc": "Describes the monitoring policies for the cluster upgrade.",
            "decorators": [],
            "properties": [
             {
              "$id": "1568",
              "kind": "property",
              "name": "healthCheckWaitDuration",
              "serializedName": "healthCheckWaitDuration",
              "doc": "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format.",
              "type": {
               "$id": "1569",
               "kind": "string",
               "name": "string",
               "crossLanguageDefinitionId": "TypeSpec.string",
               "decorators": []
              },
              "optional": false,
              "readOnly": false,
              "discriminator": false,
              "flatten": false,
              "decorators": [],
              "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ClusterMonitoringPolicy.healthCheckWaitDuration",
              "serializationOptions": {
               "$id": "1570",
               "json": {
                "$id": "1571",
                "name": "healthCheckWaitDuration"
               }
              }
             },
             {
              "$id": "1572",
              "kind": "property",
              "name": "healthCheckStableDuration",
              "serializedName": "healthCheckStableDuration",
              "doc": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format.",
              "type": {
               "$id": "1573",
               "kind": "string",
               "name": "string",
               "crossLanguageDefinitionId": "TypeSpec.string",
               "decorators": []
              },
              "optional": false,
              "readOnly": false,
              "discriminator": false,
              "flatten": false,
              "decorators": [],
              "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ClusterMonitoringPolicy.healthCheckStableDuration",
              "serializationOptions": {
               "$id": "1574",
               "json": {
                "$id": "1575",
                "name": "healthCheckStableDuration"
               }
              }
             },
             {
              "$id": "1576",
              "kind": "property",
              "name": "healthCheckRetryTimeout",
              "serializedName": "healthCheckRetryTimeout",
              "doc": "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.",
              "type": {
               "$id": "1577",
               "kind": "string",
               "name": "string",
               "crossLanguageDefinitionId": "TypeSpec.string",
               "decorators": []
              },
              "optional": false,
              "readOnly": false,
              "discriminator": false,
              "flatten": false,
              "decorators": [],
              "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ClusterMonitoringPolicy.healthCheckRetryTimeout",
              "serializationOptions": {
               "$id": "1578",
               "json": {
                "$id": "1579",
                "name": "healthCheckRetryTimeout"
               }
              }
             },
             {
              "$id": "1580",
              "kind": "property",
              "name": "upgradeTimeout",
              "serializedName": "upgradeTimeout",
              "doc": "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.",
              "type": {
               "$id": "1581",
               "kind": "string",
               "name": "string",
               "crossLanguageDefinitionId": "TypeSpec.string",
               "decorators": []
              },
              "optional": false,
              "readOnly": false,
              "discriminator": false,
              "flatten": false,
              "decorators": [],
              "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ClusterMonitoringPolicy.upgradeTimeout",
              "serializationOptions": {
               "$id": "1582",
               "json": {
                "$id": "1583",
                "name": "upgradeTimeout"
               }
              }
             },
             {
              "$id": "1584",
              "kind": "property",
              "name": "upgradeDomainTimeout",
              "serializedName": "upgradeDomainTimeout",
              "doc": "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.",
              "type": {
               "$id": "1585",
               "kind": "string",
               "name": "string",
               "crossLanguageDefinitionId": "TypeSpec.string",
               "decorators": []
              },
              "optional": false,
              "readOnly": false,
              "discriminator": false,
              "flatten": false,
              "decorators": [],
              "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ClusterMonitoringPolicy.upgradeDomainTimeout",
              "serializationOptions": {
               "$id": "1586",
               "json": {
                "$id": "1587",
                "name": "upgradeDomainTimeout"
               }
              }
             }
            ]
           },
           "optional": true,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ClusterUpgradePolicy.monitoringPolicy",
           "serializationOptions": {
            "$id": "1588",
            "json": {
             "$id": "1589",
             "name": "monitoringPolicy"
            }
           }
          },
          {
           "$id": "1590",
           "kind": "property",
           "name": "upgradeReplicaSetCheckTimeout",
           "serializedName": "upgradeReplicaSetCheckTimeout",
           "doc": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues.\nWhen this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues.\nThe timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.\nThis value must be between 00:00:00 and 49710.06:28:15 (unsigned 32 bit integer for seconds)",
           "type": {
            "$id": "1591",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           "optional": true,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ClusterUpgradePolicy.upgradeReplicaSetCheckTimeout",
           "serializationOptions": {
            "$id": "1592",
            "json": {
             "$id": "1593",
             "name": "upgradeReplicaSetCheckTimeout"
            }
           }
          }
         ]
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.upgradeDescription",
        "serializationOptions": {
         "$id": "1594",
         "json": {
          "$id": "1595",
          "name": "upgradeDescription"
         }
        }
       },
       {
        "$id": "1596",
        "kind": "property",
        "name": "httpGatewayTokenAuthConnectionPort",
        "serializedName": "httpGatewayTokenAuthConnectionPort",
        "doc": "The port used for token-auth based HTTPS connections to the cluster. Cannot be set to the same port as HttpGatewayEndpoint.",
        "type": {
         "$id": "1597",
         "kind": "int32",
         "name": "int32",
         "crossLanguageDefinitionId": "TypeSpec.int32",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.httpGatewayTokenAuthConnectionPort",
        "serializationOptions": {
         "$id": "1598",
         "json": {
          "$id": "1599",
          "name": "httpGatewayTokenAuthConnectionPort"
         }
        }
       },
       {
        "$id": "1600",
        "kind": "property",
        "name": "IsHttpGatewayExclusiveAuthModeEnabled",
        "serializedName": "enableHttpGatewayExclusiveAuthMode",
        "doc": "If true, token-based authentication is not allowed on the HttpGatewayEndpoint. This is required to support TLS versions 1.3 and above. If token-based authentication is used, HttpGatewayTokenAuthConnectionPort must be defined.",
        "type": {
         "$id": "1601",
         "kind": "boolean",
         "name": "boolean",
         "crossLanguageDefinitionId": "TypeSpec.boolean",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.enableHttpGatewayExclusiveAuthMode",
        "serializationOptions": {
         "$id": "1602",
         "json": {
          "$id": "1603",
          "name": "enableHttpGatewayExclusiveAuthMode"
         }
        }
       },
       {
        "$id": "1604",
        "kind": "property",
        "name": "autoGeneratedDomainNameLabelScope",
        "serializedName": "autoGeneratedDomainNameLabelScope",
        "doc": "This property is the entry point to using a public CA cert for your cluster cert. It specifies the level of reuse allowed for the custom FQDN created, matching the subject of the public CA cert.",
        "type": {
         "$ref": "238"
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.autoGeneratedDomainNameLabelScope",
        "serializationOptions": {
         "$id": "1605",
         "json": {
          "$id": "1606",
          "name": "autoGeneratedDomainNameLabelScope"
         }
        }
       },
       {
        "$id": "1607",
        "kind": "property",
        "name": "allocatedOutboundPorts",
        "serializedName": "allocatedOutboundPorts",
        "doc": "The number of outbound ports allocated for SNAT for each node in the backend pool of the default load balancer. The default value is 0 which provides dynamic port allocation based on pool size.",
        "type": {
         "$id": "1608",
         "kind": "int32",
         "name": "int32",
         "crossLanguageDefinitionId": "TypeSpec.int32",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterProperties.allocatedOutboundPorts",
        "serializationOptions": {
         "$id": "1609",
         "json": {
          "$id": "1610",
          "name": "allocatedOutboundPorts"
         }
        }
       }
      ]
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": true,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedCluster.properties",
     "serializationOptions": {
      "$id": "1611",
      "json": {
       "$id": "1612",
       "name": "properties"
      }
     }
    },
    {
     "$id": "1613",
     "kind": "property",
     "name": "etag",
     "serializedName": "etag",
     "doc": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.\",",
     "type": {
      "$id": "1614",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": true,
     "readOnly": true,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedCluster.etag",
     "serializationOptions": {
      "$id": "1615",
      "json": {
       "$id": "1616",
       "name": "etag"
      }
     }
    },
    {
     "$id": "1617",
     "kind": "property",
     "name": "sku",
     "serializedName": "sku",
     "doc": "The sku of the managed cluster",
     "type": {
      "$id": "1618",
      "kind": "model",
      "name": "Sku",
      "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
      "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Sku",
      "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
      "doc": "Service Fabric managed cluster Sku definition",
      "decorators": [],
      "properties": [
       {
        "$id": "1619",
        "kind": "property",
        "name": "name",
        "serializedName": "name",
        "doc": "Sku Name.",
        "type": {
         "$ref": "248"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Sku.name",
        "serializationOptions": {
         "$id": "1620",
         "json": {
          "$id": "1621",
          "name": "name"
         }
        }
       }
      ]
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedCluster.sku",
     "serializationOptions": {
      "$id": "1622",
      "json": {
       "$id": "1623",
       "name": "sku"
      }
     }
    }
   ]
  },
  {
   "$ref": "1276"
  },
  {
   "$ref": "1321"
  },
  {
   "$ref": "1360"
  },
  {
   "$ref": "1380"
  },
  {
   "$ref": "1398"
  },
  {
   "$ref": "1405"
  },
  {
   "$ref": "1444"
  },
  {
   "$ref": "1474"
  },
  {
   "$ref": "1498"
  },
  {
   "$ref": "1533"
  },
  {
   "$ref": "1539"
  },
  {
   "$ref": "1551"
  },
  {
   "$ref": "1567"
  },
  {
   "$ref": "1618"
  },
  {
   "$ref": "1264"
  },
  {
   "$id": "1624",
   "kind": "model",
   "name": "ManagedClusterUpdateParameters",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterUpdateParameters",
   "usage": "Input,Json",
   "doc": "Managed cluster update request",
   "decorators": [],
   "properties": [
    {
     "$id": "1625",
     "kind": "property",
     "name": "tags",
     "serializedName": "tags",
     "doc": "Managed cluster update parameters",
     "type": {
      "$id": "1626",
      "kind": "dict",
      "keyType": {
       "$id": "1627",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "valueType": {
       "$id": "1628",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterUpdateParameters.tags",
     "serializationOptions": {
      "$id": "1629",
      "json": {
       "$id": "1630",
       "name": "tags"
      }
     }
    }
   ]
  },
  {
   "$id": "1631",
   "kind": "model",
   "name": "ManagedClusterListResult",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Azure.ResourceManager.ResourceListResult",
   "usage": "Output,Json",
   "doc": "The response of a ManagedCluster list operation.",
   "decorators": [],
   "properties": [
    {
     "$id": "1632",
     "kind": "property",
     "name": "value",
     "serializedName": "value",
     "doc": "The ManagedCluster items on this page",
     "type": {
      "$id": "1633",
      "kind": "array",
      "name": "ArrayManagedCluster",
      "valueType": {
       "$ref": "1263"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Azure.ResourceManager.ResourceListResult.value",
     "serializationOptions": {
      "$id": "1634",
      "json": {
       "$id": "1635",
       "name": "value"
      }
     }
    },
    {
     "$id": "1636",
     "kind": "property",
     "name": "nextLink",
     "serializedName": "nextLink",
     "doc": "The link to the next page of items",
     "type": {
      "$id": "1637",
      "kind": "url",
      "name": "ResourceLocation",
      "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
      "baseType": {
       "$id": "1638",
       "kind": "url",
       "name": "url",
       "crossLanguageDefinitionId": "TypeSpec.url",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Azure.ResourceManager.ResourceListResult.nextLink",
     "serializationOptions": {
      "$id": "1639",
      "json": {
       "$id": "1640",
       "name": "nextLink"
      }
     }
    }
   ]
  },
  {
   "$id": "1641",
   "kind": "model",
   "name": "ServiceFabricManagedUnsupportedVmSize",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedVMSize",
   "usage": "Output,Json",
   "doc": "Describes a VM Sizes.",
   "decorators": [],
   "properties": [
    {
     "$id": "1642",
     "kind": "property",
     "name": "properties",
     "serializedName": "properties",
     "doc": "VM Size properties.",
     "type": {
      "$id": "1643",
      "kind": "model",
      "name": "VMSize",
      "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
      "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VMSize",
      "usage": "Output,Json",
      "doc": "VM Sizes properties.",
      "decorators": [],
      "properties": [
       {
        "$id": "1644",
        "kind": "property",
        "name": "size",
        "serializedName": "size",
        "doc": "VM Size name.",
        "type": {
         "$id": "1645",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": true,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.VMSize.size",
        "serializationOptions": {
         "$id": "1646",
         "json": {
          "$id": "1647",
          "name": "size"
         }
        }
       }
      ]
     },
     "optional": true,
     "readOnly": true,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedVMSize.properties",
     "serializationOptions": {
      "$id": "1648",
      "json": {
       "$id": "1649",
       "name": "properties"
      }
     }
    },
    {
     "$id": "1650",
     "kind": "property",
     "name": "id",
     "serializedName": "id",
     "doc": "VM Size id.",
     "type": {
      "$id": "1651",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": true,
     "readOnly": true,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedVMSize.id",
     "serializationOptions": {
      "$id": "1652",
      "json": {
       "$id": "1653",
       "name": "id"
      }
     }
    },
    {
     "$id": "1654",
     "kind": "property",
     "name": "name",
     "serializedName": "name",
     "doc": "VM Size name.",
     "type": {
      "$id": "1655",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": true,
     "readOnly": true,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedVMSize.name",
     "serializationOptions": {
      "$id": "1656",
      "json": {
       "$id": "1657",
       "name": "name"
      }
     }
    },
    {
     "$id": "1658",
     "kind": "property",
     "name": "type",
     "serializedName": "type",
     "doc": "VM Size type.",
     "type": {
      "$id": "1659",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": true,
     "readOnly": true,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedVMSize.type",
     "serializationOptions": {
      "$id": "1660",
      "json": {
       "$id": "1661",
       "name": "type"
      }
     }
    }
   ]
  },
  {
   "$ref": "1643"
  },
  {
   "$id": "1662",
   "kind": "model",
   "name": "ManagedVMSizesResult",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedVMSizesResult",
   "usage": "Output,Json",
   "doc": "Describes the result of the request to list Managed VM Sizes for Service Fabric Managed Clusters.",
   "decorators": [],
   "properties": [
    {
     "$id": "1663",
     "kind": "property",
     "name": "value",
     "serializedName": "value",
     "doc": "The ManagedVMSize items on this page",
     "type": {
      "$id": "1664",
      "kind": "array",
      "name": "ArrayManagedVmSize",
      "valueType": {
       "$ref": "1641"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedVMSizesResult.value",
     "serializationOptions": {
      "$id": "1665",
      "json": {
       "$id": "1666",
       "name": "value"
      }
     }
    },
    {
     "$id": "1667",
     "kind": "property",
     "name": "nextLink",
     "serializedName": "nextLink",
     "doc": "The link to the next page of items",
     "type": {
      "$id": "1668",
      "kind": "url",
      "name": "ResourceLocation",
      "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
      "baseType": {
       "$id": "1669",
       "kind": "url",
       "name": "url",
       "crossLanguageDefinitionId": "TypeSpec.url",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedVMSizesResult.nextLink",
     "serializationOptions": {
      "$id": "1670",
      "json": {
       "$id": "1671",
       "name": "nextLink"
      }
     }
    }
   ]
  },
  {
   "$id": "1672",
   "kind": "model",
   "name": "ServiceFabricManagedClusterVersion",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterCodeVersionResult",
   "usage": "Output,Json",
   "doc": "The result of the Service Fabric runtime versions",
   "decorators": [],
   "properties": [
    {
     "$id": "1673",
     "kind": "property",
     "name": "id",
     "serializedName": "id",
     "doc": "The identification of the result",
     "type": {
      "$id": "1674",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterCodeVersionResult.id",
     "serializationOptions": {
      "$id": "1675",
      "json": {
       "$id": "1676",
       "name": "id"
      }
     }
    },
    {
     "$id": "1677",
     "kind": "property",
     "name": "name",
     "serializedName": "name",
     "doc": "The name of the result",
     "type": {
      "$id": "1678",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterCodeVersionResult.name",
     "serializationOptions": {
      "$id": "1679",
      "json": {
       "$id": "1680",
       "name": "name"
      }
     }
    },
    {
     "$id": "1681",
     "kind": "property",
     "name": "type",
     "serializedName": "type",
     "doc": "The result resource type",
     "type": {
      "$id": "1682",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterCodeVersionResult.type",
     "serializationOptions": {
      "$id": "1683",
      "json": {
       "$id": "1684",
       "name": "type"
      }
     }
    },
    {
     "$id": "1685",
     "kind": "property",
     "name": "properties",
     "serializedName": "properties",
     "doc": "The detail of the Service Fabric runtime version result",
     "type": {
      "$id": "1686",
      "kind": "model",
      "name": "ManagedClusterVersionDetails",
      "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
      "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterVersionDetails",
      "usage": "Output,Json",
      "doc": "The detail of the Service Fabric runtime version result",
      "decorators": [],
      "properties": [
       {
        "$id": "1687",
        "kind": "property",
        "name": "clusterCodeVersion",
        "serializedName": "clusterCodeVersion",
        "doc": "The Service Fabric runtime version of the cluster.",
        "type": {
         "$id": "1688",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterVersionDetails.clusterCodeVersion",
        "serializationOptions": {
         "$id": "1689",
         "json": {
          "$id": "1690",
          "name": "clusterCodeVersion"
         }
        }
       },
       {
        "$id": "1691",
        "kind": "property",
        "name": "VersionSupportExpireOn",
        "serializedName": "supportExpiryUtc",
        "doc": "The date of expiry of support of the version.",
        "type": {
         "$id": "1692",
         "kind": "utcDateTime",
         "name": "utcDateTime",
         "encode": "rfc3339",
         "wireType": {
          "$id": "1693",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterVersionDetails.supportExpiryUtc",
        "serializationOptions": {
         "$id": "1694",
         "json": {
          "$id": "1695",
          "name": "supportExpiryUtc"
         }
        }
       },
       {
        "$id": "1696",
        "kind": "property",
        "name": "osType",
        "serializedName": "osType",
        "doc": "Cluster operating system, the default will be Windows",
        "type": {
         "$ref": "254"
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterVersionDetails.osType",
        "serializationOptions": {
         "$id": "1697",
         "json": {
          "$id": "1698",
          "name": "osType"
         }
        }
       }
      ]
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": true,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterCodeVersionResult.properties",
     "serializationOptions": {
      "$id": "1699",
      "json": {
       "$id": "1700",
       "name": "properties"
      }
     }
    }
   ]
  },
  {
   "$ref": "1686"
  },
  {
   "$id": "1701",
   "kind": "model",
   "name": "ServiceFabricManagedService",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceResource",
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "doc": "The service resource.",
   "decorators": [],
   "baseModel": {
    "$ref": "500"
   },
   "properties": [
    {
     "$id": "1702",
     "kind": "property",
     "name": "properties",
     "serializedName": "properties",
     "doc": "The service resource properties.",
     "type": {
      "$id": "1703",
      "kind": "model",
      "name": "ManagedServiceProperties",
      "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
      "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceResourceProperties",
      "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
      "doc": "The service resource properties.",
      "decorators": [],
      "discriminatorProperty": {
       "$id": "1704",
       "kind": "property",
       "name": "serviceKind",
       "serializedName": "serviceKind",
       "doc": "The kind of service (Stateless or Stateful).",
       "type": {
        "$ref": "262"
       },
       "optional": false,
       "readOnly": false,
       "discriminator": true,
       "flatten": false,
       "decorators": [],
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceResourceProperties.serviceKind",
       "serializationOptions": {
        "$id": "1705",
        "json": {
         "$id": "1706",
         "name": "serviceKind"
        }
       }
      },
      "baseModel": {
       "$id": "1707",
       "kind": "model",
       "name": "ManagedServiceBaseProperties",
       "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceResourcePropertiesBase",
       "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
       "doc": "The common service resource properties.",
       "decorators": [],
       "properties": [
        {
         "$id": "1708",
         "kind": "property",
         "name": "placementConstraints",
         "serializedName": "placementConstraints",
         "doc": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\".",
         "type": {
          "$id": "1709",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": true,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceResourcePropertiesBase.placementConstraints",
         "serializationOptions": {
          "$id": "1710",
          "json": {
           "$id": "1711",
           "name": "placementConstraints"
          }
         }
        },
        {
         "$id": "1712",
         "kind": "property",
         "name": "correlationScheme",
         "serializedName": "correlationScheme",
         "doc": "A list that describes the correlation of the service with other services.",
         "type": {
          "$id": "1713",
          "kind": "array",
          "name": "ArrayServiceCorrelation",
          "valueType": {
           "$id": "1714",
           "kind": "model",
           "name": "ManagedServiceCorrelation",
           "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
           "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceCorrelation",
           "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
           "doc": "Creates a particular correlation between services.",
           "decorators": [],
           "properties": [
            {
             "$id": "1715",
             "kind": "property",
             "name": "scheme",
             "serializedName": "scheme",
             "doc": "The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.",
             "type": {
              "$ref": "282"
             },
             "optional": false,
             "readOnly": false,
             "discriminator": false,
             "flatten": false,
             "decorators": [],
             "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceCorrelation.scheme",
             "serializationOptions": {
              "$id": "1716",
              "json": {
               "$id": "1717",
               "name": "scheme"
              }
             }
            },
            {
             "$id": "1718",
             "kind": "property",
             "name": "serviceName",
             "serializedName": "serviceName",
             "doc": "The Arm Resource ID of the service that the correlation relationship is established with.",
             "type": {
              "$id": "1719",
              "kind": "string",
              "name": "string",
              "crossLanguageDefinitionId": "TypeSpec.string",
              "decorators": []
             },
             "optional": false,
             "readOnly": false,
             "discriminator": false,
             "flatten": false,
             "decorators": [],
             "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceCorrelation.serviceName",
             "serializationOptions": {
              "$id": "1720",
              "json": {
               "$id": "1721",
               "name": "serviceName"
              }
             }
            }
           ]
          },
          "crossLanguageDefinitionId": "TypeSpec.Array",
          "decorators": []
         },
         "optional": true,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceResourcePropertiesBase.correlationScheme",
         "serializationOptions": {
          "$id": "1722",
          "json": {
           "$id": "1723",
           "name": "correlationScheme"
          }
         }
        },
        {
         "$id": "1724",
         "kind": "property",
         "name": "serviceLoadMetrics",
         "serializedName": "serviceLoadMetrics",
         "doc": "The service load metrics is given as an array of ServiceLoadMetric objects.",
         "type": {
          "$id": "1725",
          "kind": "array",
          "name": "ArrayServiceLoadMetric",
          "valueType": {
           "$id": "1726",
           "kind": "model",
           "name": "ManagedServiceLoadMetric",
           "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
           "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceLoadMetric",
           "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
           "doc": "Specifies a metric to load balance a service during runtime.",
           "decorators": [],
           "properties": [
            {
             "$id": "1727",
             "kind": "property",
             "name": "name",
             "serializedName": "name",
             "doc": "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive.",
             "type": {
              "$id": "1728",
              "kind": "string",
              "name": "string",
              "crossLanguageDefinitionId": "TypeSpec.string",
              "decorators": []
             },
             "optional": false,
             "readOnly": false,
             "discriminator": false,
             "flatten": false,
             "decorators": [],
             "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceLoadMetric.name",
             "serializationOptions": {
              "$id": "1729",
              "json": {
               "$id": "1730",
               "name": "name"
              }
             }
            },
            {
             "$id": "1731",
             "kind": "property",
             "name": "weight",
             "serializedName": "weight",
             "doc": "The service load metric relative weight, compared to other metrics configured for this service, as a number.",
             "type": {
              "$ref": "288"
             },
             "optional": true,
             "readOnly": false,
             "discriminator": false,
             "flatten": false,
             "decorators": [],
             "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceLoadMetric.weight",
             "serializationOptions": {
              "$id": "1732",
              "json": {
               "$id": "1733",
               "name": "weight"
              }
             }
            },
            {
             "$id": "1734",
             "kind": "property",
             "name": "primaryDefaultLoad",
             "serializedName": "primaryDefaultLoad",
             "doc": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica.",
             "type": {
              "$id": "1735",
              "kind": "int32",
              "name": "int32",
              "crossLanguageDefinitionId": "TypeSpec.int32",
              "decorators": []
             },
             "optional": true,
             "readOnly": false,
             "discriminator": false,
             "flatten": false,
             "decorators": [],
             "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceLoadMetric.primaryDefaultLoad",
             "serializationOptions": {
              "$id": "1736",
              "json": {
               "$id": "1737",
               "name": "primaryDefaultLoad"
              }
             }
            },
            {
             "$id": "1738",
             "kind": "property",
             "name": "secondaryDefaultLoad",
             "serializedName": "secondaryDefaultLoad",
             "doc": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica.",
             "type": {
              "$id": "1739",
              "kind": "int32",
              "name": "int32",
              "crossLanguageDefinitionId": "TypeSpec.int32",
              "decorators": []
             },
             "optional": true,
             "readOnly": false,
             "discriminator": false,
             "flatten": false,
             "decorators": [],
             "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceLoadMetric.secondaryDefaultLoad",
             "serializationOptions": {
              "$id": "1740",
              "json": {
               "$id": "1741",
               "name": "secondaryDefaultLoad"
              }
             }
            },
            {
             "$id": "1742",
             "kind": "property",
             "name": "defaultLoad",
             "serializedName": "defaultLoad",
             "doc": "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric.",
             "type": {
              "$id": "1743",
              "kind": "int32",
              "name": "int32",
              "crossLanguageDefinitionId": "TypeSpec.int32",
              "decorators": []
             },
             "optional": true,
             "readOnly": false,
             "discriminator": false,
             "flatten": false,
             "decorators": [],
             "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceLoadMetric.defaultLoad",
             "serializationOptions": {
              "$id": "1744",
              "json": {
               "$id": "1745",
               "name": "defaultLoad"
              }
             }
            }
           ]
          },
          "crossLanguageDefinitionId": "TypeSpec.Array",
          "decorators": []
         },
         "optional": true,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceResourcePropertiesBase.serviceLoadMetrics",
         "serializationOptions": {
          "$id": "1746",
          "json": {
           "$id": "1747",
           "name": "serviceLoadMetrics"
          }
         }
        },
        {
         "$id": "1748",
         "kind": "property",
         "name": "servicePlacementPolicies",
         "serializedName": "servicePlacementPolicies",
         "doc": "A list that describes the correlation of the service with other services.",
         "type": {
          "$id": "1749",
          "kind": "array",
          "name": "ArrayServicePlacementPolicy",
          "valueType": {
           "$id": "1750",
           "kind": "model",
           "name": "ManagedServicePlacementPolicy",
           "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
           "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServicePlacementPolicy",
           "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
           "doc": "Describes the policy to be used for placement of a Service Fabric service.",
           "decorators": [],
           "discriminatorProperty": {
            "$id": "1751",
            "kind": "property",
            "name": "type",
            "serializedName": "type",
            "type": {
             "$ref": "298"
            },
            "optional": false,
            "readOnly": false,
            "discriminator": true,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServicePlacementPolicy.type",
            "serializationOptions": {
             "$id": "1752",
             "json": {
              "$id": "1753",
              "name": "type"
             }
            }
           },
           "properties": [
            {
             "$ref": "1751"
            }
           ],
           "discriminatedSubtypes": {
            "$id": "1754",
            "InvalidDomain": {
             "$id": "1755",
             "kind": "model",
             "name": "ServicePlacementInvalidDomainPolicy",
             "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
             "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServicePlacementInvalidDomainPolicy",
             "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
             "doc": "Describes the policy to be used for placement of a Service Fabric service where a particular fault or upgrade domain should not be used for placement of the instances or replicas of that service.",
             "discriminatorValue": "InvalidDomain",
             "decorators": [],
             "baseModel": {
              "$ref": "1750"
             },
             "properties": [
              {
               "$id": "1756",
               "kind": "property",
               "name": "domainName",
               "serializedName": "domainName",
               "doc": "The name of the domain that should not be used for placement.",
               "type": {
                "$id": "1757",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
               },
               "optional": false,
               "readOnly": false,
               "discriminator": false,
               "flatten": false,
               "decorators": [],
               "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServicePlacementInvalidDomainPolicy.domainName",
               "serializationOptions": {
                "$id": "1758",
                "json": {
                 "$id": "1759",
                 "name": "domainName"
                }
               }
              },
              {
               "$id": "1760",
               "kind": "property",
               "name": "type",
               "serializedName": "type",
               "doc": "The type of placement policy for a service fabric service. Following are the possible values.",
               "type": {
                "$id": "1761",
                "kind": "constant",
                "valueType": {
                 "$id": "1762",
                 "kind": "string",
                 "name": "string",
                 "crossLanguageDefinitionId": "TypeSpec.string",
                 "decorators": []
                },
                "value": "InvalidDomain",
                "decorators": []
               },
               "optional": false,
               "readOnly": false,
               "discriminator": true,
               "flatten": false,
               "decorators": [],
               "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServicePlacementInvalidDomainPolicy.type",
               "serializationOptions": {
                "$id": "1763",
                "json": {
                 "$id": "1764",
                 "name": "type"
                }
               }
              }
             ]
            },
            "RequiredDomain": {
             "$id": "1765",
             "kind": "model",
             "name": "ServicePlacementRequiredDomainPolicy",
             "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
             "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServicePlacementRequiredDomainPolicy",
             "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
             "doc": "Describes the policy to be used for placement of a Service Fabric service where the instances or replicas of that service must be placed in a particular domain.",
             "discriminatorValue": "RequiredDomain",
             "decorators": [],
             "baseModel": {
              "$ref": "1750"
             },
             "properties": [
              {
               "$id": "1766",
               "kind": "property",
               "name": "domainName",
               "serializedName": "domainName",
               "doc": "The name of the domain that should used for placement as per this policy.",
               "type": {
                "$id": "1767",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
               },
               "optional": false,
               "readOnly": false,
               "discriminator": false,
               "flatten": false,
               "decorators": [],
               "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServicePlacementRequiredDomainPolicy.domainName",
               "serializationOptions": {
                "$id": "1768",
                "json": {
                 "$id": "1769",
                 "name": "domainName"
                }
               }
              },
              {
               "$id": "1770",
               "kind": "property",
               "name": "type",
               "serializedName": "type",
               "doc": "The type of placement policy for a service fabric service. Following are the possible values.",
               "type": {
                "$id": "1771",
                "kind": "constant",
                "valueType": {
                 "$id": "1772",
                 "kind": "string",
                 "name": "string",
                 "crossLanguageDefinitionId": "TypeSpec.string",
                 "decorators": []
                },
                "value": "RequiredDomain",
                "decorators": []
               },
               "optional": false,
               "readOnly": false,
               "discriminator": true,
               "flatten": false,
               "decorators": [],
               "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServicePlacementRequiredDomainPolicy.type",
               "serializationOptions": {
                "$id": "1773",
                "json": {
                 "$id": "1774",
                 "name": "type"
                }
               }
              }
             ]
            },
            "PreferredPrimaryDomain": {
             "$id": "1775",
             "kind": "model",
             "name": "ServicePlacementPreferPrimaryDomainPolicy",
             "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
             "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServicePlacementPreferPrimaryDomainPolicy",
             "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
             "doc": "Describes the policy to be used for placement of a Service Fabric service where the service's\nPrimary replicas should optimally be placed in a particular domain.\n\nThis placement policy is usually used with fault domains in scenarios where the Service Fabric\ncluster is geographically distributed in order to indicate that a service's primary replica should\nbe located in a particular fault domain, which in geo-distributed scenarios usually aligns with regional\nor datacenter boundaries. Note that since this is an optimization it is possible that the Primary replica\nmay not end up located in this domain due to failures, capacity limits, or other constraints.",
             "discriminatorValue": "PreferredPrimaryDomain",
             "decorators": [],
             "baseModel": {
              "$ref": "1750"
             },
             "properties": [
              {
               "$id": "1776",
               "kind": "property",
               "name": "domainName",
               "serializedName": "domainName",
               "doc": "The name of the domain that should used for placement as per this policy.",
               "type": {
                "$id": "1777",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
               },
               "optional": false,
               "readOnly": false,
               "discriminator": false,
               "flatten": false,
               "decorators": [],
               "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServicePlacementPreferPrimaryDomainPolicy.domainName",
               "serializationOptions": {
                "$id": "1778",
                "json": {
                 "$id": "1779",
                 "name": "domainName"
                }
               }
              },
              {
               "$id": "1780",
               "kind": "property",
               "name": "type",
               "serializedName": "type",
               "doc": "The type of placement policy for a service fabric service. Following are the possible values.",
               "type": {
                "$id": "1781",
                "kind": "constant",
                "valueType": {
                 "$id": "1782",
                 "kind": "string",
                 "name": "string",
                 "crossLanguageDefinitionId": "TypeSpec.string",
                 "decorators": []
                },
                "value": "PreferredPrimaryDomain",
                "decorators": []
               },
               "optional": false,
               "readOnly": false,
               "discriminator": true,
               "flatten": false,
               "decorators": [],
               "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServicePlacementPreferPrimaryDomainPolicy.type",
               "serializationOptions": {
                "$id": "1783",
                "json": {
                 "$id": "1784",
                 "name": "type"
                }
               }
              }
             ]
            },
            "RequiredDomainDistribution": {
             "$id": "1785",
             "kind": "model",
             "name": "ServicePlacementRequireDomainDistributionPolicy",
             "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
             "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServicePlacementRequireDomainDistributionPolicy",
             "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
             "doc": "Describes the policy to be used for placement of a Service Fabric service where two replicas\nfrom the same partition should never be placed in the same fault or upgrade domain.\n\nWhile this is not common it can expose the service to an increased risk of concurrent failures\ndue to unplanned outages or other cases of subsequent/concurrent failures. As an example, consider\na case where replicas are deployed across different data center, with one replica per location.\nIn the event that one of the datacenters goes offline, normally the replica that was placed in that\ndatacenter will be packed into one of the remaining datacenters. If this is not desirable then this\npolicy should be set.",
             "discriminatorValue": "RequiredDomainDistribution",
             "decorators": [],
             "baseModel": {
              "$ref": "1750"
             },
             "properties": [
              {
               "$id": "1786",
               "kind": "property",
               "name": "domainName",
               "serializedName": "domainName",
               "doc": "The name of the domain that should used for placement as per this policy.",
               "type": {
                "$id": "1787",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
               },
               "optional": false,
               "readOnly": false,
               "discriminator": false,
               "flatten": false,
               "decorators": [],
               "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServicePlacementRequireDomainDistributionPolicy.domainName",
               "serializationOptions": {
                "$id": "1788",
                "json": {
                 "$id": "1789",
                 "name": "domainName"
                }
               }
              },
              {
               "$id": "1790",
               "kind": "property",
               "name": "type",
               "serializedName": "type",
               "doc": "The type of placement policy for a service fabric service. Following are the possible values.",
               "type": {
                "$id": "1791",
                "kind": "constant",
                "valueType": {
                 "$id": "1792",
                 "kind": "string",
                 "name": "string",
                 "crossLanguageDefinitionId": "TypeSpec.string",
                 "decorators": []
                },
                "value": "RequiredDomainDistribution",
                "decorators": []
               },
               "optional": false,
               "readOnly": false,
               "discriminator": true,
               "flatten": false,
               "decorators": [],
               "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServicePlacementRequireDomainDistributionPolicy.type",
               "serializationOptions": {
                "$id": "1793",
                "json": {
                 "$id": "1794",
                 "name": "type"
                }
               }
              }
             ]
            },
            "NonPartiallyPlaceService": {
             "$id": "1795",
             "kind": "model",
             "name": "ServicePlacementNonPartiallyPlaceServicePolicy",
             "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
             "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServicePlacementNonPartiallyPlaceServicePolicy",
             "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
             "doc": "The type of placement policy for a service fabric service. Following are the possible values.",
             "discriminatorValue": "NonPartiallyPlaceService",
             "decorators": [],
             "baseModel": {
              "$ref": "1750"
             },
             "properties": [
              {
               "$id": "1796",
               "kind": "property",
               "name": "type",
               "serializedName": "type",
               "type": {
                "$id": "1797",
                "kind": "constant",
                "valueType": {
                 "$id": "1798",
                 "kind": "string",
                 "name": "string",
                 "crossLanguageDefinitionId": "TypeSpec.string",
                 "decorators": []
                },
                "value": "NonPartiallyPlaceService",
                "decorators": []
               },
               "optional": false,
               "readOnly": false,
               "discriminator": true,
               "flatten": false,
               "decorators": [],
               "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServicePlacementNonPartiallyPlaceServicePolicy.type",
               "serializationOptions": {
                "$id": "1799",
                "json": {
                 "$id": "1800",
                 "name": "type"
                }
               }
              }
             ]
            }
           }
          },
          "crossLanguageDefinitionId": "TypeSpec.Array",
          "decorators": []
         },
         "optional": true,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceResourcePropertiesBase.servicePlacementPolicies",
         "serializationOptions": {
          "$id": "1801",
          "json": {
           "$id": "1802",
           "name": "servicePlacementPolicies"
          }
         }
        },
        {
         "$id": "1803",
         "kind": "property",
         "name": "defaultMoveCost",
         "serializedName": "defaultMoveCost",
         "doc": "Specifies the move cost for the service.",
         "type": {
          "$ref": "310"
         },
         "optional": true,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceResourcePropertiesBase.defaultMoveCost",
         "serializationOptions": {
          "$id": "1804",
          "json": {
           "$id": "1805",
           "name": "defaultMoveCost"
          }
         }
        },
        {
         "$id": "1806",
         "kind": "property",
         "name": "scalingPolicies",
         "serializedName": "scalingPolicies",
         "doc": "Scaling policies for this service.",
         "type": {
          "$id": "1807",
          "kind": "array",
          "name": "ArrayScalingPolicy",
          "valueType": {
           "$id": "1808",
           "kind": "model",
           "name": "ManagedServiceScalingPolicy",
           "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
           "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ScalingPolicy",
           "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
           "doc": "Specifies a metric to load balance a service during runtime.",
           "decorators": [],
           "properties": [
            {
             "$id": "1809",
             "kind": "property",
             "name": "scalingMechanism",
             "serializedName": "scalingMechanism",
             "doc": "Specifies the mechanism associated with this scaling policy",
             "type": {
              "$id": "1810",
              "kind": "model",
              "name": "ManagedServiceScalingMechanism",
              "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
              "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ScalingMechanism",
              "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
              "doc": "Describes the mechanism for performing a scaling operation.",
              "decorators": [],
              "discriminatorProperty": {
               "$id": "1811",
               "kind": "property",
               "name": "kind",
               "serializedName": "kind",
               "type": {
                "$ref": "320"
               },
               "optional": false,
               "readOnly": false,
               "discriminator": true,
               "flatten": false,
               "decorators": [],
               "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ScalingMechanism.kind",
               "serializationOptions": {
                "$id": "1812",
                "json": {
                 "$id": "1813",
                 "name": "kind"
                }
               }
              },
              "properties": [
               {
                "$ref": "1811"
               }
              ],
              "discriminatedSubtypes": {
               "$id": "1814",
               "AddRemoveIncrementalNamedPartition": {
                "$id": "1815",
                "kind": "model",
                "name": "NamedPartitionAddOrRemoveScalingMechanism",
                "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
                "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AddRemoveIncrementalNamedPartitionScalingMechanism",
                "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
                "doc": "Represents a scaling mechanism for adding or removing named partitions of a stateless service. Partition names are in the format '0','1'...'N-1'.",
                "discriminatorValue": "AddRemoveIncrementalNamedPartition",
                "decorators": [],
                "baseModel": {
                 "$ref": "1810"
                },
                "properties": [
                 {
                  "$id": "1816",
                  "kind": "property",
                  "name": "minPartitionCount",
                  "serializedName": "minPartitionCount",
                  "doc": "Minimum number of named partitions of the service.",
                  "type": {
                   "$id": "1817",
                   "kind": "int32",
                   "name": "int32",
                   "crossLanguageDefinitionId": "TypeSpec.int32",
                   "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AddRemoveIncrementalNamedPartitionScalingMechanism.minPartitionCount",
                  "serializationOptions": {
                   "$id": "1818",
                   "json": {
                    "$id": "1819",
                    "name": "minPartitionCount"
                   }
                  }
                 },
                 {
                  "$id": "1820",
                  "kind": "property",
                  "name": "maxPartitionCount",
                  "serializedName": "maxPartitionCount",
                  "doc": "Maximum number of named partitions of the service.",
                  "type": {
                   "$id": "1821",
                   "kind": "int32",
                   "name": "int32",
                   "crossLanguageDefinitionId": "TypeSpec.int32",
                   "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AddRemoveIncrementalNamedPartitionScalingMechanism.maxPartitionCount",
                  "serializationOptions": {
                   "$id": "1822",
                   "json": {
                    "$id": "1823",
                    "name": "maxPartitionCount"
                   }
                  }
                 },
                 {
                  "$id": "1824",
                  "kind": "property",
                  "name": "scaleIncrement",
                  "serializedName": "scaleIncrement",
                  "doc": "The number of instances to add or remove during a scaling operation.",
                  "type": {
                   "$id": "1825",
                   "kind": "int32",
                   "name": "int32",
                   "crossLanguageDefinitionId": "TypeSpec.int32",
                   "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AddRemoveIncrementalNamedPartitionScalingMechanism.scaleIncrement",
                  "serializationOptions": {
                   "$id": "1826",
                   "json": {
                    "$id": "1827",
                    "name": "scaleIncrement"
                   }
                  }
                 },
                 {
                  "$id": "1828",
                  "kind": "property",
                  "name": "kind",
                  "serializedName": "kind",
                  "doc": "Specifies the mechanism associated with this scaling policy.",
                  "type": {
                   "$id": "1829",
                   "kind": "constant",
                   "valueType": {
                    "$id": "1830",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                   },
                   "value": "AddRemoveIncrementalNamedPartition",
                   "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": true,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AddRemoveIncrementalNamedPartitionScalingMechanism.kind",
                  "serializationOptions": {
                   "$id": "1831",
                   "json": {
                    "$id": "1832",
                    "name": "kind"
                   }
                  }
                 }
                ]
               },
               "ScalePartitionInstanceCount": {
                "$id": "1833",
                "kind": "model",
                "name": "PartitionInstanceCountScalingMechanism",
                "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
                "crossLanguageDefinitionId": "Microsoft.ServiceFabric.PartitionInstanceCountScaleMechanism",
                "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
                "doc": "Represents a scaling mechanism for adding or removing instances of stateless service partition.",
                "discriminatorValue": "ScalePartitionInstanceCount",
                "decorators": [],
                "baseModel": {
                 "$ref": "1810"
                },
                "properties": [
                 {
                  "$id": "1834",
                  "kind": "property",
                  "name": "minInstanceCount",
                  "serializedName": "minInstanceCount",
                  "doc": "Minimum number of instances of the partition.",
                  "type": {
                   "$id": "1835",
                   "kind": "int32",
                   "name": "int32",
                   "crossLanguageDefinitionId": "TypeSpec.int32",
                   "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "Microsoft.ServiceFabric.PartitionInstanceCountScaleMechanism.minInstanceCount",
                  "serializationOptions": {
                   "$id": "1836",
                   "json": {
                    "$id": "1837",
                    "name": "minInstanceCount"
                   }
                  }
                 },
                 {
                  "$id": "1838",
                  "kind": "property",
                  "name": "maxInstanceCount",
                  "serializedName": "maxInstanceCount",
                  "doc": "Maximum number of instances of the partition.",
                  "type": {
                   "$id": "1839",
                   "kind": "int32",
                   "name": "int32",
                   "crossLanguageDefinitionId": "TypeSpec.int32",
                   "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "Microsoft.ServiceFabric.PartitionInstanceCountScaleMechanism.maxInstanceCount",
                  "serializationOptions": {
                   "$id": "1840",
                   "json": {
                    "$id": "1841",
                    "name": "maxInstanceCount"
                   }
                  }
                 },
                 {
                  "$id": "1842",
                  "kind": "property",
                  "name": "scaleIncrement",
                  "serializedName": "scaleIncrement",
                  "doc": "The number of instances to add or remove during a scaling operation.",
                  "type": {
                   "$id": "1843",
                   "kind": "int32",
                   "name": "int32",
                   "crossLanguageDefinitionId": "TypeSpec.int32",
                   "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "Microsoft.ServiceFabric.PartitionInstanceCountScaleMechanism.scaleIncrement",
                  "serializationOptions": {
                   "$id": "1844",
                   "json": {
                    "$id": "1845",
                    "name": "scaleIncrement"
                   }
                  }
                 },
                 {
                  "$id": "1846",
                  "kind": "property",
                  "name": "kind",
                  "serializedName": "kind",
                  "doc": "Specifies the mechanism associated with this scaling policy.",
                  "type": {
                   "$id": "1847",
                   "kind": "constant",
                   "valueType": {
                    "$id": "1848",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                   },
                   "value": "ScalePartitionInstanceCount",
                   "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": true,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "Microsoft.ServiceFabric.PartitionInstanceCountScaleMechanism.kind",
                  "serializationOptions": {
                   "$id": "1849",
                   "json": {
                    "$id": "1850",
                    "name": "kind"
                   }
                  }
                 }
                ]
               }
              }
             },
             "optional": false,
             "readOnly": false,
             "discriminator": false,
             "flatten": false,
             "decorators": [],
             "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ScalingPolicy.scalingMechanism",
             "serializationOptions": {
              "$id": "1851",
              "json": {
               "$id": "1852",
               "name": "scalingMechanism"
              }
             }
            },
            {
             "$id": "1853",
             "kind": "property",
             "name": "scalingTrigger",
             "serializedName": "scalingTrigger",
             "doc": "Specifies the trigger associated with this scaling policy.",
             "type": {
              "$id": "1854",
              "kind": "model",
              "name": "ManagedServiceScalingTrigger",
              "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
              "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ScalingTrigger",
              "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
              "doc": "Describes the trigger for performing a scaling operation.",
              "decorators": [],
              "discriminatorProperty": {
               "$id": "1855",
               "kind": "property",
               "name": "kind",
               "serializedName": "kind",
               "type": {
                "$ref": "326"
               },
               "optional": false,
               "readOnly": false,
               "discriminator": true,
               "flatten": false,
               "decorators": [],
               "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ScalingTrigger.kind",
               "serializationOptions": {
                "$id": "1856",
                "json": {
                 "$id": "1857",
                 "name": "kind"
                }
               }
              },
              "properties": [
               {
                "$ref": "1855"
               }
              ],
              "discriminatedSubtypes": {
               "$id": "1858",
               "AveragePartitionLoadTrigger": {
                "$id": "1859",
                "kind": "model",
                "name": "AveragePartitionLoadScalingTrigger",
                "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
                "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AveragePartitionLoadScalingTrigger",
                "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
                "doc": "Represents a scaling trigger related to an average load of a metric/resource of a partition.",
                "discriminatorValue": "AveragePartitionLoadTrigger",
                "decorators": [],
                "baseModel": {
                 "$ref": "1854"
                },
                "properties": [
                 {
                  "$id": "1860",
                  "kind": "property",
                  "name": "metricName",
                  "serializedName": "metricName",
                  "doc": "The name of the metric for which usage should be tracked.",
                  "type": {
                   "$id": "1861",
                   "kind": "string",
                   "name": "string",
                   "crossLanguageDefinitionId": "TypeSpec.string",
                   "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AveragePartitionLoadScalingTrigger.metricName",
                  "serializationOptions": {
                   "$id": "1862",
                   "json": {
                    "$id": "1863",
                    "name": "metricName"
                   }
                  }
                 },
                 {
                  "$id": "1864",
                  "kind": "property",
                  "name": "lowerLoadThreshold",
                  "serializedName": "lowerLoadThreshold",
                  "doc": "The lower limit of the load below which a scale in operation should be performed.",
                  "type": {
                   "$id": "1865",
                   "kind": "float64",
                   "name": "float64",
                   "crossLanguageDefinitionId": "TypeSpec.float64",
                   "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AveragePartitionLoadScalingTrigger.lowerLoadThreshold",
                  "serializationOptions": {
                   "$id": "1866",
                   "json": {
                    "$id": "1867",
                    "name": "lowerLoadThreshold"
                   }
                  }
                 },
                 {
                  "$id": "1868",
                  "kind": "property",
                  "name": "upperLoadThreshold",
                  "serializedName": "upperLoadThreshold",
                  "doc": "The upper limit of the load beyond which a scale out operation should be performed.",
                  "type": {
                   "$id": "1869",
                   "kind": "float64",
                   "name": "float64",
                   "crossLanguageDefinitionId": "TypeSpec.float64",
                   "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AveragePartitionLoadScalingTrigger.upperLoadThreshold",
                  "serializationOptions": {
                   "$id": "1870",
                   "json": {
                    "$id": "1871",
                    "name": "upperLoadThreshold"
                   }
                  }
                 },
                 {
                  "$id": "1872",
                  "kind": "property",
                  "name": "scaleInterval",
                  "serializedName": "scaleInterval",
                  "doc": "The period in seconds on which a decision is made whether to scale or not. This property should come in ISO 8601 format \"hh:mm:ss\".",
                  "type": {
                   "$id": "1873",
                   "kind": "string",
                   "name": "string",
                   "crossLanguageDefinitionId": "TypeSpec.string",
                   "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AveragePartitionLoadScalingTrigger.scaleInterval",
                  "serializationOptions": {
                   "$id": "1874",
                   "json": {
                    "$id": "1875",
                    "name": "scaleInterval"
                   }
                  }
                 },
                 {
                  "$id": "1876",
                  "kind": "property",
                  "name": "kind",
                  "serializedName": "kind",
                  "doc": "Specifies the trigger associated with this scaling policy.",
                  "type": {
                   "$id": "1877",
                   "kind": "constant",
                   "valueType": {
                    "$id": "1878",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                   },
                   "value": "AveragePartitionLoadTrigger",
                   "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": true,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AveragePartitionLoadScalingTrigger.kind",
                  "serializationOptions": {
                   "$id": "1879",
                   "json": {
                    "$id": "1880",
                    "name": "kind"
                   }
                  }
                 }
                ]
               },
               "AverageServiceLoadTrigger": {
                "$id": "1881",
                "kind": "model",
                "name": "AverageServiceLoadScalingTrigger",
                "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
                "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AverageServiceLoadScalingTrigger",
                "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
                "doc": "Represents a scaling policy related to an average load of a metric/resource of a service.",
                "discriminatorValue": "AverageServiceLoadTrigger",
                "decorators": [],
                "baseModel": {
                 "$ref": "1854"
                },
                "properties": [
                 {
                  "$id": "1882",
                  "kind": "property",
                  "name": "metricName",
                  "serializedName": "metricName",
                  "doc": "The name of the metric for which usage should be tracked.",
                  "type": {
                   "$id": "1883",
                   "kind": "string",
                   "name": "string",
                   "crossLanguageDefinitionId": "TypeSpec.string",
                   "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AverageServiceLoadScalingTrigger.metricName",
                  "serializationOptions": {
                   "$id": "1884",
                   "json": {
                    "$id": "1885",
                    "name": "metricName"
                   }
                  }
                 },
                 {
                  "$id": "1886",
                  "kind": "property",
                  "name": "lowerLoadThreshold",
                  "serializedName": "lowerLoadThreshold",
                  "doc": "The lower limit of the load below which a scale in operation should be performed.",
                  "type": {
                   "$id": "1887",
                   "kind": "float64",
                   "name": "float64",
                   "crossLanguageDefinitionId": "TypeSpec.float64",
                   "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AverageServiceLoadScalingTrigger.lowerLoadThreshold",
                  "serializationOptions": {
                   "$id": "1888",
                   "json": {
                    "$id": "1889",
                    "name": "lowerLoadThreshold"
                   }
                  }
                 },
                 {
                  "$id": "1890",
                  "kind": "property",
                  "name": "upperLoadThreshold",
                  "serializedName": "upperLoadThreshold",
                  "doc": "The upper limit of the load beyond which a scale out operation should be performed.",
                  "type": {
                   "$id": "1891",
                   "kind": "float64",
                   "name": "float64",
                   "crossLanguageDefinitionId": "TypeSpec.float64",
                   "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AverageServiceLoadScalingTrigger.upperLoadThreshold",
                  "serializationOptions": {
                   "$id": "1892",
                   "json": {
                    "$id": "1893",
                    "name": "upperLoadThreshold"
                   }
                  }
                 },
                 {
                  "$id": "1894",
                  "kind": "property",
                  "name": "scaleInterval",
                  "serializedName": "scaleInterval",
                  "doc": "The period in seconds on which a decision is made whether to scale or not. This property should come in ISO 8601 format \"hh:mm:ss\".",
                  "type": {
                   "$id": "1895",
                   "kind": "string",
                   "name": "string",
                   "crossLanguageDefinitionId": "TypeSpec.string",
                   "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AverageServiceLoadScalingTrigger.scaleInterval",
                  "serializationOptions": {
                   "$id": "1896",
                   "json": {
                    "$id": "1897",
                    "name": "scaleInterval"
                   }
                  }
                 },
                 {
                  "$id": "1898",
                  "kind": "property",
                  "name": "useOnlyPrimaryLoad",
                  "serializedName": "useOnlyPrimaryLoad",
                  "doc": "Flag determines whether only the load of primary replica should be considered for scaling. If set to true, then trigger will only consider the load of primary replicas of stateful service. If set to false, trigger will consider load of all replicas. This parameter cannot be set to true for stateless service.",
                  "type": {
                   "$id": "1899",
                   "kind": "boolean",
                   "name": "boolean",
                   "crossLanguageDefinitionId": "TypeSpec.boolean",
                   "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AverageServiceLoadScalingTrigger.useOnlyPrimaryLoad",
                  "serializationOptions": {
                   "$id": "1900",
                   "json": {
                    "$id": "1901",
                    "name": "useOnlyPrimaryLoad"
                   }
                  }
                 },
                 {
                  "$id": "1902",
                  "kind": "property",
                  "name": "kind",
                  "serializedName": "kind",
                  "doc": "Specifies the trigger associated with this scaling policy.",
                  "type": {
                   "$id": "1903",
                   "kind": "constant",
                   "valueType": {
                    "$id": "1904",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                   },
                   "value": "AverageServiceLoadTrigger",
                   "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": true,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AverageServiceLoadScalingTrigger.kind",
                  "serializationOptions": {
                   "$id": "1905",
                   "json": {
                    "$id": "1906",
                    "name": "kind"
                   }
                  }
                 }
                ]
               }
              }
             },
             "optional": false,
             "readOnly": false,
             "discriminator": false,
             "flatten": false,
             "decorators": [],
             "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ScalingPolicy.scalingTrigger",
             "serializationOptions": {
              "$id": "1907",
              "json": {
               "$id": "1908",
               "name": "scalingTrigger"
              }
             }
            }
           ]
          },
          "crossLanguageDefinitionId": "TypeSpec.Array",
          "decorators": []
         },
         "optional": true,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceResourcePropertiesBase.scalingPolicies",
         "serializationOptions": {
          "$id": "1909",
          "json": {
           "$id": "1910",
           "name": "scalingPolicies"
          }
         }
        }
       ]
      },
      "properties": [
       {
        "$id": "1911",
        "kind": "property",
        "name": "provisioningState",
        "serializedName": "provisioningState",
        "doc": "The current deployment or provisioning state, which only appears in the response",
        "type": {
         "$id": "1912",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": true,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceResourceProperties.provisioningState",
        "serializationOptions": {
         "$id": "1913",
         "json": {
          "$id": "1914",
          "name": "provisioningState"
         }
        }
       },
       {
        "$ref": "1704"
       },
       {
        "$id": "1915",
        "kind": "property",
        "name": "serviceTypeName",
        "serializedName": "serviceTypeName",
        "doc": "The name of the service type",
        "type": {
         "$id": "1916",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceResourceProperties.serviceTypeName",
        "serializationOptions": {
         "$id": "1917",
         "json": {
          "$id": "1918",
          "name": "serviceTypeName"
         }
        }
       },
       {
        "$id": "1919",
        "kind": "property",
        "name": "partitionDescription",
        "serializedName": "partitionDescription",
        "doc": "Describes how the service is partitioned.",
        "type": {
         "$id": "1920",
         "kind": "model",
         "name": "ManagedServicePartitionScheme",
         "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
         "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Partition",
         "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
         "doc": "Describes how the service is partitioned.",
         "decorators": [],
         "discriminatorProperty": {
          "$id": "1921",
          "kind": "property",
          "name": "partitionScheme",
          "serializedName": "partitionScheme",
          "type": {
           "$ref": "268"
          },
          "optional": false,
          "readOnly": false,
          "discriminator": true,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Partition.partitionScheme",
          "serializationOptions": {
           "$id": "1922",
           "json": {
            "$id": "1923",
            "name": "partitionScheme"
           }
          }
         },
         "properties": [
          {
           "$ref": "1921"
          }
         ],
         "discriminatedSubtypes": {
          "$id": "1924",
          "UniformInt64Range": {
           "$id": "1925",
           "kind": "model",
           "name": "UniformInt64RangePartitionScheme",
           "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
           "crossLanguageDefinitionId": "Microsoft.ServiceFabric.UniformInt64RangePartitionScheme",
           "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
           "doc": "Describes a partitioning scheme where an integer range is allocated evenly across a number of partitions.",
           "discriminatorValue": "UniformInt64Range",
           "decorators": [],
           "baseModel": {
            "$ref": "1920"
           },
           "properties": [
            {
             "$id": "1926",
             "kind": "property",
             "name": "count",
             "serializedName": "count",
             "doc": "The number of partitions.",
             "type": {
              "$id": "1927",
              "kind": "int32",
              "name": "int32",
              "crossLanguageDefinitionId": "TypeSpec.int32",
              "decorators": []
             },
             "optional": false,
             "readOnly": false,
             "discriminator": false,
             "flatten": false,
             "decorators": [],
             "crossLanguageDefinitionId": "Microsoft.ServiceFabric.UniformInt64RangePartitionScheme.count",
             "serializationOptions": {
              "$id": "1928",
              "json": {
               "$id": "1929",
               "name": "count"
              }
             }
            },
            {
             "$id": "1930",
             "kind": "property",
             "name": "lowKey",
             "serializedName": "lowKey",
             "doc": "The lower bound of the partition key range that\nshould be split between the partition ‘Count’",
             "type": {
              "$id": "1931",
              "kind": "int64",
              "name": "int64",
              "crossLanguageDefinitionId": "TypeSpec.int64",
              "decorators": []
             },
             "optional": false,
             "readOnly": false,
             "discriminator": false,
             "flatten": false,
             "decorators": [],
             "crossLanguageDefinitionId": "Microsoft.ServiceFabric.UniformInt64RangePartitionScheme.lowKey",
             "serializationOptions": {
              "$id": "1932",
              "json": {
               "$id": "1933",
               "name": "lowKey"
              }
             }
            },
            {
             "$id": "1934",
             "kind": "property",
             "name": "highKey",
             "serializedName": "highKey",
             "doc": "The upper bound of the partition key range that\nshould be split between the partition ‘Count’",
             "type": {
              "$id": "1935",
              "kind": "int64",
              "name": "int64",
              "crossLanguageDefinitionId": "TypeSpec.int64",
              "decorators": []
             },
             "optional": false,
             "readOnly": false,
             "discriminator": false,
             "flatten": false,
             "decorators": [],
             "crossLanguageDefinitionId": "Microsoft.ServiceFabric.UniformInt64RangePartitionScheme.highKey",
             "serializationOptions": {
              "$id": "1936",
              "json": {
               "$id": "1937",
               "name": "highKey"
              }
             }
            },
            {
             "$id": "1938",
             "kind": "property",
             "name": "partitionScheme",
             "serializedName": "partitionScheme",
             "doc": "Specifies how the service is partitioned.",
             "type": {
              "$id": "1939",
              "kind": "constant",
              "valueType": {
               "$id": "1940",
               "kind": "string",
               "name": "string",
               "crossLanguageDefinitionId": "TypeSpec.string",
               "decorators": []
              },
              "value": "UniformInt64Range",
              "decorators": []
             },
             "optional": false,
             "readOnly": false,
             "discriminator": true,
             "flatten": false,
             "decorators": [],
             "crossLanguageDefinitionId": "Microsoft.ServiceFabric.UniformInt64RangePartitionScheme.partitionScheme",
             "serializationOptions": {
              "$id": "1941",
              "json": {
               "$id": "1942",
               "name": "partitionScheme"
              }
             }
            }
           ]
          },
          "Singleton": {
           "$id": "1943",
           "kind": "model",
           "name": "SingletonPartitionScheme",
           "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
           "crossLanguageDefinitionId": "Microsoft.ServiceFabric.SingletonPartitionScheme",
           "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
           "doc": "Describes the partition scheme of a singleton-partitioned, or non-partitioned service.",
           "discriminatorValue": "Singleton",
           "decorators": [],
           "baseModel": {
            "$ref": "1920"
           },
           "properties": [
            {
             "$id": "1944",
             "kind": "property",
             "name": "partitionScheme",
             "serializedName": "partitionScheme",
             "doc": "Specifies how the service is partitioned.",
             "type": {
              "$id": "1945",
              "kind": "constant",
              "valueType": {
               "$id": "1946",
               "kind": "string",
               "name": "string",
               "crossLanguageDefinitionId": "TypeSpec.string",
               "decorators": []
              },
              "value": "Singleton",
              "decorators": []
             },
             "optional": false,
             "readOnly": false,
             "discriminator": true,
             "flatten": false,
             "decorators": [],
             "crossLanguageDefinitionId": "Microsoft.ServiceFabric.SingletonPartitionScheme.partitionScheme",
             "serializationOptions": {
              "$id": "1947",
              "json": {
               "$id": "1948",
               "name": "partitionScheme"
              }
             }
            }
           ]
          },
          "Named": {
           "$id": "1949",
           "kind": "model",
           "name": "NamedPartitionScheme",
           "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
           "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NamedPartitionScheme",
           "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
           "doc": "Describes the named partition scheme of the service.",
           "discriminatorValue": "Named",
           "decorators": [],
           "baseModel": {
            "$ref": "1920"
           },
           "properties": [
            {
             "$id": "1950",
             "kind": "property",
             "name": "names",
             "serializedName": "names",
             "doc": "Array for the names of the partitions.",
             "type": {
              "$id": "1951",
              "kind": "array",
              "name": "Array",
              "valueType": {
               "$id": "1952",
               "kind": "string",
               "name": "string",
               "crossLanguageDefinitionId": "TypeSpec.string",
               "decorators": []
              },
              "crossLanguageDefinitionId": "TypeSpec.Array",
              "decorators": []
             },
             "optional": false,
             "readOnly": false,
             "discriminator": false,
             "flatten": false,
             "decorators": [],
             "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NamedPartitionScheme.names",
             "serializationOptions": {
              "$id": "1953",
              "json": {
               "$id": "1954",
               "name": "names"
              }
             }
            },
            {
             "$id": "1955",
             "kind": "property",
             "name": "partitionScheme",
             "serializedName": "partitionScheme",
             "doc": "Specifies how the service is partitioned.",
             "type": {
              "$id": "1956",
              "kind": "constant",
              "valueType": {
               "$id": "1957",
               "kind": "string",
               "name": "string",
               "crossLanguageDefinitionId": "TypeSpec.string",
               "decorators": []
              },
              "value": "Named",
              "decorators": []
             },
             "optional": false,
             "readOnly": false,
             "discriminator": true,
             "flatten": false,
             "decorators": [],
             "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NamedPartitionScheme.partitionScheme",
             "serializationOptions": {
              "$id": "1958",
              "json": {
               "$id": "1959",
               "name": "partitionScheme"
              }
             }
            }
           ]
          }
         }
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceResourceProperties.partitionDescription",
        "serializationOptions": {
         "$id": "1960",
         "json": {
          "$id": "1961",
          "name": "partitionDescription"
         }
        }
       },
       {
        "$id": "1962",
        "kind": "property",
        "name": "servicePackageActivationMode",
        "serializedName": "servicePackageActivationMode",
        "doc": "The activation Mode of the service package",
        "type": {
         "$ref": "276"
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceResourceProperties.servicePackageActivationMode",
        "serializationOptions": {
         "$id": "1963",
         "json": {
          "$id": "1964",
          "name": "servicePackageActivationMode"
         }
        }
       },
       {
        "$id": "1965",
        "kind": "property",
        "name": "serviceDnsName",
        "serializedName": "serviceDnsName",
        "doc": "Dns name used for the service. If this is specified, then the DNS name can be used to return the IP addresses of service endpoints for application layer protocols (e.g., HTTP).\nWhen updating serviceDnsName, old name may be temporarily resolvable. However, rely on new name.\nWhen removing serviceDnsName, removed name may temporarily be resolvable. Do not rely on the name being unresolvable.",
        "type": {
         "$id": "1966",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceResourceProperties.serviceDnsName",
        "serializationOptions": {
         "$id": "1967",
         "json": {
          "$id": "1968",
          "name": "serviceDnsName"
         }
        }
       }
      ],
      "discriminatedSubtypes": {
       "$id": "1969",
       "Stateful": {
        "$id": "1970",
        "kind": "model",
        "name": "StatefulServiceProperties",
        "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.StatefulServiceProperties",
        "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
        "doc": "The properties of a stateful service resource.",
        "discriminatorValue": "Stateful",
        "decorators": [],
        "baseModel": {
         "$ref": "1703"
        },
        "properties": [
         {
          "$id": "1971",
          "kind": "property",
          "name": "hasPersistedState",
          "serializedName": "hasPersistedState",
          "doc": "A flag indicating whether this is a persistent service which stores states on the local disk. If it is then the value of this property is true, if not it is false.",
          "type": {
           "$id": "1972",
           "kind": "boolean",
           "name": "boolean",
           "crossLanguageDefinitionId": "TypeSpec.boolean",
           "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.StatefulServiceProperties.hasPersistedState",
          "serializationOptions": {
           "$id": "1973",
           "json": {
            "$id": "1974",
            "name": "hasPersistedState"
           }
          }
         },
         {
          "$id": "1975",
          "kind": "property",
          "name": "targetReplicaSetSize",
          "serializedName": "targetReplicaSetSize",
          "doc": "The target replica set size as a number.",
          "type": {
           "$id": "1976",
           "kind": "int32",
           "name": "int32",
           "crossLanguageDefinitionId": "TypeSpec.int32",
           "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.StatefulServiceProperties.targetReplicaSetSize",
          "serializationOptions": {
           "$id": "1977",
           "json": {
            "$id": "1978",
            "name": "targetReplicaSetSize"
           }
          }
         },
         {
          "$id": "1979",
          "kind": "property",
          "name": "minReplicaSetSize",
          "serializedName": "minReplicaSetSize",
          "doc": "The minimum replica set size as a number.",
          "type": {
           "$id": "1980",
           "kind": "int32",
           "name": "int32",
           "crossLanguageDefinitionId": "TypeSpec.int32",
           "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.StatefulServiceProperties.minReplicaSetSize",
          "serializationOptions": {
           "$id": "1981",
           "json": {
            "$id": "1982",
            "name": "minReplicaSetSize"
           }
          }
         },
         {
          "$id": "1983",
          "kind": "property",
          "name": "replicaRestartWaitDuration",
          "serializedName": "replicaRestartWaitDuration",
          "doc": "The duration between when a replica goes down and when a new replica is created, represented in ISO 8601 format \"hh:mm:ss\".",
          "type": {
           "$id": "1984",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.StatefulServiceProperties.replicaRestartWaitDuration",
          "serializationOptions": {
           "$id": "1985",
           "json": {
            "$id": "1986",
            "name": "replicaRestartWaitDuration"
           }
          }
         },
         {
          "$id": "1987",
          "kind": "property",
          "name": "quorumLossWaitDuration",
          "serializedName": "quorumLossWaitDuration",
          "doc": "The maximum duration for which a partition is allowed to be in a state of quorum loss, represented in ISO 8601 format \"hh:mm:ss\".",
          "type": {
           "$id": "1988",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.StatefulServiceProperties.quorumLossWaitDuration",
          "serializationOptions": {
           "$id": "1989",
           "json": {
            "$id": "1990",
            "name": "quorumLossWaitDuration"
           }
          }
         },
         {
          "$id": "1991",
          "kind": "property",
          "name": "standByReplicaKeepDuration",
          "serializedName": "standByReplicaKeepDuration",
          "doc": "The definition on how long StandBy replicas should be maintained before being removed, represented in ISO 8601 format \"hh:mm:ss\".",
          "type": {
           "$id": "1992",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.StatefulServiceProperties.standByReplicaKeepDuration",
          "serializationOptions": {
           "$id": "1993",
           "json": {
            "$id": "1994",
            "name": "standByReplicaKeepDuration"
           }
          }
         },
         {
          "$id": "1995",
          "kind": "property",
          "name": "servicePlacementTimeLimit",
          "serializedName": "servicePlacementTimeLimit",
          "doc": "The duration for which replicas can stay InBuild before reporting that build is stuck, represented in ISO 8601 format \"hh:mm:ss\".",
          "type": {
           "$id": "1996",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.StatefulServiceProperties.servicePlacementTimeLimit",
          "serializationOptions": {
           "$id": "1997",
           "json": {
            "$id": "1998",
            "name": "servicePlacementTimeLimit"
           }
          }
         },
         {
          "$id": "1999",
          "kind": "property",
          "name": "serviceKind",
          "serializedName": "serviceKind",
          "doc": "The kind of service (Stateless or Stateful).",
          "type": {
           "$id": "2000",
           "kind": "constant",
           "valueType": {
            "$id": "2001",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           "value": "Stateful",
           "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": true,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.StatefulServiceProperties.serviceKind",
          "serializationOptions": {
           "$id": "2002",
           "json": {
            "$id": "2003",
            "name": "serviceKind"
           }
          }
         }
        ]
       },
       "Stateless": {
        "$id": "2004",
        "kind": "model",
        "name": "StatelessServiceProperties",
        "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.StatelessServiceProperties",
        "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
        "doc": "The properties of a stateless service resource.",
        "discriminatorValue": "Stateless",
        "decorators": [],
        "baseModel": {
         "$ref": "1703"
        },
        "properties": [
         {
          "$id": "2005",
          "kind": "property",
          "name": "instanceCount",
          "serializedName": "instanceCount",
          "doc": "The instance count.",
          "type": {
           "$id": "2006",
           "kind": "int32",
           "name": "int32",
           "crossLanguageDefinitionId": "TypeSpec.int32",
           "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.StatelessServiceProperties.instanceCount",
          "serializationOptions": {
           "$id": "2007",
           "json": {
            "$id": "2008",
            "name": "instanceCount"
           }
          }
         },
         {
          "$id": "2009",
          "kind": "property",
          "name": "minInstanceCount",
          "serializedName": "minInstanceCount",
          "doc": "MinInstanceCount is the minimum number of instances that must be up to meet the EnsureAvailability safety check during operations like upgrade or deactivate node. The actual number that is used is max( MinInstanceCount, ceil( MinInstancePercentage/100.0 * InstanceCount) ). Note, if InstanceCount is set to -1, during MinInstanceCount computation -1 is first converted into the number of nodes on which the instances are allowed to be placed according to the placement constraints on the service.",
          "type": {
           "$id": "2010",
           "kind": "int32",
           "name": "int32",
           "crossLanguageDefinitionId": "TypeSpec.int32",
           "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.StatelessServiceProperties.minInstanceCount",
          "serializationOptions": {
           "$id": "2011",
           "json": {
            "$id": "2012",
            "name": "minInstanceCount"
           }
          }
         },
         {
          "$id": "2013",
          "kind": "property",
          "name": "minInstancePercentage",
          "serializedName": "minInstancePercentage",
          "doc": "MinInstancePercentage is the minimum percentage of InstanceCount that must be up to meet the EnsureAvailability safety check during operations like upgrade or deactivate node. The actual number that is used is max( MinInstanceCount, ceil( MinInstancePercentage/100.0 * InstanceCount) ). Note, if InstanceCount is set to -1, during MinInstancePercentage computation, -1 is first converted into the number of nodes on which the instances are allowed to be placed according to the placement constraints on the service.",
          "type": {
           "$id": "2014",
           "kind": "int32",
           "name": "int32",
           "crossLanguageDefinitionId": "TypeSpec.int32",
           "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.StatelessServiceProperties.minInstancePercentage",
          "serializationOptions": {
           "$id": "2015",
           "json": {
            "$id": "2016",
            "name": "minInstancePercentage"
           }
          }
         },
         {
          "$id": "2017",
          "kind": "property",
          "name": "serviceKind",
          "serializedName": "serviceKind",
          "doc": "The kind of service (Stateless or Stateful).",
          "type": {
           "$id": "2018",
           "kind": "constant",
           "valueType": {
            "$id": "2019",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           "value": "Stateless",
           "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": true,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.StatelessServiceProperties.serviceKind",
          "serializationOptions": {
           "$id": "2020",
           "json": {
            "$id": "2021",
            "name": "serviceKind"
           }
          }
         }
        ]
       }
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceResource.properties",
     "serializationOptions": {
      "$id": "2022",
      "json": {
       "$id": "2023",
       "name": "properties"
      }
     }
    },
    {
     "$id": "2024",
     "kind": "property",
     "name": "tags",
     "serializedName": "tags",
     "doc": "Resource tags.",
     "type": {
      "$id": "2025",
      "kind": "dict",
      "keyType": {
       "$id": "2026",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "valueType": {
       "$id": "2027",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceResource.tags",
     "serializationOptions": {
      "$id": "2028",
      "json": {
       "$id": "2029",
       "name": "tags"
      }
     }
    },
    {
     "$id": "2030",
     "kind": "property",
     "name": "location",
     "serializedName": "location",
     "doc": "The geo-location where the resource lives",
     "type": {
      "$id": "2031",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceResource.location",
     "serializationOptions": {
      "$id": "2032",
      "json": {
       "$id": "2033",
       "name": "location"
      }
     }
    }
   ]
  },
  {
   "$ref": "1703"
  },
  {
   "$ref": "1920"
  },
  {
   "$ref": "1925"
  },
  {
   "$ref": "1943"
  },
  {
   "$ref": "1949"
  },
  {
   "$ref": "1707"
  },
  {
   "$ref": "1714"
  },
  {
   "$ref": "1726"
  },
  {
   "$ref": "1750"
  },
  {
   "$ref": "1755"
  },
  {
   "$ref": "1765"
  },
  {
   "$ref": "1775"
  },
  {
   "$ref": "1785"
  },
  {
   "$ref": "1795"
  },
  {
   "$ref": "1808"
  },
  {
   "$ref": "1810"
  },
  {
   "$ref": "1815"
  },
  {
   "$ref": "1833"
  },
  {
   "$ref": "1854"
  },
  {
   "$ref": "1859"
  },
  {
   "$ref": "1881"
  },
  {
   "$ref": "1970"
  },
  {
   "$ref": "2004"
  },
  {
   "$id": "2034",
   "kind": "model",
   "name": "ServiceUpdateParameters",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceUpdateParameters",
   "usage": "Input,Json",
   "doc": "Service update request",
   "decorators": [],
   "properties": [
    {
     "$id": "2035",
     "kind": "property",
     "name": "tags",
     "serializedName": "tags",
     "doc": "Service update parameters",
     "type": {
      "$id": "2036",
      "kind": "dict",
      "keyType": {
       "$id": "2037",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "valueType": {
       "$id": "2038",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceUpdateParameters.tags",
     "serializationOptions": {
      "$id": "2039",
      "json": {
       "$id": "2040",
       "name": "tags"
      }
     }
    }
   ]
  },
  {
   "$id": "2041",
   "kind": "model",
   "name": "ServiceResourceList",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceResourceList",
   "usage": "Output,Json",
   "doc": "The list of service resources.",
   "decorators": [],
   "properties": [
    {
     "$id": "2042",
     "kind": "property",
     "name": "value",
     "serializedName": "value",
     "doc": "The ServiceResource items on this page",
     "type": {
      "$id": "2043",
      "kind": "array",
      "name": "ArrayServiceResource",
      "valueType": {
       "$ref": "1701"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceResourceList.value",
     "serializationOptions": {
      "$id": "2044",
      "json": {
       "$id": "2045",
       "name": "value"
      }
     }
    },
    {
     "$id": "2046",
     "kind": "property",
     "name": "nextLink",
     "serializedName": "nextLink",
     "doc": "The link to the next page of items",
     "type": {
      "$id": "2047",
      "kind": "url",
      "name": "ResourceLocation",
      "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
      "baseType": {
       "$id": "2048",
       "kind": "url",
       "name": "url",
       "crossLanguageDefinitionId": "TypeSpec.url",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceResourceList.nextLink",
     "serializationOptions": {
      "$id": "2049",
      "json": {
       "$id": "2050",
       "name": "nextLink"
      }
     }
    }
   ]
  },
  {
   "$id": "2051",
   "kind": "model",
   "name": "ServiceFabricManagedApplicationTypeVersion",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeVersionResource",
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "doc": "An application type version resource for the specified application type name resource.",
   "decorators": [],
   "baseModel": {
    "$ref": "500"
   },
   "properties": [
    {
     "$id": "2052",
     "kind": "property",
     "name": "properties",
     "serializedName": "properties",
     "doc": "The properties of the application type version resource.",
     "type": {
      "$id": "2053",
      "kind": "model",
      "name": "ApplicationTypeVersionResourceProperties",
      "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
      "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeVersionResourceProperties",
      "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
      "doc": "The properties of the application type version resource.",
      "decorators": [],
      "properties": [
       {
        "$id": "2054",
        "kind": "property",
        "name": "provisioningState",
        "serializedName": "provisioningState",
        "doc": "The current deployment or provisioning state, which only appears in the response",
        "type": {
         "$id": "2055",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": true,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeVersionResourceProperties.provisioningState",
        "serializationOptions": {
         "$id": "2056",
         "json": {
          "$id": "2057",
          "name": "provisioningState"
         }
        }
       },
       {
        "$id": "2058",
        "kind": "property",
        "name": "appPackageUrl",
        "serializedName": "appPackageUrl",
        "doc": "The URL to the application package",
        "type": {
         "$id": "2059",
         "kind": "url",
         "name": "url",
         "crossLanguageDefinitionId": "TypeSpec.url",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeVersionResourceProperties.appPackageUrl",
        "serializationOptions": {
         "$id": "2060",
         "json": {
          "$id": "2061",
          "name": "appPackageUrl"
         }
        }
       }
      ]
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": true,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeVersionResource.properties",
     "serializationOptions": {
      "$id": "2062",
      "json": {
       "$id": "2063",
       "name": "properties"
      }
     }
    },
    {
     "$id": "2064",
     "kind": "property",
     "name": "tags",
     "serializedName": "tags",
     "doc": "Resource tags.",
     "type": {
      "$id": "2065",
      "kind": "dict",
      "keyType": {
       "$id": "2066",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "valueType": {
       "$id": "2067",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeVersionResource.tags",
     "serializationOptions": {
      "$id": "2068",
      "json": {
       "$id": "2069",
       "name": "tags"
      }
     }
    },
    {
     "$id": "2070",
     "kind": "property",
     "name": "location",
     "serializedName": "location",
     "doc": "The geo-location where the resource lives",
     "type": {
      "$id": "2071",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeVersionResource.location",
     "serializationOptions": {
      "$id": "2072",
      "json": {
       "$id": "2073",
       "name": "location"
      }
     }
    }
   ]
  },
  {
   "$ref": "2053"
  },
  {
   "$id": "2074",
   "kind": "model",
   "name": "ApplicationTypeVersionUpdateParameters",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeVersionUpdateParameters",
   "usage": "Input,Json",
   "doc": "Application type version update request",
   "decorators": [],
   "properties": [
    {
     "$id": "2075",
     "kind": "property",
     "name": "tags",
     "serializedName": "tags",
     "doc": "Application type version update parameters",
     "type": {
      "$id": "2076",
      "kind": "dict",
      "keyType": {
       "$id": "2077",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "valueType": {
       "$id": "2078",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeVersionUpdateParameters.tags",
     "serializationOptions": {
      "$id": "2079",
      "json": {
       "$id": "2080",
       "name": "tags"
      }
     }
    }
   ]
  },
  {
   "$id": "2081",
   "kind": "model",
   "name": "ApplicationTypeVersionResourceList",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeVersionResourceList",
   "usage": "Output,Json",
   "doc": "The list of application type version resources for the specified application type name resource.",
   "decorators": [],
   "properties": [
    {
     "$id": "2082",
     "kind": "property",
     "name": "value",
     "serializedName": "value",
     "doc": "The ApplicationTypeVersionResource items on this page",
     "type": {
      "$id": "2083",
      "kind": "array",
      "name": "ArrayApplicationTypeVersionResource",
      "valueType": {
       "$ref": "2051"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeVersionResourceList.value",
     "serializationOptions": {
      "$id": "2084",
      "json": {
       "$id": "2085",
       "name": "value"
      }
     }
    },
    {
     "$id": "2086",
     "kind": "property",
     "name": "nextLink",
     "serializedName": "nextLink",
     "doc": "The link to the next page of items",
     "type": {
      "$id": "2087",
      "kind": "url",
      "name": "ResourceLocation",
      "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
      "baseType": {
       "$id": "2088",
       "kind": "url",
       "name": "url",
       "crossLanguageDefinitionId": "TypeSpec.url",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeVersionResourceList.nextLink",
     "serializationOptions": {
      "$id": "2089",
      "json": {
       "$id": "2090",
       "name": "nextLink"
      }
     }
    }
   ]
  },
  {
   "$id": "2091",
   "kind": "model",
   "name": "ServiceFabricManagedApplicationType",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeResource",
   "usage": "Input,Output,Json",
   "doc": "The application type name resource",
   "decorators": [],
   "baseModel": {
    "$ref": "500"
   },
   "properties": [
    {
     "$id": "2092",
     "kind": "property",
     "name": "properties",
     "serializedName": "properties",
     "doc": "The application type name properties",
     "type": {
      "$id": "2093",
      "kind": "model",
      "name": "ApplicationTypeResourceProperties",
      "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
      "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeResourceProperties",
      "usage": "Input,Output,Json",
      "doc": "The application type name properties",
      "decorators": [],
      "properties": [
       {
        "$id": "2094",
        "kind": "property",
        "name": "provisioningState",
        "serializedName": "provisioningState",
        "doc": "The current deployment or provisioning state, which only appears in the response.",
        "type": {
         "$id": "2095",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": true,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeResourceProperties.provisioningState",
        "serializationOptions": {
         "$id": "2096",
         "json": {
          "$id": "2097",
          "name": "provisioningState"
         }
        }
       }
      ]
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": true,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeResource.properties",
     "serializationOptions": {
      "$id": "2098",
      "json": {
       "$id": "2099",
       "name": "properties"
      }
     }
    },
    {
     "$id": "2100",
     "kind": "property",
     "name": "tags",
     "serializedName": "tags",
     "doc": "Resource tags.",
     "type": {
      "$id": "2101",
      "kind": "dict",
      "keyType": {
       "$id": "2102",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "valueType": {
       "$id": "2103",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeResource.tags",
     "serializationOptions": {
      "$id": "2104",
      "json": {
       "$id": "2105",
       "name": "tags"
      }
     }
    },
    {
     "$id": "2106",
     "kind": "property",
     "name": "location",
     "serializedName": "location",
     "doc": "The geo-location where the resource lives",
     "type": {
      "$id": "2107",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeResource.location",
     "serializationOptions": {
      "$id": "2108",
      "json": {
       "$id": "2109",
       "name": "location"
      }
     }
    }
   ]
  },
  {
   "$ref": "2093"
  },
  {
   "$id": "2110",
   "kind": "model",
   "name": "ApplicationTypeUpdateParameters",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeUpdateParameters",
   "usage": "Input,Json",
   "doc": "Application type update request",
   "decorators": [],
   "properties": [
    {
     "$id": "2111",
     "kind": "property",
     "name": "tags",
     "serializedName": "tags",
     "doc": "Application type update parameters",
     "type": {
      "$id": "2112",
      "kind": "dict",
      "keyType": {
       "$id": "2113",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "valueType": {
       "$id": "2114",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeUpdateParameters.tags",
     "serializationOptions": {
      "$id": "2115",
      "json": {
       "$id": "2116",
       "name": "tags"
      }
     }
    }
   ]
  },
  {
   "$id": "2117",
   "kind": "model",
   "name": "ApplicationTypeResourceList",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeResourceList",
   "usage": "Output,Json",
   "doc": "The list of application type names.",
   "decorators": [],
   "properties": [
    {
     "$id": "2118",
     "kind": "property",
     "name": "value",
     "serializedName": "value",
     "doc": "The ApplicationTypeResource items on this page",
     "type": {
      "$id": "2119",
      "kind": "array",
      "name": "ArrayApplicationTypeResource",
      "valueType": {
       "$ref": "2091"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeResourceList.value",
     "serializationOptions": {
      "$id": "2120",
      "json": {
       "$id": "2121",
       "name": "value"
      }
     }
    },
    {
     "$id": "2122",
     "kind": "property",
     "name": "nextLink",
     "serializedName": "nextLink",
     "doc": "The link to the next page of items",
     "type": {
      "$id": "2123",
      "kind": "url",
      "name": "ResourceLocation",
      "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
      "baseType": {
       "$id": "2124",
       "kind": "url",
       "name": "url",
       "crossLanguageDefinitionId": "TypeSpec.url",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeResourceList.nextLink",
     "serializationOptions": {
      "$id": "2125",
      "json": {
       "$id": "2126",
       "name": "nextLink"
      }
     }
    }
   ]
  },
  {
   "$id": "2127",
   "kind": "model",
   "name": "ServiceFabricManagedApplication",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationResource",
   "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
   "doc": "The application resource.",
   "decorators": [],
   "baseModel": {
    "$ref": "500"
   },
   "properties": [
    {
     "$id": "2128",
     "kind": "property",
     "name": "properties",
     "serializedName": "properties",
     "doc": "The application resource properties.",
     "type": {
      "$id": "2129",
      "kind": "model",
      "name": "ApplicationResourceProperties",
      "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
      "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationResourceProperties",
      "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
      "doc": "The application resource properties.",
      "decorators": [],
      "properties": [
       {
        "$id": "2130",
        "kind": "property",
        "name": "provisioningState",
        "serializedName": "provisioningState",
        "doc": "The current deployment or provisioning state, which only appears in the response",
        "type": {
         "$id": "2131",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": true,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationResourceProperties.provisioningState",
        "serializationOptions": {
         "$id": "2132",
         "json": {
          "$id": "2133",
          "name": "provisioningState"
         }
        }
       },
       {
        "$id": "2134",
        "kind": "property",
        "name": "version",
        "serializedName": "version",
        "doc": "The version of the application type as defined in the application manifest.\nThis name must be the full Arm Resource ID for the referenced application type version.",
        "type": {
         "$id": "2135",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationResourceProperties.version",
        "serializationOptions": {
         "$id": "2136",
         "json": {
          "$id": "2137",
          "name": "version"
         }
        }
       },
       {
        "$id": "2138",
        "kind": "property",
        "name": "parameters",
        "serializedName": "parameters",
        "doc": "List of application parameters with overridden values from their default values specified in the application manifest.",
        "type": {
         "$id": "2139",
         "kind": "dict",
         "keyType": {
          "$id": "2140",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "valueType": {
          "$id": "2141",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationResourceProperties.parameters",
        "serializationOptions": {
         "$id": "2142",
         "json": {
          "$id": "2143",
          "name": "parameters"
         }
        }
       },
       {
        "$id": "2144",
        "kind": "property",
        "name": "upgradePolicy",
        "serializedName": "upgradePolicy",
        "doc": "Describes the policy for a monitored application upgrade.",
        "type": {
         "$id": "2145",
         "kind": "model",
         "name": "ApplicationUpgradePolicy",
         "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
         "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationUpgradePolicy",
         "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
         "doc": "Describes the policy for a monitored application upgrade.",
         "decorators": [],
         "properties": [
          {
           "$id": "2146",
           "kind": "property",
           "name": "applicationHealthPolicy",
           "serializedName": "applicationHealthPolicy",
           "doc": "Defines a health policy used to evaluate the health of an application or one of its children entities.",
           "type": {
            "$id": "2147",
            "kind": "model",
            "name": "ApplicationHealthPolicy",
            "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationHealthPolicy",
            "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
            "doc": "Defines a health policy used to evaluate the health of an application or one of its children entities.",
            "decorators": [],
            "properties": [
             {
              "$id": "2148",
              "kind": "property",
              "name": "considerWarningAsError",
              "serializedName": "considerWarningAsError",
              "doc": "Indicates whether warnings are treated with the same severity as errors.",
              "type": {
               "$id": "2149",
               "kind": "boolean",
               "name": "boolean",
               "crossLanguageDefinitionId": "TypeSpec.boolean",
               "decorators": []
              },
              "optional": false,
              "readOnly": false,
              "discriminator": false,
              "flatten": false,
              "decorators": [],
              "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationHealthPolicy.considerWarningAsError",
              "serializationOptions": {
               "$id": "2150",
               "json": {
                "$id": "2151",
                "name": "considerWarningAsError"
               }
              }
             },
             {
              "$id": "2152",
              "kind": "property",
              "name": "maxPercentUnhealthyDeployedApplications",
              "serializedName": "maxPercentUnhealthyDeployedApplications",
              "doc": "The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.\nThe percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.\nThis is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.",
              "type": {
               "$id": "2153",
               "kind": "int32",
               "name": "int32",
               "crossLanguageDefinitionId": "TypeSpec.int32",
               "decorators": []
              },
              "optional": false,
              "readOnly": false,
              "discriminator": false,
              "flatten": false,
              "decorators": [],
              "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationHealthPolicy.maxPercentUnhealthyDeployedApplications",
              "serializationOptions": {
               "$id": "2154",
               "json": {
                "$id": "2155",
                "name": "maxPercentUnhealthyDeployedApplications"
               }
              }
             },
             {
              "$id": "2156",
              "kind": "property",
              "name": "defaultServiceTypeHealthPolicy",
              "serializedName": "defaultServiceTypeHealthPolicy",
              "doc": "The health policy used by default to evaluate the health of a service type.",
              "type": {
               "$id": "2157",
               "kind": "model",
               "name": "ServiceTypeHealthPolicy",
               "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
               "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceTypeHealthPolicy",
               "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
               "doc": "Represents the health policy used to evaluate the health of services belonging to a service type.",
               "decorators": [],
               "properties": [
                {
                 "$id": "2158",
                 "kind": "property",
                 "name": "maxPercentUnhealthyServices",
                 "serializedName": "maxPercentUnhealthyServices",
                 "doc": "The maximum allowed percentage of unhealthy services.\n\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.\nIf the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services.",
                 "type": {
                  "$id": "2159",
                  "kind": "int32",
                  "name": "int32",
                  "crossLanguageDefinitionId": "TypeSpec.int32",
                  "decorators": []
                 },
                 "optional": false,
                 "readOnly": false,
                 "discriminator": false,
                 "flatten": false,
                 "decorators": [],
                 "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceTypeHealthPolicy.maxPercentUnhealthyServices",
                 "serializationOptions": {
                  "$id": "2160",
                  "json": {
                   "$id": "2161",
                   "name": "maxPercentUnhealthyServices"
                  }
                 }
                },
                {
                 "$id": "2162",
                 "kind": "property",
                 "name": "maxPercentUnhealthyPartitionsPerService",
                 "serializedName": "maxPercentUnhealthyPartitionsPerService",
                 "doc": "The maximum allowed percentage of unhealthy partitions per service.\n\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.\nIf the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions.",
                 "type": {
                  "$id": "2163",
                  "kind": "int32",
                  "name": "int32",
                  "crossLanguageDefinitionId": "TypeSpec.int32",
                  "decorators": []
                 },
                 "optional": false,
                 "readOnly": false,
                 "discriminator": false,
                 "flatten": false,
                 "decorators": [],
                 "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceTypeHealthPolicy.maxPercentUnhealthyPartitionsPerService",
                 "serializationOptions": {
                  "$id": "2164",
                  "json": {
                   "$id": "2165",
                   "name": "maxPercentUnhealthyPartitionsPerService"
                  }
                 }
                },
                {
                 "$id": "2166",
                 "kind": "property",
                 "name": "maxPercentUnhealthyReplicasPerPartition",
                 "serializedName": "maxPercentUnhealthyReplicasPerPartition",
                 "doc": "The maximum allowed percentage of unhealthy replicas per partition.\n\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.\nIf the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas.",
                 "type": {
                  "$id": "2167",
                  "kind": "int32",
                  "name": "int32",
                  "crossLanguageDefinitionId": "TypeSpec.int32",
                  "decorators": []
                 },
                 "optional": false,
                 "readOnly": false,
                 "discriminator": false,
                 "flatten": false,
                 "decorators": [],
                 "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ServiceTypeHealthPolicy.maxPercentUnhealthyReplicasPerPartition",
                 "serializationOptions": {
                  "$id": "2168",
                  "json": {
                   "$id": "2169",
                   "name": "maxPercentUnhealthyReplicasPerPartition"
                  }
                 }
                }
               ]
              },
              "optional": true,
              "readOnly": false,
              "discriminator": false,
              "flatten": false,
              "decorators": [],
              "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationHealthPolicy.defaultServiceTypeHealthPolicy",
              "serializationOptions": {
               "$id": "2170",
               "json": {
                "$id": "2171",
                "name": "defaultServiceTypeHealthPolicy"
               }
              }
             },
             {
              "$id": "2172",
              "kind": "property",
              "name": "serviceTypeHealthPolicyMap",
              "serializedName": "serviceTypeHealthPolicyMap",
              "doc": "The map with service type health policy per service type name. The map is empty by default.",
              "type": {
               "$id": "2173",
               "kind": "dict",
               "keyType": {
                "$id": "2174",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
               },
               "valueType": {
                "$ref": "2157"
               },
               "decorators": []
              },
              "optional": true,
              "readOnly": false,
              "discriminator": false,
              "flatten": false,
              "decorators": [],
              "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationHealthPolicy.serviceTypeHealthPolicyMap",
              "serializationOptions": {
               "$id": "2175",
               "json": {
                "$id": "2176",
                "name": "serviceTypeHealthPolicyMap"
               }
              }
             }
            ]
           },
           "optional": true,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationUpgradePolicy.applicationHealthPolicy",
           "serializationOptions": {
            "$id": "2177",
            "json": {
             "$id": "2178",
             "name": "applicationHealthPolicy"
            }
           }
          },
          {
           "$id": "2179",
           "kind": "property",
           "name": "forceRestart",
           "serializedName": "forceRestart",
           "doc": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).",
           "type": {
            "$id": "2180",
            "kind": "boolean",
            "name": "boolean",
            "crossLanguageDefinitionId": "TypeSpec.boolean",
            "decorators": []
           },
           "optional": true,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationUpgradePolicy.forceRestart",
           "serializationOptions": {
            "$id": "2181",
            "json": {
             "$id": "2182",
             "name": "forceRestart"
            }
           }
          },
          {
           "$id": "2183",
           "kind": "property",
           "name": "rollingUpgradeMonitoringPolicy",
           "serializedName": "rollingUpgradeMonitoringPolicy",
           "doc": "The policy used for monitoring the application upgrade",
           "type": {
            "$id": "2184",
            "kind": "model",
            "name": "RollingUpgradeMonitoringPolicy",
            "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.RollingUpgradeMonitoringPolicy",
            "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
            "doc": "The policy used for monitoring the application upgrade",
            "decorators": [],
            "properties": [
             {
              "$id": "2185",
              "kind": "property",
              "name": "failureAction",
              "serializedName": "failureAction",
              "doc": "The compensating action to perform when a Monitored upgrade encounters monitoring policy or health policy violations. Invalid indicates the failure action is invalid. Rollback specifies that the upgrade will start rolling back automatically. Manual indicates that the upgrade will switch to UnmonitoredManual upgrade mode.",
              "type": {
               "$ref": "332"
              },
              "optional": false,
              "readOnly": false,
              "discriminator": false,
              "flatten": false,
              "decorators": [],
              "crossLanguageDefinitionId": "Microsoft.ServiceFabric.RollingUpgradeMonitoringPolicy.failureAction",
              "serializationOptions": {
               "$id": "2186",
               "json": {
                "$id": "2187",
                "name": "failureAction"
               }
              }
             },
             {
              "$id": "2188",
              "kind": "property",
              "name": "healthCheckWaitDuration",
              "serializedName": "healthCheckWaitDuration",
              "doc": "The amount of time to wait after completing an upgrade domain before applying health policies. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\".",
              "type": {
               "$id": "2189",
               "kind": "string",
               "name": "string",
               "crossLanguageDefinitionId": "TypeSpec.string",
               "decorators": []
              },
              "optional": false,
              "readOnly": false,
              "discriminator": false,
              "flatten": false,
              "decorators": [],
              "crossLanguageDefinitionId": "Microsoft.ServiceFabric.RollingUpgradeMonitoringPolicy.healthCheckWaitDuration",
              "serializationOptions": {
               "$id": "2190",
               "json": {
                "$id": "2191",
                "name": "healthCheckWaitDuration"
               }
              }
             },
             {
              "$id": "2192",
              "kind": "property",
              "name": "healthCheckStableDuration",
              "serializedName": "healthCheckStableDuration",
              "doc": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\".",
              "type": {
               "$id": "2193",
               "kind": "string",
               "name": "string",
               "crossLanguageDefinitionId": "TypeSpec.string",
               "decorators": []
              },
              "optional": false,
              "readOnly": false,
              "discriminator": false,
              "flatten": false,
              "decorators": [],
              "crossLanguageDefinitionId": "Microsoft.ServiceFabric.RollingUpgradeMonitoringPolicy.healthCheckStableDuration",
              "serializationOptions": {
               "$id": "2194",
               "json": {
                "$id": "2195",
                "name": "healthCheckStableDuration"
               }
              }
             },
             {
              "$id": "2196",
              "kind": "property",
              "name": "healthCheckRetryTimeout",
              "serializedName": "healthCheckRetryTimeout",
              "doc": "The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\".",
              "type": {
               "$id": "2197",
               "kind": "string",
               "name": "string",
               "crossLanguageDefinitionId": "TypeSpec.string",
               "decorators": []
              },
              "optional": false,
              "readOnly": false,
              "discriminator": false,
              "flatten": false,
              "decorators": [],
              "crossLanguageDefinitionId": "Microsoft.ServiceFabric.RollingUpgradeMonitoringPolicy.healthCheckRetryTimeout",
              "serializationOptions": {
               "$id": "2198",
               "json": {
                "$id": "2199",
                "name": "healthCheckRetryTimeout"
               }
              }
             },
             {
              "$id": "2200",
              "kind": "property",
              "name": "upgradeTimeout",
              "serializedName": "upgradeTimeout",
              "doc": "The amount of time the overall upgrade has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\".",
              "type": {
               "$id": "2201",
               "kind": "string",
               "name": "string",
               "crossLanguageDefinitionId": "TypeSpec.string",
               "decorators": []
              },
              "optional": false,
              "readOnly": false,
              "discriminator": false,
              "flatten": false,
              "decorators": [],
              "crossLanguageDefinitionId": "Microsoft.ServiceFabric.RollingUpgradeMonitoringPolicy.upgradeTimeout",
              "serializationOptions": {
               "$id": "2202",
               "json": {
                "$id": "2203",
                "name": "upgradeTimeout"
               }
              }
             },
             {
              "$id": "2204",
              "kind": "property",
              "name": "upgradeDomainTimeout",
              "serializedName": "upgradeDomainTimeout",
              "doc": "The amount of time each upgrade domain has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\".",
              "type": {
               "$id": "2205",
               "kind": "string",
               "name": "string",
               "crossLanguageDefinitionId": "TypeSpec.string",
               "decorators": []
              },
              "optional": false,
              "readOnly": false,
              "discriminator": false,
              "flatten": false,
              "decorators": [],
              "crossLanguageDefinitionId": "Microsoft.ServiceFabric.RollingUpgradeMonitoringPolicy.upgradeDomainTimeout",
              "serializationOptions": {
               "$id": "2206",
               "json": {
                "$id": "2207",
                "name": "upgradeDomainTimeout"
               }
              }
             }
            ]
           },
           "optional": true,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationUpgradePolicy.rollingUpgradeMonitoringPolicy",
           "serializationOptions": {
            "$id": "2208",
            "json": {
             "$id": "2209",
             "name": "rollingUpgradeMonitoringPolicy"
            }
           }
          },
          {
           "$id": "2210",
           "kind": "property",
           "name": "InstanceCloseDelayDurationInSeconds",
           "serializedName": "instanceCloseDelayDuration",
           "doc": "Duration in seconds, to wait before a stateless instance is closed, to allow the active requests to drain gracefully. This would be effective when the instance is closing during the application/cluster upgrade, only for those instances which have a non-zero delay duration configured in the service description.",
           "type": {
            "$id": "2211",
            "kind": "int64",
            "name": "int64",
            "crossLanguageDefinitionId": "TypeSpec.int64",
            "decorators": []
           },
           "optional": true,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationUpgradePolicy.instanceCloseDelayDuration",
           "serializationOptions": {
            "$id": "2212",
            "json": {
             "$id": "2213",
             "name": "instanceCloseDelayDuration"
            }
           }
          },
          {
           "$id": "2214",
           "kind": "property",
           "name": "upgradeMode",
           "serializedName": "upgradeMode",
           "doc": "The mode used to monitor health during a rolling upgrade. The values are Monitored, and UnmonitoredAuto.",
           "type": {
            "$ref": "338"
           },
           "optional": true,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationUpgradePolicy.upgradeMode",
           "serializationOptions": {
            "$id": "2215",
            "json": {
             "$id": "2216",
             "name": "upgradeMode"
            }
           }
          },
          {
           "$id": "2217",
           "kind": "property",
           "name": "upgradeReplicaSetCheckTimeout",
           "serializedName": "upgradeReplicaSetCheckTimeout",
           "doc": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer).",
           "type": {
            "$id": "2218",
            "kind": "int64",
            "name": "int64",
            "crossLanguageDefinitionId": "TypeSpec.int64",
            "decorators": []
           },
           "optional": true,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationUpgradePolicy.upgradeReplicaSetCheckTimeout",
           "serializationOptions": {
            "$id": "2219",
            "json": {
             "$id": "2220",
             "name": "upgradeReplicaSetCheckTimeout"
            }
           }
          },
          {
           "$id": "2221",
           "kind": "property",
           "name": "recreateApplication",
           "serializedName": "recreateApplication",
           "doc": "Determines whether the application should be recreated on update. If value=true, the rest of the upgrade policy parameters are not allowed.",
           "type": {
            "$id": "2222",
            "kind": "boolean",
            "name": "boolean",
            "crossLanguageDefinitionId": "TypeSpec.boolean",
            "decorators": []
           },
           "optional": true,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationUpgradePolicy.recreateApplication",
           "serializationOptions": {
            "$id": "2223",
            "json": {
             "$id": "2224",
             "name": "recreateApplication"
            }
           }
          }
         ]
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationResourceProperties.upgradePolicy",
        "serializationOptions": {
         "$id": "2225",
         "json": {
          "$id": "2226",
          "name": "upgradePolicy"
         }
        }
       },
       {
        "$id": "2227",
        "kind": "property",
        "name": "managedIdentities",
        "serializedName": "managedIdentities",
        "doc": "List of user assigned identities for the application, each mapped to a friendly name.",
        "type": {
         "$id": "2228",
         "kind": "array",
         "name": "ArrayApplicationUserAssignedIdentity",
         "valueType": {
          "$id": "2229",
          "kind": "model",
          "name": "ApplicationUserAssignedIdentityInfo",
          "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationUserAssignedIdentity",
          "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
          "doc": "User assigned identity for the application.",
          "decorators": [],
          "properties": [
           {
            "$id": "2230",
            "kind": "property",
            "name": "name",
            "serializedName": "name",
            "doc": "The friendly name of user assigned identity.",
            "type": {
             "$id": "2231",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationUserAssignedIdentity.name",
            "serializationOptions": {
             "$id": "2232",
             "json": {
              "$id": "2233",
              "name": "name"
             }
            }
           },
           {
            "$id": "2234",
            "kind": "property",
            "name": "principalId",
            "serializedName": "principalId",
            "doc": "The principal id of user assigned identity.",
            "type": {
             "$id": "2235",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationUserAssignedIdentity.principalId",
            "serializationOptions": {
             "$id": "2236",
             "json": {
              "$id": "2237",
              "name": "principalId"
             }
            }
           }
          ]
         },
         "crossLanguageDefinitionId": "TypeSpec.Array",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationResourceProperties.managedIdentities",
        "serializationOptions": {
         "$id": "2238",
         "json": {
          "$id": "2239",
          "name": "managedIdentities"
         }
        }
       }
      ]
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": true,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationResource.properties",
     "serializationOptions": {
      "$id": "2240",
      "json": {
       "$id": "2241",
       "name": "properties"
      }
     }
    },
    {
     "$id": "2242",
     "kind": "property",
     "name": "tags",
     "serializedName": "tags",
     "doc": "Resource tags.",
     "type": {
      "$id": "2243",
      "kind": "dict",
      "keyType": {
       "$id": "2244",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "valueType": {
       "$id": "2245",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationResource.tags",
     "serializationOptions": {
      "$id": "2246",
      "json": {
       "$id": "2247",
       "name": "tags"
      }
     }
    },
    {
     "$id": "2248",
     "kind": "property",
     "name": "identity",
     "serializedName": "identity",
     "doc": "Describes the managed identities for an Azure resource.",
     "type": {
      "$id": "2249",
      "kind": "model",
      "name": "ManagedIdentity",
      "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
      "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedIdentity",
      "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
      "doc": "Describes the managed identities for an Azure resource.",
      "decorators": [],
      "properties": [
       {
        "$id": "2250",
        "kind": "property",
        "name": "principalId",
        "serializedName": "principalId",
        "doc": "The principal id of the managed identity. This property will only be provided for a system assigned identity.",
        "type": {
         "$id": "2251",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": true,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedIdentity.principalId",
        "serializationOptions": {
         "$id": "2252",
         "json": {
          "$id": "2253",
          "name": "principalId"
         }
        }
       },
       {
        "$id": "2254",
        "kind": "property",
        "name": "tenantId",
        "serializedName": "tenantId",
        "doc": "The tenant id of the managed identity. This property will only be provided for a system assigned identity.",
        "type": {
         "$id": "2255",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": true,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedIdentity.tenantId",
        "serializationOptions": {
         "$id": "2256",
         "json": {
          "$id": "2257",
          "name": "tenantId"
         }
        }
       },
       {
        "$id": "2258",
        "kind": "property",
        "name": "type",
        "serializedName": "type",
        "doc": "The type of managed identity for the resource.",
        "type": {
         "$ref": "344"
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedIdentity.type",
        "serializationOptions": {
         "$id": "2259",
         "json": {
          "$id": "2260",
          "name": "type"
         }
        }
       },
       {
        "$id": "2261",
        "kind": "property",
        "name": "userAssignedIdentities",
        "serializedName": "userAssignedIdentities",
        "doc": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
        "type": {
         "$id": "2262",
         "kind": "dict",
         "keyType": {
          "$id": "2263",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "valueType": {
          "$id": "2264",
          "kind": "model",
          "name": "UserAssignedIdentity",
          "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.UserAssignedIdentity",
          "usage": "Input,Output,Json,LroInitial,LroFinalEnvelope",
          "doc": "User assigned identity.",
          "decorators": [],
          "properties": [
           {
            "$id": "2265",
            "kind": "property",
            "name": "principalId",
            "serializedName": "principalId",
            "doc": "The principal id of user assigned identity.",
            "type": {
             "$id": "2266",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": true,
            "readOnly": true,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.UserAssignedIdentity.principalId",
            "serializationOptions": {
             "$id": "2267",
             "json": {
              "$id": "2268",
              "name": "principalId"
             }
            }
           },
           {
            "$id": "2269",
            "kind": "property",
            "name": "clientId",
            "serializedName": "clientId",
            "doc": "The client id of user assigned identity.",
            "type": {
             "$id": "2270",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": true,
            "readOnly": true,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.UserAssignedIdentity.clientId",
            "serializationOptions": {
             "$id": "2271",
             "json": {
              "$id": "2272",
              "name": "clientId"
             }
            }
           }
          ]
         },
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedIdentity.userAssignedIdentities",
        "serializationOptions": {
         "$id": "2273",
         "json": {
          "$id": "2274",
          "name": "userAssignedIdentities"
         }
        }
       }
      ]
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationResource.identity",
     "serializationOptions": {
      "$id": "2275",
      "json": {
       "$id": "2276",
       "name": "identity"
      }
     }
    },
    {
     "$id": "2277",
     "kind": "property",
     "name": "location",
     "serializedName": "location",
     "doc": "The geo-location where the resource lives",
     "type": {
      "$id": "2278",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationResource.location",
     "serializationOptions": {
      "$id": "2279",
      "json": {
       "$id": "2280",
       "name": "location"
      }
     }
    }
   ]
  },
  {
   "$ref": "2129"
  },
  {
   "$ref": "2145"
  },
  {
   "$ref": "2147"
  },
  {
   "$ref": "2157"
  },
  {
   "$ref": "2184"
  },
  {
   "$ref": "2229"
  },
  {
   "$ref": "2249"
  },
  {
   "$ref": "2264"
  },
  {
   "$id": "2281",
   "kind": "model",
   "name": "ApplicationUpdateParameters",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationUpdateParameters",
   "usage": "Input,Json",
   "doc": "Application update request.",
   "decorators": [],
   "properties": [
    {
     "$id": "2282",
     "kind": "property",
     "name": "tags",
     "serializedName": "tags",
     "doc": "Application update parameters",
     "type": {
      "$id": "2283",
      "kind": "dict",
      "keyType": {
       "$id": "2284",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "valueType": {
       "$id": "2285",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationUpdateParameters.tags",
     "serializationOptions": {
      "$id": "2286",
      "json": {
       "$id": "2287",
       "name": "tags"
      }
     }
    }
   ]
  },
  {
   "$id": "2288",
   "kind": "model",
   "name": "ApplicationResourceList",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationResourceList",
   "usage": "Output,Json",
   "doc": "The list of application resources.",
   "decorators": [],
   "properties": [
    {
     "$id": "2289",
     "kind": "property",
     "name": "value",
     "serializedName": "value",
     "doc": "The ApplicationResource items on this page",
     "type": {
      "$id": "2290",
      "kind": "array",
      "name": "ArrayApplicationResource",
      "valueType": {
       "$ref": "2127"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationResourceList.value",
     "serializationOptions": {
      "$id": "2291",
      "json": {
       "$id": "2292",
       "name": "value"
      }
     }
    },
    {
     "$id": "2293",
     "kind": "property",
     "name": "nextLink",
     "serializedName": "nextLink",
     "doc": "The link to the next page of items",
     "type": {
      "$id": "2294",
      "kind": "url",
      "name": "ResourceLocation",
      "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
      "baseType": {
       "$id": "2295",
       "kind": "url",
       "name": "url",
       "crossLanguageDefinitionId": "TypeSpec.url",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationResourceList.nextLink",
     "serializationOptions": {
      "$id": "2296",
      "json": {
       "$id": "2297",
       "name": "nextLink"
      }
     }
    }
   ]
  },
  {
   "$id": "2298",
   "kind": "model",
   "name": "RuntimeResumeApplicationUpgradeParameters",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.RuntimeResumeApplicationUpgradeParameters",
   "usage": "Input,Json",
   "doc": "Parameters for Resume Upgrade action. The upgrade domain name must be specified.",
   "decorators": [],
   "properties": [
    {
     "$id": "2299",
     "kind": "property",
     "name": "upgradeDomainName",
     "serializedName": "upgradeDomainName",
     "doc": "The upgrade domain name. Expected to be the next upgrade domain if the application is upgrading.",
     "type": {
      "$id": "2300",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.RuntimeResumeApplicationUpgradeParameters.upgradeDomainName",
     "serializationOptions": {
      "$id": "2301",
      "json": {
       "$id": "2302",
       "name": "upgradeDomainName"
      }
     }
    }
   ]
  },
  {
   "$id": "2303",
   "kind": "model",
   "name": "OperationListResult",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.OperationListResult",
   "usage": "Output,Json",
   "doc": "Describes the result of the request to list Service Fabric resource provider operations.",
   "decorators": [],
   "properties": [
    {
     "$id": "2304",
     "kind": "property",
     "name": "value",
     "serializedName": "value",
     "doc": "The OperationResult items on this page",
     "type": {
      "$id": "2305",
      "kind": "array",
      "name": "ArrayOperationResult",
      "valueType": {
       "$id": "2306",
       "kind": "model",
       "name": "OperationResult",
       "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.OperationResult",
       "usage": "Output,Json",
       "doc": "Available operation list result",
       "decorators": [],
       "properties": [
        {
         "$id": "2307",
         "kind": "property",
         "name": "name",
         "serializedName": "name",
         "doc": "The name of the operation.",
         "type": {
          "$id": "2308",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": true,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "Microsoft.ServiceFabric.OperationResult.name",
         "serializationOptions": {
          "$id": "2309",
          "json": {
           "$id": "2310",
           "name": "name"
          }
         }
        },
        {
         "$id": "2311",
         "kind": "property",
         "name": "isDataAction",
         "serializedName": "isDataAction",
         "doc": "Indicates whether the operation is a data action",
         "type": {
          "$id": "2312",
          "kind": "boolean",
          "name": "boolean",
          "crossLanguageDefinitionId": "TypeSpec.boolean",
          "decorators": []
         },
         "optional": true,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "Microsoft.ServiceFabric.OperationResult.isDataAction",
         "serializationOptions": {
          "$id": "2313",
          "json": {
           "$id": "2314",
           "name": "isDataAction"
          }
         }
        },
        {
         "$id": "2315",
         "kind": "property",
         "name": "display",
         "serializedName": "display",
         "doc": "The object that represents the operation.",
         "type": {
          "$id": "2316",
          "kind": "model",
          "name": "AvailableOperationDisplay",
          "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
          "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AvailableOperationDisplay",
          "usage": "Output,Json",
          "doc": "Operation supported by the Service Fabric resource provider",
          "decorators": [],
          "properties": [
           {
            "$id": "2317",
            "kind": "property",
            "name": "provider",
            "serializedName": "provider",
            "doc": "The name of the provider.",
            "type": {
             "$id": "2318",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AvailableOperationDisplay.provider",
            "serializationOptions": {
             "$id": "2319",
             "json": {
              "$id": "2320",
              "name": "provider"
             }
            }
           },
           {
            "$id": "2321",
            "kind": "property",
            "name": "resource",
            "serializedName": "resource",
            "doc": "The resource on which the operation is performed",
            "type": {
             "$id": "2322",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AvailableOperationDisplay.resource",
            "serializationOptions": {
             "$id": "2323",
             "json": {
              "$id": "2324",
              "name": "resource"
             }
            }
           },
           {
            "$id": "2325",
            "kind": "property",
            "name": "operation",
            "serializedName": "operation",
            "doc": "The operation that can be performed.",
            "type": {
             "$id": "2326",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AvailableOperationDisplay.operation",
            "serializationOptions": {
             "$id": "2327",
             "json": {
              "$id": "2328",
              "name": "operation"
             }
            }
           },
           {
            "$id": "2329",
            "kind": "property",
            "name": "description",
            "serializedName": "description",
            "doc": "Operation description",
            "type": {
             "$id": "2330",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Microsoft.ServiceFabric.AvailableOperationDisplay.description",
            "serializationOptions": {
             "$id": "2331",
             "json": {
              "$id": "2332",
              "name": "description"
             }
            }
           }
          ]
         },
         "optional": true,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "Microsoft.ServiceFabric.OperationResult.display",
         "serializationOptions": {
          "$id": "2333",
          "json": {
           "$id": "2334",
           "name": "display"
          }
         }
        },
        {
         "$id": "2335",
         "kind": "property",
         "name": "origin",
         "serializedName": "origin",
         "doc": "Origin result",
         "type": {
          "$id": "2336",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": true,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "Microsoft.ServiceFabric.OperationResult.origin",
         "serializationOptions": {
          "$id": "2337",
          "json": {
           "$id": "2338",
           "name": "origin"
          }
         }
        },
        {
         "$id": "2339",
         "kind": "property",
         "name": "nextLink",
         "serializedName": "nextLink",
         "doc": "The URL to use for getting the next set of results.",
         "type": {
          "$id": "2340",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": true,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "Microsoft.ServiceFabric.OperationResult.nextLink",
         "serializationOptions": {
          "$id": "2341",
          "json": {
           "$id": "2342",
           "name": "nextLink"
          }
         }
        }
       ]
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.OperationListResult.value",
     "serializationOptions": {
      "$id": "2343",
      "json": {
       "$id": "2344",
       "name": "value"
      }
     }
    },
    {
     "$id": "2345",
     "kind": "property",
     "name": "nextLink",
     "serializedName": "nextLink",
     "doc": "The link to the next page of items",
     "type": {
      "$id": "2346",
      "kind": "url",
      "name": "ResourceLocation",
      "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
      "baseType": {
       "$id": "2347",
       "kind": "url",
       "name": "url",
       "crossLanguageDefinitionId": "TypeSpec.url",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.OperationListResult.nextLink",
     "serializationOptions": {
      "$id": "2348",
      "json": {
       "$id": "2349",
       "name": "nextLink"
      }
     }
    }
   ]
  },
  {
   "$ref": "2306"
  },
  {
   "$ref": "2316"
  },
  {
   "$id": "2350",
   "kind": "model",
   "name": "ErrorModel",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ErrorModel",
   "usage": "Error",
   "doc": "The structure of the error.",
   "decorators": [],
   "properties": [
    {
     "$id": "2351",
     "kind": "property",
     "name": "error",
     "serializedName": "error",
     "doc": "The error details.",
     "type": {
      "$ref": "382"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ErrorModel.error",
     "serializationOptions": {
      "$id": "2352"
     }
    }
   ]
  }
 ],
 "clients": [
  {
   "$id": "2353",
   "kind": "client",
   "name": "ServiceFabricClient",
   "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
   "doc": "Service Fabric Managed Clusters Management Client",
   "operations": [],
   "parameters": [
    {
     "$id": "2354",
     "name": "endpoint",
     "nameInRequest": "endpoint",
     "doc": "Service host",
     "type": {
      "$id": "2355",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "location": "Uri",
     "isApiVersion": false,
     "isContentType": false,
     "isRequired": true,
     "isEndpoint": true,
     "skipUrlEncoding": false,
     "explode": false,
     "kind": "Client",
     "defaultValue": {
      "$id": "2356",
      "type": {
       "$id": "2357",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string"
      },
      "value": "https://management.azure.com"
     }
    }
   ],
   "decorators": [
    {
     "$id": "2358",
     "name": "TypeSpec.@service",
     "arguments": {
      "$id": "2359",
      "options": {
       "$id": "2360",
       "title": "ServiceFabricManagedClustersManagementClient"
      }
     }
    }
   ],
   "crossLanguageDefinitionId": "Microsoft.ServiceFabric",
   "apiVersions": [
    "2024-11-01-preview"
   ],
   "children": [
    {
     "$id": "2361",
     "kind": "client",
     "name": "Operations",
     "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
     "operations": [
      {
       "$id": "2362",
       "name": "list",
       "resourceName": "Operations",
       "summary": "Lists all of the available Service Fabric resource provider API operations.",
       "doc": "Get the list of available Service Fabric resource provider API operations.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "2363",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "2364",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "2365",
          "type": {
           "$id": "2366",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2367",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "2368",
          "kind": "constant",
          "valueType": {
           "$id": "2369",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "2370",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "2303"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "GET",
       "uri": "{endpoint}",
       "path": "/providers/Microsoft.ServiceFabric/operations",
       "bufferResponse": true,
       "paging": {
        "$id": "2371",
        "itemPropertySegments": [
         "value"
        ],
        "nextLink": {
         "$id": "2372",
         "responseSegments": [
          "nextLink"
         ],
         "responseLocation": "Body"
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Operations.list",
       "decorators": [],
       "examples": [
        {
         "$id": "2373",
         "kind": "http",
         "name": "List the operations for the provider",
         "description": "List the operations for the provider",
         "filePath": "2024-11-01-preview/OperationsList_example.json",
         "parameters": [
          {
           "$id": "2374",
           "parameter": {
            "$ref": "2363"
           },
           "value": {
            "$id": "2375",
            "kind": "string",
            "type": {
             "$ref": "2364"
            },
            "value": "2024-11-01-preview"
           }
          }
         ],
         "responses": [
          {
           "$id": "2376",
           "response": {
            "$ref": "2370"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "2377",
            "kind": "model",
            "type": {
             "$ref": "2303"
            },
            "value": {
             "$id": "2378",
             "value": {
              "$id": "2379",
              "kind": "array",
              "type": {
               "$ref": "2305"
              },
              "value": [
               {
                "$id": "2380",
                "kind": "model",
                "type": {
                 "$ref": "2306"
                },
                "value": {
                 "$id": "2381",
                 "name": {
                  "$id": "2382",
                  "kind": "string",
                  "type": {
                   "$ref": "2308"
                  },
                  "value": "Microsoft.ServiceFabric/managedClusters/read"
                 },
                 "display": {
                  "$id": "2383",
                  "kind": "model",
                  "type": {
                   "$ref": "2316"
                  },
                  "value": {
                   "$id": "2384",
                   "provider": {
                    "$id": "2385",
                    "kind": "string",
                    "type": {
                     "$ref": "2318"
                    },
                    "value": "Microsoft ServiceFabric"
                   },
                   "resource": {
                    "$id": "2386",
                    "kind": "string",
                    "type": {
                     "$ref": "2322"
                    },
                    "value": "managedClusters"
                   },
                   "operation": {
                    "$id": "2387",
                    "kind": "string",
                    "type": {
                     "$ref": "2326"
                    },
                    "value": "Read Cluster"
                   },
                   "description": {
                    "$id": "2388",
                    "kind": "string",
                    "type": {
                     "$ref": "2330"
                    },
                    "value": "Read any Cluster"
                   }
                  }
                 }
                }
               },
               {
                "$id": "2389",
                "kind": "model",
                "type": {
                 "$ref": "2306"
                },
                "value": {
                 "$id": "2390",
                 "name": {
                  "$id": "2391",
                  "kind": "string",
                  "type": {
                   "$ref": "2308"
                  },
                  "value": "Microsoft.ServiceFabric/managedClusters/write"
                 },
                 "display": {
                  "$id": "2392",
                  "kind": "model",
                  "type": {
                   "$ref": "2316"
                  },
                  "value": {
                   "$id": "2393",
                   "provider": {
                    "$id": "2394",
                    "kind": "string",
                    "type": {
                     "$ref": "2318"
                    },
                    "value": "Microsoft ServiceFabric"
                   },
                   "resource": {
                    "$id": "2395",
                    "kind": "string",
                    "type": {
                     "$ref": "2322"
                    },
                    "value": "managedClusters"
                   },
                   "operation": {
                    "$id": "2396",
                    "kind": "string",
                    "type": {
                     "$ref": "2326"
                    },
                    "value": "Create or Update Cluster"
                   },
                   "description": {
                    "$id": "2397",
                    "kind": "string",
                    "type": {
                     "$ref": "2330"
                    },
                    "value": "Create or Update any Cluster"
                   }
                  }
                 }
                }
               },
               {
                "$id": "2398",
                "kind": "model",
                "type": {
                 "$ref": "2306"
                },
                "value": {
                 "$id": "2399",
                 "name": {
                  "$id": "2400",
                  "kind": "string",
                  "type": {
                   "$ref": "2308"
                  },
                  "value": "Microsoft.ServiceFabric/managedClusters/delete"
                 },
                 "display": {
                  "$id": "2401",
                  "kind": "model",
                  "type": {
                   "$ref": "2316"
                  },
                  "value": {
                   "$id": "2402",
                   "provider": {
                    "$id": "2403",
                    "kind": "string",
                    "type": {
                     "$ref": "2318"
                    },
                    "value": "Microsoft ServiceFabric"
                   },
                   "resource": {
                    "$id": "2404",
                    "kind": "string",
                    "type": {
                     "$ref": "2322"
                    },
                    "value": "managedClusters"
                   },
                   "operation": {
                    "$id": "2405",
                    "kind": "string",
                    "type": {
                     "$ref": "2326"
                    },
                    "value": "Delete Cluster"
                   },
                   "description": {
                    "$id": "2406",
                    "kind": "string",
                    "type": {
                     "$ref": "2330"
                    },
                    "value": "Delete any Cluster"
                   }
                  }
                 }
                }
               },
               {
                "$id": "2407",
                "kind": "model",
                "type": {
                 "$ref": "2306"
                },
                "value": {
                 "$id": "2408",
                 "name": {
                  "$id": "2409",
                  "kind": "string",
                  "type": {
                   "$ref": "2308"
                  },
                  "value": "Microsoft.ServiceFabric/nodeTypes/read"
                 },
                 "display": {
                  "$id": "2410",
                  "kind": "model",
                  "type": {
                   "$ref": "2316"
                  },
                  "value": {
                   "$id": "2411",
                   "provider": {
                    "$id": "2412",
                    "kind": "string",
                    "type": {
                     "$ref": "2318"
                    },
                    "value": "Microsoft ServiceFabric"
                   },
                   "resource": {
                    "$id": "2413",
                    "kind": "string",
                    "type": {
                     "$ref": "2322"
                    },
                    "value": "nodeTypes"
                   },
                   "operation": {
                    "$id": "2414",
                    "kind": "string",
                    "type": {
                     "$ref": "2326"
                    },
                    "value": "Read Node type"
                   },
                   "description": {
                    "$id": "2415",
                    "kind": "string",
                    "type": {
                     "$ref": "2330"
                    },
                    "value": "Read any Node type"
                   }
                  }
                 }
                }
               },
               {
                "$id": "2416",
                "kind": "model",
                "type": {
                 "$ref": "2306"
                },
                "value": {
                 "$id": "2417",
                 "name": {
                  "$id": "2418",
                  "kind": "string",
                  "type": {
                   "$ref": "2308"
                  },
                  "value": "Microsoft.ServiceFabric/nodeTypes/write"
                 },
                 "display": {
                  "$id": "2419",
                  "kind": "model",
                  "type": {
                   "$ref": "2316"
                  },
                  "value": {
                   "$id": "2420",
                   "provider": {
                    "$id": "2421",
                    "kind": "string",
                    "type": {
                     "$ref": "2318"
                    },
                    "value": "Microsoft ServiceFabric"
                   },
                   "resource": {
                    "$id": "2422",
                    "kind": "string",
                    "type": {
                     "$ref": "2322"
                    },
                    "value": "nodeTypes"
                   },
                   "operation": {
                    "$id": "2423",
                    "kind": "string",
                    "type": {
                     "$ref": "2326"
                    },
                    "value": "Create or Update Node type"
                   },
                   "description": {
                    "$id": "2424",
                    "kind": "string",
                    "type": {
                     "$ref": "2330"
                    },
                    "value": "Create or Update any Node type"
                   }
                  }
                 }
                }
               },
               {
                "$id": "2425",
                "kind": "model",
                "type": {
                 "$ref": "2306"
                },
                "value": {
                 "$id": "2426",
                 "name": {
                  "$id": "2427",
                  "kind": "string",
                  "type": {
                   "$ref": "2308"
                  },
                  "value": "Microsoft.ServiceFabric/nodeTypes/delete"
                 },
                 "display": {
                  "$id": "2428",
                  "kind": "model",
                  "type": {
                   "$ref": "2316"
                  },
                  "value": {
                   "$id": "2429",
                   "provider": {
                    "$id": "2430",
                    "kind": "string",
                    "type": {
                     "$ref": "2318"
                    },
                    "value": "Microsoft ServiceFabric"
                   },
                   "resource": {
                    "$id": "2431",
                    "kind": "string",
                    "type": {
                     "$ref": "2322"
                    },
                    "value": "nodeTypes"
                   },
                   "operation": {
                    "$id": "2432",
                    "kind": "string",
                    "type": {
                     "$ref": "2326"
                    },
                    "value": "Delete Node type"
                   },
                   "description": {
                    "$id": "2433",
                    "kind": "string",
                    "type": {
                     "$ref": "2330"
                    },
                    "value": "Delete any Node type"
                   }
                  }
                 }
                }
               },
               {
                "$id": "2434",
                "kind": "model",
                "type": {
                 "$ref": "2306"
                },
                "value": {
                 "$id": "2435",
                 "name": {
                  "$id": "2436",
                  "kind": "string",
                  "type": {
                   "$ref": "2308"
                  },
                  "value": "Microsoft.ServiceFabric/nodeTypes/restart/action"
                 },
                 "display": {
                  "$id": "2437",
                  "kind": "model",
                  "type": {
                   "$ref": "2316"
                  },
                  "value": {
                   "$id": "2438",
                   "provider": {
                    "$id": "2439",
                    "kind": "string",
                    "type": {
                     "$ref": "2318"
                    },
                    "value": "Microsoft ServiceFabric"
                   },
                   "resource": {
                    "$id": "2440",
                    "kind": "string",
                    "type": {
                     "$ref": "2322"
                    },
                    "value": "nodeTypes"
                   },
                   "operation": {
                    "$id": "2441",
                    "kind": "string",
                    "type": {
                     "$ref": "2326"
                    },
                    "value": "Restart nodes from Node type"
                   },
                   "description": {
                    "$id": "2442",
                    "kind": "string",
                    "type": {
                     "$ref": "2330"
                    },
                    "value": "Restart nodes from Node type"
                   }
                  }
                 }
                }
               },
               {
                "$id": "2443",
                "kind": "model",
                "type": {
                 "$ref": "2306"
                },
                "value": {
                 "$id": "2444",
                 "name": {
                  "$id": "2445",
                  "kind": "string",
                  "type": {
                   "$ref": "2308"
                  },
                  "value": "Microsoft.ServiceFabric/nodeTypes/reimage/action"
                 },
                 "display": {
                  "$id": "2446",
                  "kind": "model",
                  "type": {
                   "$ref": "2316"
                  },
                  "value": {
                   "$id": "2447",
                   "provider": {
                    "$id": "2448",
                    "kind": "string",
                    "type": {
                     "$ref": "2318"
                    },
                    "value": "Microsoft ServiceFabric"
                   },
                   "resource": {
                    "$id": "2449",
                    "kind": "string",
                    "type": {
                     "$ref": "2322"
                    },
                    "value": "nodeTypes"
                   },
                   "operation": {
                    "$id": "2450",
                    "kind": "string",
                    "type": {
                     "$ref": "2326"
                    },
                    "value": "Reimage nodes from Node type"
                   },
                   "description": {
                    "$id": "2451",
                    "kind": "string",
                    "type": {
                     "$ref": "2330"
                    },
                    "value": "Reimage nodes from Node type"
                   }
                  }
                 }
                }
               },
               {
                "$id": "2452",
                "kind": "model",
                "type": {
                 "$ref": "2306"
                },
                "value": {
                 "$id": "2453",
                 "name": {
                  "$id": "2454",
                  "kind": "string",
                  "type": {
                   "$ref": "2308"
                  },
                  "value": "Microsoft.ServiceFabric/nodeTypes/deleteNode/action"
                 },
                 "display": {
                  "$id": "2455",
                  "kind": "model",
                  "type": {
                   "$ref": "2316"
                  },
                  "value": {
                   "$id": "2456",
                   "provider": {
                    "$id": "2457",
                    "kind": "string",
                    "type": {
                     "$ref": "2318"
                    },
                    "value": "Microsoft ServiceFabric"
                   },
                   "resource": {
                    "$id": "2458",
                    "kind": "string",
                    "type": {
                     "$ref": "2322"
                    },
                    "value": "nodeTypes"
                   },
                   "operation": {
                    "$id": "2459",
                    "kind": "string",
                    "type": {
                     "$ref": "2326"
                    },
                    "value": "Delete nodes from Node type"
                   },
                   "description": {
                    "$id": "2460",
                    "kind": "string",
                    "type": {
                     "$ref": "2330"
                    },
                    "value": "Delete nodes from Node type"
                   }
                  }
                 }
                }
               }
              ]
             }
            }
           }
          }
         ]
        }
       ]
      }
     ],
     "parameters": [
      {
       "$id": "2461",
       "name": "endpoint",
       "nameInRequest": "endpoint",
       "doc": "Service host",
       "type": {
        "$id": "2462",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "defaultValue": {
        "$id": "2463",
        "type": {
         "$id": "2464",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "value": "https://management.azure.com"
       }
      }
     ],
     "decorators": [
      {
       "$id": "2465",
       "name": "Azure.ResourceManager.@armResourceOperations",
       "arguments": {
        "$id": "2466"
       }
      }
     ],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Operations",
     "apiVersions": [
      "2024-11-01-preview"
     ],
     "parent": {
      "$ref": "2353"
     }
    },
    {
     "$id": "2467",
     "kind": "client",
     "name": "Applications",
     "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
     "operations": [
      {
       "$id": "2468",
       "name": "get",
       "resourceName": "ApplicationResource",
       "doc": "Get a Service Fabric managed application resource created or in the process of being created in the Service Fabric cluster resource.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "2469",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "2470",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "2471",
          "type": {
           "$id": "2472",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2473",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "2474",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2475",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "2476",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2477",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "2478",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2479",
         "name": "applicationName",
         "nameInRequest": "applicationName",
         "doc": "The name of the application resource.",
         "type": {
          "$id": "2480",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2481",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "2482",
          "kind": "constant",
          "valueType": {
           "$id": "2483",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "2484",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "2127"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "GET",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applications/{applicationName}",
       "bufferResponse": true,
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Applications.get",
       "decorators": [],
       "examples": [
        {
         "$id": "2485",
         "kind": "http",
         "name": "Get an application",
         "description": "Get an application",
         "filePath": "2024-11-01-preview/ApplicationGetOperation_example.json",
         "parameters": [
          {
           "$id": "2486",
           "parameter": {
            "$ref": "2469"
           },
           "value": {
            "$id": "2487",
            "kind": "string",
            "type": {
             "$ref": "2470"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "2488",
           "parameter": {
            "$ref": "2479"
           },
           "value": {
            "$id": "2489",
            "kind": "string",
            "type": {
             "$ref": "2480"
            },
            "value": "myApp"
           }
          },
          {
           "$id": "2490",
           "parameter": {
            "$ref": "2477"
           },
           "value": {
            "$id": "2491",
            "kind": "string",
            "type": {
             "$ref": "2478"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "2492",
           "parameter": {
            "$ref": "2475"
           },
           "value": {
            "$id": "2493",
            "kind": "string",
            "type": {
             "$ref": "2476"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "2494",
           "parameter": {
            "$ref": "2473"
           },
           "value": {
            "$id": "2495",
            "kind": "string",
            "type": {
             "$ref": "2474"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "2496",
           "response": {
            "$ref": "2484"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "2497",
            "kind": "model",
            "type": {
             "$ref": "2127"
            },
            "value": {
             "$id": "2498",
             "name": {
              "$id": "2499",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "myApp"
             },
             "type": {
              "$id": "2500",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/applications"
             },
             "id": {
              "$id": "2501",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applications/myApp"
             },
             "location": {
              "$id": "2502",
              "kind": "string",
              "type": {
               "$ref": "2278"
              },
              "value": "eastus"
             },
             "properties": {
              "$id": "2503",
              "kind": "model",
              "type": {
               "$ref": "2129"
              },
              "value": {
               "$id": "2504",
               "parameters": {
                "$id": "2505",
                "kind": "dict",
                "type": {
                 "$ref": "2139"
                },
                "value": {
                 "$id": "2506",
                 "param1": {
                  "$id": "2507",
                  "kind": "string",
                  "type": {
                   "$ref": "2141"
                  },
                  "value": "value1"
                 }
                }
               },
               "provisioningState": {
                "$id": "2508",
                "kind": "string",
                "type": {
                 "$ref": "2131"
                },
                "value": "Updating"
               },
               "upgradePolicy": {
                "$id": "2509",
                "kind": "model",
                "type": {
                 "$ref": "2145"
                },
                "value": {
                 "$id": "2510",
                 "applicationHealthPolicy": {
                  "$id": "2511",
                  "kind": "model",
                  "type": {
                   "$ref": "2147"
                  },
                  "value": {
                   "$id": "2512",
                   "considerWarningAsError": {
                    "$id": "2513",
                    "kind": "boolean",
                    "type": {
                     "$ref": "2149"
                    },
                    "value": true
                   },
                   "defaultServiceTypeHealthPolicy": {
                    "$id": "2514",
                    "kind": "model",
                    "type": {
                     "$ref": "2157"
                    },
                    "value": {
                     "$id": "2515",
                     "maxPercentUnhealthyPartitionsPerService": {
                      "$id": "2516",
                      "kind": "number",
                      "type": {
                       "$ref": "2163"
                      },
                      "value": 0
                     },
                     "maxPercentUnhealthyReplicasPerPartition": {
                      "$id": "2517",
                      "kind": "number",
                      "type": {
                       "$ref": "2167"
                      },
                      "value": 0
                     },
                     "maxPercentUnhealthyServices": {
                      "$id": "2518",
                      "kind": "number",
                      "type": {
                       "$ref": "2159"
                      },
                      "value": 0
                     }
                    }
                   },
                   "maxPercentUnhealthyDeployedApplications": {
                    "$id": "2519",
                    "kind": "number",
                    "type": {
                     "$ref": "2153"
                    },
                    "value": 0
                   },
                   "serviceTypeHealthPolicyMap": {
                    "$id": "2520",
                    "kind": "dict",
                    "type": {
                     "$ref": "2173"
                    },
                    "value": {
                     "$id": "2521",
                     "service1": {
                      "$id": "2522",
                      "kind": "model",
                      "type": {
                       "$ref": "2157"
                      },
                      "value": {
                       "$id": "2523",
                       "maxPercentUnhealthyPartitionsPerService": {
                        "$id": "2524",
                        "kind": "number",
                        "type": {
                         "$ref": "2163"
                        },
                        "value": 30
                       },
                       "maxPercentUnhealthyReplicasPerPartition": {
                        "$id": "2525",
                        "kind": "number",
                        "type": {
                         "$ref": "2167"
                        },
                        "value": 30
                       },
                       "maxPercentUnhealthyServices": {
                        "$id": "2526",
                        "kind": "number",
                        "type": {
                         "$ref": "2159"
                        },
                        "value": 30
                       }
                      }
                     }
                    }
                   }
                  }
                 },
                 "forceRestart": {
                  "$id": "2527",
                  "kind": "boolean",
                  "type": {
                   "$ref": "2180"
                  },
                  "value": false
                 },
                 "instanceCloseDelayDuration": {
                  "$id": "2528",
                  "kind": "number",
                  "type": {
                   "$ref": "2211"
                  },
                  "value": 600
                 },
                 "recreateApplication": {
                  "$id": "2529",
                  "kind": "boolean",
                  "type": {
                   "$ref": "2222"
                  },
                  "value": false
                 },
                 "rollingUpgradeMonitoringPolicy": {
                  "$id": "2530",
                  "kind": "model",
                  "type": {
                   "$ref": "2184"
                  },
                  "value": {
                   "$id": "2531",
                   "failureAction": {
                    "$id": "2532",
                    "kind": "string",
                    "type": {
                     "$ref": "332"
                    },
                    "value": "Rollback"
                   },
                   "healthCheckRetryTimeout": {
                    "$id": "2533",
                    "kind": "string",
                    "type": {
                     "$ref": "2197"
                    },
                    "value": "00:10:00"
                   },
                   "healthCheckStableDuration": {
                    "$id": "2534",
                    "kind": "string",
                    "type": {
                     "$ref": "2193"
                    },
                    "value": "00:05:00"
                   },
                   "healthCheckWaitDuration": {
                    "$id": "2535",
                    "kind": "string",
                    "type": {
                     "$ref": "2189"
                    },
                    "value": "00:02:00"
                   },
                   "upgradeDomainTimeout": {
                    "$id": "2536",
                    "kind": "string",
                    "type": {
                     "$ref": "2205"
                    },
                    "value": "00:15:00"
                   },
                   "upgradeTimeout": {
                    "$id": "2537",
                    "kind": "string",
                    "type": {
                     "$ref": "2201"
                    },
                    "value": "01:00:00"
                   }
                  }
                 },
                 "upgradeMode": {
                  "$id": "2538",
                  "kind": "string",
                  "type": {
                   "$ref": "338"
                  },
                  "value": "UnmonitoredAuto"
                 },
                 "upgradeReplicaSetCheckTimeout": {
                  "$id": "2539",
                  "kind": "number",
                  "type": {
                   "$ref": "2218"
                  },
                  "value": 3600
                 }
                }
               },
               "version": {
                "$id": "2540",
                "kind": "string",
                "type": {
                 "$ref": "2135"
                },
                "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applicationTypes/myAppType/versions/1.0"
               }
              }
             },
             "tags": {
              "$id": "2541",
              "kind": "dict",
              "type": {
               "$ref": "2243"
              },
              "value": {
               "$id": "2542"
              }
             }
            }
           }
          }
         ]
        }
       ]
      },
      {
       "$id": "2543",
       "name": "createOrUpdate",
       "resourceName": "ApplicationResource",
       "doc": "Create or update a Service Fabric managed application resource with the specified name.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "2544",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "2545",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "2546",
          "type": {
           "$id": "2547",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2548",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "2549",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2550",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "2551",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2552",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "2553",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2554",
         "name": "applicationName",
         "nameInRequest": "applicationName",
         "doc": "The name of the application resource.",
         "type": {
          "$id": "2555",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2556",
         "name": "contentType",
         "nameInRequest": "Content-Type",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$id": "2557",
          "kind": "constant",
          "valueType": {
           "$id": "2558",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": true,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2559",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "2560",
          "kind": "constant",
          "valueType": {
           "$id": "2561",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2562",
         "name": "parameters",
         "nameInRequest": "parameters",
         "doc": "The application resource.",
         "type": {
          "$ref": "2127"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "2563",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "2127"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        },
        {
         "$id": "2564",
         "statusCodes": [
          202
         ],
         "bodyType": {
          "$ref": "2127"
         },
         "headers": [
          {
           "$id": "2565",
           "name": "azureAsyncOperation",
           "nameInResponse": "Azure-AsyncOperation",
           "doc": "A link to the status monitor",
           "type": {
            "$id": "2566",
            "kind": "url",
            "name": "ResourceLocation",
            "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
            "baseType": {
             "$id": "2567",
             "kind": "url",
             "name": "url",
             "crossLanguageDefinitionId": "TypeSpec.url",
             "decorators": []
            },
            "decorators": []
           }
          },
          {
           "$id": "2568",
           "name": "location",
           "nameInResponse": "Location",
           "doc": "The Location header contains the URL where the status of the long running operation can be checked.",
           "type": {
            "$id": "2569",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           }
          }
         ],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "PUT",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applications/{applicationName}",
       "requestMediaTypes": [
        "application/json"
       ],
       "bufferResponse": true,
       "longRunning": {
        "$id": "2570",
        "finalStateVia": 1,
        "finalResponse": {
         "$id": "2571",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "2127"
         }
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Applications.createOrUpdate",
       "decorators": [],
       "examples": [
        {
         "$id": "2572",
         "kind": "http",
         "name": "Put an application with maximum parameters",
         "description": "Put an application with maximum parameters",
         "filePath": "2024-11-01-preview/ApplicationPutOperation_example_max.json",
         "parameters": [
          {
           "$id": "2573",
           "parameter": {
            "$ref": "2544"
           },
           "value": {
            "$id": "2574",
            "kind": "string",
            "type": {
             "$ref": "2545"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "2575",
           "parameter": {
            "$ref": "2554"
           },
           "value": {
            "$id": "2576",
            "kind": "string",
            "type": {
             "$ref": "2555"
            },
            "value": "myApp"
           }
          },
          {
           "$id": "2577",
           "parameter": {
            "$ref": "2552"
           },
           "value": {
            "$id": "2578",
            "kind": "string",
            "type": {
             "$ref": "2553"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "2579",
           "parameter": {
            "$ref": "2550"
           },
           "value": {
            "$id": "2580",
            "kind": "string",
            "type": {
             "$ref": "2551"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "2581",
           "parameter": {
            "$ref": "2548"
           },
           "value": {
            "$id": "2582",
            "kind": "string",
            "type": {
             "$ref": "2549"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "2583",
           "response": {
            "$ref": "2563"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "2584",
            "kind": "model",
            "type": {
             "$ref": "2127"
            },
            "value": {
             "$id": "2585",
             "name": {
              "$id": "2586",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "myApp"
             },
             "type": {
              "$id": "2587",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/applications"
             },
             "id": {
              "$id": "2588",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applications/myApp"
             },
             "location": {
              "$id": "2589",
              "kind": "string",
              "type": {
               "$ref": "2278"
              },
              "value": "eastus"
             },
             "properties": {
              "$id": "2590",
              "kind": "model",
              "type": {
               "$ref": "2129"
              },
              "value": {
               "$id": "2591",
               "parameters": {
                "$id": "2592",
                "kind": "dict",
                "type": {
                 "$ref": "2139"
                },
                "value": {
                 "$id": "2593",
                 "param1": {
                  "$id": "2594",
                  "kind": "string",
                  "type": {
                   "$ref": "2141"
                  },
                  "value": "value1"
                 }
                }
               },
               "provisioningState": {
                "$id": "2595",
                "kind": "string",
                "type": {
                 "$ref": "2131"
                },
                "value": "Creating"
               },
               "upgradePolicy": {
                "$id": "2596",
                "kind": "model",
                "type": {
                 "$ref": "2145"
                },
                "value": {
                 "$id": "2597",
                 "applicationHealthPolicy": {
                  "$id": "2598",
                  "kind": "model",
                  "type": {
                   "$ref": "2147"
                  },
                  "value": {
                   "$id": "2599",
                   "considerWarningAsError": {
                    "$id": "2600",
                    "kind": "boolean",
                    "type": {
                     "$ref": "2149"
                    },
                    "value": true
                   },
                   "defaultServiceTypeHealthPolicy": {
                    "$id": "2601",
                    "kind": "model",
                    "type": {
                     "$ref": "2157"
                    },
                    "value": {
                     "$id": "2602",
                     "maxPercentUnhealthyPartitionsPerService": {
                      "$id": "2603",
                      "kind": "number",
                      "type": {
                       "$ref": "2163"
                      },
                      "value": 0
                     },
                     "maxPercentUnhealthyReplicasPerPartition": {
                      "$id": "2604",
                      "kind": "number",
                      "type": {
                       "$ref": "2167"
                      },
                      "value": 0
                     },
                     "maxPercentUnhealthyServices": {
                      "$id": "2605",
                      "kind": "number",
                      "type": {
                       "$ref": "2159"
                      },
                      "value": 0
                     }
                    }
                   },
                   "maxPercentUnhealthyDeployedApplications": {
                    "$id": "2606",
                    "kind": "number",
                    "type": {
                     "$ref": "2153"
                    },
                    "value": 0
                   },
                   "serviceTypeHealthPolicyMap": {
                    "$id": "2607",
                    "kind": "dict",
                    "type": {
                     "$ref": "2173"
                    },
                    "value": {
                     "$id": "2608",
                     "service1": {
                      "$id": "2609",
                      "kind": "model",
                      "type": {
                       "$ref": "2157"
                      },
                      "value": {
                       "$id": "2610",
                       "maxPercentUnhealthyPartitionsPerService": {
                        "$id": "2611",
                        "kind": "number",
                        "type": {
                         "$ref": "2163"
                        },
                        "value": 30
                       },
                       "maxPercentUnhealthyReplicasPerPartition": {
                        "$id": "2612",
                        "kind": "number",
                        "type": {
                         "$ref": "2167"
                        },
                        "value": 30
                       },
                       "maxPercentUnhealthyServices": {
                        "$id": "2613",
                        "kind": "number",
                        "type": {
                         "$ref": "2159"
                        },
                        "value": 30
                       }
                      }
                     }
                    }
                   }
                  }
                 },
                 "forceRestart": {
                  "$id": "2614",
                  "kind": "boolean",
                  "type": {
                   "$ref": "2180"
                  },
                  "value": false
                 },
                 "instanceCloseDelayDuration": {
                  "$id": "2615",
                  "kind": "number",
                  "type": {
                   "$ref": "2211"
                  },
                  "value": 600
                 },
                 "recreateApplication": {
                  "$id": "2616",
                  "kind": "boolean",
                  "type": {
                   "$ref": "2222"
                  },
                  "value": false
                 },
                 "rollingUpgradeMonitoringPolicy": {
                  "$id": "2617",
                  "kind": "model",
                  "type": {
                   "$ref": "2184"
                  },
                  "value": {
                   "$id": "2618",
                   "failureAction": {
                    "$id": "2619",
                    "kind": "string",
                    "type": {
                     "$ref": "332"
                    },
                    "value": "Rollback"
                   },
                   "healthCheckRetryTimeout": {
                    "$id": "2620",
                    "kind": "string",
                    "type": {
                     "$ref": "2197"
                    },
                    "value": "00:10:00"
                   },
                   "healthCheckStableDuration": {
                    "$id": "2621",
                    "kind": "string",
                    "type": {
                     "$ref": "2193"
                    },
                    "value": "00:05:00"
                   },
                   "healthCheckWaitDuration": {
                    "$id": "2622",
                    "kind": "string",
                    "type": {
                     "$ref": "2189"
                    },
                    "value": "00:02:00"
                   },
                   "upgradeDomainTimeout": {
                    "$id": "2623",
                    "kind": "string",
                    "type": {
                     "$ref": "2205"
                    },
                    "value": "00:15:00"
                   },
                   "upgradeTimeout": {
                    "$id": "2624",
                    "kind": "string",
                    "type": {
                     "$ref": "2201"
                    },
                    "value": "01:00:00"
                   }
                  }
                 },
                 "upgradeMode": {
                  "$id": "2625",
                  "kind": "string",
                  "type": {
                   "$ref": "338"
                  },
                  "value": "UnmonitoredAuto"
                 },
                 "upgradeReplicaSetCheckTimeout": {
                  "$id": "2626",
                  "kind": "number",
                  "type": {
                   "$ref": "2218"
                  },
                  "value": 3600
                 }
                }
               },
               "version": {
                "$id": "2627",
                "kind": "string",
                "type": {
                 "$ref": "2135"
                },
                "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applicationTypes/myAppType/versions/1.0"
               }
              }
             },
             "tags": {
              "$id": "2628",
              "kind": "dict",
              "type": {
               "$ref": "2243"
              },
              "value": {
               "$id": "2629",
               "a": {
                "$id": "2630",
                "kind": "string",
                "type": {
                 "$ref": "2245"
                },
                "value": "b"
               }
              }
             }
            }
           }
          },
          {
           "$id": "2631",
           "response": {
            "$ref": "2564"
           },
           "statusCode": 202,
           "bodyValue": {
            "$id": "2632",
            "kind": "model",
            "type": {
             "$ref": "2127"
            },
            "value": {
             "$id": "2633",
             "name": {
              "$id": "2634",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "myApp"
             },
             "type": {
              "$id": "2635",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/applications"
             },
             "id": {
              "$id": "2636",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applications/myApp"
             },
             "properties": {
              "$id": "2637",
              "kind": "model",
              "type": {
               "$ref": "2129"
              },
              "value": {
               "$id": "2638",
               "parameters": {
                "$id": "2639",
                "kind": "dict",
                "type": {
                 "$ref": "2139"
                },
                "value": {
                 "$id": "2640",
                 "param1": {
                  "$id": "2641",
                  "kind": "string",
                  "type": {
                   "$ref": "2141"
                  },
                  "value": "value1"
                 }
                }
               },
               "provisioningState": {
                "$id": "2642",
                "kind": "string",
                "type": {
                 "$ref": "2131"
                },
                "value": "Updating"
               },
               "upgradePolicy": {
                "$id": "2643",
                "kind": "model",
                "type": {
                 "$ref": "2145"
                },
                "value": {
                 "$id": "2644",
                 "applicationHealthPolicy": {
                  "$id": "2645",
                  "kind": "model",
                  "type": {
                   "$ref": "2147"
                  },
                  "value": {
                   "$id": "2646",
                   "considerWarningAsError": {
                    "$id": "2647",
                    "kind": "boolean",
                    "type": {
                     "$ref": "2149"
                    },
                    "value": true
                   },
                   "defaultServiceTypeHealthPolicy": {
                    "$id": "2648",
                    "kind": "model",
                    "type": {
                     "$ref": "2157"
                    },
                    "value": {
                     "$id": "2649",
                     "maxPercentUnhealthyPartitionsPerService": {
                      "$id": "2650",
                      "kind": "number",
                      "type": {
                       "$ref": "2163"
                      },
                      "value": 0
                     },
                     "maxPercentUnhealthyReplicasPerPartition": {
                      "$id": "2651",
                      "kind": "number",
                      "type": {
                       "$ref": "2167"
                      },
                      "value": 0
                     },
                     "maxPercentUnhealthyServices": {
                      "$id": "2652",
                      "kind": "number",
                      "type": {
                       "$ref": "2159"
                      },
                      "value": 0
                     }
                    }
                   },
                   "maxPercentUnhealthyDeployedApplications": {
                    "$id": "2653",
                    "kind": "number",
                    "type": {
                     "$ref": "2153"
                    },
                    "value": 0
                   },
                   "serviceTypeHealthPolicyMap": {
                    "$id": "2654",
                    "kind": "dict",
                    "type": {
                     "$ref": "2173"
                    },
                    "value": {
                     "$id": "2655",
                     "service1": {
                      "$id": "2656",
                      "kind": "model",
                      "type": {
                       "$ref": "2157"
                      },
                      "value": {
                       "$id": "2657",
                       "maxPercentUnhealthyPartitionsPerService": {
                        "$id": "2658",
                        "kind": "number",
                        "type": {
                         "$ref": "2163"
                        },
                        "value": 30
                       },
                       "maxPercentUnhealthyReplicasPerPartition": {
                        "$id": "2659",
                        "kind": "number",
                        "type": {
                         "$ref": "2167"
                        },
                        "value": 30
                       },
                       "maxPercentUnhealthyServices": {
                        "$id": "2660",
                        "kind": "number",
                        "type": {
                         "$ref": "2159"
                        },
                        "value": 30
                       }
                      }
                     }
                    }
                   }
                  }
                 },
                 "forceRestart": {
                  "$id": "2661",
                  "kind": "boolean",
                  "type": {
                   "$ref": "2180"
                  },
                  "value": false
                 },
                 "instanceCloseDelayDuration": {
                  "$id": "2662",
                  "kind": "number",
                  "type": {
                   "$ref": "2211"
                  },
                  "value": 600
                 },
                 "recreateApplication": {
                  "$id": "2663",
                  "kind": "boolean",
                  "type": {
                   "$ref": "2222"
                  },
                  "value": false
                 },
                 "rollingUpgradeMonitoringPolicy": {
                  "$id": "2664",
                  "kind": "model",
                  "type": {
                   "$ref": "2184"
                  },
                  "value": {
                   "$id": "2665",
                   "failureAction": {
                    "$id": "2666",
                    "kind": "string",
                    "type": {
                     "$ref": "332"
                    },
                    "value": "Rollback"
                   },
                   "healthCheckRetryTimeout": {
                    "$id": "2667",
                    "kind": "string",
                    "type": {
                     "$ref": "2197"
                    },
                    "value": "00:10:00"
                   },
                   "healthCheckStableDuration": {
                    "$id": "2668",
                    "kind": "string",
                    "type": {
                     "$ref": "2193"
                    },
                    "value": "00:05:00"
                   },
                   "healthCheckWaitDuration": {
                    "$id": "2669",
                    "kind": "string",
                    "type": {
                     "$ref": "2189"
                    },
                    "value": "00:02:00"
                   },
                   "upgradeDomainTimeout": {
                    "$id": "2670",
                    "kind": "string",
                    "type": {
                     "$ref": "2205"
                    },
                    "value": "00:15:00"
                   },
                   "upgradeTimeout": {
                    "$id": "2671",
                    "kind": "string",
                    "type": {
                     "$ref": "2201"
                    },
                    "value": "01:00:00"
                   }
                  }
                 },
                 "upgradeMode": {
                  "$id": "2672",
                  "kind": "string",
                  "type": {
                   "$ref": "338"
                  },
                  "value": "UnmonitoredAuto"
                 },
                 "upgradeReplicaSetCheckTimeout": {
                  "$id": "2673",
                  "kind": "number",
                  "type": {
                   "$ref": "2218"
                  },
                  "value": 3600
                 }
                }
               },
               "version": {
                "$id": "2674",
                "kind": "string",
                "type": {
                 "$ref": "2135"
                },
                "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applicationTypes/myAppType/versions/1.0"
               }
              }
             },
             "tags": {
              "$id": "2675",
              "kind": "dict",
              "type": {
               "$ref": "2243"
              },
              "value": {
               "$id": "2676",
               "a": {
                "$id": "2677",
                "kind": "string",
                "type": {
                 "$ref": "2245"
                },
                "value": "b"
               }
              }
             }
            }
           }
          }
         ]
        },
        {
         "$id": "2678",
         "kind": "http",
         "name": "Put an application with minimum parameters",
         "description": "Put an application with minimum parameters",
         "filePath": "2024-11-01-preview/ApplicationPutOperation_example_min.json",
         "parameters": [
          {
           "$id": "2679",
           "parameter": {
            "$ref": "2544"
           },
           "value": {
            "$id": "2680",
            "kind": "string",
            "type": {
             "$ref": "2545"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "2681",
           "parameter": {
            "$ref": "2554"
           },
           "value": {
            "$id": "2682",
            "kind": "string",
            "type": {
             "$ref": "2555"
            },
            "value": "myApp"
           }
          },
          {
           "$id": "2683",
           "parameter": {
            "$ref": "2552"
           },
           "value": {
            "$id": "2684",
            "kind": "string",
            "type": {
             "$ref": "2553"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "2685",
           "parameter": {
            "$ref": "2550"
           },
           "value": {
            "$id": "2686",
            "kind": "string",
            "type": {
             "$ref": "2551"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "2687",
           "parameter": {
            "$ref": "2548"
           },
           "value": {
            "$id": "2688",
            "kind": "string",
            "type": {
             "$ref": "2549"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "2689",
           "response": {
            "$ref": "2563"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "2690",
            "kind": "model",
            "type": {
             "$ref": "2127"
            },
            "value": {
             "$id": "2691",
             "name": {
              "$id": "2692",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "myApp"
             },
             "type": {
              "$id": "2693",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/applications"
             },
             "id": {
              "$id": "2694",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applications/myApp"
             },
             "location": {
              "$id": "2695",
              "kind": "string",
              "type": {
               "$ref": "2278"
              },
              "value": "eastus"
             },
             "properties": {
              "$id": "2696",
              "kind": "model",
              "type": {
               "$ref": "2129"
              },
              "value": {
               "$id": "2697",
               "parameters": {
                "$id": "2698",
                "kind": "dict",
                "type": {
                 "$ref": "2139"
                },
                "value": {
                 "$id": "2699",
                 "param1": {
                  "$id": "2700",
                  "kind": "string",
                  "type": {
                   "$ref": "2141"
                  },
                  "value": "value1"
                 }
                }
               },
               "provisioningState": {
                "$id": "2701",
                "kind": "string",
                "type": {
                 "$ref": "2131"
                },
                "value": "Updating"
               },
               "upgradePolicy": {
                "$id": "2702",
                "kind": "model",
                "type": {
                 "$ref": "2145"
                },
                "value": {
                 "$id": "2703",
                 "applicationHealthPolicy": {
                  "$id": "2704",
                  "kind": "model",
                  "type": {
                   "$ref": "2147"
                  },
                  "value": {
                   "$id": "2705",
                   "considerWarningAsError": {
                    "$id": "2706",
                    "kind": "boolean",
                    "type": {
                     "$ref": "2149"
                    },
                    "value": true
                   },
                   "defaultServiceTypeHealthPolicy": {
                    "$id": "2707",
                    "kind": "model",
                    "type": {
                     "$ref": "2157"
                    },
                    "value": {
                     "$id": "2708",
                     "maxPercentUnhealthyPartitionsPerService": {
                      "$id": "2709",
                      "kind": "number",
                      "type": {
                       "$ref": "2163"
                      },
                      "value": 0
                     },
                     "maxPercentUnhealthyReplicasPerPartition": {
                      "$id": "2710",
                      "kind": "number",
                      "type": {
                       "$ref": "2167"
                      },
                      "value": 0
                     },
                     "maxPercentUnhealthyServices": {
                      "$id": "2711",
                      "kind": "number",
                      "type": {
                       "$ref": "2159"
                      },
                      "value": 0
                     }
                    }
                   },
                   "maxPercentUnhealthyDeployedApplications": {
                    "$id": "2712",
                    "kind": "number",
                    "type": {
                     "$ref": "2153"
                    },
                    "value": 0
                   },
                   "serviceTypeHealthPolicyMap": {
                    "$id": "2713",
                    "kind": "dict",
                    "type": {
                     "$ref": "2173"
                    },
                    "value": {
                     "$id": "2714",
                     "service1": {
                      "$id": "2715",
                      "kind": "model",
                      "type": {
                       "$ref": "2157"
                      },
                      "value": {
                       "$id": "2716",
                       "maxPercentUnhealthyPartitionsPerService": {
                        "$id": "2717",
                        "kind": "number",
                        "type": {
                         "$ref": "2163"
                        },
                        "value": 30
                       },
                       "maxPercentUnhealthyReplicasPerPartition": {
                        "$id": "2718",
                        "kind": "number",
                        "type": {
                         "$ref": "2167"
                        },
                        "value": 30
                       },
                       "maxPercentUnhealthyServices": {
                        "$id": "2719",
                        "kind": "number",
                        "type": {
                         "$ref": "2159"
                        },
                        "value": 30
                       }
                      }
                     }
                    }
                   }
                  }
                 },
                 "forceRestart": {
                  "$id": "2720",
                  "kind": "boolean",
                  "type": {
                   "$ref": "2180"
                  },
                  "value": false
                 },
                 "instanceCloseDelayDuration": {
                  "$id": "2721",
                  "kind": "number",
                  "type": {
                   "$ref": "2211"
                  },
                  "value": 600
                 },
                 "recreateApplication": {
                  "$id": "2722",
                  "kind": "boolean",
                  "type": {
                   "$ref": "2222"
                  },
                  "value": false
                 },
                 "rollingUpgradeMonitoringPolicy": {
                  "$id": "2723",
                  "kind": "model",
                  "type": {
                   "$ref": "2184"
                  },
                  "value": {
                   "$id": "2724",
                   "failureAction": {
                    "$id": "2725",
                    "kind": "string",
                    "type": {
                     "$ref": "332"
                    },
                    "value": "Rollback"
                   },
                   "healthCheckRetryTimeout": {
                    "$id": "2726",
                    "kind": "string",
                    "type": {
                     "$ref": "2197"
                    },
                    "value": "00:10:00"
                   },
                   "healthCheckStableDuration": {
                    "$id": "2727",
                    "kind": "string",
                    "type": {
                     "$ref": "2193"
                    },
                    "value": "00:05:00"
                   },
                   "healthCheckWaitDuration": {
                    "$id": "2728",
                    "kind": "string",
                    "type": {
                     "$ref": "2189"
                    },
                    "value": "00:02:00"
                   },
                   "upgradeDomainTimeout": {
                    "$id": "2729",
                    "kind": "string",
                    "type": {
                     "$ref": "2205"
                    },
                    "value": "00:15:00"
                   },
                   "upgradeTimeout": {
                    "$id": "2730",
                    "kind": "string",
                    "type": {
                     "$ref": "2201"
                    },
                    "value": "01:00:00"
                   }
                  }
                 },
                 "upgradeMode": {
                  "$id": "2731",
                  "kind": "string",
                  "type": {
                   "$ref": "338"
                  },
                  "value": "UnmonitoredAuto"
                 },
                 "upgradeReplicaSetCheckTimeout": {
                  "$id": "2732",
                  "kind": "number",
                  "type": {
                   "$ref": "2218"
                  },
                  "value": 3600
                 }
                }
               },
               "version": {
                "$id": "2733",
                "kind": "string",
                "type": {
                 "$ref": "2135"
                },
                "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applicationTypes/myAppType/versions/1.0"
               }
              }
             }
            }
           }
          },
          {
           "$id": "2734",
           "response": {
            "$ref": "2564"
           },
           "statusCode": 202,
           "bodyValue": {
            "$id": "2735",
            "kind": "model",
            "type": {
             "$ref": "2127"
            },
            "value": {
             "$id": "2736",
             "name": {
              "$id": "2737",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "myCluster"
             },
             "type": {
              "$id": "2738",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/applications"
             },
             "id": {
              "$id": "2739",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applications/myApp"
             },
             "properties": {
              "$id": "2740",
              "kind": "model",
              "type": {
               "$ref": "2129"
              },
              "value": {
               "$id": "2741",
               "provisioningState": {
                "$id": "2742",
                "kind": "string",
                "type": {
                 "$ref": "2131"
                },
                "value": "Updating"
               },
               "version": {
                "$id": "2743",
                "kind": "string",
                "type": {
                 "$ref": "2135"
                },
                "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applicationTypes/myAppType/versions/1.0"
               }
              }
             }
            }
           }
          }
         ]
        }
       ]
      },
      {
       "$id": "2744",
       "name": "update",
       "resourceName": "ApplicationResource",
       "doc": "Updates the tags of an application resource of a given managed cluster.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "2745",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "2746",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "2747",
          "type": {
           "$id": "2748",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2749",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "2750",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2751",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "2752",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2753",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "2754",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2755",
         "name": "applicationName",
         "nameInRequest": "applicationName",
         "doc": "The name of the application resource.",
         "type": {
          "$id": "2756",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2757",
         "name": "contentType",
         "nameInRequest": "Content-Type",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$id": "2758",
          "kind": "constant",
          "valueType": {
           "$id": "2759",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": true,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2760",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "2761",
          "kind": "constant",
          "valueType": {
           "$id": "2762",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2763",
         "name": "parameters",
         "nameInRequest": "parameters",
         "doc": "The application resource updated tags.",
         "type": {
          "$ref": "2281"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "2764",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "2127"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "PATCH",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applications/{applicationName}",
       "requestMediaTypes": [
        "application/json"
       ],
       "bufferResponse": true,
       "generateProtocolMethod": true,
       "generateConvenienceMethod": false,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Applications.update",
       "decorators": [],
       "examples": [
        {
         "$id": "2765",
         "kind": "http",
         "name": "Patch an application",
         "description": "Patch an application",
         "filePath": "2024-11-01-preview/ApplicationPatchOperation_example.json",
         "parameters": [
          {
           "$id": "2766",
           "parameter": {
            "$ref": "2745"
           },
           "value": {
            "$id": "2767",
            "kind": "string",
            "type": {
             "$ref": "2746"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "2768",
           "parameter": {
            "$ref": "2755"
           },
           "value": {
            "$id": "2769",
            "kind": "string",
            "type": {
             "$ref": "2756"
            },
            "value": "myApp"
           }
          },
          {
           "$id": "2770",
           "parameter": {
            "$ref": "2753"
           },
           "value": {
            "$id": "2771",
            "kind": "string",
            "type": {
             "$ref": "2754"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "2772",
           "parameter": {
            "$ref": "2751"
           },
           "value": {
            "$id": "2773",
            "kind": "string",
            "type": {
             "$ref": "2752"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "2774",
           "parameter": {
            "$ref": "2749"
           },
           "value": {
            "$id": "2775",
            "kind": "string",
            "type": {
             "$ref": "2750"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "2776",
           "response": {
            "$ref": "2764"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "2777",
            "kind": "model",
            "type": {
             "$ref": "2127"
            },
            "value": {
             "$id": "2778",
             "name": {
              "$id": "2779",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "myApp"
             },
             "type": {
              "$id": "2780",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/applications"
             },
             "id": {
              "$id": "2781",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applications/myApp"
             },
             "location": {
              "$id": "2782",
              "kind": "string",
              "type": {
               "$ref": "2278"
              },
              "value": "eastus"
             },
             "properties": {
              "$id": "2783",
              "kind": "model",
              "type": {
               "$ref": "2129"
              },
              "value": {
               "$id": "2784",
               "parameters": {
                "$id": "2785",
                "kind": "dict",
                "type": {
                 "$ref": "2139"
                },
                "value": {
                 "$id": "2786",
                 "param1": {
                  "$id": "2787",
                  "kind": "string",
                  "type": {
                   "$ref": "2141"
                  },
                  "value": "value1"
                 }
                }
               },
               "provisioningState": {
                "$id": "2788",
                "kind": "string",
                "type": {
                 "$ref": "2131"
                },
                "value": "Succeeded"
               },
               "upgradePolicy": {
                "$id": "2789",
                "kind": "model",
                "type": {
                 "$ref": "2145"
                },
                "value": {
                 "$id": "2790",
                 "applicationHealthPolicy": {
                  "$id": "2791",
                  "kind": "model",
                  "type": {
                   "$ref": "2147"
                  },
                  "value": {
                   "$id": "2792",
                   "considerWarningAsError": {
                    "$id": "2793",
                    "kind": "boolean",
                    "type": {
                     "$ref": "2149"
                    },
                    "value": true
                   },
                   "defaultServiceTypeHealthPolicy": {
                    "$id": "2794",
                    "kind": "model",
                    "type": {
                     "$ref": "2157"
                    },
                    "value": {
                     "$id": "2795",
                     "maxPercentUnhealthyPartitionsPerService": {
                      "$id": "2796",
                      "kind": "number",
                      "type": {
                       "$ref": "2163"
                      },
                      "value": 0
                     },
                     "maxPercentUnhealthyReplicasPerPartition": {
                      "$id": "2797",
                      "kind": "number",
                      "type": {
                       "$ref": "2167"
                      },
                      "value": 0
                     },
                     "maxPercentUnhealthyServices": {
                      "$id": "2798",
                      "kind": "number",
                      "type": {
                       "$ref": "2159"
                      },
                      "value": 0
                     }
                    }
                   },
                   "maxPercentUnhealthyDeployedApplications": {
                    "$id": "2799",
                    "kind": "number",
                    "type": {
                     "$ref": "2153"
                    },
                    "value": 0
                   },
                   "serviceTypeHealthPolicyMap": {
                    "$id": "2800",
                    "kind": "dict",
                    "type": {
                     "$ref": "2173"
                    },
                    "value": {
                     "$id": "2801",
                     "service1": {
                      "$id": "2802",
                      "kind": "model",
                      "type": {
                       "$ref": "2157"
                      },
                      "value": {
                       "$id": "2803",
                       "maxPercentUnhealthyPartitionsPerService": {
                        "$id": "2804",
                        "kind": "number",
                        "type": {
                         "$ref": "2163"
                        },
                        "value": 30
                       },
                       "maxPercentUnhealthyReplicasPerPartition": {
                        "$id": "2805",
                        "kind": "number",
                        "type": {
                         "$ref": "2167"
                        },
                        "value": 30
                       },
                       "maxPercentUnhealthyServices": {
                        "$id": "2806",
                        "kind": "number",
                        "type": {
                         "$ref": "2159"
                        },
                        "value": 30
                       }
                      }
                     }
                    }
                   }
                  }
                 },
                 "forceRestart": {
                  "$id": "2807",
                  "kind": "boolean",
                  "type": {
                   "$ref": "2180"
                  },
                  "value": false
                 },
                 "instanceCloseDelayDuration": {
                  "$id": "2808",
                  "kind": "number",
                  "type": {
                   "$ref": "2211"
                  },
                  "value": 600
                 },
                 "recreateApplication": {
                  "$id": "2809",
                  "kind": "boolean",
                  "type": {
                   "$ref": "2222"
                  },
                  "value": false
                 },
                 "rollingUpgradeMonitoringPolicy": {
                  "$id": "2810",
                  "kind": "model",
                  "type": {
                   "$ref": "2184"
                  },
                  "value": {
                   "$id": "2811",
                   "failureAction": {
                    "$id": "2812",
                    "kind": "string",
                    "type": {
                     "$ref": "332"
                    },
                    "value": "Rollback"
                   },
                   "healthCheckRetryTimeout": {
                    "$id": "2813",
                    "kind": "string",
                    "type": {
                     "$ref": "2197"
                    },
                    "value": "00:10:00"
                   },
                   "healthCheckStableDuration": {
                    "$id": "2814",
                    "kind": "string",
                    "type": {
                     "$ref": "2193"
                    },
                    "value": "00:05:00"
                   },
                   "healthCheckWaitDuration": {
                    "$id": "2815",
                    "kind": "string",
                    "type": {
                     "$ref": "2189"
                    },
                    "value": "00:02:00"
                   },
                   "upgradeDomainTimeout": {
                    "$id": "2816",
                    "kind": "string",
                    "type": {
                     "$ref": "2205"
                    },
                    "value": "00:15:00"
                   },
                   "upgradeTimeout": {
                    "$id": "2817",
                    "kind": "string",
                    "type": {
                     "$ref": "2201"
                    },
                    "value": "01:00:00"
                   }
                  }
                 },
                 "upgradeMode": {
                  "$id": "2818",
                  "kind": "string",
                  "type": {
                   "$ref": "338"
                  },
                  "value": "UnmonitoredAuto"
                 },
                 "upgradeReplicaSetCheckTimeout": {
                  "$id": "2819",
                  "kind": "number",
                  "type": {
                   "$ref": "2218"
                  },
                  "value": 3600
                 }
                }
               },
               "version": {
                "$id": "2820",
                "kind": "string",
                "type": {
                 "$ref": "2135"
                },
                "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applicationTypes/myAppType/versions/1.0"
               }
              }
             },
             "tags": {
              "$id": "2821",
              "kind": "dict",
              "type": {
               "$ref": "2243"
              },
              "value": {
               "$id": "2822",
               "a": {
                "$id": "2823",
                "kind": "string",
                "type": {
                 "$ref": "2245"
                },
                "value": "b"
               }
              }
             }
            }
           }
          }
         ]
        }
       ]
      },
      {
       "$id": "2824",
       "name": "delete",
       "resourceName": "ApplicationResource",
       "doc": "Delete a Service Fabric managed application resource with the specified name.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "2825",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "2826",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "2827",
          "type": {
           "$id": "2828",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2829",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "2830",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2831",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "2832",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2833",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "2834",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2835",
         "name": "applicationName",
         "nameInRequest": "applicationName",
         "doc": "The name of the application resource.",
         "type": {
          "$id": "2836",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2837",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "2838",
          "kind": "constant",
          "valueType": {
           "$id": "2839",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "2840",
         "statusCodes": [
          202
         ],
         "headers": [
          {
           "$id": "2841",
           "name": "azureAsyncOperation",
           "nameInResponse": "Azure-AsyncOperation",
           "doc": "A link to the status monitor",
           "type": {
            "$id": "2842",
            "kind": "url",
            "name": "ResourceLocation",
            "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
            "baseType": {
             "$id": "2843",
             "kind": "url",
             "name": "url",
             "crossLanguageDefinitionId": "TypeSpec.url",
             "decorators": []
            },
            "decorators": []
           }
          },
          {
           "$id": "2844",
           "name": "location",
           "nameInResponse": "Location",
           "doc": "The Location header contains the URL where the status of the long running operation can be checked.",
           "type": {
            "$id": "2845",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           }
          }
         ],
         "isErrorResponse": false
        },
        {
         "$id": "2846",
         "statusCodes": [
          204
         ],
         "headers": [],
         "isErrorResponse": false
        }
       ],
       "httpMethod": "DELETE",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applications/{applicationName}",
       "bufferResponse": true,
       "longRunning": {
        "$id": "2847",
        "finalStateVia": 1,
        "finalResponse": {
         "$id": "2848",
         "statusCodes": [
          204
         ]
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Applications.delete",
       "decorators": [],
       "examples": [
        {
         "$id": "2849",
         "kind": "http",
         "name": "Delete an application",
         "description": "Delete an application",
         "filePath": "2024-11-01-preview/ApplicationDeleteOperation_example.json",
         "parameters": [
          {
           "$id": "2850",
           "parameter": {
            "$ref": "2825"
           },
           "value": {
            "$id": "2851",
            "kind": "string",
            "type": {
             "$ref": "2826"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "2852",
           "parameter": {
            "$ref": "2835"
           },
           "value": {
            "$id": "2853",
            "kind": "string",
            "type": {
             "$ref": "2836"
            },
            "value": "myApp"
           }
          },
          {
           "$id": "2854",
           "parameter": {
            "$ref": "2833"
           },
           "value": {
            "$id": "2855",
            "kind": "string",
            "type": {
             "$ref": "2834"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "2856",
           "parameter": {
            "$ref": "2831"
           },
           "value": {
            "$id": "2857",
            "kind": "string",
            "type": {
             "$ref": "2832"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "2858",
           "parameter": {
            "$ref": "2829"
           },
           "value": {
            "$id": "2859",
            "kind": "string",
            "type": {
             "$ref": "2830"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "2860",
           "response": {
            "$ref": "2840"
           },
           "statusCode": 202
          },
          {
           "$id": "2861",
           "response": {
            "$ref": "2846"
           },
           "statusCode": 204
          }
         ]
        }
       ]
      },
      {
       "$id": "2862",
       "name": "list",
       "resourceName": "ApplicationResource",
       "doc": "Gets all managed application resources created or in the process of being created in the Service Fabric cluster resource.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "2863",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "2864",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "2865",
          "type": {
           "$id": "2866",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2867",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "2868",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2869",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "2870",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2871",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "2872",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2873",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "2874",
          "kind": "constant",
          "valueType": {
           "$id": "2875",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "2876",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "2288"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "GET",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applications",
       "bufferResponse": true,
       "paging": {
        "$id": "2877",
        "itemPropertySegments": [
         "value"
        ],
        "nextLink": {
         "$id": "2878",
         "responseSegments": [
          "nextLink"
         ],
         "responseLocation": "Body"
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Applications.list",
       "decorators": [],
       "examples": [
        {
         "$id": "2879",
         "kind": "http",
         "name": "Get a list of application resources",
         "description": "Get a list of application resources",
         "filePath": "2024-11-01-preview/ApplicationListOperation_example.json",
         "parameters": [
          {
           "$id": "2880",
           "parameter": {
            "$ref": "2863"
           },
           "value": {
            "$id": "2881",
            "kind": "string",
            "type": {
             "$ref": "2864"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "2882",
           "parameter": {
            "$ref": "2871"
           },
           "value": {
            "$id": "2883",
            "kind": "string",
            "type": {
             "$ref": "2872"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "2884",
           "parameter": {
            "$ref": "2869"
           },
           "value": {
            "$id": "2885",
            "kind": "string",
            "type": {
             "$ref": "2870"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "2886",
           "parameter": {
            "$ref": "2867"
           },
           "value": {
            "$id": "2887",
            "kind": "string",
            "type": {
             "$ref": "2868"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "2888",
           "response": {
            "$ref": "2876"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "2889",
            "kind": "model",
            "type": {
             "$ref": "2288"
            },
            "value": {
             "$id": "2890",
             "nextLink": {
              "$id": "2891",
              "kind": "string",
              "type": {
               "$ref": "2294"
              },
              "value": "http://examplelink.com"
             },
             "value": {
              "$id": "2892",
              "kind": "array",
              "type": {
               "$ref": "2290"
              },
              "value": [
               {
                "$id": "2893",
                "kind": "model",
                "type": {
                 "$ref": "2127"
                },
                "value": {
                 "$id": "2894",
                 "name": {
                  "$id": "2895",
                  "kind": "string",
                  "type": {
                   "$ref": "507"
                  },
                  "value": "myApp"
                 },
                 "type": {
                  "$id": "2896",
                  "kind": "string",
                  "type": {
                   "$ref": "511"
                  },
                  "value": "Microsoft.ServiceFabric/managedClusters/applications"
                 },
                 "id": {
                  "$id": "2897",
                  "kind": "string",
                  "type": {
                   "$ref": "503"
                  },
                  "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applications/myApp"
                 },
                 "properties": {
                  "$id": "2898",
                  "kind": "model",
                  "type": {
                   "$ref": "2129"
                  },
                  "value": {
                   "$id": "2899",
                   "provisioningState": {
                    "$id": "2900",
                    "kind": "string",
                    "type": {
                     "$ref": "2131"
                    },
                    "value": "Updating"
                   },
                   "version": {
                    "$id": "2901",
                    "kind": "string",
                    "type": {
                     "$ref": "2135"
                    },
                    "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applicationTypes/myAppType/versions/1.0"
                   }
                  }
                 }
                }
               }
              ]
             }
            }
           }
          }
         ]
        }
       ]
      },
      {
       "$id": "2902",
       "name": "readUpgrade",
       "resourceName": "Applications",
       "doc": "Get the status of the latest application upgrade. It will query the cluster to find the status of the latest application upgrade.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "2903",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "2904",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "2905",
          "type": {
           "$id": "2906",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2907",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "2908",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2909",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "2910",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2911",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "2912",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2913",
         "name": "applicationName",
         "nameInRequest": "applicationName",
         "doc": "The name of the application resource.",
         "type": {
          "$id": "2914",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2915",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "2916",
          "kind": "constant",
          "valueType": {
           "$id": "2917",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "2918",
         "statusCodes": [
          202
         ],
         "headers": [
          {
           "$id": "2919",
           "name": "azureAsyncOperation",
           "nameInResponse": "Azure-AsyncOperation",
           "doc": "A link to the status monitor",
           "type": {
            "$id": "2920",
            "kind": "url",
            "name": "ResourceLocation",
            "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
            "baseType": {
             "$id": "2921",
             "kind": "url",
             "name": "url",
             "crossLanguageDefinitionId": "TypeSpec.url",
             "decorators": []
            },
            "decorators": []
           }
          },
          {
           "$id": "2922",
           "name": "location",
           "nameInResponse": "Location",
           "doc": "The Location header contains the URL where the status of the long running operation can be checked.",
           "type": {
            "$id": "2923",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           }
          }
         ],
         "isErrorResponse": false
        }
       ],
       "httpMethod": "POST",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applications/{applicationName}/fetchUpgradeStatus",
       "bufferResponse": true,
       "longRunning": {
        "$id": "2924",
        "finalStateVia": 1,
        "finalResponse": {
         "$id": "2925",
         "statusCodes": [
          200
         ]
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Applications.readUpgrade",
       "decorators": [],
       "examples": [
        {
         "$id": "2926",
         "kind": "http",
         "name": "Get an application upgrade",
         "description": "Get an application upgrade",
         "filePath": "2024-11-01-preview/ApplicationActionGetUpgrade_example.json",
         "parameters": [
          {
           "$id": "2927",
           "parameter": {
            "$ref": "2903"
           },
           "value": {
            "$id": "2928",
            "kind": "string",
            "type": {
             "$ref": "2904"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "2929",
           "parameter": {
            "$ref": "2913"
           },
           "value": {
            "$id": "2930",
            "kind": "string",
            "type": {
             "$ref": "2914"
            },
            "value": "myApp"
           }
          },
          {
           "$id": "2931",
           "parameter": {
            "$ref": "2911"
           },
           "value": {
            "$id": "2932",
            "kind": "string",
            "type": {
             "$ref": "2912"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "2933",
           "parameter": {
            "$ref": "2909"
           },
           "value": {
            "$id": "2934",
            "kind": "string",
            "type": {
             "$ref": "2910"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "2935",
           "parameter": {
            "$ref": "2907"
           },
           "value": {
            "$id": "2936",
            "kind": "string",
            "type": {
             "$ref": "2908"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "2937",
           "response": {
            "$ref": "2918"
           },
           "statusCode": 202
          }
         ]
        }
       ]
      },
      {
       "$id": "2938",
       "name": "resumeUpgrade",
       "resourceName": "Applications",
       "doc": "Send a request to resume the current application upgrade. This will resume the application upgrade from where it was paused.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "2939",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "2940",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "2941",
          "type": {
           "$id": "2942",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2943",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "2944",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2945",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "2946",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2947",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "2948",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2949",
         "name": "applicationName",
         "nameInRequest": "applicationName",
         "doc": "The name of the application resource.",
         "type": {
          "$id": "2950",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2951",
         "name": "contentType",
         "nameInRequest": "Content-Type",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$id": "2952",
          "kind": "constant",
          "valueType": {
           "$id": "2953",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": true,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2954",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "2955",
          "kind": "constant",
          "valueType": {
           "$id": "2956",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2957",
         "name": "parameters",
         "nameInRequest": "parameters",
         "doc": "The parameters for resuming an application upgrade.",
         "type": {
          "$ref": "2298"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "2958",
         "statusCodes": [
          202
         ],
         "headers": [
          {
           "$id": "2959",
           "name": "azureAsyncOperation",
           "nameInResponse": "Azure-AsyncOperation",
           "doc": "A link to the status monitor",
           "type": {
            "$id": "2960",
            "kind": "url",
            "name": "ResourceLocation",
            "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
            "baseType": {
             "$id": "2961",
             "kind": "url",
             "name": "url",
             "crossLanguageDefinitionId": "TypeSpec.url",
             "decorators": []
            },
            "decorators": []
           }
          },
          {
           "$id": "2962",
           "name": "location",
           "nameInResponse": "Location",
           "doc": "The Location header contains the URL where the status of the long running operation can be checked.",
           "type": {
            "$id": "2963",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           }
          }
         ],
         "isErrorResponse": false
        }
       ],
       "httpMethod": "POST",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applications/{applicationName}/resumeUpgrade",
       "requestMediaTypes": [
        "application/json"
       ],
       "bufferResponse": true,
       "longRunning": {
        "$id": "2964",
        "finalStateVia": 1,
        "finalResponse": {
         "$id": "2965",
         "statusCodes": [
          200
         ]
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Applications.resumeUpgrade",
       "decorators": [],
       "examples": [
        {
         "$id": "2966",
         "kind": "http",
         "name": "Resume upgrade",
         "description": "Resume upgrade",
         "filePath": "2024-11-01-preview/ApplicationActionResumeUpgrade_example.json",
         "parameters": [
          {
           "$id": "2967",
           "parameter": {
            "$ref": "2939"
           },
           "value": {
            "$id": "2968",
            "kind": "string",
            "type": {
             "$ref": "2940"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "2969",
           "parameter": {
            "$ref": "2949"
           },
           "value": {
            "$id": "2970",
            "kind": "string",
            "type": {
             "$ref": "2950"
            },
            "value": "myApp"
           }
          },
          {
           "$id": "2971",
           "parameter": {
            "$ref": "2947"
           },
           "value": {
            "$id": "2972",
            "kind": "string",
            "type": {
             "$ref": "2948"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "2973",
           "parameter": {
            "$ref": "2945"
           },
           "value": {
            "$id": "2974",
            "kind": "string",
            "type": {
             "$ref": "2946"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "2975",
           "parameter": {
            "$ref": "2943"
           },
           "value": {
            "$id": "2976",
            "kind": "string",
            "type": {
             "$ref": "2944"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "2977",
           "response": {
            "$ref": "2958"
           },
           "statusCode": 202
          }
         ]
        }
       ]
      },
      {
       "$id": "2978",
       "name": "startRollback",
       "resourceName": "Applications",
       "doc": "Send a request to start a rollback of the current application upgrade. This will start rolling back the application to the previous version.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "2979",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "2980",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "2981",
          "type": {
           "$id": "2982",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2983",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "2984",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2985",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "2986",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2987",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "2988",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2989",
         "name": "applicationName",
         "nameInRequest": "applicationName",
         "doc": "The name of the application resource.",
         "type": {
          "$id": "2990",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "2991",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "2992",
          "kind": "constant",
          "valueType": {
           "$id": "2993",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "2994",
         "statusCodes": [
          202
         ],
         "headers": [
          {
           "$id": "2995",
           "name": "azureAsyncOperation",
           "nameInResponse": "Azure-AsyncOperation",
           "doc": "A link to the status monitor",
           "type": {
            "$id": "2996",
            "kind": "url",
            "name": "ResourceLocation",
            "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
            "baseType": {
             "$id": "2997",
             "kind": "url",
             "name": "url",
             "crossLanguageDefinitionId": "TypeSpec.url",
             "decorators": []
            },
            "decorators": []
           }
          },
          {
           "$id": "2998",
           "name": "location",
           "nameInResponse": "Location",
           "doc": "The Location header contains the URL where the status of the long running operation can be checked.",
           "type": {
            "$id": "2999",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           }
          }
         ],
         "isErrorResponse": false
        }
       ],
       "httpMethod": "POST",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applications/{applicationName}/startRollback",
       "bufferResponse": true,
       "longRunning": {
        "$id": "3000",
        "finalStateVia": 1,
        "finalResponse": {
         "$id": "3001",
         "statusCodes": [
          200
         ]
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Applications.startRollback",
       "decorators": [],
       "examples": [
        {
         "$id": "3002",
         "kind": "http",
         "name": "Start an application upgrade rollback",
         "description": "Start an application upgrade rollback",
         "filePath": "2024-11-01-preview/ApplicationActionStartRollback_example.json",
         "parameters": [
          {
           "$id": "3003",
           "parameter": {
            "$ref": "2979"
           },
           "value": {
            "$id": "3004",
            "kind": "string",
            "type": {
             "$ref": "2980"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "3005",
           "parameter": {
            "$ref": "2989"
           },
           "value": {
            "$id": "3006",
            "kind": "string",
            "type": {
             "$ref": "2990"
            },
            "value": "myApp"
           }
          },
          {
           "$id": "3007",
           "parameter": {
            "$ref": "2987"
           },
           "value": {
            "$id": "3008",
            "kind": "string",
            "type": {
             "$ref": "2988"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "3009",
           "parameter": {
            "$ref": "2985"
           },
           "value": {
            "$id": "3010",
            "kind": "string",
            "type": {
             "$ref": "2986"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "3011",
           "parameter": {
            "$ref": "2983"
           },
           "value": {
            "$id": "3012",
            "kind": "string",
            "type": {
             "$ref": "2984"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "3013",
           "response": {
            "$ref": "2994"
           },
           "statusCode": 202
          }
         ]
        }
       ]
      }
     ],
     "parameters": [
      {
       "$id": "3014",
       "name": "endpoint",
       "nameInRequest": "endpoint",
       "doc": "Service host",
       "type": {
        "$id": "3015",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "defaultValue": {
        "$id": "3016",
        "type": {
         "$id": "3017",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "value": "https://management.azure.com"
       }
      }
     ],
     "decorators": [
      {
       "$id": "3018",
       "name": "Azure.ResourceManager.@armResourceOperations",
       "arguments": {
        "$id": "3019"
       }
      }
     ],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Applications",
     "apiVersions": [
      "2024-11-01-preview"
     ],
     "parent": {
      "$ref": "2353"
     }
    },
    {
     "$id": "3020",
     "kind": "client",
     "name": "ApplicationTypes",
     "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
     "operations": [
      {
       "$id": "3021",
       "name": "get",
       "resourceName": "ApplicationTypeResource",
       "doc": "Get a Service Fabric application type name resource created or in the process of being created in the Service Fabric managed cluster resource.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "3022",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "3023",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "3024",
          "type": {
           "$id": "3025",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3026",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "3027",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3028",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "3029",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3030",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "3031",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3032",
         "name": "applicationTypeName",
         "nameInRequest": "applicationTypeName",
         "doc": "The name of the application type name resource.",
         "type": {
          "$id": "3033",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3034",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "3035",
          "kind": "constant",
          "valueType": {
           "$id": "3036",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "3037",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "2091"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "GET",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applicationTypes/{applicationTypeName}",
       "bufferResponse": true,
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypes.get",
       "decorators": [],
       "examples": [
        {
         "$id": "3038",
         "kind": "http",
         "name": "Get an application type",
         "description": "Get an application type",
         "filePath": "2024-11-01-preview/ApplicationTypeNameGetOperation_example.json",
         "parameters": [
          {
           "$id": "3039",
           "parameter": {
            "$ref": "3022"
           },
           "value": {
            "$id": "3040",
            "kind": "string",
            "type": {
             "$ref": "3023"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "3041",
           "parameter": {
            "$ref": "3032"
           },
           "value": {
            "$id": "3042",
            "kind": "string",
            "type": {
             "$ref": "3033"
            },
            "value": "myAppType"
           }
          },
          {
           "$id": "3043",
           "parameter": {
            "$ref": "3030"
           },
           "value": {
            "$id": "3044",
            "kind": "string",
            "type": {
             "$ref": "3031"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "3045",
           "parameter": {
            "$ref": "3028"
           },
           "value": {
            "$id": "3046",
            "kind": "string",
            "type": {
             "$ref": "3029"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "3047",
           "parameter": {
            "$ref": "3026"
           },
           "value": {
            "$id": "3048",
            "kind": "string",
            "type": {
             "$ref": "3027"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "3049",
           "response": {
            "$ref": "3037"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "3050",
            "kind": "model",
            "type": {
             "$ref": "2091"
            },
            "value": {
             "$id": "3051",
             "name": {
              "$id": "3052",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "myAppType"
             },
             "type": {
              "$id": "3053",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/applicationTypes"
             },
             "id": {
              "$id": "3054",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applicationTypes/myAppType"
             },
             "properties": {
              "$id": "3055",
              "kind": "model",
              "type": {
               "$ref": "2093"
              },
              "value": {
               "$id": "3056",
               "provisioningState": {
                "$id": "3057",
                "kind": "string",
                "type": {
                 "$ref": "2095"
                },
                "value": "Succeeded"
               }
              }
             }
            }
           }
          }
         ]
        }
       ]
      },
      {
       "$id": "3058",
       "name": "createOrUpdate",
       "resourceName": "ApplicationTypeResource",
       "doc": "Create or update a Service Fabric managed application type name resource with the specified name.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "3059",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "3060",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "3061",
          "type": {
           "$id": "3062",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3063",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "3064",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3065",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "3066",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3067",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "3068",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3069",
         "name": "applicationTypeName",
         "nameInRequest": "applicationTypeName",
         "doc": "The name of the application type name resource.",
         "type": {
          "$id": "3070",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3071",
         "name": "contentType",
         "nameInRequest": "Content-Type",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$id": "3072",
          "kind": "constant",
          "valueType": {
           "$id": "3073",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": true,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3074",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "3075",
          "kind": "constant",
          "valueType": {
           "$id": "3076",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3077",
         "name": "parameters",
         "nameInRequest": "parameters",
         "doc": "The application type name resource.",
         "type": {
          "$ref": "2091"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "3078",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "2091"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "PUT",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applicationTypes/{applicationTypeName}",
       "requestMediaTypes": [
        "application/json"
       ],
       "bufferResponse": true,
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypes.createOrUpdate",
       "decorators": [],
       "examples": [
        {
         "$id": "3079",
         "kind": "http",
         "name": "Put an application type",
         "description": "Put an application type",
         "filePath": "2024-11-01-preview/ApplicationTypeNamePutOperation_example.json",
         "parameters": [
          {
           "$id": "3080",
           "parameter": {
            "$ref": "3059"
           },
           "value": {
            "$id": "3081",
            "kind": "string",
            "type": {
             "$ref": "3060"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "3082",
           "parameter": {
            "$ref": "3069"
           },
           "value": {
            "$id": "3083",
            "kind": "string",
            "type": {
             "$ref": "3070"
            },
            "value": "myAppType"
           }
          },
          {
           "$id": "3084",
           "parameter": {
            "$ref": "3067"
           },
           "value": {
            "$id": "3085",
            "kind": "string",
            "type": {
             "$ref": "3068"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "3086",
           "parameter": {
            "$ref": "3065"
           },
           "value": {
            "$id": "3087",
            "kind": "string",
            "type": {
             "$ref": "3066"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "3088",
           "parameter": {
            "$ref": "3063"
           },
           "value": {
            "$id": "3089",
            "kind": "string",
            "type": {
             "$ref": "3064"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "3090",
           "response": {
            "$ref": "3078"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "3091",
            "kind": "model",
            "type": {
             "$ref": "2091"
            },
            "value": {
             "$id": "3092",
             "name": {
              "$id": "3093",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "myAppType"
             },
             "type": {
              "$id": "3094",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/applicationTypes"
             },
             "id": {
              "$id": "3095",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applicationTypes/myAppType"
             },
             "properties": {
              "$id": "3096",
              "kind": "model",
              "type": {
               "$ref": "2093"
              },
              "value": {
               "$id": "3097",
               "provisioningState": {
                "$id": "3098",
                "kind": "string",
                "type": {
                 "$ref": "2095"
                },
                "value": "Succeeded"
               }
              }
             }
            }
           }
          }
         ]
        }
       ]
      },
      {
       "$id": "3099",
       "name": "update",
       "resourceName": "ApplicationTypeResource",
       "doc": "Updates the tags of an application type resource of a given managed cluster.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "3100",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "3101",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "3102",
          "type": {
           "$id": "3103",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3104",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "3105",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3106",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "3107",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3108",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "3109",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3110",
         "name": "applicationTypeName",
         "nameInRequest": "applicationTypeName",
         "doc": "The name of the application type name resource.",
         "type": {
          "$id": "3111",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3112",
         "name": "contentType",
         "nameInRequest": "Content-Type",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$id": "3113",
          "kind": "constant",
          "valueType": {
           "$id": "3114",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": true,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3115",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "3116",
          "kind": "constant",
          "valueType": {
           "$id": "3117",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3118",
         "name": "parameters",
         "nameInRequest": "parameters",
         "doc": "The application type resource updated tags.",
         "type": {
          "$ref": "2110"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "3119",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "2091"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "PATCH",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applicationTypes/{applicationTypeName}",
       "requestMediaTypes": [
        "application/json"
       ],
       "bufferResponse": true,
       "generateProtocolMethod": true,
       "generateConvenienceMethod": false,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypes.update",
       "decorators": [],
       "examples": [
        {
         "$id": "3120",
         "kind": "http",
         "name": "Patch an application type",
         "description": "Patch an application type",
         "filePath": "2024-11-01-preview/ApplicationTypeNamePatchOperation_example.json",
         "parameters": [
          {
           "$id": "3121",
           "parameter": {
            "$ref": "3100"
           },
           "value": {
            "$id": "3122",
            "kind": "string",
            "type": {
             "$ref": "3101"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "3123",
           "parameter": {
            "$ref": "3110"
           },
           "value": {
            "$id": "3124",
            "kind": "string",
            "type": {
             "$ref": "3111"
            },
            "value": "myAppType"
           }
          },
          {
           "$id": "3125",
           "parameter": {
            "$ref": "3108"
           },
           "value": {
            "$id": "3126",
            "kind": "string",
            "type": {
             "$ref": "3109"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "3127",
           "parameter": {
            "$ref": "3106"
           },
           "value": {
            "$id": "3128",
            "kind": "string",
            "type": {
             "$ref": "3107"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "3129",
           "parameter": {
            "$ref": "3104"
           },
           "value": {
            "$id": "3130",
            "kind": "string",
            "type": {
             "$ref": "3105"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "3131",
           "response": {
            "$ref": "3119"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "3132",
            "kind": "model",
            "type": {
             "$ref": "2091"
            },
            "value": {
             "$id": "3133",
             "name": {
              "$id": "3134",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "myAppType"
             },
             "type": {
              "$id": "3135",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/applicationTypes"
             },
             "id": {
              "$id": "3136",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applicationTypes/myAppType"
             },
             "properties": {
              "$id": "3137",
              "kind": "model",
              "type": {
               "$ref": "2093"
              },
              "value": {
               "$id": "3138",
               "provisioningState": {
                "$id": "3139",
                "kind": "string",
                "type": {
                 "$ref": "2095"
                },
                "value": "Succeeded"
               }
              }
             },
             "tags": {
              "$id": "3140",
              "kind": "dict",
              "type": {
               "$ref": "2101"
              },
              "value": {
               "$id": "3141",
               "a": {
                "$id": "3142",
                "kind": "string",
                "type": {
                 "$ref": "2103"
                },
                "value": "b"
               }
              }
             }
            }
           }
          }
         ]
        }
       ]
      },
      {
       "$id": "3143",
       "name": "delete",
       "resourceName": "ApplicationTypeResource",
       "doc": "Delete a Service Fabric managed application type name resource with the specified name.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "3144",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "3145",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "3146",
          "type": {
           "$id": "3147",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3148",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "3149",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3150",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "3151",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3152",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "3153",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3154",
         "name": "applicationTypeName",
         "nameInRequest": "applicationTypeName",
         "doc": "The name of the application type name resource.",
         "type": {
          "$id": "3155",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3156",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "3157",
          "kind": "constant",
          "valueType": {
           "$id": "3158",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "3159",
         "statusCodes": [
          202
         ],
         "headers": [
          {
           "$id": "3160",
           "name": "azureAsyncOperation",
           "nameInResponse": "Azure-AsyncOperation",
           "doc": "A link to the status monitor",
           "type": {
            "$id": "3161",
            "kind": "url",
            "name": "ResourceLocation",
            "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
            "baseType": {
             "$id": "3162",
             "kind": "url",
             "name": "url",
             "crossLanguageDefinitionId": "TypeSpec.url",
             "decorators": []
            },
            "decorators": []
           }
          },
          {
           "$id": "3163",
           "name": "location",
           "nameInResponse": "Location",
           "doc": "The Location header contains the URL where the status of the long running operation can be checked.",
           "type": {
            "$id": "3164",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           }
          }
         ],
         "isErrorResponse": false
        },
        {
         "$id": "3165",
         "statusCodes": [
          204
         ],
         "headers": [],
         "isErrorResponse": false
        }
       ],
       "httpMethod": "DELETE",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applicationTypes/{applicationTypeName}",
       "bufferResponse": true,
       "longRunning": {
        "$id": "3166",
        "finalStateVia": 1,
        "finalResponse": {
         "$id": "3167",
         "statusCodes": [
          204
         ]
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypes.delete",
       "decorators": [],
       "examples": [
        {
         "$id": "3168",
         "kind": "http",
         "name": "Delete an application type",
         "description": "Delete an application type",
         "filePath": "2024-11-01-preview/ApplicationTypeNameDeleteOperation_example.json",
         "parameters": [
          {
           "$id": "3169",
           "parameter": {
            "$ref": "3144"
           },
           "value": {
            "$id": "3170",
            "kind": "string",
            "type": {
             "$ref": "3145"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "3171",
           "parameter": {
            "$ref": "3154"
           },
           "value": {
            "$id": "3172",
            "kind": "string",
            "type": {
             "$ref": "3155"
            },
            "value": "myAppType"
           }
          },
          {
           "$id": "3173",
           "parameter": {
            "$ref": "3152"
           },
           "value": {
            "$id": "3174",
            "kind": "string",
            "type": {
             "$ref": "3153"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "3175",
           "parameter": {
            "$ref": "3150"
           },
           "value": {
            "$id": "3176",
            "kind": "string",
            "type": {
             "$ref": "3151"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "3177",
           "parameter": {
            "$ref": "3148"
           },
           "value": {
            "$id": "3178",
            "kind": "string",
            "type": {
             "$ref": "3149"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "3179",
           "response": {
            "$ref": "3159"
           },
           "statusCode": 202
          },
          {
           "$id": "3180",
           "response": {
            "$ref": "3165"
           },
           "statusCode": 204
          }
         ]
        }
       ]
      },
      {
       "$id": "3181",
       "name": "list",
       "resourceName": "ApplicationTypeResource",
       "doc": "Gets all application type name resources created or in the process of being created in the Service Fabric managed cluster resource.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "3182",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "3183",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "3184",
          "type": {
           "$id": "3185",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3186",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "3187",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3188",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "3189",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3190",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "3191",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3192",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "3193",
          "kind": "constant",
          "valueType": {
           "$id": "3194",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "3195",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "2117"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "GET",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applicationTypes",
       "bufferResponse": true,
       "paging": {
        "$id": "3196",
        "itemPropertySegments": [
         "value"
        ],
        "nextLink": {
         "$id": "3197",
         "responseSegments": [
          "nextLink"
         ],
         "responseLocation": "Body"
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypes.list",
       "decorators": [],
       "examples": [
        {
         "$id": "3198",
         "kind": "http",
         "name": "Get a list of application type name resources",
         "description": "Get a list of application type name resources",
         "filePath": "2024-11-01-preview/ApplicationTypeNameListOperation_example.json",
         "parameters": [
          {
           "$id": "3199",
           "parameter": {
            "$ref": "3182"
           },
           "value": {
            "$id": "3200",
            "kind": "string",
            "type": {
             "$ref": "3183"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "3201",
           "parameter": {
            "$ref": "3190"
           },
           "value": {
            "$id": "3202",
            "kind": "string",
            "type": {
             "$ref": "3191"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "3203",
           "parameter": {
            "$ref": "3188"
           },
           "value": {
            "$id": "3204",
            "kind": "string",
            "type": {
             "$ref": "3189"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "3205",
           "parameter": {
            "$ref": "3186"
           },
           "value": {
            "$id": "3206",
            "kind": "string",
            "type": {
             "$ref": "3187"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "3207",
           "response": {
            "$ref": "3195"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "3208",
            "kind": "model",
            "type": {
             "$ref": "2117"
            },
            "value": {
             "$id": "3209",
             "nextLink": {
              "$id": "3210",
              "kind": "string",
              "type": {
               "$ref": "2123"
              },
              "value": "http://examplelink.com"
             },
             "value": {
              "$id": "3211",
              "kind": "array",
              "type": {
               "$ref": "2119"
              },
              "value": [
               {
                "$id": "3212",
                "kind": "model",
                "type": {
                 "$ref": "2091"
                },
                "value": {
                 "$id": "3213",
                 "name": {
                  "$id": "3214",
                  "kind": "string",
                  "type": {
                   "$ref": "507"
                  },
                  "value": "myAppType"
                 },
                 "type": {
                  "$id": "3215",
                  "kind": "string",
                  "type": {
                   "$ref": "511"
                  },
                  "value": "Microsoft.ServiceFabric/managedClusters/applicationTypes"
                 },
                 "id": {
                  "$id": "3216",
                  "kind": "string",
                  "type": {
                   "$ref": "503"
                  },
                  "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applicationTypes/myAppType"
                 },
                 "properties": {
                  "$id": "3217",
                  "kind": "model",
                  "type": {
                   "$ref": "2093"
                  },
                  "value": {
                   "$id": "3218",
                   "provisioningState": {
                    "$id": "3219",
                    "kind": "string",
                    "type": {
                     "$ref": "2095"
                    },
                    "value": "Succeeded"
                   }
                  }
                 }
                }
               }
              ]
             }
            }
           }
          }
         ]
        }
       ]
      }
     ],
     "parameters": [
      {
       "$id": "3220",
       "name": "endpoint",
       "nameInRequest": "endpoint",
       "doc": "Service host",
       "type": {
        "$id": "3221",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "defaultValue": {
        "$id": "3222",
        "type": {
         "$id": "3223",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "value": "https://management.azure.com"
       }
      }
     ],
     "decorators": [
      {
       "$id": "3224",
       "name": "Azure.ResourceManager.@armResourceOperations",
       "arguments": {
        "$id": "3225"
       }
      }
     ],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypes",
     "apiVersions": [
      "2024-11-01-preview"
     ],
     "parent": {
      "$ref": "2353"
     }
    },
    {
     "$id": "3226",
     "kind": "client",
     "name": "ApplicationTypeVersions",
     "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
     "operations": [
      {
       "$id": "3227",
       "name": "get",
       "resourceName": "ApplicationTypeVersionResource",
       "doc": "Get a Service Fabric managed application type version resource created or in the process of being created in the Service Fabric managed application type name resource.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "3228",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "3229",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "3230",
          "type": {
           "$id": "3231",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3232",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "3233",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3234",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "3235",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3236",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "3237",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3238",
         "name": "applicationTypeName",
         "nameInRequest": "applicationTypeName",
         "doc": "The name of the application type name resource.",
         "type": {
          "$id": "3239",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3240",
         "name": "version",
         "nameInRequest": "version",
         "doc": "The application type version.",
         "type": {
          "$id": "3241",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3242",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "3243",
          "kind": "constant",
          "valueType": {
           "$id": "3244",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "3245",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "2051"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "GET",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applicationTypes/{applicationTypeName}/versions/{version}",
       "bufferResponse": true,
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeVersions.get",
       "decorators": [],
       "examples": [
        {
         "$id": "3246",
         "kind": "http",
         "name": "Get an application type version",
         "description": "Get an application type version",
         "filePath": "2024-11-01-preview/ApplicationTypeVersionGetOperation_example.json",
         "parameters": [
          {
           "$id": "3247",
           "parameter": {
            "$ref": "3228"
           },
           "value": {
            "$id": "3248",
            "kind": "string",
            "type": {
             "$ref": "3229"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "3249",
           "parameter": {
            "$ref": "3238"
           },
           "value": {
            "$id": "3250",
            "kind": "string",
            "type": {
             "$ref": "3239"
            },
            "value": "myAppType"
           }
          },
          {
           "$id": "3251",
           "parameter": {
            "$ref": "3236"
           },
           "value": {
            "$id": "3252",
            "kind": "string",
            "type": {
             "$ref": "3237"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "3253",
           "parameter": {
            "$ref": "3234"
           },
           "value": {
            "$id": "3254",
            "kind": "string",
            "type": {
             "$ref": "3235"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "3255",
           "parameter": {
            "$ref": "3232"
           },
           "value": {
            "$id": "3256",
            "kind": "string",
            "type": {
             "$ref": "3233"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          },
          {
           "$id": "3257",
           "parameter": {
            "$ref": "3240"
           },
           "value": {
            "$id": "3258",
            "kind": "string",
            "type": {
             "$ref": "3241"
            },
            "value": "1.0"
           }
          }
         ],
         "responses": [
          {
           "$id": "3259",
           "response": {
            "$ref": "3245"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "3260",
            "kind": "model",
            "type": {
             "$ref": "2051"
            },
            "value": {
             "$id": "3261",
             "name": {
              "$id": "3262",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "1.0"
             },
             "type": {
              "$id": "3263",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/applicationTypes/versions"
             },
             "id": {
              "$id": "3264",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applicationTypes/myAppType/versions/1.0"
             },
             "properties": {
              "$id": "3265",
              "kind": "model",
              "type": {
               "$ref": "2053"
              },
              "value": {
               "$id": "3266",
               "appPackageUrl": {
                "$id": "3267",
                "kind": "string",
                "type": {
                 "$ref": "2059"
                },
                "value": "http://fakelink.test.com/MyAppType"
               },
               "provisioningState": {
                "$id": "3268",
                "kind": "string",
                "type": {
                 "$ref": "2055"
                },
                "value": "Updating"
               }
              }
             }
            }
           }
          }
         ]
        }
       ]
      },
      {
       "$id": "3269",
       "name": "createOrUpdate",
       "resourceName": "ApplicationTypeVersionResource",
       "doc": "Create or update a Service Fabric managed application type version resource with the specified name.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "3270",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "3271",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "3272",
          "type": {
           "$id": "3273",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3274",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "3275",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3276",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "3277",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3278",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "3279",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3280",
         "name": "applicationTypeName",
         "nameInRequest": "applicationTypeName",
         "doc": "The name of the application type name resource.",
         "type": {
          "$id": "3281",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3282",
         "name": "version",
         "nameInRequest": "version",
         "doc": "The application type version.",
         "type": {
          "$id": "3283",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3284",
         "name": "contentType",
         "nameInRequest": "Content-Type",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$id": "3285",
          "kind": "constant",
          "valueType": {
           "$id": "3286",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": true,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3287",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "3288",
          "kind": "constant",
          "valueType": {
           "$id": "3289",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3290",
         "name": "parameters",
         "nameInRequest": "parameters",
         "doc": "The application type version resource.",
         "type": {
          "$ref": "2051"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "3291",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "2051"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        },
        {
         "$id": "3292",
         "statusCodes": [
          202
         ],
         "bodyType": {
          "$ref": "2051"
         },
         "headers": [
          {
           "$id": "3293",
           "name": "azureAsyncOperation",
           "nameInResponse": "Azure-AsyncOperation",
           "doc": "A link to the status monitor",
           "type": {
            "$id": "3294",
            "kind": "url",
            "name": "ResourceLocation",
            "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
            "baseType": {
             "$id": "3295",
             "kind": "url",
             "name": "url",
             "crossLanguageDefinitionId": "TypeSpec.url",
             "decorators": []
            },
            "decorators": []
           }
          },
          {
           "$id": "3296",
           "name": "location",
           "nameInResponse": "Location",
           "doc": "The Location header contains the URL where the status of the long running operation can be checked.",
           "type": {
            "$id": "3297",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           }
          }
         ],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "PUT",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applicationTypes/{applicationTypeName}/versions/{version}",
       "requestMediaTypes": [
        "application/json"
       ],
       "bufferResponse": true,
       "longRunning": {
        "$id": "3298",
        "finalStateVia": 1,
        "finalResponse": {
         "$id": "3299",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "2051"
         }
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeVersions.createOrUpdate",
       "decorators": [],
       "examples": [
        {
         "$id": "3300",
         "kind": "http",
         "name": "Put an application type version",
         "description": "Put an application type version",
         "filePath": "2024-11-01-preview/ApplicationTypeVersionPutOperation_example.json",
         "parameters": [
          {
           "$id": "3301",
           "parameter": {
            "$ref": "3270"
           },
           "value": {
            "$id": "3302",
            "kind": "string",
            "type": {
             "$ref": "3271"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "3303",
           "parameter": {
            "$ref": "3280"
           },
           "value": {
            "$id": "3304",
            "kind": "string",
            "type": {
             "$ref": "3281"
            },
            "value": "myAppType"
           }
          },
          {
           "$id": "3305",
           "parameter": {
            "$ref": "3278"
           },
           "value": {
            "$id": "3306",
            "kind": "string",
            "type": {
             "$ref": "3279"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "3307",
           "parameter": {
            "$ref": "3276"
           },
           "value": {
            "$id": "3308",
            "kind": "string",
            "type": {
             "$ref": "3277"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "3309",
           "parameter": {
            "$ref": "3274"
           },
           "value": {
            "$id": "3310",
            "kind": "string",
            "type": {
             "$ref": "3275"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          },
          {
           "$id": "3311",
           "parameter": {
            "$ref": "3282"
           },
           "value": {
            "$id": "3312",
            "kind": "string",
            "type": {
             "$ref": "3283"
            },
            "value": "1.0"
           }
          }
         ],
         "responses": [
          {
           "$id": "3313",
           "response": {
            "$ref": "3291"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "3314",
            "kind": "model",
            "type": {
             "$ref": "2051"
            },
            "value": {
             "$id": "3315",
             "name": {
              "$id": "3316",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "1.0"
             },
             "type": {
              "$id": "3317",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/applicationTypes/versions"
             },
             "id": {
              "$id": "3318",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applicationTypes/myAppType/versions/1.0"
             },
             "properties": {
              "$id": "3319",
              "kind": "model",
              "type": {
               "$ref": "2053"
              },
              "value": {
               "$id": "3320",
               "appPackageUrl": {
                "$id": "3321",
                "kind": "string",
                "type": {
                 "$ref": "2059"
                },
                "value": "http://fakelink.test.com/MyAppType"
               },
               "provisioningState": {
                "$id": "3322",
                "kind": "string",
                "type": {
                 "$ref": "2055"
                },
                "value": "Creating"
               }
              }
             }
            }
           }
          },
          {
           "$id": "3323",
           "response": {
            "$ref": "3292"
           },
           "statusCode": 202,
           "bodyValue": {
            "$id": "3324",
            "kind": "model",
            "type": {
             "$ref": "2051"
            },
            "value": {
             "$id": "3325",
             "name": {
              "$id": "3326",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "1.0"
             },
             "type": {
              "$id": "3327",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/applicationTypes/versions"
             },
             "id": {
              "$id": "3328",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applicationTypes/myAppType/versions/1.0"
             },
             "properties": {
              "$id": "3329",
              "kind": "model",
              "type": {
               "$ref": "2053"
              },
              "value": {
               "$id": "3330",
               "appPackageUrl": {
                "$id": "3331",
                "kind": "string",
                "type": {
                 "$ref": "2059"
                },
                "value": "http://fakelink.test.com/MyAppType"
               },
               "provisioningState": {
                "$id": "3332",
                "kind": "string",
                "type": {
                 "$ref": "2055"
                },
                "value": "Updating"
               }
              }
             }
            }
           }
          }
         ]
        }
       ]
      },
      {
       "$id": "3333",
       "name": "update",
       "resourceName": "ApplicationTypeVersionResource",
       "doc": "Updates the tags of an application type version resource of a given managed cluster.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "3334",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "3335",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "3336",
          "type": {
           "$id": "3337",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3338",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "3339",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3340",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "3341",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3342",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "3343",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3344",
         "name": "applicationTypeName",
         "nameInRequest": "applicationTypeName",
         "doc": "The name of the application type name resource.",
         "type": {
          "$id": "3345",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3346",
         "name": "version",
         "nameInRequest": "version",
         "doc": "The application type version.",
         "type": {
          "$id": "3347",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3348",
         "name": "contentType",
         "nameInRequest": "Content-Type",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$id": "3349",
          "kind": "constant",
          "valueType": {
           "$id": "3350",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": true,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3351",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "3352",
          "kind": "constant",
          "valueType": {
           "$id": "3353",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3354",
         "name": "parameters",
         "nameInRequest": "parameters",
         "doc": "The application type version resource updated tags.",
         "type": {
          "$ref": "2074"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "3355",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "2051"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "PATCH",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applicationTypes/{applicationTypeName}/versions/{version}",
       "requestMediaTypes": [
        "application/json"
       ],
       "bufferResponse": true,
       "generateProtocolMethod": true,
       "generateConvenienceMethod": false,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeVersions.update",
       "decorators": [],
       "examples": [
        {
         "$id": "3356",
         "kind": "http",
         "name": "Patch an application type version",
         "description": "Patch an application type version",
         "filePath": "2024-11-01-preview/ApplicationTypeVersionPatchOperation_example.json",
         "parameters": [
          {
           "$id": "3357",
           "parameter": {
            "$ref": "3334"
           },
           "value": {
            "$id": "3358",
            "kind": "string",
            "type": {
             "$ref": "3335"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "3359",
           "parameter": {
            "$ref": "3344"
           },
           "value": {
            "$id": "3360",
            "kind": "string",
            "type": {
             "$ref": "3345"
            },
            "value": "myAppType"
           }
          },
          {
           "$id": "3361",
           "parameter": {
            "$ref": "3342"
           },
           "value": {
            "$id": "3362",
            "kind": "string",
            "type": {
             "$ref": "3343"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "3363",
           "parameter": {
            "$ref": "3340"
           },
           "value": {
            "$id": "3364",
            "kind": "string",
            "type": {
             "$ref": "3341"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "3365",
           "parameter": {
            "$ref": "3338"
           },
           "value": {
            "$id": "3366",
            "kind": "string",
            "type": {
             "$ref": "3339"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          },
          {
           "$id": "3367",
           "parameter": {
            "$ref": "3346"
           },
           "value": {
            "$id": "3368",
            "kind": "string",
            "type": {
             "$ref": "3347"
            },
            "value": "1.0"
           }
          }
         ],
         "responses": [
          {
           "$id": "3369",
           "response": {
            "$ref": "3355"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "3370",
            "kind": "model",
            "type": {
             "$ref": "2051"
            },
            "value": {
             "$id": "3371",
             "name": {
              "$id": "3372",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "1.0"
             },
             "type": {
              "$id": "3373",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/applicationTypes/versions"
             },
             "id": {
              "$id": "3374",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applicationTypes/myAppType/versions/1.0"
             },
             "properties": {
              "$id": "3375",
              "kind": "model",
              "type": {
               "$ref": "2053"
              },
              "value": {
               "$id": "3376",
               "appPackageUrl": {
                "$id": "3377",
                "kind": "string",
                "type": {
                 "$ref": "2059"
                },
                "value": "http://fakelink.test.com/MyAppType"
               },
               "provisioningState": {
                "$id": "3378",
                "kind": "string",
                "type": {
                 "$ref": "2055"
                },
                "value": "Succeeded"
               }
              }
             },
             "tags": {
              "$id": "3379",
              "kind": "dict",
              "type": {
               "$ref": "2065"
              },
              "value": {
               "$id": "3380",
               "a": {
                "$id": "3381",
                "kind": "string",
                "type": {
                 "$ref": "2067"
                },
                "value": "b"
               }
              }
             }
            }
           }
          }
         ]
        }
       ]
      },
      {
       "$id": "3382",
       "name": "delete",
       "resourceName": "ApplicationTypeVersionResource",
       "doc": "Delete a Service Fabric managed application type version resource with the specified name.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "3383",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "3384",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "3385",
          "type": {
           "$id": "3386",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3387",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "3388",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3389",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "3390",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3391",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "3392",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3393",
         "name": "applicationTypeName",
         "nameInRequest": "applicationTypeName",
         "doc": "The name of the application type name resource.",
         "type": {
          "$id": "3394",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3395",
         "name": "version",
         "nameInRequest": "version",
         "doc": "The application type version.",
         "type": {
          "$id": "3396",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3397",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "3398",
          "kind": "constant",
          "valueType": {
           "$id": "3399",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "3400",
         "statusCodes": [
          202
         ],
         "headers": [
          {
           "$id": "3401",
           "name": "azureAsyncOperation",
           "nameInResponse": "Azure-AsyncOperation",
           "doc": "A link to the status monitor",
           "type": {
            "$id": "3402",
            "kind": "url",
            "name": "ResourceLocation",
            "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
            "baseType": {
             "$id": "3403",
             "kind": "url",
             "name": "url",
             "crossLanguageDefinitionId": "TypeSpec.url",
             "decorators": []
            },
            "decorators": []
           }
          },
          {
           "$id": "3404",
           "name": "location",
           "nameInResponse": "Location",
           "doc": "The Location header contains the URL where the status of the long running operation can be checked.",
           "type": {
            "$id": "3405",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           }
          }
         ],
         "isErrorResponse": false
        },
        {
         "$id": "3406",
         "statusCodes": [
          204
         ],
         "headers": [],
         "isErrorResponse": false
        }
       ],
       "httpMethod": "DELETE",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applicationTypes/{applicationTypeName}/versions/{version}",
       "bufferResponse": true,
       "longRunning": {
        "$id": "3407",
        "finalStateVia": 1,
        "finalResponse": {
         "$id": "3408",
         "statusCodes": [
          204
         ]
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeVersions.delete",
       "decorators": [],
       "examples": [
        {
         "$id": "3409",
         "kind": "http",
         "name": "Delete an application type version",
         "description": "Delete an application type version",
         "filePath": "2024-11-01-preview/ApplicationTypeVersionDeleteOperation_example.json",
         "parameters": [
          {
           "$id": "3410",
           "parameter": {
            "$ref": "3383"
           },
           "value": {
            "$id": "3411",
            "kind": "string",
            "type": {
             "$ref": "3384"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "3412",
           "parameter": {
            "$ref": "3393"
           },
           "value": {
            "$id": "3413",
            "kind": "string",
            "type": {
             "$ref": "3394"
            },
            "value": "myAppType"
           }
          },
          {
           "$id": "3414",
           "parameter": {
            "$ref": "3391"
           },
           "value": {
            "$id": "3415",
            "kind": "string",
            "type": {
             "$ref": "3392"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "3416",
           "parameter": {
            "$ref": "3389"
           },
           "value": {
            "$id": "3417",
            "kind": "string",
            "type": {
             "$ref": "3390"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "3418",
           "parameter": {
            "$ref": "3387"
           },
           "value": {
            "$id": "3419",
            "kind": "string",
            "type": {
             "$ref": "3388"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          },
          {
           "$id": "3420",
           "parameter": {
            "$ref": "3395"
           },
           "value": {
            "$id": "3421",
            "kind": "string",
            "type": {
             "$ref": "3396"
            },
            "value": "1.0"
           }
          }
         ],
         "responses": [
          {
           "$id": "3422",
           "response": {
            "$ref": "3400"
           },
           "statusCode": 202
          },
          {
           "$id": "3423",
           "response": {
            "$ref": "3406"
           },
           "statusCode": 204
          }
         ]
        }
       ]
      },
      {
       "$id": "3424",
       "name": "listByApplicationTypes",
       "resourceName": "ApplicationTypeVersionResource",
       "doc": "Gets all application type version resources created or in the process of being created in the Service Fabric managed application type name resource.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "3425",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "3426",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "3427",
          "type": {
           "$id": "3428",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3429",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "3430",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3431",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "3432",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3433",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "3434",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3435",
         "name": "applicationTypeName",
         "nameInRequest": "applicationTypeName",
         "doc": "The name of the application type name resource.",
         "type": {
          "$id": "3436",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3437",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "3438",
          "kind": "constant",
          "valueType": {
           "$id": "3439",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "3440",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "2081"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "GET",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applicationTypes/{applicationTypeName}/versions",
       "bufferResponse": true,
       "paging": {
        "$id": "3441",
        "itemPropertySegments": [
         "value"
        ],
        "nextLink": {
         "$id": "3442",
         "responseSegments": [
          "nextLink"
         ],
         "responseLocation": "Body"
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeVersions.listByApplicationTypes",
       "decorators": [],
       "examples": [
        {
         "$id": "3443",
         "kind": "http",
         "name": "Get a list of application type version resources",
         "description": "Get a list of application type version resources",
         "filePath": "2024-11-01-preview/ApplicationTypeVersionListOperation_example.json",
         "parameters": [
          {
           "$id": "3444",
           "parameter": {
            "$ref": "3425"
           },
           "value": {
            "$id": "3445",
            "kind": "string",
            "type": {
             "$ref": "3426"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "3446",
           "parameter": {
            "$ref": "3435"
           },
           "value": {
            "$id": "3447",
            "kind": "string",
            "type": {
             "$ref": "3436"
            },
            "value": "myAppType"
           }
          },
          {
           "$id": "3448",
           "parameter": {
            "$ref": "3433"
           },
           "value": {
            "$id": "3449",
            "kind": "string",
            "type": {
             "$ref": "3434"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "3450",
           "parameter": {
            "$ref": "3431"
           },
           "value": {
            "$id": "3451",
            "kind": "string",
            "type": {
             "$ref": "3432"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "3452",
           "parameter": {
            "$ref": "3429"
           },
           "value": {
            "$id": "3453",
            "kind": "string",
            "type": {
             "$ref": "3430"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "3454",
           "response": {
            "$ref": "3440"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "3455",
            "kind": "model",
            "type": {
             "$ref": "2081"
            },
            "value": {
             "$id": "3456",
             "nextLink": {
              "$id": "3457",
              "kind": "string",
              "type": {
               "$ref": "2087"
              },
              "value": "http://examplelink.com"
             },
             "value": {
              "$id": "3458",
              "kind": "array",
              "type": {
               "$ref": "2083"
              },
              "value": [
               {
                "$id": "3459",
                "kind": "model",
                "type": {
                 "$ref": "2051"
                },
                "value": {
                 "$id": "3460",
                 "name": {
                  "$id": "3461",
                  "kind": "string",
                  "type": {
                   "$ref": "507"
                  },
                  "value": "1.0"
                 },
                 "type": {
                  "$id": "3462",
                  "kind": "string",
                  "type": {
                   "$ref": "511"
                  },
                  "value": "Microsoft.ServiceFabric/managedClusters/applicationTypes/versions"
                 },
                 "id": {
                  "$id": "3463",
                  "kind": "string",
                  "type": {
                   "$ref": "503"
                  },
                  "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applicationTypes/myAppType/versions/1.0"
                 },
                 "properties": {
                  "$id": "3464",
                  "kind": "model",
                  "type": {
                   "$ref": "2053"
                  },
                  "value": {
                   "$id": "3465",
                   "appPackageUrl": {
                    "$id": "3466",
                    "kind": "string",
                    "type": {
                     "$ref": "2059"
                    },
                    "value": "http://fakelink.test.com/MyAppType"
                   },
                   "provisioningState": {
                    "$id": "3467",
                    "kind": "string",
                    "type": {
                     "$ref": "2055"
                    },
                    "value": "Updating"
                   }
                  }
                 }
                }
               }
              ]
             }
            }
           }
          }
         ]
        }
       ]
      }
     ],
     "parameters": [
      {
       "$id": "3468",
       "name": "endpoint",
       "nameInRequest": "endpoint",
       "doc": "Service host",
       "type": {
        "$id": "3469",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "defaultValue": {
        "$id": "3470",
        "type": {
         "$id": "3471",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "value": "https://management.azure.com"
       }
      }
     ],
     "decorators": [
      {
       "$id": "3472",
       "name": "Azure.ResourceManager.@armResourceOperations",
       "arguments": {
        "$id": "3473"
       }
      }
     ],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ApplicationTypeVersions",
     "apiVersions": [
      "2024-11-01-preview"
     ],
     "parent": {
      "$ref": "2353"
     }
    },
    {
     "$id": "3474",
     "kind": "client",
     "name": "Services",
     "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
     "operations": [
      {
       "$id": "3475",
       "name": "get",
       "resourceName": "ServiceResource",
       "doc": "Get a Service Fabric service resource created or in the process of being created in the Service Fabric managed application resource.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "3476",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "3477",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "3478",
          "type": {
           "$id": "3479",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3480",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "3481",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3482",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "3483",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3484",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "3485",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3486",
         "name": "applicationName",
         "nameInRequest": "applicationName",
         "doc": "The name of the application resource.",
         "type": {
          "$id": "3487",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3488",
         "name": "serviceName",
         "nameInRequest": "serviceName",
         "doc": "The name of the service resource in the format of {applicationName}~{serviceName}.",
         "type": {
          "$id": "3489",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3490",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "3491",
          "kind": "constant",
          "valueType": {
           "$id": "3492",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "3493",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "1701"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "GET",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applications/{applicationName}/services/{serviceName}",
       "bufferResponse": true,
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Services.get",
       "decorators": [],
       "examples": [
        {
         "$id": "3494",
         "kind": "http",
         "name": "Get a service",
         "description": "Get a service",
         "filePath": "2024-11-01-preview/ServiceGetOperation_example.json",
         "parameters": [
          {
           "$id": "3495",
           "parameter": {
            "$ref": "3476"
           },
           "value": {
            "$id": "3496",
            "kind": "string",
            "type": {
             "$ref": "3477"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "3497",
           "parameter": {
            "$ref": "3486"
           },
           "value": {
            "$id": "3498",
            "kind": "string",
            "type": {
             "$ref": "3487"
            },
            "value": "myApp"
           }
          },
          {
           "$id": "3499",
           "parameter": {
            "$ref": "3484"
           },
           "value": {
            "$id": "3500",
            "kind": "string",
            "type": {
             "$ref": "3485"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "3501",
           "parameter": {
            "$ref": "3482"
           },
           "value": {
            "$id": "3502",
            "kind": "string",
            "type": {
             "$ref": "3483"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "3503",
           "parameter": {
            "$ref": "3488"
           },
           "value": {
            "$id": "3504",
            "kind": "string",
            "type": {
             "$ref": "3489"
            },
            "value": "myService"
           }
          },
          {
           "$id": "3505",
           "parameter": {
            "$ref": "3480"
           },
           "value": {
            "$id": "3506",
            "kind": "string",
            "type": {
             "$ref": "3481"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "3507",
           "response": {
            "$ref": "3493"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "3508",
            "kind": "model",
            "type": {
             "$ref": "1701"
            },
            "value": {
             "$id": "3509",
             "name": {
              "$id": "3510",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "myService"
             },
             "type": {
              "$id": "3511",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/applications/services"
             },
             "id": {
              "$id": "3512",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applications/myApp/services/myService"
             },
             "properties": {
              "$id": "3513",
              "kind": "model",
              "type": {
               "$ref": "2004"
              },
              "value": {
               "$id": "3514",
               "defaultMoveCost": {
                "$id": "3515",
                "kind": "string",
                "type": {
                 "$ref": "310"
                },
                "value": "Medium"
               },
               "instanceCount": {
                "$id": "3516",
                "kind": "number",
                "type": {
                 "$ref": "2006"
                },
                "value": 5
               },
               "partitionDescription": {
                "$id": "3517",
                "kind": "model",
                "type": {
                 "$ref": "1943"
                },
                "value": {
                 "$id": "3518",
                 "partitionScheme": {
                  "$id": "3519",
                  "kind": "string",
                  "type": {
                   "$ref": "1945"
                  },
                  "value": "Singleton"
                 }
                }
               },
               "placementConstraints": {
                "$id": "3520",
                "kind": "string",
                "type": {
                 "$ref": "1709"
                },
                "value": "NodeType==frontend"
               },
               "provisioningState": {
                "$id": "3521",
                "kind": "string",
                "type": {
                 "$ref": "1912"
                },
                "value": "Updating"
               },
               "serviceKind": {
                "$id": "3522",
                "kind": "string",
                "type": {
                 "$ref": "2018"
                },
                "value": "Stateless"
               },
               "serviceLoadMetrics": {
                "$id": "3523",
                "kind": "array",
                "type": {
                 "$ref": "1725"
                },
                "value": [
                 {
                  "$id": "3524",
                  "kind": "model",
                  "type": {
                   "$ref": "1726"
                  },
                  "value": {
                   "$id": "3525",
                   "name": {
                    "$id": "3526",
                    "kind": "string",
                    "type": {
                     "$ref": "1728"
                    },
                    "value": "metric1"
                   },
                   "weight": {
                    "$id": "3527",
                    "kind": "string",
                    "type": {
                     "$ref": "288"
                    },
                    "value": "Low"
                   }
                  }
                 }
                ]
               },
               "servicePackageActivationMode": {
                "$id": "3528",
                "kind": "string",
                "type": {
                 "$ref": "276"
                },
                "value": "SharedProcess"
               },
               "servicePlacementPolicies": {
                "$id": "3529",
                "kind": "array",
                "type": {
                 "$ref": "1749"
                },
                "value": []
               },
               "serviceTypeName": {
                "$id": "3530",
                "kind": "string",
                "type": {
                 "$ref": "1916"
                },
                "value": "myServiceType"
               }
              }
             }
            }
           }
          }
         ]
        }
       ]
      },
      {
       "$id": "3531",
       "name": "createOrUpdate",
       "resourceName": "ServiceResource",
       "doc": "Create or update a Service Fabric managed service resource with the specified name.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "3532",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "3533",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "3534",
          "type": {
           "$id": "3535",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3536",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "3537",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3538",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "3539",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3540",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "3541",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3542",
         "name": "applicationName",
         "nameInRequest": "applicationName",
         "doc": "The name of the application resource.",
         "type": {
          "$id": "3543",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3544",
         "name": "serviceName",
         "nameInRequest": "serviceName",
         "doc": "The name of the service resource in the format of {applicationName}~{serviceName}.",
         "type": {
          "$id": "3545",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3546",
         "name": "contentType",
         "nameInRequest": "Content-Type",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$id": "3547",
          "kind": "constant",
          "valueType": {
           "$id": "3548",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": true,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3549",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "3550",
          "kind": "constant",
          "valueType": {
           "$id": "3551",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3552",
         "name": "parameters",
         "nameInRequest": "parameters",
         "doc": "The service resource.",
         "type": {
          "$ref": "1701"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "3553",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "1701"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        },
        {
         "$id": "3554",
         "statusCodes": [
          202
         ],
         "bodyType": {
          "$ref": "1701"
         },
         "headers": [
          {
           "$id": "3555",
           "name": "azureAsyncOperation",
           "nameInResponse": "Azure-AsyncOperation",
           "doc": "A link to the status monitor",
           "type": {
            "$id": "3556",
            "kind": "url",
            "name": "ResourceLocation",
            "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
            "baseType": {
             "$id": "3557",
             "kind": "url",
             "name": "url",
             "crossLanguageDefinitionId": "TypeSpec.url",
             "decorators": []
            },
            "decorators": []
           }
          },
          {
           "$id": "3558",
           "name": "location",
           "nameInResponse": "Location",
           "doc": "The Location header contains the URL where the status of the long running operation can be checked.",
           "type": {
            "$id": "3559",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           }
          }
         ],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "PUT",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applications/{applicationName}/services/{serviceName}",
       "requestMediaTypes": [
        "application/json"
       ],
       "bufferResponse": true,
       "longRunning": {
        "$id": "3560",
        "finalStateVia": 1,
        "finalResponse": {
         "$id": "3561",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "1701"
         }
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Services.createOrUpdate",
       "decorators": [],
       "examples": [
        {
         "$id": "3562",
         "kind": "http",
         "name": "Put a service with maximum parameters",
         "description": "Put a service with maximum parameters",
         "filePath": "2024-11-01-preview/ServicePutOperation_example_max.json",
         "parameters": [
          {
           "$id": "3563",
           "parameter": {
            "$ref": "3532"
           },
           "value": {
            "$id": "3564",
            "kind": "string",
            "type": {
             "$ref": "3533"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "3565",
           "parameter": {
            "$ref": "3542"
           },
           "value": {
            "$id": "3566",
            "kind": "string",
            "type": {
             "$ref": "3543"
            },
            "value": "myApp"
           }
          },
          {
           "$id": "3567",
           "parameter": {
            "$ref": "3540"
           },
           "value": {
            "$id": "3568",
            "kind": "string",
            "type": {
             "$ref": "3541"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "3569",
           "parameter": {
            "$ref": "3538"
           },
           "value": {
            "$id": "3570",
            "kind": "string",
            "type": {
             "$ref": "3539"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "3571",
           "parameter": {
            "$ref": "3544"
           },
           "value": {
            "$id": "3572",
            "kind": "string",
            "type": {
             "$ref": "3545"
            },
            "value": "myService"
           }
          },
          {
           "$id": "3573",
           "parameter": {
            "$ref": "3536"
           },
           "value": {
            "$id": "3574",
            "kind": "string",
            "type": {
             "$ref": "3537"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "3575",
           "response": {
            "$ref": "3553"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "3576",
            "kind": "model",
            "type": {
             "$ref": "1701"
            },
            "value": {
             "$id": "3577",
             "name": {
              "$id": "3578",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "myService"
             },
             "type": {
              "$id": "3579",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/applications/services"
             },
             "id": {
              "$id": "3580",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applications/myApp/services/myService"
             },
             "properties": {
              "$id": "3581",
              "kind": "model",
              "type": {
               "$ref": "2004"
              },
              "value": {
               "$id": "3582",
               "correlationScheme": {
                "$id": "3583",
                "kind": "array",
                "type": {
                 "$ref": "1713"
                },
                "value": [
                 {
                  "$id": "3584",
                  "kind": "model",
                  "type": {
                   "$ref": "1714"
                  },
                  "value": {
                   "$id": "3585",
                   "scheme": {
                    "$id": "3586",
                    "kind": "string",
                    "type": {
                     "$ref": "282"
                    },
                    "value": "AlignedAffinity"
                   },
                   "serviceName": {
                    "$id": "3587",
                    "kind": "string",
                    "type": {
                     "$ref": "1719"
                    },
                    "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applications/myApp/services/myService1"
                   }
                  }
                 }
                ]
               },
               "defaultMoveCost": {
                "$id": "3588",
                "kind": "string",
                "type": {
                 "$ref": "310"
                },
                "value": "Medium"
               },
               "instanceCount": {
                "$id": "3589",
                "kind": "number",
                "type": {
                 "$ref": "2006"
                },
                "value": 5
               },
               "minInstanceCount": {
                "$id": "3590",
                "kind": "number",
                "type": {
                 "$ref": "2010"
                },
                "value": 3
               },
               "minInstancePercentage": {
                "$id": "3591",
                "kind": "number",
                "type": {
                 "$ref": "2014"
                },
                "value": 30
               },
               "partitionDescription": {
                "$id": "3592",
                "kind": "model",
                "type": {
                 "$ref": "1943"
                },
                "value": {
                 "$id": "3593",
                 "partitionScheme": {
                  "$id": "3594",
                  "kind": "string",
                  "type": {
                   "$ref": "1945"
                  },
                  "value": "Singleton"
                 }
                }
               },
               "placementConstraints": {
                "$id": "3595",
                "kind": "string",
                "type": {
                 "$ref": "1709"
                },
                "value": "NodeType==frontend"
               },
               "provisioningState": {
                "$id": "3596",
                "kind": "string",
                "type": {
                 "$ref": "1912"
                },
                "value": "Creating"
               },
               "scalingPolicies": {
                "$id": "3597",
                "kind": "array",
                "type": {
                 "$ref": "1807"
                },
                "value": [
                 {
                  "$id": "3598",
                  "kind": "model",
                  "type": {
                   "$ref": "1808"
                  },
                  "value": {
                   "$id": "3599",
                   "scalingMechanism": {
                    "$id": "3600",
                    "kind": "model",
                    "type": {
                     "$ref": "1833"
                    },
                    "value": {
                     "$id": "3601",
                     "kind": {
                      "$id": "3602",
                      "kind": "string",
                      "type": {
                       "$ref": "1847"
                      },
                      "value": "ScalePartitionInstanceCount"
                     },
                     "maxInstanceCount": {
                      "$id": "3603",
                      "kind": "number",
                      "type": {
                       "$ref": "1839"
                      },
                      "value": 9
                     },
                     "minInstanceCount": {
                      "$id": "3604",
                      "kind": "number",
                      "type": {
                       "$ref": "1835"
                      },
                      "value": 3
                     },
                     "scaleIncrement": {
                      "$id": "3605",
                      "kind": "number",
                      "type": {
                       "$ref": "1843"
                      },
                      "value": 2
                     }
                    }
                   },
                   "scalingTrigger": {
                    "$id": "3606",
                    "kind": "model",
                    "type": {
                     "$ref": "1859"
                    },
                    "value": {
                     "$id": "3607",
                     "kind": {
                      "$id": "3608",
                      "kind": "string",
                      "type": {
                       "$ref": "1877"
                      },
                      "value": "AveragePartitionLoadTrigger"
                     },
                     "lowerLoadThreshold": {
                      "$id": "3609",
                      "kind": "number",
                      "type": {
                       "$ref": "1865"
                      },
                      "value": 2
                     },
                     "metricName": {
                      "$id": "3610",
                      "kind": "string",
                      "type": {
                       "$ref": "1861"
                      },
                      "value": "metricName"
                     },
                     "scaleInterval": {
                      "$id": "3611",
                      "kind": "string",
                      "type": {
                       "$ref": "1873"
                      },
                      "value": "00:01:00"
                     },
                     "upperLoadThreshold": {
                      "$id": "3612",
                      "kind": "number",
                      "type": {
                       "$ref": "1869"
                      },
                      "value": 8
                     }
                    }
                   }
                  }
                 }
                ]
               },
               "serviceDnsName": {
                "$id": "3613",
                "kind": "string",
                "type": {
                 "$ref": "1966"
                },
                "value": "myservicednsname.myApp"
               },
               "serviceKind": {
                "$id": "3614",
                "kind": "string",
                "type": {
                 "$ref": "2018"
                },
                "value": "Stateless"
               },
               "serviceLoadMetrics": {
                "$id": "3615",
                "kind": "array",
                "type": {
                 "$ref": "1725"
                },
                "value": [
                 {
                  "$id": "3616",
                  "kind": "model",
                  "type": {
                   "$ref": "1726"
                  },
                  "value": {
                   "$id": "3617",
                   "name": {
                    "$id": "3618",
                    "kind": "string",
                    "type": {
                     "$ref": "1728"
                    },
                    "value": "metric1"
                   },
                   "defaultLoad": {
                    "$id": "3619",
                    "kind": "number",
                    "type": {
                     "$ref": "1743"
                    },
                    "value": 3
                   },
                   "weight": {
                    "$id": "3620",
                    "kind": "string",
                    "type": {
                     "$ref": "288"
                    },
                    "value": "Low"
                   }
                  }
                 }
                ]
               },
               "servicePackageActivationMode": {
                "$id": "3621",
                "kind": "string",
                "type": {
                 "$ref": "276"
                },
                "value": "SharedProcess"
               },
               "servicePlacementPolicies": {
                "$id": "3622",
                "kind": "array",
                "type": {
                 "$ref": "1749"
                },
                "value": [
                 {
                  "$id": "3623",
                  "kind": "model",
                  "type": {
                   "$ref": "1795"
                  },
                  "value": {
                   "$id": "3624",
                   "type": {
                    "$id": "3625",
                    "kind": "string",
                    "type": {
                     "$ref": "1797"
                    },
                    "value": "NonPartiallyPlaceService"
                   }
                  }
                 }
                ]
               },
               "serviceTypeName": {
                "$id": "3626",
                "kind": "string",
                "type": {
                 "$ref": "1916"
                },
                "value": "myServiceType"
               }
              }
             },
             "tags": {
              "$id": "3627",
              "kind": "dict",
              "type": {
               "$ref": "2025"
              },
              "value": {
               "$id": "3628",
               "a": {
                "$id": "3629",
                "kind": "string",
                "type": {
                 "$ref": "2027"
                },
                "value": "b"
               }
              }
             }
            }
           }
          },
          {
           "$id": "3630",
           "response": {
            "$ref": "3554"
           },
           "statusCode": 202,
           "bodyValue": {
            "$id": "3631",
            "kind": "model",
            "type": {
             "$ref": "1701"
            },
            "value": {
             "$id": "3632",
             "name": {
              "$id": "3633",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "myService"
             },
             "type": {
              "$id": "3634",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/applications/services"
             },
             "id": {
              "$id": "3635",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applications/myApp/services/myService"
             },
             "properties": {
              "$id": "3636",
              "kind": "model",
              "type": {
               "$ref": "2004"
              },
              "value": {
               "$id": "3637",
               "correlationScheme": {
                "$id": "3638",
                "kind": "array",
                "type": {
                 "$ref": "1713"
                },
                "value": [
                 {
                  "$id": "3639",
                  "kind": "model",
                  "type": {
                   "$ref": "1714"
                  },
                  "value": {
                   "$id": "3640",
                   "scheme": {
                    "$id": "3641",
                    "kind": "string",
                    "type": {
                     "$ref": "282"
                    },
                    "value": "AlignedAffinity"
                   },
                   "serviceName": {
                    "$id": "3642",
                    "kind": "string",
                    "type": {
                     "$ref": "1719"
                    },
                    "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applications/myApp/services/myService1"
                   }
                  }
                 }
                ]
               },
               "defaultMoveCost": {
                "$id": "3643",
                "kind": "string",
                "type": {
                 "$ref": "310"
                },
                "value": "Medium"
               },
               "instanceCount": {
                "$id": "3644",
                "kind": "number",
                "type": {
                 "$ref": "2006"
                },
                "value": 5
               },
               "minInstanceCount": {
                "$id": "3645",
                "kind": "number",
                "type": {
                 "$ref": "2010"
                },
                "value": 3
               },
               "minInstancePercentage": {
                "$id": "3646",
                "kind": "number",
                "type": {
                 "$ref": "2014"
                },
                "value": 30
               },
               "partitionDescription": {
                "$id": "3647",
                "kind": "model",
                "type": {
                 "$ref": "1943"
                },
                "value": {
                 "$id": "3648",
                 "partitionScheme": {
                  "$id": "3649",
                  "kind": "string",
                  "type": {
                   "$ref": "1945"
                  },
                  "value": "Singleton"
                 }
                }
               },
               "placementConstraints": {
                "$id": "3650",
                "kind": "string",
                "type": {
                 "$ref": "1709"
                },
                "value": "NodeType==frontend"
               },
               "provisioningState": {
                "$id": "3651",
                "kind": "string",
                "type": {
                 "$ref": "1912"
                },
                "value": "Updating"
               },
               "scalingPolicies": {
                "$id": "3652",
                "kind": "array",
                "type": {
                 "$ref": "1807"
                },
                "value": [
                 {
                  "$id": "3653",
                  "kind": "model",
                  "type": {
                   "$ref": "1808"
                  },
                  "value": {
                   "$id": "3654",
                   "scalingMechanism": {
                    "$id": "3655",
                    "kind": "model",
                    "type": {
                     "$ref": "1833"
                    },
                    "value": {
                     "$id": "3656",
                     "kind": {
                      "$id": "3657",
                      "kind": "string",
                      "type": {
                       "$ref": "1847"
                      },
                      "value": "ScalePartitionInstanceCount"
                     },
                     "maxInstanceCount": {
                      "$id": "3658",
                      "kind": "number",
                      "type": {
                       "$ref": "1839"
                      },
                      "value": 9
                     },
                     "minInstanceCount": {
                      "$id": "3659",
                      "kind": "number",
                      "type": {
                       "$ref": "1835"
                      },
                      "value": 3
                     },
                     "scaleIncrement": {
                      "$id": "3660",
                      "kind": "number",
                      "type": {
                       "$ref": "1843"
                      },
                      "value": 2
                     }
                    }
                   },
                   "scalingTrigger": {
                    "$id": "3661",
                    "kind": "model",
                    "type": {
                     "$ref": "1859"
                    },
                    "value": {
                     "$id": "3662",
                     "kind": {
                      "$id": "3663",
                      "kind": "string",
                      "type": {
                       "$ref": "1877"
                      },
                      "value": "AveragePartitionLoadTrigger"
                     },
                     "lowerLoadThreshold": {
                      "$id": "3664",
                      "kind": "number",
                      "type": {
                       "$ref": "1865"
                      },
                      "value": 2
                     },
                     "metricName": {
                      "$id": "3665",
                      "kind": "string",
                      "type": {
                       "$ref": "1861"
                      },
                      "value": "metricName"
                     },
                     "scaleInterval": {
                      "$id": "3666",
                      "kind": "string",
                      "type": {
                       "$ref": "1873"
                      },
                      "value": "00:01:00"
                     },
                     "upperLoadThreshold": {
                      "$id": "3667",
                      "kind": "number",
                      "type": {
                       "$ref": "1869"
                      },
                      "value": 8
                     }
                    }
                   }
                  }
                 }
                ]
               },
               "serviceDnsName": {
                "$id": "3668",
                "kind": "string",
                "type": {
                 "$ref": "1966"
                },
                "value": "myservicednsname.myApp"
               },
               "serviceKind": {
                "$id": "3669",
                "kind": "string",
                "type": {
                 "$ref": "2018"
                },
                "value": "Stateless"
               },
               "serviceLoadMetrics": {
                "$id": "3670",
                "kind": "array",
                "type": {
                 "$ref": "1725"
                },
                "value": [
                 {
                  "$id": "3671",
                  "kind": "model",
                  "type": {
                   "$ref": "1726"
                  },
                  "value": {
                   "$id": "3672",
                   "name": {
                    "$id": "3673",
                    "kind": "string",
                    "type": {
                     "$ref": "1728"
                    },
                    "value": "metric1"
                   },
                   "defaultLoad": {
                    "$id": "3674",
                    "kind": "number",
                    "type": {
                     "$ref": "1743"
                    },
                    "value": 3
                   },
                   "weight": {
                    "$id": "3675",
                    "kind": "string",
                    "type": {
                     "$ref": "288"
                    },
                    "value": "Low"
                   }
                  }
                 }
                ]
               },
               "servicePackageActivationMode": {
                "$id": "3676",
                "kind": "string",
                "type": {
                 "$ref": "276"
                },
                "value": "SharedProcess"
               },
               "servicePlacementPolicies": {
                "$id": "3677",
                "kind": "array",
                "type": {
                 "$ref": "1749"
                },
                "value": [
                 {
                  "$id": "3678",
                  "kind": "model",
                  "type": {
                   "$ref": "1795"
                  },
                  "value": {
                   "$id": "3679",
                   "type": {
                    "$id": "3680",
                    "kind": "string",
                    "type": {
                     "$ref": "1797"
                    },
                    "value": "NonPartiallyPlaceService"
                   }
                  }
                 }
                ]
               },
               "serviceTypeName": {
                "$id": "3681",
                "kind": "string",
                "type": {
                 "$ref": "1916"
                },
                "value": "myServiceType"
               }
              }
             },
             "tags": {
              "$id": "3682",
              "kind": "dict",
              "type": {
               "$ref": "2025"
              },
              "value": {
               "$id": "3683",
               "a": {
                "$id": "3684",
                "kind": "string",
                "type": {
                 "$ref": "2027"
                },
                "value": "b"
               }
              }
             }
            }
           }
          }
         ]
        },
        {
         "$id": "3685",
         "kind": "http",
         "name": "Put a service with minimum parameters",
         "description": "Put a service with minimum parameters",
         "filePath": "2024-11-01-preview/ServicePutOperation_example_min.json",
         "parameters": [
          {
           "$id": "3686",
           "parameter": {
            "$ref": "3532"
           },
           "value": {
            "$id": "3687",
            "kind": "string",
            "type": {
             "$ref": "3533"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "3688",
           "parameter": {
            "$ref": "3542"
           },
           "value": {
            "$id": "3689",
            "kind": "string",
            "type": {
             "$ref": "3543"
            },
            "value": "myApp"
           }
          },
          {
           "$id": "3690",
           "parameter": {
            "$ref": "3540"
           },
           "value": {
            "$id": "3691",
            "kind": "string",
            "type": {
             "$ref": "3541"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "3692",
           "parameter": {
            "$ref": "3538"
           },
           "value": {
            "$id": "3693",
            "kind": "string",
            "type": {
             "$ref": "3539"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "3694",
           "parameter": {
            "$ref": "3544"
           },
           "value": {
            "$id": "3695",
            "kind": "string",
            "type": {
             "$ref": "3545"
            },
            "value": "myService"
           }
          },
          {
           "$id": "3696",
           "parameter": {
            "$ref": "3536"
           },
           "value": {
            "$id": "3697",
            "kind": "string",
            "type": {
             "$ref": "3537"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "3698",
           "response": {
            "$ref": "3553"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "3699",
            "kind": "model",
            "type": {
             "$ref": "1701"
            },
            "value": {
             "$id": "3700",
             "name": {
              "$id": "3701",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "myService"
             },
             "type": {
              "$id": "3702",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/applications/services"
             },
             "id": {
              "$id": "3703",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applications/myApp/services/myService"
             },
             "properties": {
              "$id": "3704",
              "kind": "model",
              "type": {
               "$ref": "2004"
              },
              "value": {
               "$id": "3705",
               "instanceCount": {
                "$id": "3706",
                "kind": "number",
                "type": {
                 "$ref": "2006"
                },
                "value": 1
               },
               "partitionDescription": {
                "$id": "3707",
                "kind": "model",
                "type": {
                 "$ref": "1943"
                },
                "value": {
                 "$id": "3708",
                 "partitionScheme": {
                  "$id": "3709",
                  "kind": "string",
                  "type": {
                   "$ref": "1945"
                  },
                  "value": "Singleton"
                 }
                }
               },
               "provisioningState": {
                "$id": "3710",
                "kind": "string",
                "type": {
                 "$ref": "1912"
                },
                "value": "Creating"
               },
               "serviceKind": {
                "$id": "3711",
                "kind": "string",
                "type": {
                 "$ref": "2018"
                },
                "value": "Stateless"
               },
               "serviceTypeName": {
                "$id": "3712",
                "kind": "string",
                "type": {
                 "$ref": "1916"
                },
                "value": "myServiceType"
               }
              }
             }
            }
           }
          },
          {
           "$id": "3713",
           "response": {
            "$ref": "3554"
           },
           "statusCode": 202,
           "bodyValue": {
            "$id": "3714",
            "kind": "model",
            "type": {
             "$ref": "1701"
            },
            "value": {
             "$id": "3715",
             "name": {
              "$id": "3716",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "myService"
             },
             "type": {
              "$id": "3717",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/applications/services"
             },
             "id": {
              "$id": "3718",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applications/myApp/services/myService"
             },
             "properties": {
              "$id": "3719",
              "kind": "model",
              "type": {
               "$ref": "2004"
              },
              "value": {
               "$id": "3720",
               "instanceCount": {
                "$id": "3721",
                "kind": "number",
                "type": {
                 "$ref": "2006"
                },
                "value": 1
               },
               "partitionDescription": {
                "$id": "3722",
                "kind": "model",
                "type": {
                 "$ref": "1943"
                },
                "value": {
                 "$id": "3723",
                 "partitionScheme": {
                  "$id": "3724",
                  "kind": "string",
                  "type": {
                   "$ref": "1945"
                  },
                  "value": "Singleton"
                 }
                }
               },
               "provisioningState": {
                "$id": "3725",
                "kind": "string",
                "type": {
                 "$ref": "1912"
                },
                "value": "Updating"
               },
               "serviceKind": {
                "$id": "3726",
                "kind": "string",
                "type": {
                 "$ref": "2018"
                },
                "value": "Stateless"
               },
               "serviceTypeName": {
                "$id": "3727",
                "kind": "string",
                "type": {
                 "$ref": "1916"
                },
                "value": "myServiceType"
               }
              }
             }
            }
           }
          }
         ]
        }
       ]
      },
      {
       "$id": "3728",
       "name": "update",
       "resourceName": "ServiceResource",
       "doc": "Updates the tags of a service resource of a given managed cluster.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "3729",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "3730",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "3731",
          "type": {
           "$id": "3732",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3733",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "3734",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3735",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "3736",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3737",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "3738",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3739",
         "name": "applicationName",
         "nameInRequest": "applicationName",
         "doc": "The name of the application resource.",
         "type": {
          "$id": "3740",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3741",
         "name": "serviceName",
         "nameInRequest": "serviceName",
         "doc": "The name of the service resource in the format of {applicationName}~{serviceName}.",
         "type": {
          "$id": "3742",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3743",
         "name": "contentType",
         "nameInRequest": "Content-Type",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$id": "3744",
          "kind": "constant",
          "valueType": {
           "$id": "3745",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": true,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3746",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "3747",
          "kind": "constant",
          "valueType": {
           "$id": "3748",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3749",
         "name": "parameters",
         "nameInRequest": "parameters",
         "doc": "The service resource updated tags.",
         "type": {
          "$ref": "2034"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "3750",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "1701"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "PATCH",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applications/{applicationName}/services/{serviceName}",
       "requestMediaTypes": [
        "application/json"
       ],
       "bufferResponse": true,
       "generateProtocolMethod": true,
       "generateConvenienceMethod": false,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Services.update",
       "decorators": [],
       "examples": [
        {
         "$id": "3751",
         "kind": "http",
         "name": "Patch a service",
         "description": "Patch a service",
         "filePath": "2024-11-01-preview/ServicePatchOperation_example.json",
         "parameters": [
          {
           "$id": "3752",
           "parameter": {
            "$ref": "3729"
           },
           "value": {
            "$id": "3753",
            "kind": "string",
            "type": {
             "$ref": "3730"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "3754",
           "parameter": {
            "$ref": "3739"
           },
           "value": {
            "$id": "3755",
            "kind": "string",
            "type": {
             "$ref": "3740"
            },
            "value": "myApp"
           }
          },
          {
           "$id": "3756",
           "parameter": {
            "$ref": "3737"
           },
           "value": {
            "$id": "3757",
            "kind": "string",
            "type": {
             "$ref": "3738"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "3758",
           "parameter": {
            "$ref": "3735"
           },
           "value": {
            "$id": "3759",
            "kind": "string",
            "type": {
             "$ref": "3736"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "3760",
           "parameter": {
            "$ref": "3741"
           },
           "value": {
            "$id": "3761",
            "kind": "string",
            "type": {
             "$ref": "3742"
            },
            "value": "myService"
           }
          },
          {
           "$id": "3762",
           "parameter": {
            "$ref": "3733"
           },
           "value": {
            "$id": "3763",
            "kind": "string",
            "type": {
             "$ref": "3734"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "3764",
           "response": {
            "$ref": "3750"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "3765",
            "kind": "model",
            "type": {
             "$ref": "1701"
            },
            "value": {
             "$id": "3766",
             "name": {
              "$id": "3767",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "myService"
             },
             "type": {
              "$id": "3768",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/applications/services"
             },
             "id": {
              "$id": "3769",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applications/myApp/services/myService"
             },
             "properties": {
              "$id": "3770",
              "kind": "model",
              "type": {
               "$ref": "2004"
              },
              "value": {
               "$id": "3771",
               "correlationScheme": {
                "$id": "3772",
                "kind": "array",
                "type": {
                 "$ref": "1713"
                },
                "value": [
                 {
                  "$id": "3773",
                  "kind": "model",
                  "type": {
                   "$ref": "1714"
                  },
                  "value": {
                   "$id": "3774",
                   "scheme": {
                    "$id": "3775",
                    "kind": "string",
                    "type": {
                     "$ref": "282"
                    },
                    "value": "AlignedAffinity"
                   },
                   "serviceName": {
                    "$id": "3776",
                    "kind": "string",
                    "type": {
                     "$ref": "1719"
                    },
                    "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applications/myApp/services/myService1"
                   }
                  }
                 }
                ]
               },
               "defaultMoveCost": {
                "$id": "3777",
                "kind": "string",
                "type": {
                 "$ref": "310"
                },
                "value": "Medium"
               },
               "instanceCount": {
                "$id": "3778",
                "kind": "number",
                "type": {
                 "$ref": "2006"
                },
                "value": 5
               },
               "minInstanceCount": {
                "$id": "3779",
                "kind": "number",
                "type": {
                 "$ref": "2010"
                },
                "value": 3
               },
               "minInstancePercentage": {
                "$id": "3780",
                "kind": "number",
                "type": {
                 "$ref": "2014"
                },
                "value": 30
               },
               "partitionDescription": {
                "$id": "3781",
                "kind": "model",
                "type": {
                 "$ref": "1943"
                },
                "value": {
                 "$id": "3782",
                 "partitionScheme": {
                  "$id": "3783",
                  "kind": "string",
                  "type": {
                   "$ref": "1945"
                  },
                  "value": "Singleton"
                 }
                }
               },
               "placementConstraints": {
                "$id": "3784",
                "kind": "string",
                "type": {
                 "$ref": "1709"
                },
                "value": "NodeType==frontend"
               },
               "provisioningState": {
                "$id": "3785",
                "kind": "string",
                "type": {
                 "$ref": "1912"
                },
                "value": "Succeeded"
               },
               "scalingPolicies": {
                "$id": "3786",
                "kind": "array",
                "type": {
                 "$ref": "1807"
                },
                "value": [
                 {
                  "$id": "3787",
                  "kind": "model",
                  "type": {
                   "$ref": "1808"
                  },
                  "value": {
                   "$id": "3788",
                   "scalingMechanism": {
                    "$id": "3789",
                    "kind": "model",
                    "type": {
                     "$ref": "1833"
                    },
                    "value": {
                     "$id": "3790",
                     "kind": {
                      "$id": "3791",
                      "kind": "string",
                      "type": {
                       "$ref": "1847"
                      },
                      "value": "ScalePartitionInstanceCount"
                     },
                     "maxInstanceCount": {
                      "$id": "3792",
                      "kind": "number",
                      "type": {
                       "$ref": "1839"
                      },
                      "value": 9
                     },
                     "minInstanceCount": {
                      "$id": "3793",
                      "kind": "number",
                      "type": {
                       "$ref": "1835"
                      },
                      "value": 3
                     },
                     "scaleIncrement": {
                      "$id": "3794",
                      "kind": "number",
                      "type": {
                       "$ref": "1843"
                      },
                      "value": 2
                     }
                    }
                   },
                   "scalingTrigger": {
                    "$id": "3795",
                    "kind": "model",
                    "type": {
                     "$ref": "1859"
                    },
                    "value": {
                     "$id": "3796",
                     "kind": {
                      "$id": "3797",
                      "kind": "string",
                      "type": {
                       "$ref": "1877"
                      },
                      "value": "AveragePartitionLoadTrigger"
                     },
                     "lowerLoadThreshold": {
                      "$id": "3798",
                      "kind": "number",
                      "type": {
                       "$ref": "1865"
                      },
                      "value": 2
                     },
                     "metricName": {
                      "$id": "3799",
                      "kind": "string",
                      "type": {
                       "$ref": "1861"
                      },
                      "value": "metricName"
                     },
                     "scaleInterval": {
                      "$id": "3800",
                      "kind": "string",
                      "type": {
                       "$ref": "1873"
                      },
                      "value": "00:01:00"
                     },
                     "upperLoadThreshold": {
                      "$id": "3801",
                      "kind": "number",
                      "type": {
                       "$ref": "1869"
                      },
                      "value": 8
                     }
                    }
                   }
                  }
                 }
                ]
               },
               "serviceKind": {
                "$id": "3802",
                "kind": "string",
                "type": {
                 "$ref": "2018"
                },
                "value": "Stateless"
               },
               "serviceLoadMetrics": {
                "$id": "3803",
                "kind": "array",
                "type": {
                 "$ref": "1725"
                },
                "value": [
                 {
                  "$id": "3804",
                  "kind": "model",
                  "type": {
                   "$ref": "1726"
                  },
                  "value": {
                   "$id": "3805",
                   "name": {
                    "$id": "3806",
                    "kind": "string",
                    "type": {
                     "$ref": "1728"
                    },
                    "value": "metric1"
                   },
                   "defaultLoad": {
                    "$id": "3807",
                    "kind": "number",
                    "type": {
                     "$ref": "1743"
                    },
                    "value": 3
                   },
                   "weight": {
                    "$id": "3808",
                    "kind": "string",
                    "type": {
                     "$ref": "288"
                    },
                    "value": "Low"
                   }
                  }
                 }
                ]
               },
               "servicePackageActivationMode": {
                "$id": "3809",
                "kind": "string",
                "type": {
                 "$ref": "276"
                },
                "value": "SharedProcess"
               },
               "servicePlacementPolicies": {
                "$id": "3810",
                "kind": "array",
                "type": {
                 "$ref": "1749"
                },
                "value": [
                 {
                  "$id": "3811",
                  "kind": "model",
                  "type": {
                   "$ref": "1795"
                  },
                  "value": {
                   "$id": "3812",
                   "type": {
                    "$id": "3813",
                    "kind": "string",
                    "type": {
                     "$ref": "1797"
                    },
                    "value": "NonPartiallyPlaceService"
                   }
                  }
                 }
                ]
               },
               "serviceTypeName": {
                "$id": "3814",
                "kind": "string",
                "type": {
                 "$ref": "1916"
                },
                "value": "myServiceType"
               }
              }
             },
             "tags": {
              "$id": "3815",
              "kind": "dict",
              "type": {
               "$ref": "2025"
              },
              "value": {
               "$id": "3816",
               "a": {
                "$id": "3817",
                "kind": "string",
                "type": {
                 "$ref": "2027"
                },
                "value": "b"
               }
              }
             }
            }
           }
          }
         ]
        }
       ]
      },
      {
       "$id": "3818",
       "name": "delete",
       "resourceName": "ServiceResource",
       "doc": "Delete a Service Fabric managed service resource with the specified name.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "3819",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "3820",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "3821",
          "type": {
           "$id": "3822",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3823",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "3824",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3825",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "3826",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3827",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "3828",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3829",
         "name": "applicationName",
         "nameInRequest": "applicationName",
         "doc": "The name of the application resource.",
         "type": {
          "$id": "3830",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3831",
         "name": "serviceName",
         "nameInRequest": "serviceName",
         "doc": "The name of the service resource in the format of {applicationName}~{serviceName}.",
         "type": {
          "$id": "3832",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3833",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "3834",
          "kind": "constant",
          "valueType": {
           "$id": "3835",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "3836",
         "statusCodes": [
          202
         ],
         "headers": [
          {
           "$id": "3837",
           "name": "azureAsyncOperation",
           "nameInResponse": "Azure-AsyncOperation",
           "doc": "A link to the status monitor",
           "type": {
            "$id": "3838",
            "kind": "url",
            "name": "ResourceLocation",
            "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
            "baseType": {
             "$id": "3839",
             "kind": "url",
             "name": "url",
             "crossLanguageDefinitionId": "TypeSpec.url",
             "decorators": []
            },
            "decorators": []
           }
          },
          {
           "$id": "3840",
           "name": "location",
           "nameInResponse": "Location",
           "doc": "The Location header contains the URL where the status of the long running operation can be checked.",
           "type": {
            "$id": "3841",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           }
          }
         ],
         "isErrorResponse": false
        },
        {
         "$id": "3842",
         "statusCodes": [
          204
         ],
         "headers": [],
         "isErrorResponse": false
        }
       ],
       "httpMethod": "DELETE",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applications/{applicationName}/services/{serviceName}",
       "bufferResponse": true,
       "longRunning": {
        "$id": "3843",
        "finalStateVia": 1,
        "finalResponse": {
         "$id": "3844",
         "statusCodes": [
          204
         ]
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Services.delete",
       "decorators": [],
       "examples": [
        {
         "$id": "3845",
         "kind": "http",
         "name": "Delete a service",
         "description": "Delete a service",
         "filePath": "2024-11-01-preview/ServiceDeleteOperation_example.json",
         "parameters": [
          {
           "$id": "3846",
           "parameter": {
            "$ref": "3819"
           },
           "value": {
            "$id": "3847",
            "kind": "string",
            "type": {
             "$ref": "3820"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "3848",
           "parameter": {
            "$ref": "3829"
           },
           "value": {
            "$id": "3849",
            "kind": "string",
            "type": {
             "$ref": "3830"
            },
            "value": "myApp"
           }
          },
          {
           "$id": "3850",
           "parameter": {
            "$ref": "3827"
           },
           "value": {
            "$id": "3851",
            "kind": "string",
            "type": {
             "$ref": "3828"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "3852",
           "parameter": {
            "$ref": "3825"
           },
           "value": {
            "$id": "3853",
            "kind": "string",
            "type": {
             "$ref": "3826"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "3854",
           "parameter": {
            "$ref": "3831"
           },
           "value": {
            "$id": "3855",
            "kind": "string",
            "type": {
             "$ref": "3832"
            },
            "value": "myService"
           }
          },
          {
           "$id": "3856",
           "parameter": {
            "$ref": "3823"
           },
           "value": {
            "$id": "3857",
            "kind": "string",
            "type": {
             "$ref": "3824"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "3858",
           "response": {
            "$ref": "3836"
           },
           "statusCode": 202
          },
          {
           "$id": "3859",
           "response": {
            "$ref": "3842"
           },
           "statusCode": 204
          }
         ]
        }
       ]
      },
      {
       "$id": "3860",
       "name": "listByApplications",
       "resourceName": "ServiceResource",
       "doc": "Gets all service resources created or in the process of being created in the Service Fabric managed application resource.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "3861",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "3862",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "3863",
          "type": {
           "$id": "3864",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3865",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "3866",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3867",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "3868",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3869",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "3870",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3871",
         "name": "applicationName",
         "nameInRequest": "applicationName",
         "doc": "The name of the application resource.",
         "type": {
          "$id": "3872",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3873",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "3874",
          "kind": "constant",
          "valueType": {
           "$id": "3875",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "3876",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "2041"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "GET",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applications/{applicationName}/services",
       "bufferResponse": true,
       "paging": {
        "$id": "3877",
        "itemPropertySegments": [
         "value"
        ],
        "nextLink": {
         "$id": "3878",
         "responseSegments": [
          "nextLink"
         ],
         "responseLocation": "Body"
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Services.listByApplications",
       "decorators": [],
       "examples": [
        {
         "$id": "3879",
         "kind": "http",
         "name": "Get a list of service resources",
         "description": "Get a list of service resources",
         "filePath": "2024-11-01-preview/ServiceListOperation_example.json",
         "parameters": [
          {
           "$id": "3880",
           "parameter": {
            "$ref": "3861"
           },
           "value": {
            "$id": "3881",
            "kind": "string",
            "type": {
             "$ref": "3862"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "3882",
           "parameter": {
            "$ref": "3871"
           },
           "value": {
            "$id": "3883",
            "kind": "string",
            "type": {
             "$ref": "3872"
            },
            "value": "myApp"
           }
          },
          {
           "$id": "3884",
           "parameter": {
            "$ref": "3869"
           },
           "value": {
            "$id": "3885",
            "kind": "string",
            "type": {
             "$ref": "3870"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "3886",
           "parameter": {
            "$ref": "3867"
           },
           "value": {
            "$id": "3887",
            "kind": "string",
            "type": {
             "$ref": "3868"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "3888",
           "parameter": {
            "$ref": "3865"
           },
           "value": {
            "$id": "3889",
            "kind": "string",
            "type": {
             "$ref": "3866"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "3890",
           "response": {
            "$ref": "3876"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "3891",
            "kind": "model",
            "type": {
             "$ref": "2041"
            },
            "value": {
             "$id": "3892",
             "nextLink": {
              "$id": "3893",
              "kind": "string",
              "type": {
               "$ref": "2047"
              },
              "value": "http://examplelink.com"
             },
             "value": {
              "$id": "3894",
              "kind": "array",
              "type": {
               "$ref": "2043"
              },
              "value": [
               {
                "$id": "3895",
                "kind": "model",
                "type": {
                 "$ref": "1701"
                },
                "value": {
                 "$id": "3896",
                 "name": {
                  "$id": "3897",
                  "kind": "string",
                  "type": {
                   "$ref": "507"
                  },
                  "value": "myService"
                 },
                 "type": {
                  "$id": "3898",
                  "kind": "string",
                  "type": {
                   "$ref": "511"
                  },
                  "value": "Microsoft.ServiceFabric/managedClusters/applications/services"
                 },
                 "id": {
                  "$id": "3899",
                  "kind": "string",
                  "type": {
                   "$ref": "503"
                  },
                  "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applications/myApp/services/myService"
                 },
                 "properties": {
                  "$id": "3900",
                  "kind": "model",
                  "type": {
                   "$ref": "2004"
                  },
                  "value": {
                   "$id": "3901",
                   "instanceCount": {
                    "$id": "3902",
                    "kind": "number",
                    "type": {
                     "$ref": "2006"
                    },
                    "value": 1
                   },
                   "partitionDescription": {
                    "$id": "3903",
                    "kind": "model",
                    "type": {
                     "$ref": "1943"
                    },
                    "value": {
                     "$id": "3904",
                     "partitionScheme": {
                      "$id": "3905",
                      "kind": "string",
                      "type": {
                       "$ref": "1945"
                      },
                      "value": "Singleton"
                     }
                    }
                   },
                   "provisioningState": {
                    "$id": "3906",
                    "kind": "string",
                    "type": {
                     "$ref": "1912"
                    },
                    "value": "Updating"
                   },
                   "serviceKind": {
                    "$id": "3907",
                    "kind": "string",
                    "type": {
                     "$ref": "2018"
                    },
                    "value": "Stateless"
                   },
                   "serviceLoadMetrics": {
                    "$id": "3908",
                    "kind": "array",
                    "type": {
                     "$ref": "1725"
                    },
                    "value": [
                     {
                      "$id": "3909",
                      "kind": "model",
                      "type": {
                       "$ref": "1726"
                      },
                      "value": {
                       "$id": "3910",
                       "name": {
                        "$id": "3911",
                        "kind": "string",
                        "type": {
                         "$ref": "1728"
                        },
                        "value": "metric1"
                       },
                       "weight": {
                        "$id": "3912",
                        "kind": "string",
                        "type": {
                         "$ref": "288"
                        },
                        "value": "Low"
                       }
                      }
                     }
                    ]
                   },
                   "servicePackageActivationMode": {
                    "$id": "3913",
                    "kind": "string",
                    "type": {
                     "$ref": "276"
                    },
                    "value": "SharedProcess"
                   },
                   "serviceTypeName": {
                    "$id": "3914",
                    "kind": "string",
                    "type": {
                     "$ref": "1916"
                    },
                    "value": "myServiceType"
                   }
                  }
                 }
                }
               }
              ]
             }
            }
           }
          }
         ]
        }
       ]
      }
     ],
     "parameters": [
      {
       "$id": "3915",
       "name": "endpoint",
       "nameInRequest": "endpoint",
       "doc": "Service host",
       "type": {
        "$id": "3916",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "defaultValue": {
        "$id": "3917",
        "type": {
         "$id": "3918",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "value": "https://management.azure.com"
       }
      }
     ],
     "decorators": [
      {
       "$id": "3919",
       "name": "Azure.ResourceManager.@armResourceOperations",
       "arguments": {
        "$id": "3920"
       }
      }
     ],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.Services",
     "apiVersions": [
      "2024-11-01-preview"
     ],
     "parent": {
      "$ref": "2353"
     }
    },
    {
     "$id": "3921",
     "kind": "client",
     "name": "ManagedClusterVersion",
     "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
     "operations": [
      {
       "$id": "3922",
       "name": "get",
       "resourceName": "ManagedClusterVersion",
       "summary": "Gets information about a Service Fabric managed cluster code version available in the specified location.",
       "doc": "Gets information about an available Service Fabric managed cluster code version.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "3923",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "3924",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "3925",
          "type": {
           "$id": "3926",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3927",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "3928",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3929",
         "name": "location",
         "nameInRequest": "location",
         "doc": "The location for the cluster code versions. This is different from cluster location.",
         "type": {
          "$id": "3930",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3931",
         "name": "clusterVersion",
         "nameInRequest": "clusterVersion",
         "doc": "The cluster code version.",
         "type": {
          "$id": "3932",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3933",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "3934",
          "kind": "constant",
          "valueType": {
           "$id": "3935",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "3936",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "1672"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "GET",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedClusterVersions/{clusterVersion}",
       "bufferResponse": true,
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterVersion.get",
       "decorators": [],
       "examples": [
        {
         "$id": "3937",
         "kind": "http",
         "name": "Get cluster version",
         "description": "Get cluster version",
         "filePath": "2024-11-01-preview/ManagedClusterVersionGet_example.json",
         "parameters": [
          {
           "$id": "3938",
           "parameter": {
            "$ref": "3923"
           },
           "value": {
            "$id": "3939",
            "kind": "string",
            "type": {
             "$ref": "3924"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "3940",
           "parameter": {
            "$ref": "3931"
           },
           "value": {
            "$id": "3941",
            "kind": "string",
            "type": {
             "$ref": "3932"
            },
            "value": "7.2.477.9590"
           }
          },
          {
           "$id": "3942",
           "parameter": {
            "$ref": "3929"
           },
           "value": {
            "$id": "3943",
            "kind": "string",
            "type": {
             "$ref": "3930"
            },
            "value": "eastus"
           }
          },
          {
           "$id": "3944",
           "parameter": {
            "$ref": "3927"
           },
           "value": {
            "$id": "3945",
            "kind": "string",
            "type": {
             "$ref": "3928"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "3946",
           "response": {
            "$ref": "3936"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "3947",
            "kind": "model",
            "type": {
             "$ref": "1672"
            },
            "value": {
             "$id": "3948",
             "name": {
              "$id": "3949",
              "kind": "string",
              "type": {
               "$ref": "1678"
              },
              "value": "7.2.477.9590"
             },
             "type": {
              "$id": "3950",
              "kind": "string",
              "type": {
               "$ref": "1682"
              },
              "value": "Microsoft.ServiceFabric/locations/environments/managedClusterVersions"
             },
             "id": {
              "$id": "3951",
              "kind": "string",
              "type": {
               "$ref": "1674"
              },
              "value": "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/environments/Windows/managedClusterVersions/7.2.477.9590"
             },
             "properties": {
              "$id": "3952",
              "kind": "model",
              "type": {
               "$ref": "1686"
              },
              "value": {
               "$id": "3953",
               "clusterCodeVersion": {
                "$id": "3954",
                "kind": "string",
                "type": {
                 "$ref": "1688"
                },
                "value": "7.2.477.9590"
               },
               "osType": {
                "$id": "3955",
                "kind": "string",
                "type": {
                 "$ref": "254"
                },
                "value": "Windows"
               },
               "supportExpiryUtc": {
                "$id": "3956",
                "kind": "string",
                "type": {
                 "$ref": "1692"
                },
                "value": "2021-11-30T00:00:00"
               }
              }
             }
            }
           }
          }
         ]
        }
       ]
      },
      {
       "$id": "3957",
       "name": "list",
       "resourceName": "ManagedClusterVersion",
       "summary": "Gets the list of Service Fabric cluster code versions available for the specified location.",
       "doc": "Gets all available code versions for Service Fabric cluster resources by location.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "3958",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "3959",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "3960",
          "type": {
           "$id": "3961",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3962",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "3963",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3964",
         "name": "location",
         "nameInRequest": "location",
         "doc": "The location for the cluster code versions. This is different from cluster location.",
         "type": {
          "$id": "3965",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "3966",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "3967",
          "kind": "constant",
          "valueType": {
           "$id": "3968",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "3969",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$id": "3970",
          "kind": "array",
          "name": "ArrayManagedClusterCodeVersionResult",
          "valueType": {
           "$ref": "1672"
          },
          "crossLanguageDefinitionId": "TypeSpec.Array",
          "decorators": []
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "GET",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedClusterVersions",
       "bufferResponse": true,
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterVersion.list",
       "decorators": [],
       "examples": [
        {
         "$id": "3971",
         "kind": "http",
         "name": "List cluster versions",
         "description": "List cluster versions",
         "filePath": "2024-11-01-preview/ManagedClusterVersionList_example.json",
         "parameters": [
          {
           "$id": "3972",
           "parameter": {
            "$ref": "3958"
           },
           "value": {
            "$id": "3973",
            "kind": "string",
            "type": {
             "$ref": "3959"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "3974",
           "parameter": {
            "$ref": "3964"
           },
           "value": {
            "$id": "3975",
            "kind": "string",
            "type": {
             "$ref": "3965"
            },
            "value": "eastus"
           }
          },
          {
           "$id": "3976",
           "parameter": {
            "$ref": "3962"
           },
           "value": {
            "$id": "3977",
            "kind": "string",
            "type": {
             "$ref": "3963"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "3978",
           "response": {
            "$ref": "3969"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "3979",
            "kind": "array",
            "type": {
             "$ref": "3970"
            },
            "value": [
             {
              "$id": "3980",
              "kind": "model",
              "type": {
               "$ref": "1672"
              },
              "value": {
               "$id": "3981",
               "name": {
                "$id": "3982",
                "kind": "string",
                "type": {
                 "$ref": "1678"
                },
                "value": "7.2.457.9590"
               },
               "type": {
                "$id": "3983",
                "kind": "string",
                "type": {
                 "$ref": "1682"
                },
                "value": "Microsoft.ServiceFabric/locations/environments/managedClusterVersions"
               },
               "id": {
                "$id": "3984",
                "kind": "string",
                "type": {
                 "$ref": "1674"
                },
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/environments/Windows/managedClusterVersions/7.2.457.9590"
               },
               "properties": {
                "$id": "3985",
                "kind": "model",
                "type": {
                 "$ref": "1686"
                },
                "value": {
                 "$id": "3986",
                 "clusterCodeVersion": {
                  "$id": "3987",
                  "kind": "string",
                  "type": {
                   "$ref": "1688"
                  },
                  "value": "7.2.457.9590"
                 },
                 "osType": {
                  "$id": "3988",
                  "kind": "string",
                  "type": {
                   "$ref": "254"
                  },
                  "value": "Windows"
                 },
                 "supportExpiryUtc": {
                  "$id": "3989",
                  "kind": "string",
                  "type": {
                   "$ref": "1692"
                  },
                  "value": "2021-11-30T00:00:00"
                 }
                }
               }
              }
             },
             {
              "$id": "3990",
              "kind": "model",
              "type": {
               "$ref": "1672"
              },
              "value": {
               "$id": "3991",
               "name": {
                "$id": "3992",
                "kind": "string",
                "type": {
                 "$ref": "1678"
                },
                "value": "7.2.477.9590"
               },
               "type": {
                "$id": "3993",
                "kind": "string",
                "type": {
                 "$ref": "1682"
                },
                "value": "Microsoft.ServiceFabric/locations/environments/managedClusterVersions"
               },
               "id": {
                "$id": "3994",
                "kind": "string",
                "type": {
                 "$ref": "1674"
                },
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/environments/Windows/managedClusterVersions/7.2.477.9590"
               },
               "properties": {
                "$id": "3995",
                "kind": "model",
                "type": {
                 "$ref": "1686"
                },
                "value": {
                 "$id": "3996",
                 "clusterCodeVersion": {
                  "$id": "3997",
                  "kind": "string",
                  "type": {
                   "$ref": "1688"
                  },
                  "value": "7.2.477.9590"
                 },
                 "osType": {
                  "$id": "3998",
                  "kind": "string",
                  "type": {
                   "$ref": "254"
                  },
                  "value": "Windows"
                 },
                 "supportExpiryUtc": {
                  "$id": "3999",
                  "kind": "string",
                  "type": {
                   "$ref": "1692"
                  },
                  "value": "2021-11-30T00:00:00"
                 }
                }
               }
              }
             }
            ]
           }
          }
         ]
        }
       ]
      },
      {
       "$id": "4000",
       "name": "GetManagedClusterVersionByEnvironment",
       "resourceName": "ManagedClusterVersion",
       "summary": "Gets information about a Service Fabric cluster code version available for the specified environment.",
       "doc": "Gets information about an available Service Fabric cluster code version by environment.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "4001",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "4002",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "4003",
          "type": {
           "$id": "4004",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4005",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "4006",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4007",
         "name": "location",
         "nameInRequest": "location",
         "doc": "The location for the cluster code versions. This is different from cluster location.",
         "type": {
          "$id": "4008",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4009",
         "name": "environment",
         "nameInRequest": "environment",
         "doc": "The operating system of the cluster.",
         "type": {
          "$ref": "258"
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4010",
         "name": "clusterVersion",
         "nameInRequest": "clusterVersion",
         "doc": "The cluster code version.",
         "type": {
          "$id": "4011",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4012",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "4013",
          "kind": "constant",
          "valueType": {
           "$id": "4014",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "4015",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "1672"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "GET",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/managedClusterVersions/{clusterVersion}",
       "bufferResponse": true,
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterVersion.getByEnvironment",
       "decorators": [],
       "examples": [
        {
         "$id": "4016",
         "kind": "http",
         "name": "Get cluster version by environment",
         "description": "Get cluster version by environment",
         "filePath": "2024-11-01-preview/ManagedClusterVersionGetByEnvironment_example.json",
         "parameters": [
          {
           "$id": "4017",
           "parameter": {
            "$ref": "4001"
           },
           "value": {
            "$id": "4018",
            "kind": "string",
            "type": {
             "$ref": "4002"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "4019",
           "parameter": {
            "$ref": "4010"
           },
           "value": {
            "$id": "4020",
            "kind": "string",
            "type": {
             "$ref": "4011"
            },
            "value": "7.2.477.9590"
           }
          },
          {
           "$id": "4021",
           "parameter": {
            "$ref": "4009"
           },
           "value": {
            "$id": "4022",
            "kind": "string",
            "type": {
             "$ref": "258"
            },
            "value": "Windows"
           }
          },
          {
           "$id": "4023",
           "parameter": {
            "$ref": "4007"
           },
           "value": {
            "$id": "4024",
            "kind": "string",
            "type": {
             "$ref": "4008"
            },
            "value": "eastus"
           }
          },
          {
           "$id": "4025",
           "parameter": {
            "$ref": "4005"
           },
           "value": {
            "$id": "4026",
            "kind": "string",
            "type": {
             "$ref": "4006"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "4027",
           "response": {
            "$ref": "4015"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "4028",
            "kind": "model",
            "type": {
             "$ref": "1672"
            },
            "value": {
             "$id": "4029",
             "name": {
              "$id": "4030",
              "kind": "string",
              "type": {
               "$ref": "1678"
              },
              "value": "7.2.477.9590"
             },
             "type": {
              "$id": "4031",
              "kind": "string",
              "type": {
               "$ref": "1682"
              },
              "value": "Microsoft.ServiceFabric/locations/environments/managedClusterVersions"
             },
             "id": {
              "$id": "4032",
              "kind": "string",
              "type": {
               "$ref": "1674"
              },
              "value": "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/environments/Windows/managedClusterVersions/7.2.477.9590"
             },
             "properties": {
              "$id": "4033",
              "kind": "model",
              "type": {
               "$ref": "1686"
              },
              "value": {
               "$id": "4034",
               "clusterCodeVersion": {
                "$id": "4035",
                "kind": "string",
                "type": {
                 "$ref": "1688"
                },
                "value": "7.2.477.9590"
               },
               "osType": {
                "$id": "4036",
                "kind": "string",
                "type": {
                 "$ref": "254"
                },
                "value": "Windows"
               },
               "supportExpiryUtc": {
                "$id": "4037",
                "kind": "string",
                "type": {
                 "$ref": "1692"
                },
                "value": "2021-11-30T00:00:00"
               }
              }
             }
            }
           }
          }
         ]
        }
       ]
      },
      {
       "$id": "4038",
       "name": "listByEnvironment",
       "resourceName": "ManagedClusterVersion",
       "summary": "Gets the list of Service Fabric cluster code versions available for the specified environment.",
       "doc": "Gets all available code versions for Service Fabric cluster resources by environment.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "4039",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "4040",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "4041",
          "type": {
           "$id": "4042",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4043",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "4044",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4045",
         "name": "location",
         "nameInRequest": "location",
         "doc": "The location for the cluster code versions. This is different from cluster location.",
         "type": {
          "$id": "4046",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4047",
         "name": "environment",
         "nameInRequest": "environment",
         "doc": "The operating system of the cluster.",
         "type": {
          "$ref": "258"
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4048",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "4049",
          "kind": "constant",
          "valueType": {
           "$id": "4050",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "4051",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$id": "4052",
          "kind": "array",
          "name": "ArrayManagedClusterCodeVersionResult",
          "valueType": {
           "$ref": "1672"
          },
          "crossLanguageDefinitionId": "TypeSpec.Array",
          "decorators": []
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "GET",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/managedClusterVersions",
       "bufferResponse": true,
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterVersion.listByEnvironment",
       "decorators": [],
       "examples": [
        {
         "$id": "4053",
         "kind": "http",
         "name": "List cluster versions by environment",
         "description": "List cluster versions by environment",
         "filePath": "2024-11-01-preview/ManagedClusterVersionListByEnvironment.json",
         "parameters": [
          {
           "$id": "4054",
           "parameter": {
            "$ref": "4039"
           },
           "value": {
            "$id": "4055",
            "kind": "string",
            "type": {
             "$ref": "4040"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "4056",
           "parameter": {
            "$ref": "4047"
           },
           "value": {
            "$id": "4057",
            "kind": "string",
            "type": {
             "$ref": "258"
            },
            "value": "Windows"
           }
          },
          {
           "$id": "4058",
           "parameter": {
            "$ref": "4045"
           },
           "value": {
            "$id": "4059",
            "kind": "string",
            "type": {
             "$ref": "4046"
            },
            "value": "eastus"
           }
          },
          {
           "$id": "4060",
           "parameter": {
            "$ref": "4043"
           },
           "value": {
            "$id": "4061",
            "kind": "string",
            "type": {
             "$ref": "4044"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "4062",
           "response": {
            "$ref": "4051"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "4063",
            "kind": "array",
            "type": {
             "$ref": "4052"
            },
            "value": [
             {
              "$id": "4064",
              "kind": "model",
              "type": {
               "$ref": "1672"
              },
              "value": {
               "$id": "4065",
               "name": {
                "$id": "4066",
                "kind": "string",
                "type": {
                 "$ref": "1678"
                },
                "value": "7.2.457.9590"
               },
               "type": {
                "$id": "4067",
                "kind": "string",
                "type": {
                 "$ref": "1682"
                },
                "value": "Microsoft.ServiceFabric/locations/environments/managedClusterVersions"
               },
               "id": {
                "$id": "4068",
                "kind": "string",
                "type": {
                 "$ref": "1674"
                },
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/environments/Windows/managedClusterVersions/7.2.457.9590"
               },
               "properties": {
                "$id": "4069",
                "kind": "model",
                "type": {
                 "$ref": "1686"
                },
                "value": {
                 "$id": "4070",
                 "clusterCodeVersion": {
                  "$id": "4071",
                  "kind": "string",
                  "type": {
                   "$ref": "1688"
                  },
                  "value": "7.2.457.9590"
                 },
                 "osType": {
                  "$id": "4072",
                  "kind": "string",
                  "type": {
                   "$ref": "254"
                  },
                  "value": "Windows"
                 },
                 "supportExpiryUtc": {
                  "$id": "4073",
                  "kind": "string",
                  "type": {
                   "$ref": "1692"
                  },
                  "value": "2021-11-30T00:00:00"
                 }
                }
               }
              }
             },
             {
              "$id": "4074",
              "kind": "model",
              "type": {
               "$ref": "1672"
              },
              "value": {
               "$id": "4075",
               "name": {
                "$id": "4076",
                "kind": "string",
                "type": {
                 "$ref": "1678"
                },
                "value": "7.2.477.9590"
               },
               "type": {
                "$id": "4077",
                "kind": "string",
                "type": {
                 "$ref": "1682"
                },
                "value": "Microsoft.ServiceFabric/locations/environments/managedClusterVersions"
               },
               "id": {
                "$id": "4078",
                "kind": "string",
                "type": {
                 "$ref": "1674"
                },
                "value": "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/environments/Windows/managedClusterVersions/7.2.477.9590"
               },
               "properties": {
                "$id": "4079",
                "kind": "model",
                "type": {
                 "$ref": "1686"
                },
                "value": {
                 "$id": "4080",
                 "clusterCodeVersion": {
                  "$id": "4081",
                  "kind": "string",
                  "type": {
                   "$ref": "1688"
                  },
                  "value": "7.2.477.9590"
                 },
                 "osType": {
                  "$id": "4082",
                  "kind": "string",
                  "type": {
                   "$ref": "254"
                  },
                  "value": "Windows"
                 },
                 "supportExpiryUtc": {
                  "$id": "4083",
                  "kind": "string",
                  "type": {
                   "$ref": "1692"
                  },
                  "value": "2021-11-30T00:00:00"
                 }
                }
               }
              }
             }
            ]
           }
          }
         ]
        }
       ]
      }
     ],
     "parameters": [
      {
       "$id": "4084",
       "name": "endpoint",
       "nameInRequest": "endpoint",
       "doc": "Service host",
       "type": {
        "$id": "4085",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "defaultValue": {
        "$id": "4086",
        "type": {
         "$id": "4087",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "value": "https://management.azure.com"
       }
      }
     ],
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusterVersion",
     "apiVersions": [
      "2024-11-01-preview"
     ],
     "parent": {
      "$ref": "2353"
     }
    },
    {
     "$id": "4088",
     "kind": "client",
     "name": "ManagedUnsupportedVMSizes",
     "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
     "operations": [
      {
       "$id": "4089",
       "name": "GetManagedUnsupportedVmSize",
       "resourceName": "ManagedUnsupportedVMSizes",
       "doc": "Get unsupported vm size for Service Fabric Managed Clusters.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "4090",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "4091",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "4092",
          "type": {
           "$id": "4093",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4094",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "4095",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4096",
         "name": "location",
         "nameInRequest": "location",
         "doc": "The location for the cluster code versions. This is different from cluster location.",
         "type": {
          "$id": "4097",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4098",
         "name": "vmSize",
         "nameInRequest": "vmSize",
         "doc": "VM Size name.",
         "type": {
          "$id": "4099",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4100",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "4101",
          "kind": "constant",
          "valueType": {
           "$id": "4102",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "4103",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "1641"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "GET",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedUnsupportedVMSizes/{vmSize}",
       "bufferResponse": true,
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedUnsupportedVMSizes.get",
       "decorators": [],
       "examples": [
        {
         "$id": "4104",
         "kind": "http",
         "name": "Get unsupported vm sizes",
         "description": "Get unsupported vm sizes",
         "filePath": "2024-11-01-preview/managedUnsupportedVMSizesGet_example.json",
         "parameters": [
          {
           "$id": "4105",
           "parameter": {
            "$ref": "4090"
           },
           "value": {
            "$id": "4106",
            "kind": "string",
            "type": {
             "$ref": "4091"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "4107",
           "parameter": {
            "$ref": "4096"
           },
           "value": {
            "$id": "4108",
            "kind": "string",
            "type": {
             "$ref": "4097"
            },
            "value": "eastus"
           }
          },
          {
           "$id": "4109",
           "parameter": {
            "$ref": "4094"
           },
           "value": {
            "$id": "4110",
            "kind": "string",
            "type": {
             "$ref": "4095"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          },
          {
           "$id": "4111",
           "parameter": {
            "$ref": "4098"
           },
           "value": {
            "$id": "4112",
            "kind": "string",
            "type": {
             "$ref": "4099"
            },
            "value": "Standard_B1ls1"
           }
          }
         ],
         "responses": [
          {
           "$id": "4113",
           "response": {
            "$ref": "4103"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "4114",
            "kind": "model",
            "type": {
             "$ref": "1641"
            },
            "value": {
             "$id": "4115",
             "name": {
              "$id": "4116",
              "kind": "string",
              "type": {
               "$ref": "1655"
              },
              "value": "Standard_B1ls1"
             },
             "type": {
              "$id": "4117",
              "kind": "string",
              "type": {
               "$ref": "1659"
              },
              "value": "Microsoft.ServiceFabric/locations/managedVMSizes"
             },
             "id": {
              "$id": "4118",
              "kind": "string",
              "type": {
               "$ref": "1651"
              },
              "value": "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/managedVMSizes/Standard_B1ls1"
             },
             "properties": {
              "$id": "4119",
              "kind": "model",
              "type": {
               "$ref": "1643"
              },
              "value": {
               "$id": "4120",
               "size": {
                "$id": "4121",
                "kind": "string",
                "type": {
                 "$ref": "1645"
                },
                "value": "Standard_B1ls1"
               }
              }
             }
            }
           }
          }
         ]
        }
       ]
      },
      {
       "$id": "4122",
       "name": "GetManagedUnsupportedVmSizes",
       "resourceName": "ManagedUnsupportedVMSizes",
       "doc": "Get the lists of unsupported vm sizes for Service Fabric Managed Clusters.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "4123",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "4124",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "4125",
          "type": {
           "$id": "4126",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4127",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "4128",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4129",
         "name": "location",
         "nameInRequest": "location",
         "doc": "The location for the cluster code versions. This is different from cluster location.",
         "type": {
          "$id": "4130",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4131",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "4132",
          "kind": "constant",
          "valueType": {
           "$id": "4133",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "4134",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "1662"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "GET",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedUnsupportedVMSizes",
       "bufferResponse": true,
       "paging": {
        "$id": "4135",
        "itemPropertySegments": [
         "value"
        ],
        "nextLink": {
         "$id": "4136",
         "responseSegments": [
          "nextLink"
         ],
         "responseLocation": "Body"
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedUnsupportedVMSizes.list",
       "decorators": [],
       "examples": [
        {
         "$id": "4137",
         "kind": "http",
         "name": "List unsupported vm sizes",
         "description": "List unsupported vm sizes",
         "filePath": "2024-11-01-preview/managedUnsupportedVMSizesList_example.json",
         "parameters": [
          {
           "$id": "4138",
           "parameter": {
            "$ref": "4123"
           },
           "value": {
            "$id": "4139",
            "kind": "string",
            "type": {
             "$ref": "4124"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "4140",
           "parameter": {
            "$ref": "4129"
           },
           "value": {
            "$id": "4141",
            "kind": "string",
            "type": {
             "$ref": "4130"
            },
            "value": "eastus"
           }
          },
          {
           "$id": "4142",
           "parameter": {
            "$ref": "4127"
           },
           "value": {
            "$id": "4143",
            "kind": "string",
            "type": {
             "$ref": "4128"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "4144",
           "response": {
            "$ref": "4134"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "4145",
            "kind": "model",
            "type": {
             "$ref": "1662"
            },
            "value": {
             "$id": "4146",
             "value": {
              "$id": "4147",
              "kind": "array",
              "type": {
               "$ref": "1664"
              },
              "value": [
               {
                "$id": "4148",
                "kind": "model",
                "type": {
                 "$ref": "1641"
                },
                "value": {
                 "$id": "4149",
                 "name": {
                  "$id": "4150",
                  "kind": "string",
                  "type": {
                   "$ref": "1655"
                  },
                  "value": "Standard_B1ls1"
                 },
                 "type": {
                  "$id": "4151",
                  "kind": "string",
                  "type": {
                   "$ref": "1659"
                  },
                  "value": "Microsoft.ServiceFabric/locations/managedVMSizes"
                 },
                 "id": {
                  "$id": "4152",
                  "kind": "string",
                  "type": {
                   "$ref": "1651"
                  },
                  "value": "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/managedVMSizes/Standard_B1ls1"
                 },
                 "properties": {
                  "$id": "4153",
                  "kind": "model",
                  "type": {
                   "$ref": "1643"
                  },
                  "value": {
                   "$id": "4154",
                   "size": {
                    "$id": "4155",
                    "kind": "string",
                    "type": {
                     "$ref": "1645"
                    },
                    "value": "Standard_B1ls1"
                   }
                  }
                 }
                }
               },
               {
                "$id": "4156",
                "kind": "model",
                "type": {
                 "$ref": "1641"
                },
                "value": {
                 "$id": "4157",
                 "name": {
                  "$id": "4158",
                  "kind": "string",
                  "type": {
                   "$ref": "1655"
                  },
                  "value": "Standard_B1s"
                 },
                 "type": {
                  "$id": "4159",
                  "kind": "string",
                  "type": {
                   "$ref": "1659"
                  },
                  "value": "Microsoft.ServiceFabric/locations/managedVMSizes"
                 },
                 "id": {
                  "$id": "4160",
                  "kind": "string",
                  "type": {
                   "$ref": "1651"
                  },
                  "value": "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/managedVMSizes/Standard_B1s"
                 },
                 "properties": {
                  "$id": "4161",
                  "kind": "model",
                  "type": {
                   "$ref": "1643"
                  },
                  "value": {
                   "$id": "4162",
                   "size": {
                    "$id": "4163",
                    "kind": "string",
                    "type": {
                     "$ref": "1645"
                    },
                    "value": "Standard_B1s"
                   }
                  }
                 }
                }
               },
               {
                "$id": "4164",
                "kind": "model",
                "type": {
                 "$ref": "1641"
                },
                "value": {
                 "$id": "4165",
                 "name": {
                  "$id": "4166",
                  "kind": "string",
                  "type": {
                   "$ref": "1655"
                  },
                  "value": "Standard_B1ms"
                 },
                 "type": {
                  "$id": "4167",
                  "kind": "string",
                  "type": {
                   "$ref": "1659"
                  },
                  "value": "Microsoft.ServiceFabric/locations/managedVMSizes"
                 },
                 "id": {
                  "$id": "4168",
                  "kind": "string",
                  "type": {
                   "$ref": "1651"
                  },
                  "value": "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/managedVMSizes/Standard_B1ms"
                 },
                 "properties": {
                  "$id": "4169",
                  "kind": "model",
                  "type": {
                   "$ref": "1643"
                  },
                  "value": {
                   "$id": "4170",
                   "size": {
                    "$id": "4171",
                    "kind": "string",
                    "type": {
                     "$ref": "1645"
                    },
                    "value": "Standard_B1ms"
                   }
                  }
                 }
                }
               },
               {
                "$id": "4172",
                "kind": "model",
                "type": {
                 "$ref": "1641"
                },
                "value": {
                 "$id": "4173",
                 "name": {
                  "$id": "4174",
                  "kind": "string",
                  "type": {
                   "$ref": "1655"
                  },
                  "value": "Standard_B2s"
                 },
                 "type": {
                  "$id": "4175",
                  "kind": "string",
                  "type": {
                   "$ref": "1659"
                  },
                  "value": "Microsoft.ServiceFabric/locations/managedVMSizes"
                 },
                 "id": {
                  "$id": "4176",
                  "kind": "string",
                  "type": {
                   "$ref": "1651"
                  },
                  "value": "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/managedVMSizes/Standard_B2s"
                 },
                 "properties": {
                  "$id": "4177",
                  "kind": "model",
                  "type": {
                   "$ref": "1643"
                  },
                  "value": {
                   "$id": "4178",
                   "size": {
                    "$id": "4179",
                    "kind": "string",
                    "type": {
                     "$ref": "1645"
                    },
                    "value": "Standard_B2s"
                   }
                  }
                 }
                }
               },
               {
                "$id": "4180",
                "kind": "model",
                "type": {
                 "$ref": "1641"
                },
                "value": {
                 "$id": "4181",
                 "name": {
                  "$id": "4182",
                  "kind": "string",
                  "type": {
                   "$ref": "1655"
                  },
                  "value": "Standard_B2ms"
                 },
                 "type": {
                  "$id": "4183",
                  "kind": "string",
                  "type": {
                   "$ref": "1659"
                  },
                  "value": "Microsoft.ServiceFabric/locations/managedVMSizes"
                 },
                 "id": {
                  "$id": "4184",
                  "kind": "string",
                  "type": {
                   "$ref": "1651"
                  },
                  "value": "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/managedVMSizes/Standard_B2ms"
                 },
                 "properties": {
                  "$id": "4185",
                  "kind": "model",
                  "type": {
                   "$ref": "1643"
                  },
                  "value": {
                   "$id": "4186",
                   "size": {
                    "$id": "4187",
                    "kind": "string",
                    "type": {
                     "$ref": "1645"
                    },
                    "value": "Standard_B2ms"
                   }
                  }
                 }
                }
               },
               {
                "$id": "4188",
                "kind": "model",
                "type": {
                 "$ref": "1641"
                },
                "value": {
                 "$id": "4189",
                 "name": {
                  "$id": "4190",
                  "kind": "string",
                  "type": {
                   "$ref": "1655"
                  },
                  "value": "Standard_B4ms"
                 },
                 "type": {
                  "$id": "4191",
                  "kind": "string",
                  "type": {
                   "$ref": "1659"
                  },
                  "value": "Microsoft.ServiceFabric/locations/managedVMSizes"
                 },
                 "id": {
                  "$id": "4192",
                  "kind": "string",
                  "type": {
                   "$ref": "1651"
                  },
                  "value": "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/managedVMSizes/Standard_B4ms"
                 },
                 "properties": {
                  "$id": "4193",
                  "kind": "model",
                  "type": {
                   "$ref": "1643"
                  },
                  "value": {
                   "$id": "4194",
                   "size": {
                    "$id": "4195",
                    "kind": "string",
                    "type": {
                     "$ref": "1645"
                    },
                    "value": "Standard_B4ms"
                   }
                  }
                 }
                }
               },
               {
                "$id": "4196",
                "kind": "model",
                "type": {
                 "$ref": "1641"
                },
                "value": {
                 "$id": "4197",
                 "name": {
                  "$id": "4198",
                  "kind": "string",
                  "type": {
                   "$ref": "1655"
                  },
                  "value": "Standard_B8ms"
                 },
                 "type": {
                  "$id": "4199",
                  "kind": "string",
                  "type": {
                   "$ref": "1659"
                  },
                  "value": "Microsoft.ServiceFabric/locations/managedVMSizes"
                 },
                 "id": {
                  "$id": "4200",
                  "kind": "string",
                  "type": {
                   "$ref": "1651"
                  },
                  "value": "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/managedVMSizes/Standard_B8ms"
                 },
                 "properties": {
                  "$id": "4201",
                  "kind": "model",
                  "type": {
                   "$ref": "1643"
                  },
                  "value": {
                   "$id": "4202",
                   "size": {
                    "$id": "4203",
                    "kind": "string",
                    "type": {
                     "$ref": "1645"
                    },
                    "value": "Standard_B8ms"
                   }
                  }
                 }
                }
               },
               {
                "$id": "4204",
                "kind": "model",
                "type": {
                 "$ref": "1641"
                },
                "value": {
                 "$id": "4205",
                 "name": {
                  "$id": "4206",
                  "kind": "string",
                  "type": {
                   "$ref": "1655"
                  },
                  "value": "Standard_A1_v2"
                 },
                 "type": {
                  "$id": "4207",
                  "kind": "string",
                  "type": {
                   "$ref": "1659"
                  },
                  "value": "Microsoft.ServiceFabric/locations/managedVMSizes"
                 },
                 "id": {
                  "$id": "4208",
                  "kind": "string",
                  "type": {
                   "$ref": "1651"
                  },
                  "value": "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/managedVMSizes/Standard_A1_v2"
                 },
                 "properties": {
                  "$id": "4209",
                  "kind": "model",
                  "type": {
                   "$ref": "1643"
                  },
                  "value": {
                   "$id": "4210",
                   "size": {
                    "$id": "4211",
                    "kind": "string",
                    "type": {
                     "$ref": "1645"
                    },
                    "value": "Standard_A1_v2"
                   }
                  }
                 }
                }
               },
               {
                "$id": "4212",
                "kind": "model",
                "type": {
                 "$ref": "1641"
                },
                "value": {
                 "$id": "4213",
                 "name": {
                  "$id": "4214",
                  "kind": "string",
                  "type": {
                   "$ref": "1655"
                  },
                  "value": "Standard_A2_v2"
                 },
                 "type": {
                  "$id": "4215",
                  "kind": "string",
                  "type": {
                   "$ref": "1659"
                  },
                  "value": "Microsoft.ServiceFabric/locations/managedVMSizes"
                 },
                 "id": {
                  "$id": "4216",
                  "kind": "string",
                  "type": {
                   "$ref": "1651"
                  },
                  "value": "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/managedVMSizes/Standard_A2_v2"
                 },
                 "properties": {
                  "$id": "4217",
                  "kind": "model",
                  "type": {
                   "$ref": "1643"
                  },
                  "value": {
                   "$id": "4218",
                   "size": {
                    "$id": "4219",
                    "kind": "string",
                    "type": {
                     "$ref": "1645"
                    },
                    "value": "Standard_A2_v2"
                   }
                  }
                 }
                }
               },
               {
                "$id": "4220",
                "kind": "model",
                "type": {
                 "$ref": "1641"
                },
                "value": {
                 "$id": "4221",
                 "name": {
                  "$id": "4222",
                  "kind": "string",
                  "type": {
                   "$ref": "1655"
                  },
                  "value": "Standard_A4_v2"
                 },
                 "type": {
                  "$id": "4223",
                  "kind": "string",
                  "type": {
                   "$ref": "1659"
                  },
                  "value": "Microsoft.ServiceFabric/locations/managedVMSizes"
                 },
                 "id": {
                  "$id": "4224",
                  "kind": "string",
                  "type": {
                   "$ref": "1651"
                  },
                  "value": "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/managedVMSizes/Standard_A4_v2"
                 },
                 "properties": {
                  "$id": "4225",
                  "kind": "model",
                  "type": {
                   "$ref": "1643"
                  },
                  "value": {
                   "$id": "4226",
                   "size": {
                    "$id": "4227",
                    "kind": "string",
                    "type": {
                     "$ref": "1645"
                    },
                    "value": "Standard_A4_v2"
                   }
                  }
                 }
                }
               },
               {
                "$id": "4228",
                "kind": "model",
                "type": {
                 "$ref": "1641"
                },
                "value": {
                 "$id": "4229",
                 "name": {
                  "$id": "4230",
                  "kind": "string",
                  "type": {
                   "$ref": "1655"
                  },
                  "value": "Standard_A8_v2"
                 },
                 "type": {
                  "$id": "4231",
                  "kind": "string",
                  "type": {
                   "$ref": "1659"
                  },
                  "value": "Microsoft.ServiceFabric/locations/managedVMSizes"
                 },
                 "id": {
                  "$id": "4232",
                  "kind": "string",
                  "type": {
                   "$ref": "1651"
                  },
                  "value": "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/managedVMSizes/Standard_A8_v2"
                 },
                 "properties": {
                  "$id": "4233",
                  "kind": "model",
                  "type": {
                   "$ref": "1643"
                  },
                  "value": {
                   "$id": "4234",
                   "size": {
                    "$id": "4235",
                    "kind": "string",
                    "type": {
                     "$ref": "1645"
                    },
                    "value": "Standard_A8_v2"
                   }
                  }
                 }
                }
               },
               {
                "$id": "4236",
                "kind": "model",
                "type": {
                 "$ref": "1641"
                },
                "value": {
                 "$id": "4237",
                 "name": {
                  "$id": "4238",
                  "kind": "string",
                  "type": {
                   "$ref": "1655"
                  },
                  "value": "Standard_A2m_v2"
                 },
                 "type": {
                  "$id": "4239",
                  "kind": "string",
                  "type": {
                   "$ref": "1659"
                  },
                  "value": "Microsoft.ServiceFabric/locations/managedVMSizes"
                 },
                 "id": {
                  "$id": "4240",
                  "kind": "string",
                  "type": {
                   "$ref": "1651"
                  },
                  "value": "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/managedVMSizes/Standard_A2m_v2"
                 },
                 "properties": {
                  "$id": "4241",
                  "kind": "model",
                  "type": {
                   "$ref": "1643"
                  },
                  "value": {
                   "$id": "4242",
                   "size": {
                    "$id": "4243",
                    "kind": "string",
                    "type": {
                     "$ref": "1645"
                    },
                    "value": "Standard_A2m_v2"
                   }
                  }
                 }
                }
               },
               {
                "$id": "4244",
                "kind": "model",
                "type": {
                 "$ref": "1641"
                },
                "value": {
                 "$id": "4245",
                 "name": {
                  "$id": "4246",
                  "kind": "string",
                  "type": {
                   "$ref": "1655"
                  },
                  "value": "Standard_A4m_v2"
                 },
                 "type": {
                  "$id": "4247",
                  "kind": "string",
                  "type": {
                   "$ref": "1659"
                  },
                  "value": "Microsoft.ServiceFabric/locations/managedVMSizes"
                 },
                 "id": {
                  "$id": "4248",
                  "kind": "string",
                  "type": {
                   "$ref": "1651"
                  },
                  "value": "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/managedVMSizes/Standard_A4m_v2"
                 },
                 "properties": {
                  "$id": "4249",
                  "kind": "model",
                  "type": {
                   "$ref": "1643"
                  },
                  "value": {
                   "$id": "4250",
                   "size": {
                    "$id": "4251",
                    "kind": "string",
                    "type": {
                     "$ref": "1645"
                    },
                    "value": "Standard_A4m_v2"
                   }
                  }
                 }
                }
               },
               {
                "$id": "4252",
                "kind": "model",
                "type": {
                 "$ref": "1641"
                },
                "value": {
                 "$id": "4253",
                 "name": {
                  "$id": "4254",
                  "kind": "string",
                  "type": {
                   "$ref": "1655"
                  },
                  "value": "Standard_A8m_v2"
                 },
                 "type": {
                  "$id": "4255",
                  "kind": "string",
                  "type": {
                   "$ref": "1659"
                  },
                  "value": "Microsoft.ServiceFabric/locations/managedVMSizes"
                 },
                 "id": {
                  "$id": "4256",
                  "kind": "string",
                  "type": {
                   "$ref": "1651"
                  },
                  "value": "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/managedVMSizes/Standard_A8m_v2"
                 },
                 "properties": {
                  "$id": "4257",
                  "kind": "model",
                  "type": {
                   "$ref": "1643"
                  },
                  "value": {
                   "$id": "4258",
                   "size": {
                    "$id": "4259",
                    "kind": "string",
                    "type": {
                     "$ref": "1645"
                    },
                    "value": "Standard_A8m_v2"
                   }
                  }
                 }
                }
               },
               {
                "$id": "4260",
                "kind": "model",
                "type": {
                 "$ref": "1641"
                },
                "value": {
                 "$id": "4261",
                 "name": {
                  "$id": "4262",
                  "kind": "string",
                  "type": {
                   "$ref": "1655"
                  },
                  "value": "Basic_A0"
                 },
                 "type": {
                  "$id": "4263",
                  "kind": "string",
                  "type": {
                   "$ref": "1659"
                  },
                  "value": "Microsoft.ServiceFabric/locations/managedVMSizes"
                 },
                 "id": {
                  "$id": "4264",
                  "kind": "string",
                  "type": {
                   "$ref": "1651"
                  },
                  "value": "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/managedVMSizes/Basic_A0"
                 },
                 "properties": {
                  "$id": "4265",
                  "kind": "model",
                  "type": {
                   "$ref": "1643"
                  },
                  "value": {
                   "$id": "4266",
                   "size": {
                    "$id": "4267",
                    "kind": "string",
                    "type": {
                     "$ref": "1645"
                    },
                    "value": "Basic_A0"
                   }
                  }
                 }
                }
               },
               {
                "$id": "4268",
                "kind": "model",
                "type": {
                 "$ref": "1641"
                },
                "value": {
                 "$id": "4269",
                 "name": {
                  "$id": "4270",
                  "kind": "string",
                  "type": {
                   "$ref": "1655"
                  },
                  "value": "Basic_A1"
                 },
                 "type": {
                  "$id": "4271",
                  "kind": "string",
                  "type": {
                   "$ref": "1659"
                  },
                  "value": "Microsoft.ServiceFabric/locations/managedVMSizes"
                 },
                 "id": {
                  "$id": "4272",
                  "kind": "string",
                  "type": {
                   "$ref": "1651"
                  },
                  "value": "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/managedVMSizes/Basic_A1"
                 },
                 "properties": {
                  "$id": "4273",
                  "kind": "model",
                  "type": {
                   "$ref": "1643"
                  },
                  "value": {
                   "$id": "4274",
                   "size": {
                    "$id": "4275",
                    "kind": "string",
                    "type": {
                     "$ref": "1645"
                    },
                    "value": "Basic_A1"
                   }
                  }
                 }
                }
               },
               {
                "$id": "4276",
                "kind": "model",
                "type": {
                 "$ref": "1641"
                },
                "value": {
                 "$id": "4277",
                 "name": {
                  "$id": "4278",
                  "kind": "string",
                  "type": {
                   "$ref": "1655"
                  },
                  "value": "Basic_A2"
                 },
                 "type": {
                  "$id": "4279",
                  "kind": "string",
                  "type": {
                   "$ref": "1659"
                  },
                  "value": "Microsoft.ServiceFabric/locations/managedVMSizes"
                 },
                 "id": {
                  "$id": "4280",
                  "kind": "string",
                  "type": {
                   "$ref": "1651"
                  },
                  "value": "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/managedVMSizes/Basic_A2"
                 },
                 "properties": {
                  "$id": "4281",
                  "kind": "model",
                  "type": {
                   "$ref": "1643"
                  },
                  "value": {
                   "$id": "4282",
                   "size": {
                    "$id": "4283",
                    "kind": "string",
                    "type": {
                     "$ref": "1645"
                    },
                    "value": "Basic_A2"
                   }
                  }
                 }
                }
               },
               {
                "$id": "4284",
                "kind": "model",
                "type": {
                 "$ref": "1641"
                },
                "value": {
                 "$id": "4285",
                 "name": {
                  "$id": "4286",
                  "kind": "string",
                  "type": {
                   "$ref": "1655"
                  },
                  "value": "Basic_A3"
                 },
                 "type": {
                  "$id": "4287",
                  "kind": "string",
                  "type": {
                   "$ref": "1659"
                  },
                  "value": "Microsoft.ServiceFabric/locations/managedVMSizes"
                 },
                 "id": {
                  "$id": "4288",
                  "kind": "string",
                  "type": {
                   "$ref": "1651"
                  },
                  "value": "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/managedVMSizes/Basic_A3"
                 },
                 "properties": {
                  "$id": "4289",
                  "kind": "model",
                  "type": {
                   "$ref": "1643"
                  },
                  "value": {
                   "$id": "4290",
                   "size": {
                    "$id": "4291",
                    "kind": "string",
                    "type": {
                     "$ref": "1645"
                    },
                    "value": "Basic_A3"
                   }
                  }
                 }
                }
               },
               {
                "$id": "4292",
                "kind": "model",
                "type": {
                 "$ref": "1641"
                },
                "value": {
                 "$id": "4293",
                 "name": {
                  "$id": "4294",
                  "kind": "string",
                  "type": {
                   "$ref": "1655"
                  },
                  "value": "Basic_A4"
                 },
                 "type": {
                  "$id": "4295",
                  "kind": "string",
                  "type": {
                   "$ref": "1659"
                  },
                  "value": "Microsoft.ServiceFabric/locations/managedVMSizes"
                 },
                 "id": {
                  "$id": "4296",
                  "kind": "string",
                  "type": {
                   "$ref": "1651"
                  },
                  "value": "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/managedVMSizes/Basic_A4"
                 },
                 "properties": {
                  "$id": "4297",
                  "kind": "model",
                  "type": {
                   "$ref": "1643"
                  },
                  "value": {
                   "$id": "4298",
                   "size": {
                    "$id": "4299",
                    "kind": "string",
                    "type": {
                     "$ref": "1645"
                    },
                    "value": "Basic_A4"
                   }
                  }
                 }
                }
               },
               {
                "$id": "4300",
                "kind": "model",
                "type": {
                 "$ref": "1641"
                },
                "value": {
                 "$id": "4301",
                 "name": {
                  "$id": "4302",
                  "kind": "string",
                  "type": {
                   "$ref": "1655"
                  },
                  "value": "Standard_A0"
                 },
                 "type": {
                  "$id": "4303",
                  "kind": "string",
                  "type": {
                   "$ref": "1659"
                  },
                  "value": "Microsoft.ServiceFabric/locations/managedVMSizes"
                 },
                 "id": {
                  "$id": "4304",
                  "kind": "string",
                  "type": {
                   "$ref": "1651"
                  },
                  "value": "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/managedVMSizes/Standard_A0"
                 },
                 "properties": {
                  "$id": "4305",
                  "kind": "model",
                  "type": {
                   "$ref": "1643"
                  },
                  "value": {
                   "$id": "4306",
                   "size": {
                    "$id": "4307",
                    "kind": "string",
                    "type": {
                     "$ref": "1645"
                    },
                    "value": "Standard_A0"
                   }
                  }
                 }
                }
               }
              ]
             }
            }
           }
          }
         ]
        }
       ]
      }
     ],
     "parameters": [
      {
       "$id": "4308",
       "name": "endpoint",
       "nameInRequest": "endpoint",
       "doc": "Service host",
       "type": {
        "$id": "4309",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "defaultValue": {
        "$id": "4310",
        "type": {
         "$id": "4311",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "value": "https://management.azure.com"
       }
      }
     ],
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedUnsupportedVMSizes",
     "apiVersions": [
      "2024-11-01-preview"
     ],
     "parent": {
      "$ref": "2353"
     }
    },
    {
     "$id": "4312",
     "kind": "client",
     "name": "ManagedClusters",
     "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
     "operations": [
      {
       "$id": "4313",
       "name": "get",
       "resourceName": "ManagedCluster",
       "doc": "Get a Service Fabric managed cluster resource created or in the process of being created in the specified resource group.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "4314",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "4315",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "4316",
          "type": {
           "$id": "4317",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4318",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "4319",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4320",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "4321",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4322",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "4323",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4324",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "4325",
          "kind": "constant",
          "valueType": {
           "$id": "4326",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "4327",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "1263"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "GET",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}",
       "bufferResponse": true,
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusters.get",
       "decorators": [],
       "examples": [
        {
         "$id": "4328",
         "kind": "http",
         "name": "Get a cluster",
         "description": "Get a cluster",
         "filePath": "2024-11-01-preview/ManagedClusterGetOperation_example.json",
         "parameters": [
          {
           "$id": "4329",
           "parameter": {
            "$ref": "4314"
           },
           "value": {
            "$id": "4330",
            "kind": "string",
            "type": {
             "$ref": "4315"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "4331",
           "parameter": {
            "$ref": "4322"
           },
           "value": {
            "$id": "4332",
            "kind": "string",
            "type": {
             "$ref": "4323"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "4333",
           "parameter": {
            "$ref": "4320"
           },
           "value": {
            "$id": "4334",
            "kind": "string",
            "type": {
             "$ref": "4321"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "4335",
           "parameter": {
            "$ref": "4318"
           },
           "value": {
            "$id": "4336",
            "kind": "string",
            "type": {
             "$ref": "4319"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "4337",
           "response": {
            "$ref": "4327"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "4338",
            "kind": "model",
            "type": {
             "$ref": "1263"
            },
            "value": {
             "$id": "4339",
             "name": {
              "$id": "4340",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "myCluster"
             },
             "type": {
              "$id": "4341",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters"
             },
             "etag": {
              "$id": "4342",
              "kind": "string",
              "type": {
               "$ref": "1614"
              },
              "value": "W/\"636462502169240745\""
             },
             "id": {
              "$id": "4343",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster"
             },
             "location": {
              "$id": "4344",
              "kind": "string",
              "type": {
               "$ref": "1272"
              },
              "value": "eastus"
             },
             "properties": {
              "$id": "4345",
              "kind": "model",
              "type": {
               "$ref": "1276"
              },
              "value": {
               "$id": "4346",
               "adminUserName": {
                "$id": "4347",
                "kind": "string",
                "type": {
                 "$ref": "1312"
                },
                "value": "vmadmin"
               },
               "clientConnectionPort": {
                "$id": "4348",
                "kind": "number",
                "type": {
                 "$ref": "1304"
                },
                "value": 19000
               },
               "clusterCertificateThumbprints": {
                "$id": "4349",
                "kind": "array",
                "type": {
                 "$ref": "1299"
                },
                "value": [
                 {
                  "$id": "4350",
                  "kind": "string",
                  "type": {
                   "$ref": "1300"
                  },
                  "value": "12599211F8F14C90AFA9532AD79A6F2CA1C00622"
                 }
                ]
               },
               "clusterCodeVersion": {
                "$id": "4351",
                "kind": "string",
                "type": {
                 "$ref": "1422"
                },
                "value": "7.1.168.9494"
               },
               "clusterId": {
                "$id": "4352",
                "kind": "string",
                "type": {
                 "$ref": "1291"
                },
                "value": "92584666-9889-4ae8-8d02-91902923d37f"
               },
               "clusterState": {
                "$id": "4353",
                "kind": "string",
                "type": {
                 "$ref": "170"
                },
                "value": "WaitingForNodes"
               },
               "clusterUpgradeCadence": {
                "$id": "4354",
                "kind": "string",
                "type": {
                 "$ref": "204"
                },
                "value": "Wave0"
               },
               "clusterUpgradeMode": {
                "$id": "4355",
                "kind": "string",
                "type": {
                 "$ref": "198"
                },
                "value": "Automatic"
               },
               "dnsName": {
                "$id": "4356",
                "kind": "string",
                "type": {
                 "$ref": "1278"
                },
                "value": "myCluster"
               },
               "fabricSettings": {
                "$id": "4357",
                "kind": "array",
                "type": {
                 "$ref": "1397"
                },
                "value": [
                 {
                  "$id": "4358",
                  "kind": "model",
                  "type": {
                   "$ref": "1398"
                  },
                  "value": {
                   "$id": "4359",
                   "name": {
                    "$id": "4360",
                    "kind": "string",
                    "type": {
                     "$ref": "1400"
                    },
                    "value": "ManagedIdentityTokenService"
                   },
                   "parameters": {
                    "$id": "4361",
                    "kind": "array",
                    "type": {
                     "$ref": "1404"
                    },
                    "value": [
                     {
                      "$id": "4362",
                      "kind": "model",
                      "type": {
                       "$ref": "1405"
                      },
                      "value": {
                       "$id": "4363",
                       "name": {
                        "$id": "4364",
                        "kind": "string",
                        "type": {
                         "$ref": "1407"
                        },
                        "value": "IsEnabled"
                       },
                       "value": {
                        "$id": "4365",
                        "kind": "string",
                        "type": {
                         "$ref": "1411"
                        },
                        "value": "true"
                       }
                      }
                     }
                    ]
                   }
                  }
                 }
                ]
               },
               "fqdn": {
                "$id": "4366",
                "kind": "string",
                "type": {
                 "$ref": "1282"
                },
                "value": "MyCluster.eastus.cloudapp.azure.com"
               },
               "httpGatewayConnectionPort": {
                "$id": "4367",
                "kind": "number",
                "type": {
                 "$ref": "1308"
                },
                "value": 19080
               },
               "loadBalancingRules": {
                "$id": "4368",
                "kind": "array",
                "type": {
                 "$ref": "1320"
                },
                "value": [
                 {
                  "$id": "4369",
                  "kind": "model",
                  "type": {
                   "$ref": "1321"
                  },
                  "value": {
                   "$id": "4370",
                   "backendPort": {
                    "$id": "4371",
                    "kind": "number",
                    "type": {
                     "$ref": "1327"
                    },
                    "value": 80
                   },
                   "frontendPort": {
                    "$id": "4372",
                    "kind": "number",
                    "type": {
                     "$ref": "1323"
                    },
                    "value": 80
                   },
                   "probePort": {
                    "$id": "4373",
                    "kind": "number",
                    "type": {
                     "$ref": "1334"
                    },
                    "value": 80
                   },
                   "probeProtocol": {
                    "$id": "4374",
                    "kind": "string",
                    "type": {
                     "$ref": "190"
                    },
                    "value": "http"
                   },
                   "protocol": {
                    "$id": "4375",
                    "kind": "string",
                    "type": {
                     "$ref": "184"
                    },
                    "value": "http"
                   }
                  }
                 },
                 {
                  "$id": "4376",
                  "kind": "model",
                  "type": {
                   "$ref": "1321"
                  },
                  "value": {
                   "$id": "4377",
                   "backendPort": {
                    "$id": "4378",
                    "kind": "number",
                    "type": {
                     "$ref": "1327"
                    },
                    "value": 443
                   },
                   "frontendPort": {
                    "$id": "4379",
                    "kind": "number",
                    "type": {
                     "$ref": "1323"
                    },
                    "value": 443
                   },
                   "probePort": {
                    "$id": "4380",
                    "kind": "number",
                    "type": {
                     "$ref": "1334"
                    },
                    "value": 443
                   },
                   "probeProtocol": {
                    "$id": "4381",
                    "kind": "string",
                    "type": {
                     "$ref": "190"
                    },
                    "value": "http"
                   },
                   "protocol": {
                    "$id": "4382",
                    "kind": "string",
                    "type": {
                     "$ref": "184"
                    },
                    "value": "http"
                   }
                  }
                 },
                 {
                  "$id": "4383",
                  "kind": "model",
                  "type": {
                   "$ref": "1321"
                  },
                  "value": {
                   "$id": "4384",
                   "backendPort": {
                    "$id": "4385",
                    "kind": "number",
                    "type": {
                     "$ref": "1327"
                    },
                    "value": 10000
                   },
                   "frontendPort": {
                    "$id": "4386",
                    "kind": "number",
                    "type": {
                     "$ref": "1323"
                    },
                    "value": 10000
                   },
                   "probePort": {
                    "$id": "4387",
                    "kind": "number",
                    "type": {
                     "$ref": "1334"
                    },
                    "value": 10000
                   },
                   "probeProtocol": {
                    "$id": "4388",
                    "kind": "string",
                    "type": {
                     "$ref": "190"
                    },
                    "value": "tcp"
                   },
                   "protocol": {
                    "$id": "4389",
                    "kind": "string",
                    "type": {
                     "$ref": "184"
                    },
                    "value": "tcp"
                   }
                  }
                 }
                ]
               },
               "provisioningState": {
                "$id": "4390",
                "kind": "string",
                "type": {
                 "$ref": "70"
                },
                "value": "Succeeded"
               }
              }
             },
             "sku": {
              "$id": "4391",
              "kind": "model",
              "type": {
               "$ref": "1618"
              },
              "value": {
               "$id": "4392",
               "name": {
                "$id": "4393",
                "kind": "string",
                "type": {
                 "$ref": "248"
                },
                "value": "Standard"
               }
              }
             },
             "tags": {
              "$id": "4394",
              "kind": "dict",
              "type": {
               "$ref": "1266"
              },
              "value": {
               "$id": "4395"
              }
             }
            }
           }
          }
         ]
        }
       ]
      },
      {
       "$id": "4396",
       "name": "createOrUpdate",
       "resourceName": "ManagedCluster",
       "doc": "Create or update a Service Fabric managed cluster resource with the specified name.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "4397",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "4398",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "4399",
          "type": {
           "$id": "4400",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4401",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "4402",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4403",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "4404",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4405",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "4406",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4407",
         "name": "contentType",
         "nameInRequest": "Content-Type",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$id": "4408",
          "kind": "constant",
          "valueType": {
           "$id": "4409",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": true,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4410",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "4411",
          "kind": "constant",
          "valueType": {
           "$id": "4412",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4413",
         "name": "parameters",
         "nameInRequest": "parameters",
         "doc": "The cluster resource.",
         "type": {
          "$ref": "1263"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "4414",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "1263"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        },
        {
         "$id": "4415",
         "statusCodes": [
          202
         ],
         "bodyType": {
          "$ref": "1263"
         },
         "headers": [
          {
           "$id": "4416",
           "name": "azureAsyncOperation",
           "nameInResponse": "Azure-AsyncOperation",
           "doc": "A link to the status monitor",
           "type": {
            "$id": "4417",
            "kind": "url",
            "name": "ResourceLocation",
            "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
            "baseType": {
             "$id": "4418",
             "kind": "url",
             "name": "url",
             "crossLanguageDefinitionId": "TypeSpec.url",
             "decorators": []
            },
            "decorators": []
           }
          },
          {
           "$id": "4419",
           "name": "location",
           "nameInResponse": "Location",
           "doc": "The Location header contains the URL where the status of the long running operation can be checked.",
           "type": {
            "$id": "4420",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           }
          }
         ],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "PUT",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}",
       "requestMediaTypes": [
        "application/json"
       ],
       "bufferResponse": true,
       "longRunning": {
        "$id": "4421",
        "finalStateVia": 1,
        "finalResponse": {
         "$id": "4422",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "1263"
         }
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusters.createOrUpdate",
       "decorators": [],
       "examples": [
        {
         "$id": "4423",
         "kind": "http",
         "name": "Put a cluster with maximum parameters",
         "description": "Put a cluster with maximum parameters",
         "filePath": "2024-11-01-preview/ManagedClusterPutOperation_example_max.json",
         "parameters": [
          {
           "$id": "4424",
           "parameter": {
            "$ref": "4397"
           },
           "value": {
            "$id": "4425",
            "kind": "string",
            "type": {
             "$ref": "4398"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "4426",
           "parameter": {
            "$ref": "4405"
           },
           "value": {
            "$id": "4427",
            "kind": "string",
            "type": {
             "$ref": "4406"
            },
            "value": "mycluster"
           }
          },
          {
           "$id": "4428",
           "parameter": {
            "$ref": "4403"
           },
           "value": {
            "$id": "4429",
            "kind": "string",
            "type": {
             "$ref": "4404"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "4430",
           "parameter": {
            "$ref": "4401"
           },
           "value": {
            "$id": "4431",
            "kind": "string",
            "type": {
             "$ref": "4402"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "4432",
           "response": {
            "$ref": "4414"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "4433",
            "kind": "model",
            "type": {
             "$ref": "1263"
            },
            "value": {
             "$id": "4434",
             "name": {
              "$id": "4435",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "myCluster"
             },
             "type": {
              "$id": "4436",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters"
             },
             "etag": {
              "$id": "4437",
              "kind": "string",
              "type": {
               "$ref": "1614"
              },
              "value": "W/\"636462502169240745\""
             },
             "id": {
              "$id": "4438",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster"
             },
             "location": {
              "$id": "4439",
              "kind": "string",
              "type": {
               "$ref": "1272"
              },
              "value": "eastus"
             },
             "properties": {
              "$id": "4440",
              "kind": "model",
              "type": {
               "$ref": "1276"
              },
              "value": {
               "$id": "4441",
               "addonFeatures": {
                "$id": "4442",
                "kind": "array",
                "type": {
                 "$ref": "1432"
                },
                "value": [
                 {
                  "$id": "4443",
                  "kind": "string",
                  "type": {
                   "$ref": "212"
                  },
                  "value": "DnsService"
                 },
                 {
                  "$id": "4444",
                  "kind": "string",
                  "type": {
                   "$ref": "212"
                  },
                  "value": "BackupRestoreService"
                 },
                 {
                  "$id": "4445",
                  "kind": "string",
                  "type": {
                   "$ref": "212"
                  },
                  "value": "ResourceMonitorService"
                 }
                ]
               },
               "adminUserName": {
                "$id": "4446",
                "kind": "string",
                "type": {
                 "$ref": "1312"
                },
                "value": "vmadmin"
               },
               "allocatedOutboundPorts": {
                "$id": "4447",
                "kind": "number",
                "type": {
                 "$ref": "1608"
                },
                "value": 0
               },
               "allowRdpAccess": {
                "$id": "4448",
                "kind": "boolean",
                "type": {
                 "$ref": "1351"
                },
                "value": true
               },
               "applicationTypeVersionsCleanupPolicy": {
                "$id": "4449",
                "kind": "model",
                "type": {
                 "$ref": "1444"
                },
                "value": {
                 "$id": "4450",
                 "maxUnusedVersionsToKeep": {
                  "$id": "4451",
                  "kind": "number",
                  "type": {
                   "$ref": "1446"
                  },
                  "value": 3
                 }
                }
               },
               "autoGeneratedDomainNameLabelScope": {
                "$id": "4452",
                "kind": "string",
                "type": {
                 "$ref": "238"
                },
                "value": "SubscriptionReuse"
               },
               "auxiliarySubnets": {
                "$id": "4453",
                "kind": "array",
                "type": {
                 "$ref": "1473"
                },
                "value": [
                 {
                  "$id": "4454",
                  "kind": "model",
                  "type": {
                   "$ref": "1474"
                  },
                  "value": {
                   "$id": "4455",
                   "name": {
                    "$id": "4456",
                    "kind": "string",
                    "type": {
                     "$ref": "1476"
                    },
                    "value": "testSubnet1"
                   },
                   "enableIpv6": {
                    "$id": "4457",
                    "kind": "boolean",
                    "type": {
                     "$ref": "1480"
                    },
                    "value": true
                   },
                   "networkSecurityGroupId": {
                    "$id": "4458",
                    "kind": "string",
                    "type": {
                     "$ref": "1490"
                    },
                    "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/networkSecurityGroups/sn1"
                   },
                   "privateEndpointNetworkPolicies": {
                    "$id": "4459",
                    "kind": "string",
                    "type": {
                     "$ref": "220"
                    },
                    "value": "enabled"
                   },
                   "privateLinkServiceNetworkPolicies": {
                    "$id": "4460",
                    "kind": "string",
                    "type": {
                     "$ref": "226"
                    },
                    "value": "enabled"
                   }
                  }
                 }
                ]
               },
               "clientConnectionPort": {
                "$id": "4461",
                "kind": "number",
                "type": {
                 "$ref": "1304"
                },
                "value": 19000
               },
               "clusterCertificateThumbprints": {
                "$id": "4462",
                "kind": "array",
                "type": {
                 "$ref": "1299"
                },
                "value": [
                 {
                  "$id": "4463",
                  "kind": "string",
                  "type": {
                   "$ref": "1300"
                  },
                  "value": "12599211F8F14C90AFA9532AD79A6F2CA1C00622"
                 }
                ]
               },
               "clusterCodeVersion": {
                "$id": "4464",
                "kind": "string",
                "type": {
                 "$ref": "1422"
                },
                "value": "7.1.168.9494"
               },
               "clusterId": {
                "$id": "4465",
                "kind": "string",
                "type": {
                 "$ref": "1291"
                },
                "value": "92584666-9889-4ae8-8d02-91902923d37f"
               },
               "clusterState": {
                "$id": "4466",
                "kind": "string",
                "type": {
                 "$ref": "170"
                },
                "value": "WaitingForNodes"
               },
               "clusterUpgradeMode": {
                "$id": "4467",
                "kind": "string",
                "type": {
                 "$ref": "198"
                },
                "value": "Manual"
               },
               "ddosProtectionPlanId": {
                "$id": "4468",
                "kind": "string",
                "type": {
                 "$ref": "1528"
                },
                "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/ddosProtectionPlans/myDDoSProtectionPlan"
               },
               "dnsName": {
                "$id": "4469",
                "kind": "string",
                "type": {
                 "$ref": "1278"
                },
                "value": "mycluster"
               },
               "enableAutoOSUpgrade": {
                "$id": "4470",
                "kind": "boolean",
                "type": {
                 "$ref": "1436"
                },
                "value": true
               },
               "enableHttpGatewayExclusiveAuthMode": {
                "$id": "4471",
                "kind": "boolean",
                "type": {
                 "$ref": "1601"
                },
                "value": true
               },
               "enableIpv6": {
                "$id": "4472",
                "kind": "boolean",
                "type": {
                 "$ref": "1452"
                },
                "value": true
               },
               "enableServicePublicIP": {
                "$id": "4473",
                "kind": "boolean",
                "type": {
                 "$ref": "1469"
                },
                "value": true
               },
               "fabricSettings": {
                "$id": "4474",
                "kind": "array",
                "type": {
                 "$ref": "1397"
                },
                "value": [
                 {
                  "$id": "4475",
                  "kind": "model",
                  "type": {
                   "$ref": "1398"
                  },
                  "value": {
                   "$id": "4476",
                   "name": {
                    "$id": "4477",
                    "kind": "string",
                    "type": {
                     "$ref": "1400"
                    },
                    "value": "ManagedIdentityTokenService"
                   },
                   "parameters": {
                    "$id": "4478",
                    "kind": "array",
                    "type": {
                     "$ref": "1404"
                    },
                    "value": [
                     {
                      "$id": "4479",
                      "kind": "model",
                      "type": {
                       "$ref": "1405"
                      },
                      "value": {
                       "$id": "4480",
                       "name": {
                        "$id": "4481",
                        "kind": "string",
                        "type": {
                         "$ref": "1407"
                        },
                        "value": "IsEnabled"
                       },
                       "value": {
                        "$id": "4482",
                        "kind": "string",
                        "type": {
                         "$ref": "1411"
                        },
                        "value": "true"
                       }
                      }
                     }
                    ]
                   }
                  }
                 }
                ]
               },
               "fqdn": {
                "$id": "4483",
                "kind": "string",
                "type": {
                 "$ref": "1282"
                },
                "value": "mycluster.eastus.cloudapp.azure.com"
               },
               "httpGatewayConnectionPort": {
                "$id": "4484",
                "kind": "number",
                "type": {
                 "$ref": "1308"
                },
                "value": 19080
               },
               "httpGatewayTokenAuthConnectionPort": {
                "$id": "4485",
                "kind": "number",
                "type": {
                 "$ref": "1597"
                },
                "value": 19081
               },
               "ipTags": {
                "$id": "4486",
                "kind": "array",
                "type": {
                 "$ref": "1460"
                },
                "value": [
                 {
                  "$id": "4487",
                  "kind": "model",
                  "type": {
                   "$ref": "997"
                  },
                  "value": {
                   "$id": "4488",
                   "ipTagType": {
                    "$id": "4489",
                    "kind": "string",
                    "type": {
                     "$ref": "999"
                    },
                    "value": "FirstPartyUsage"
                   },
                   "tag": {
                    "$id": "4490",
                    "kind": "string",
                    "type": {
                     "$ref": "1003"
                    },
                    "value": "SQL"
                   }
                  }
                 }
                ]
               },
               "ipv6Address": {
                "$id": "4491",
                "kind": "string",
                "type": {
                 "$ref": "1464"
                },
                "value": "0000:0000:0000:0000:0000:0000:0000:0000"
               },
               "loadBalancingRules": {
                "$id": "4492",
                "kind": "array",
                "type": {
                 "$ref": "1320"
                },
                "value": [
                 {
                  "$id": "4493",
                  "kind": "model",
                  "type": {
                   "$ref": "1321"
                  },
                  "value": {
                   "$id": "4494",
                   "backendPort": {
                    "$id": "4495",
                    "kind": "number",
                    "type": {
                     "$ref": "1327"
                    },
                    "value": 80
                   },
                   "frontendPort": {
                    "$id": "4496",
                    "kind": "number",
                    "type": {
                     "$ref": "1323"
                    },
                    "value": 80
                   },
                   "probePort": {
                    "$id": "4497",
                    "kind": "number",
                    "type": {
                     "$ref": "1334"
                    },
                    "value": 80
                   },
                   "probeProtocol": {
                    "$id": "4498",
                    "kind": "string",
                    "type": {
                     "$ref": "190"
                    },
                    "value": "http"
                   },
                   "protocol": {
                    "$id": "4499",
                    "kind": "string",
                    "type": {
                     "$ref": "184"
                    },
                    "value": "http"
                   }
                  }
                 },
                 {
                  "$id": "4500",
                  "kind": "model",
                  "type": {
                   "$ref": "1321"
                  },
                  "value": {
                   "$id": "4501",
                   "backendPort": {
                    "$id": "4502",
                    "kind": "number",
                    "type": {
                     "$ref": "1327"
                    },
                    "value": 443
                   },
                   "frontendPort": {
                    "$id": "4503",
                    "kind": "number",
                    "type": {
                     "$ref": "1323"
                    },
                    "value": 443
                   },
                   "probePort": {
                    "$id": "4504",
                    "kind": "number",
                    "type": {
                     "$ref": "1334"
                    },
                    "value": 443
                   },
                   "probeProtocol": {
                    "$id": "4505",
                    "kind": "string",
                    "type": {
                     "$ref": "190"
                    },
                    "value": "http"
                   },
                   "protocol": {
                    "$id": "4506",
                    "kind": "string",
                    "type": {
                     "$ref": "184"
                    },
                    "value": "http"
                   }
                  }
                 },
                 {
                  "$id": "4507",
                  "kind": "model",
                  "type": {
                   "$ref": "1321"
                  },
                  "value": {
                   "$id": "4508",
                   "backendPort": {
                    "$id": "4509",
                    "kind": "number",
                    "type": {
                     "$ref": "1327"
                    },
                    "value": 10000
                   },
                   "frontendPort": {
                    "$id": "4510",
                    "kind": "number",
                    "type": {
                     "$ref": "1323"
                    },
                    "value": 10000
                   },
                   "loadDistribution": {
                    "$id": "4511",
                    "kind": "string",
                    "type": {
                     "$ref": "1345"
                    },
                    "value": "Default"
                   },
                   "probePort": {
                    "$id": "4512",
                    "kind": "number",
                    "type": {
                     "$ref": "1334"
                    },
                    "value": 10000
                   },
                   "probeProtocol": {
                    "$id": "4513",
                    "kind": "string",
                    "type": {
                     "$ref": "190"
                    },
                    "value": "tcp"
                   },
                   "protocol": {
                    "$id": "4514",
                    "kind": "string",
                    "type": {
                     "$ref": "184"
                    },
                    "value": "tcp"
                   }
                  }
                 }
                ]
               },
               "networkSecurityRules": {
                "$id": "4515",
                "kind": "array",
                "type": {
                 "$ref": "1355"
                },
                "value": [
                 {
                  "$id": "4516",
                  "kind": "model",
                  "type": {
                   "$ref": "737"
                  },
                  "value": {
                   "$id": "4517",
                   "name": {
                    "$id": "4518",
                    "kind": "string",
                    "type": {
                     "$ref": "739"
                    },
                    "value": "TestName"
                   },
                   "description": {
                    "$id": "4519",
                    "kind": "string",
                    "type": {
                     "$ref": "743"
                    },
                    "value": "Test description"
                   },
                   "access": {
                    "$id": "4520",
                    "kind": "string",
                    "type": {
                     "$ref": "58"
                    },
                    "value": "allow"
                   },
                   "destinationAddressPrefixes": {
                    "$id": "4521",
                    "kind": "array",
                    "type": {
                     "$ref": "755"
                    },
                    "value": [
                     {
                      "$id": "4522",
                      "kind": "string",
                      "type": {
                       "$ref": "756"
                      },
                      "value": "*"
                     }
                    ]
                   },
                   "destinationPortRanges": {
                    "$id": "4523",
                    "kind": "array",
                    "type": {
                     "$ref": "765"
                    },
                    "value": [
                     {
                      "$id": "4524",
                      "kind": "string",
                      "type": {
                       "$ref": "766"
                      },
                      "value": "*"
                     }
                    ]
                   },
                   "direction": {
                    "$id": "4525",
                    "kind": "string",
                    "type": {
                     "$ref": "64"
                    },
                    "value": "inbound"
                   },
                   "priority": {
                    "$id": "4526",
                    "kind": "number",
                    "type": {
                     "$ref": "789"
                    },
                    "value": 1010
                   },
                   "sourceAddressPrefixes": {
                    "$id": "4527",
                    "kind": "array",
                    "type": {
                     "$ref": "750"
                    },
                    "value": [
                     {
                      "$id": "4528",
                      "kind": "string",
                      "type": {
                       "$ref": "751"
                      },
                      "value": "*"
                     }
                    ]
                   },
                   "sourcePortRanges": {
                    "$id": "4529",
                    "kind": "array",
                    "type": {
                     "$ref": "760"
                    },
                    "value": [
                     {
                      "$id": "4530",
                      "kind": "string",
                      "type": {
                       "$ref": "761"
                      },
                      "value": "*"
                     }
                    ]
                   },
                   "protocol": {
                    "$id": "4531",
                    "kind": "string",
                    "type": {
                     "$ref": "42"
                    },
                    "value": "tcp"
                   }
                  }
                 },
                 {
                  "$id": "4532",
                  "kind": "model",
                  "type": {
                   "$ref": "737"
                  },
                  "value": {
                   "$id": "4533",
                   "name": {
                    "$id": "4534",
                    "kind": "string",
                    "type": {
                     "$ref": "739"
                    },
                    "value": "AllowARM"
                   },
                   "access": {
                    "$id": "4535",
                    "kind": "string",
                    "type": {
                     "$ref": "58"
                    },
                    "value": "allow"
                   },
                   "destinationAddressPrefix": {
                    "$id": "4536",
                    "kind": "string",
                    "type": {
                     "$ref": "774"
                    },
                    "value": "*"
                   },
                   "destinationPortRange": {
                    "$id": "4537",
                    "kind": "string",
                    "type": {
                     "$ref": "782"
                    },
                    "value": "33500-33699"
                   },
                   "direction": {
                    "$id": "4538",
                    "kind": "string",
                    "type": {
                     "$ref": "64"
                    },
                    "value": "inbound"
                   },
                   "priority": {
                    "$id": "4539",
                    "kind": "number",
                    "type": {
                     "$ref": "789"
                    },
                    "value": 2002
                   },
                   "sourceAddressPrefix": {
                    "$id": "4540",
                    "kind": "string",
                    "type": {
                     "$ref": "770"
                    },
                    "value": "AzureResourceManager"
                   },
                   "sourcePortRange": {
                    "$id": "4541",
                    "kind": "string",
                    "type": {
                     "$ref": "778"
                    },
                    "value": "*"
                   },
                   "protocol": {
                    "$id": "4542",
                    "kind": "string",
                    "type": {
                     "$ref": "42"
                    },
                    "value": "*"
                   }
                  }
                 }
                ]
               },
               "provisioningState": {
                "$id": "4543",
                "kind": "string",
                "type": {
                 "$ref": "70"
                },
                "value": "Creating"
               },
               "publicIPPrefixId": {
                "$id": "4544",
                "kind": "string",
                "type": {
                 "$ref": "1518"
                },
                "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.Network/publicIPPrefixes/myPublicIPPrefix"
               },
               "publicIPv6PrefixId": {
                "$id": "4545",
                "kind": "string",
                "type": {
                 "$ref": "1523"
                },
                "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.Network/publicIPPrefixes/myPublicIPv6Prefix"
               },
               "serviceEndpoints": {
                "$id": "4546",
                "kind": "array",
                "type": {
                 "$ref": "1497"
                },
                "value": [
                 {
                  "$id": "4547",
                  "kind": "model",
                  "type": {
                   "$ref": "1498"
                  },
                  "value": {
                   "$id": "4548",
                   "locations": {
                    "$id": "4549",
                    "kind": "array",
                    "type": {
                     "$ref": "1504"
                    },
                    "value": [
                     {
                      "$id": "4550",
                      "kind": "string",
                      "type": {
                       "$ref": "1505"
                      },
                      "value": "eastus2"
                     },
                     {
                      "$id": "4551",
                      "kind": "string",
                      "type": {
                       "$ref": "1505"
                      },
                      "value": "usnorth"
                     }
                    ]
                   },
                   "service": {
                    "$id": "4552",
                    "kind": "string",
                    "type": {
                     "$ref": "1500"
                    },
                    "value": "Microsoft.Storage"
                   }
                  }
                 }
                ]
               },
               "upgradeDescription": {
                "$id": "4553",
                "kind": "model",
                "type": {
                 "$ref": "1533"
                },
                "value": {
                 "$id": "4554",
                 "deltaHealthPolicy": {
                  "$id": "4555",
                  "kind": "model",
                  "type": {
                   "$ref": "1551"
                  },
                  "value": {
                   "$id": "4556",
                   "maxPercentDeltaUnhealthyApplications": {
                    "$id": "4557",
                    "kind": "number",
                    "type": {
                     "$ref": "1561"
                    },
                    "value": 40
                   },
                   "maxPercentDeltaUnhealthyNodes": {
                    "$id": "4558",
                    "kind": "number",
                    "type": {
                     "$ref": "1553"
                    },
                    "value": 20
                   },
                   "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
                    "$id": "4559",
                    "kind": "number",
                    "type": {
                     "$ref": "1557"
                    },
                    "value": 40
                   }
                  }
                 },
                 "forceRestart": {
                  "$id": "4560",
                  "kind": "boolean",
                  "type": {
                   "$ref": "1535"
                  },
                  "value": false
                 },
                 "healthPolicy": {
                  "$id": "4561",
                  "kind": "model",
                  "type": {
                   "$ref": "1539"
                  },
                  "value": {
                   "$id": "4562",
                   "maxPercentUnhealthyApplications": {
                    "$id": "4563",
                    "kind": "number",
                    "type": {
                     "$ref": "1545"
                    },
                    "value": 30
                   },
                   "maxPercentUnhealthyNodes": {
                    "$id": "4564",
                    "kind": "number",
                    "type": {
                     "$ref": "1541"
                    },
                    "value": 10
                   }
                  }
                 },
                 "monitoringPolicy": {
                  "$id": "4565",
                  "kind": "model",
                  "type": {
                   "$ref": "1567"
                  },
                  "value": {
                   "$id": "4566",
                   "healthCheckRetryTimeout": {
                    "$id": "4567",
                    "kind": "string",
                    "type": {
                     "$ref": "1577"
                    },
                    "value": "00:55:00"
                   },
                   "healthCheckStableDuration": {
                    "$id": "4568",
                    "kind": "string",
                    "type": {
                     "$ref": "1573"
                    },
                    "value": "00:45:00"
                   },
                   "healthCheckWaitDuration": {
                    "$id": "4569",
                    "kind": "string",
                    "type": {
                     "$ref": "1569"
                    },
                    "value": "00:05:00"
                   },
                   "upgradeDomainTimeout": {
                    "$id": "4570",
                    "kind": "string",
                    "type": {
                     "$ref": "1585"
                    },
                    "value": "03:00:00"
                   },
                   "upgradeTimeout": {
                    "$id": "4571",
                    "kind": "string",
                    "type": {
                     "$ref": "1581"
                    },
                    "value": "12:00:00"
                   }
                  }
                 },
                 "upgradeReplicaSetCheckTimeout": {
                  "$id": "4572",
                  "kind": "string",
                  "type": {
                   "$ref": "1591"
                  },
                  "value": "49710.06:28:16"
                 }
                }
               },
               "useCustomVnet": {
                "$id": "4573",
                "kind": "boolean",
                "type": {
                 "$ref": "1514"
                },
                "value": true
               },
               "zonalResiliency": {
                "$id": "4574",
                "kind": "boolean",
                "type": {
                 "$ref": "1440"
                },
                "value": true
               },
               "zonalUpdateMode": {
                "$id": "4575",
                "kind": "string",
                "type": {
                 "$ref": "232"
                },
                "value": "Fast"
               }
              }
             },
             "sku": {
              "$id": "4576",
              "kind": "model",
              "type": {
               "$ref": "1618"
              },
              "value": {
               "$id": "4577",
               "name": {
                "$id": "4578",
                "kind": "string",
                "type": {
                 "$ref": "248"
                },
                "value": "Basic"
               }
              }
             },
             "tags": {
              "$id": "4579",
              "kind": "dict",
              "type": {
               "$ref": "1266"
              },
              "value": {
               "$id": "4580"
              }
             }
            }
           }
          },
          {
           "$id": "4581",
           "response": {
            "$ref": "4415"
           },
           "statusCode": 202,
           "bodyValue": {
            "$id": "4582",
            "kind": "model",
            "type": {
             "$ref": "1263"
            },
            "value": {
             "$id": "4583",
             "name": {
              "$id": "4584",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "mycluster"
             },
             "type": {
              "$id": "4585",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters"
             },
             "etag": {
              "$id": "4586",
              "kind": "string",
              "type": {
               "$ref": "1614"
              },
              "value": "W/\"636462502169240745\""
             },
             "id": {
              "$id": "4587",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster"
             },
             "location": {
              "$id": "4588",
              "kind": "string",
              "type": {
               "$ref": "1272"
              },
              "value": "eastus"
             },
             "properties": {
              "$id": "4589",
              "kind": "model",
              "type": {
               "$ref": "1276"
              },
              "value": {
               "$id": "4590",
               "addonFeatures": {
                "$id": "4591",
                "kind": "array",
                "type": {
                 "$ref": "1432"
                },
                "value": [
                 {
                  "$id": "4592",
                  "kind": "string",
                  "type": {
                   "$ref": "212"
                  },
                  "value": "DnsService"
                 },
                 {
                  "$id": "4593",
                  "kind": "string",
                  "type": {
                   "$ref": "212"
                  },
                  "value": "BackupRestoreService"
                 },
                 {
                  "$id": "4594",
                  "kind": "string",
                  "type": {
                   "$ref": "212"
                  },
                  "value": "ResourceMonitorService"
                 }
                ]
               },
               "adminUserName": {
                "$id": "4595",
                "kind": "string",
                "type": {
                 "$ref": "1312"
                },
                "value": "vmadmin"
               },
               "allocatedOutboundPorts": {
                "$id": "4596",
                "kind": "number",
                "type": {
                 "$ref": "1608"
                },
                "value": 0
               },
               "allowRdpAccess": {
                "$id": "4597",
                "kind": "boolean",
                "type": {
                 "$ref": "1351"
                },
                "value": true
               },
               "applicationTypeVersionsCleanupPolicy": {
                "$id": "4598",
                "kind": "model",
                "type": {
                 "$ref": "1444"
                },
                "value": {
                 "$id": "4599",
                 "maxUnusedVersionsToKeep": {
                  "$id": "4600",
                  "kind": "number",
                  "type": {
                   "$ref": "1446"
                  },
                  "value": 3
                 }
                }
               },
               "autoGeneratedDomainNameLabelScope": {
                "$id": "4601",
                "kind": "string",
                "type": {
                 "$ref": "238"
                },
                "value": "SubscriptionReuse"
               },
               "auxiliarySubnets": {
                "$id": "4602",
                "kind": "array",
                "type": {
                 "$ref": "1473"
                },
                "value": [
                 {
                  "$id": "4603",
                  "kind": "model",
                  "type": {
                   "$ref": "1474"
                  },
                  "value": {
                   "$id": "4604",
                   "name": {
                    "$id": "4605",
                    "kind": "string",
                    "type": {
                     "$ref": "1476"
                    },
                    "value": "testSubnet1"
                   },
                   "enableIpv6": {
                    "$id": "4606",
                    "kind": "boolean",
                    "type": {
                     "$ref": "1480"
                    },
                    "value": true
                   },
                   "networkSecurityGroupId": {
                    "$id": "4607",
                    "kind": "string",
                    "type": {
                     "$ref": "1490"
                    },
                    "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/networkSecurityGroups/sn1"
                   },
                   "privateEndpointNetworkPolicies": {
                    "$id": "4608",
                    "kind": "string",
                    "type": {
                     "$ref": "220"
                    },
                    "value": "enabled"
                   },
                   "privateLinkServiceNetworkPolicies": {
                    "$id": "4609",
                    "kind": "string",
                    "type": {
                     "$ref": "226"
                    },
                    "value": "enabled"
                   }
                  }
                 }
                ]
               },
               "clientConnectionPort": {
                "$id": "4610",
                "kind": "number",
                "type": {
                 "$ref": "1304"
                },
                "value": 19000
               },
               "clusterCertificateThumbprints": {
                "$id": "4611",
                "kind": "array",
                "type": {
                 "$ref": "1299"
                },
                "value": [
                 {
                  "$id": "4612",
                  "kind": "string",
                  "type": {
                   "$ref": "1300"
                  },
                  "value": "12599211F8F14C90AFA9532AD79A6F2CA1C00622"
                 }
                ]
               },
               "clusterCodeVersion": {
                "$id": "4613",
                "kind": "string",
                "type": {
                 "$ref": "1422"
                },
                "value": "7.1.168.9494"
               },
               "clusterId": {
                "$id": "4614",
                "kind": "string",
                "type": {
                 "$ref": "1291"
                },
                "value": "92584666-9889-4ae8-8d02-91902923d37f"
               },
               "clusterState": {
                "$id": "4615",
                "kind": "string",
                "type": {
                 "$ref": "170"
                },
                "value": "WaitingForNodes"
               },
               "clusterUpgradeMode": {
                "$id": "4616",
                "kind": "string",
                "type": {
                 "$ref": "198"
                },
                "value": "Manual"
               },
               "ddosProtectionPlanId": {
                "$id": "4617",
                "kind": "string",
                "type": {
                 "$ref": "1528"
                },
                "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/ddosProtectionPlans/myDDoSProtectionPlan"
               },
               "dnsName": {
                "$id": "4618",
                "kind": "string",
                "type": {
                 "$ref": "1278"
                },
                "value": "mycluster"
               },
               "enableAutoOSUpgrade": {
                "$id": "4619",
                "kind": "boolean",
                "type": {
                 "$ref": "1436"
                },
                "value": true
               },
               "enableHttpGatewayExclusiveAuthMode": {
                "$id": "4620",
                "kind": "boolean",
                "type": {
                 "$ref": "1601"
                },
                "value": true
               },
               "enableIpv6": {
                "$id": "4621",
                "kind": "boolean",
                "type": {
                 "$ref": "1452"
                },
                "value": true
               },
               "enableServicePublicIP": {
                "$id": "4622",
                "kind": "boolean",
                "type": {
                 "$ref": "1469"
                },
                "value": true
               },
               "fabricSettings": {
                "$id": "4623",
                "kind": "array",
                "type": {
                 "$ref": "1397"
                },
                "value": [
                 {
                  "$id": "4624",
                  "kind": "model",
                  "type": {
                   "$ref": "1398"
                  },
                  "value": {
                   "$id": "4625",
                   "name": {
                    "$id": "4626",
                    "kind": "string",
                    "type": {
                     "$ref": "1400"
                    },
                    "value": "ManagedIdentityTokenService"
                   },
                   "parameters": {
                    "$id": "4627",
                    "kind": "array",
                    "type": {
                     "$ref": "1404"
                    },
                    "value": [
                     {
                      "$id": "4628",
                      "kind": "model",
                      "type": {
                       "$ref": "1405"
                      },
                      "value": {
                       "$id": "4629",
                       "name": {
                        "$id": "4630",
                        "kind": "string",
                        "type": {
                         "$ref": "1407"
                        },
                        "value": "IsEnabled"
                       },
                       "value": {
                        "$id": "4631",
                        "kind": "string",
                        "type": {
                         "$ref": "1411"
                        },
                        "value": "true"
                       }
                      }
                     }
                    ]
                   }
                  }
                 }
                ]
               },
               "fqdn": {
                "$id": "4632",
                "kind": "string",
                "type": {
                 "$ref": "1282"
                },
                "value": "mycluster.eastus.cloudapp.azure.com"
               },
               "httpGatewayConnectionPort": {
                "$id": "4633",
                "kind": "number",
                "type": {
                 "$ref": "1308"
                },
                "value": 19080
               },
               "httpGatewayTokenAuthConnectionPort": {
                "$id": "4634",
                "kind": "number",
                "type": {
                 "$ref": "1597"
                },
                "value": 19081
               },
               "ipTags": {
                "$id": "4635",
                "kind": "array",
                "type": {
                 "$ref": "1460"
                },
                "value": [
                 {
                  "$id": "4636",
                  "kind": "model",
                  "type": {
                   "$ref": "997"
                  },
                  "value": {
                   "$id": "4637",
                   "ipTagType": {
                    "$id": "4638",
                    "kind": "string",
                    "type": {
                     "$ref": "999"
                    },
                    "value": "FirstPartyUsage"
                   },
                   "tag": {
                    "$id": "4639",
                    "kind": "string",
                    "type": {
                     "$ref": "1003"
                    },
                    "value": "SQL"
                   }
                  }
                 }
                ]
               },
               "loadBalancingRules": {
                "$id": "4640",
                "kind": "array",
                "type": {
                 "$ref": "1320"
                },
                "value": [
                 {
                  "$id": "4641",
                  "kind": "model",
                  "type": {
                   "$ref": "1321"
                  },
                  "value": {
                   "$id": "4642",
                   "backendPort": {
                    "$id": "4643",
                    "kind": "number",
                    "type": {
                     "$ref": "1327"
                    },
                    "value": 80
                   },
                   "frontendPort": {
                    "$id": "4644",
                    "kind": "number",
                    "type": {
                     "$ref": "1323"
                    },
                    "value": 80
                   },
                   "probePort": {
                    "$id": "4645",
                    "kind": "number",
                    "type": {
                     "$ref": "1334"
                    },
                    "value": 80
                   },
                   "probeProtocol": {
                    "$id": "4646",
                    "kind": "string",
                    "type": {
                     "$ref": "190"
                    },
                    "value": "http"
                   },
                   "protocol": {
                    "$id": "4647",
                    "kind": "string",
                    "type": {
                     "$ref": "184"
                    },
                    "value": "http"
                   }
                  }
                 },
                 {
                  "$id": "4648",
                  "kind": "model",
                  "type": {
                   "$ref": "1321"
                  },
                  "value": {
                   "$id": "4649",
                   "backendPort": {
                    "$id": "4650",
                    "kind": "number",
                    "type": {
                     "$ref": "1327"
                    },
                    "value": 443
                   },
                   "frontendPort": {
                    "$id": "4651",
                    "kind": "number",
                    "type": {
                     "$ref": "1323"
                    },
                    "value": 443
                   },
                   "probePort": {
                    "$id": "4652",
                    "kind": "number",
                    "type": {
                     "$ref": "1334"
                    },
                    "value": 443
                   },
                   "probeProtocol": {
                    "$id": "4653",
                    "kind": "string",
                    "type": {
                     "$ref": "190"
                    },
                    "value": "http"
                   },
                   "protocol": {
                    "$id": "4654",
                    "kind": "string",
                    "type": {
                     "$ref": "184"
                    },
                    "value": "http"
                   }
                  }
                 },
                 {
                  "$id": "4655",
                  "kind": "model",
                  "type": {
                   "$ref": "1321"
                  },
                  "value": {
                   "$id": "4656",
                   "backendPort": {
                    "$id": "4657",
                    "kind": "number",
                    "type": {
                     "$ref": "1327"
                    },
                    "value": 10000
                   },
                   "frontendPort": {
                    "$id": "4658",
                    "kind": "number",
                    "type": {
                     "$ref": "1323"
                    },
                    "value": 10000
                   },
                   "loadDistribution": {
                    "$id": "4659",
                    "kind": "string",
                    "type": {
                     "$ref": "1345"
                    },
                    "value": "Default"
                   },
                   "probePort": {
                    "$id": "4660",
                    "kind": "number",
                    "type": {
                     "$ref": "1334"
                    },
                    "value": 10000
                   },
                   "probeProtocol": {
                    "$id": "4661",
                    "kind": "string",
                    "type": {
                     "$ref": "190"
                    },
                    "value": "tcp"
                   },
                   "protocol": {
                    "$id": "4662",
                    "kind": "string",
                    "type": {
                     "$ref": "184"
                    },
                    "value": "tcp"
                   }
                  }
                 }
                ]
               },
               "networkSecurityRules": {
                "$id": "4663",
                "kind": "array",
                "type": {
                 "$ref": "1355"
                },
                "value": [
                 {
                  "$id": "4664",
                  "kind": "model",
                  "type": {
                   "$ref": "737"
                  },
                  "value": {
                   "$id": "4665",
                   "name": {
                    "$id": "4666",
                    "kind": "string",
                    "type": {
                     "$ref": "739"
                    },
                    "value": "TestName"
                   },
                   "description": {
                    "$id": "4667",
                    "kind": "string",
                    "type": {
                     "$ref": "743"
                    },
                    "value": "Test description"
                   },
                   "access": {
                    "$id": "4668",
                    "kind": "string",
                    "type": {
                     "$ref": "58"
                    },
                    "value": "allow"
                   },
                   "destinationAddressPrefixes": {
                    "$id": "4669",
                    "kind": "array",
                    "type": {
                     "$ref": "755"
                    },
                    "value": [
                     {
                      "$id": "4670",
                      "kind": "string",
                      "type": {
                       "$ref": "756"
                      },
                      "value": "*"
                     }
                    ]
                   },
                   "destinationPortRanges": {
                    "$id": "4671",
                    "kind": "array",
                    "type": {
                     "$ref": "765"
                    },
                    "value": [
                     {
                      "$id": "4672",
                      "kind": "string",
                      "type": {
                       "$ref": "766"
                      },
                      "value": "*"
                     }
                    ]
                   },
                   "direction": {
                    "$id": "4673",
                    "kind": "string",
                    "type": {
                     "$ref": "64"
                    },
                    "value": "inbound"
                   },
                   "priority": {
                    "$id": "4674",
                    "kind": "number",
                    "type": {
                     "$ref": "789"
                    },
                    "value": 1010
                   },
                   "sourceAddressPrefixes": {
                    "$id": "4675",
                    "kind": "array",
                    "type": {
                     "$ref": "750"
                    },
                    "value": [
                     {
                      "$id": "4676",
                      "kind": "string",
                      "type": {
                       "$ref": "751"
                      },
                      "value": "*"
                     }
                    ]
                   },
                   "sourcePortRanges": {
                    "$id": "4677",
                    "kind": "array",
                    "type": {
                     "$ref": "760"
                    },
                    "value": [
                     {
                      "$id": "4678",
                      "kind": "string",
                      "type": {
                       "$ref": "761"
                      },
                      "value": "*"
                     }
                    ]
                   },
                   "protocol": {
                    "$id": "4679",
                    "kind": "string",
                    "type": {
                     "$ref": "42"
                    },
                    "value": "tcp"
                   }
                  }
                 },
                 {
                  "$id": "4680",
                  "kind": "model",
                  "type": {
                   "$ref": "737"
                  },
                  "value": {
                   "$id": "4681",
                   "name": {
                    "$id": "4682",
                    "kind": "string",
                    "type": {
                     "$ref": "739"
                    },
                    "value": "AllowARM"
                   },
                   "access": {
                    "$id": "4683",
                    "kind": "string",
                    "type": {
                     "$ref": "58"
                    },
                    "value": "allow"
                   },
                   "destinationAddressPrefix": {
                    "$id": "4684",
                    "kind": "string",
                    "type": {
                     "$ref": "774"
                    },
                    "value": "*"
                   },
                   "destinationPortRange": {
                    "$id": "4685",
                    "kind": "string",
                    "type": {
                     "$ref": "782"
                    },
                    "value": "33500-33699"
                   },
                   "direction": {
                    "$id": "4686",
                    "kind": "string",
                    "type": {
                     "$ref": "64"
                    },
                    "value": "inbound"
                   },
                   "priority": {
                    "$id": "4687",
                    "kind": "number",
                    "type": {
                     "$ref": "789"
                    },
                    "value": 2002
                   },
                   "sourceAddressPrefix": {
                    "$id": "4688",
                    "kind": "string",
                    "type": {
                     "$ref": "770"
                    },
                    "value": "AzureResourceManager"
                   },
                   "sourcePortRange": {
                    "$id": "4689",
                    "kind": "string",
                    "type": {
                     "$ref": "778"
                    },
                    "value": "*"
                   },
                   "protocol": {
                    "$id": "4690",
                    "kind": "string",
                    "type": {
                     "$ref": "42"
                    },
                    "value": "*"
                   }
                  }
                 }
                ]
               },
               "provisioningState": {
                "$id": "4691",
                "kind": "string",
                "type": {
                 "$ref": "70"
                },
                "value": "Updating"
               },
               "publicIPPrefixId": {
                "$id": "4692",
                "kind": "string",
                "type": {
                 "$ref": "1518"
                },
                "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.Network/publicIPPrefixes/myPublicIPPrefix"
               },
               "publicIPv6PrefixId": {
                "$id": "4693",
                "kind": "string",
                "type": {
                 "$ref": "1523"
                },
                "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.Network/publicIPPrefixes/myPublicIPv6Prefix"
               },
               "serviceEndpoints": {
                "$id": "4694",
                "kind": "array",
                "type": {
                 "$ref": "1497"
                },
                "value": [
                 {
                  "$id": "4695",
                  "kind": "model",
                  "type": {
                   "$ref": "1498"
                  },
                  "value": {
                   "$id": "4696",
                   "locations": {
                    "$id": "4697",
                    "kind": "array",
                    "type": {
                     "$ref": "1504"
                    },
                    "value": [
                     {
                      "$id": "4698",
                      "kind": "string",
                      "type": {
                       "$ref": "1505"
                      },
                      "value": "eastus2"
                     },
                     {
                      "$id": "4699",
                      "kind": "string",
                      "type": {
                       "$ref": "1505"
                      },
                      "value": "usnorth"
                     }
                    ]
                   },
                   "service": {
                    "$id": "4700",
                    "kind": "string",
                    "type": {
                     "$ref": "1500"
                    },
                    "value": "Microsoft.Storage"
                   }
                  }
                 }
                ]
               },
               "upgradeDescription": {
                "$id": "4701",
                "kind": "model",
                "type": {
                 "$ref": "1533"
                },
                "value": {
                 "$id": "4702",
                 "deltaHealthPolicy": {
                  "$id": "4703",
                  "kind": "model",
                  "type": {
                   "$ref": "1551"
                  },
                  "value": {
                   "$id": "4704",
                   "maxPercentDeltaUnhealthyApplications": {
                    "$id": "4705",
                    "kind": "number",
                    "type": {
                     "$ref": "1561"
                    },
                    "value": 40
                   },
                   "maxPercentDeltaUnhealthyNodes": {
                    "$id": "4706",
                    "kind": "number",
                    "type": {
                     "$ref": "1553"
                    },
                    "value": 20
                   },
                   "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
                    "$id": "4707",
                    "kind": "number",
                    "type": {
                     "$ref": "1557"
                    },
                    "value": 40
                   }
                  }
                 },
                 "forceRestart": {
                  "$id": "4708",
                  "kind": "boolean",
                  "type": {
                   "$ref": "1535"
                  },
                  "value": false
                 },
                 "healthPolicy": {
                  "$id": "4709",
                  "kind": "model",
                  "type": {
                   "$ref": "1539"
                  },
                  "value": {
                   "$id": "4710",
                   "maxPercentUnhealthyApplications": {
                    "$id": "4711",
                    "kind": "number",
                    "type": {
                     "$ref": "1545"
                    },
                    "value": 30
                   },
                   "maxPercentUnhealthyNodes": {
                    "$id": "4712",
                    "kind": "number",
                    "type": {
                     "$ref": "1541"
                    },
                    "value": 10
                   }
                  }
                 },
                 "monitoringPolicy": {
                  "$id": "4713",
                  "kind": "model",
                  "type": {
                   "$ref": "1567"
                  },
                  "value": {
                   "$id": "4714",
                   "healthCheckRetryTimeout": {
                    "$id": "4715",
                    "kind": "string",
                    "type": {
                     "$ref": "1577"
                    },
                    "value": "00:55:00"
                   },
                   "healthCheckStableDuration": {
                    "$id": "4716",
                    "kind": "string",
                    "type": {
                     "$ref": "1573"
                    },
                    "value": "00:45:00"
                   },
                   "healthCheckWaitDuration": {
                    "$id": "4717",
                    "kind": "string",
                    "type": {
                     "$ref": "1569"
                    },
                    "value": "00:05:00"
                   },
                   "upgradeDomainTimeout": {
                    "$id": "4718",
                    "kind": "string",
                    "type": {
                     "$ref": "1585"
                    },
                    "value": "03:00:00"
                   },
                   "upgradeTimeout": {
                    "$id": "4719",
                    "kind": "string",
                    "type": {
                     "$ref": "1581"
                    },
                    "value": "12:00:00"
                   }
                  }
                 }
                }
               },
               "useCustomVnet": {
                "$id": "4720",
                "kind": "boolean",
                "type": {
                 "$ref": "1514"
                },
                "value": true
               },
               "zonalResiliency": {
                "$id": "4721",
                "kind": "boolean",
                "type": {
                 "$ref": "1440"
                },
                "value": true
               },
               "zonalUpdateMode": {
                "$id": "4722",
                "kind": "string",
                "type": {
                 "$ref": "232"
                },
                "value": "Fast"
               }
              }
             },
             "sku": {
              "$id": "4723",
              "kind": "model",
              "type": {
               "$ref": "1618"
              },
              "value": {
               "$id": "4724",
               "name": {
                "$id": "4725",
                "kind": "string",
                "type": {
                 "$ref": "248"
                },
                "value": "Basic"
               }
              }
             },
             "tags": {
              "$id": "4726",
              "kind": "dict",
              "type": {
               "$ref": "1266"
              },
              "value": {
               "$id": "4727"
              }
             }
            }
           }
          }
         ]
        },
        {
         "$id": "4728",
         "kind": "http",
         "name": "Put a cluster with minimum parameters",
         "description": "Put a cluster with minimum parameters",
         "filePath": "2024-11-01-preview/ManagedClusterPutOperation_example_min.json",
         "parameters": [
          {
           "$id": "4729",
           "parameter": {
            "$ref": "4397"
           },
           "value": {
            "$id": "4730",
            "kind": "string",
            "type": {
             "$ref": "4398"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "4731",
           "parameter": {
            "$ref": "4405"
           },
           "value": {
            "$id": "4732",
            "kind": "string",
            "type": {
             "$ref": "4406"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "4733",
           "parameter": {
            "$ref": "4403"
           },
           "value": {
            "$id": "4734",
            "kind": "string",
            "type": {
             "$ref": "4404"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "4735",
           "parameter": {
            "$ref": "4401"
           },
           "value": {
            "$id": "4736",
            "kind": "string",
            "type": {
             "$ref": "4402"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "4737",
           "response": {
            "$ref": "4414"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "4738",
            "kind": "model",
            "type": {
             "$ref": "1263"
            },
            "value": {
             "$id": "4739",
             "name": {
              "$id": "4740",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "myCluster"
             },
             "type": {
              "$id": "4741",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters"
             },
             "etag": {
              "$id": "4742",
              "kind": "string",
              "type": {
               "$ref": "1614"
              },
              "value": "W/\"636462502169240745\""
             },
             "id": {
              "$id": "4743",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster"
             },
             "location": {
              "$id": "4744",
              "kind": "string",
              "type": {
               "$ref": "1272"
              },
              "value": "eastus"
             },
             "properties": {
              "$id": "4745",
              "kind": "model",
              "type": {
               "$ref": "1276"
              },
              "value": {
               "$id": "4746",
               "adminUserName": {
                "$id": "4747",
                "kind": "string",
                "type": {
                 "$ref": "1312"
                },
                "value": "vmadmin"
               },
               "clientConnectionPort": {
                "$id": "4748",
                "kind": "number",
                "type": {
                 "$ref": "1304"
                },
                "value": 19000
               },
               "clusterCertificateThumbprints": {
                "$id": "4749",
                "kind": "array",
                "type": {
                 "$ref": "1299"
                },
                "value": [
                 {
                  "$id": "4750",
                  "kind": "string",
                  "type": {
                   "$ref": "1300"
                  },
                  "value": "12599211F8F14C90AFA9532AD79A6F2CA1C00622"
                 }
                ]
               },
               "clusterId": {
                "$id": "4751",
                "kind": "string",
                "type": {
                 "$ref": "1291"
                },
                "value": "92584666-9889-4ae8-8d02-91902923d37f"
               },
               "clusterState": {
                "$id": "4752",
                "kind": "string",
                "type": {
                 "$ref": "170"
                },
                "value": "WaitingForNodes"
               },
               "clusterUpgradeCadence": {
                "$id": "4753",
                "kind": "string",
                "type": {
                 "$ref": "204"
                },
                "value": "Wave1"
               },
               "clusterUpgradeMode": {
                "$id": "4754",
                "kind": "string",
                "type": {
                 "$ref": "198"
                },
                "value": "Automatic"
               },
               "dnsName": {
                "$id": "4755",
                "kind": "string",
                "type": {
                 "$ref": "1278"
                },
                "value": "myCluster"
               },
               "fabricSettings": {
                "$id": "4756",
                "kind": "array",
                "type": {
                 "$ref": "1397"
                },
                "value": [
                 {
                  "$id": "4757",
                  "kind": "model",
                  "type": {
                   "$ref": "1398"
                  },
                  "value": {
                   "$id": "4758",
                   "name": {
                    "$id": "4759",
                    "kind": "string",
                    "type": {
                     "$ref": "1400"
                    },
                    "value": "ManagedIdentityTokenService"
                   },
                   "parameters": {
                    "$id": "4760",
                    "kind": "array",
                    "type": {
                     "$ref": "1404"
                    },
                    "value": [
                     {
                      "$id": "4761",
                      "kind": "model",
                      "type": {
                       "$ref": "1405"
                      },
                      "value": {
                       "$id": "4762",
                       "name": {
                        "$id": "4763",
                        "kind": "string",
                        "type": {
                         "$ref": "1407"
                        },
                        "value": "IsEnabled"
                       },
                       "value": {
                        "$id": "4764",
                        "kind": "string",
                        "type": {
                         "$ref": "1411"
                        },
                        "value": "true"
                       }
                      }
                     }
                    ]
                   }
                  }
                 }
                ]
               },
               "fqdn": {
                "$id": "4765",
                "kind": "string",
                "type": {
                 "$ref": "1282"
                },
                "value": "MyCluster.eastus.cloudapp.azure.com"
               },
               "httpGatewayConnectionPort": {
                "$id": "4766",
                "kind": "number",
                "type": {
                 "$ref": "1308"
                },
                "value": 19080
               },
               "loadBalancingRules": {
                "$id": "4767",
                "kind": "array",
                "type": {
                 "$ref": "1320"
                },
                "value": []
               },
               "provisioningState": {
                "$id": "4768",
                "kind": "string",
                "type": {
                 "$ref": "70"
                },
                "value": "Creating"
               }
              }
             },
             "sku": {
              "$id": "4769",
              "kind": "model",
              "type": {
               "$ref": "1618"
              },
              "value": {
               "$id": "4770",
               "name": {
                "$id": "4771",
                "kind": "string",
                "type": {
                 "$ref": "248"
                },
                "value": "Basic"
               }
              }
             },
             "tags": {
              "$id": "4772",
              "kind": "dict",
              "type": {
               "$ref": "1266"
              },
              "value": {
               "$id": "4773"
              }
             }
            }
           }
          },
          {
           "$id": "4774",
           "response": {
            "$ref": "4415"
           },
           "statusCode": 202,
           "bodyValue": {
            "$id": "4775",
            "kind": "model",
            "type": {
             "$ref": "1263"
            },
            "value": {
             "$id": "4776",
             "name": {
              "$id": "4777",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "myCluster"
             },
             "type": {
              "$id": "4778",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters"
             },
             "etag": {
              "$id": "4779",
              "kind": "string",
              "type": {
               "$ref": "1614"
              },
              "value": "W/\"636462502169240745\""
             },
             "id": {
              "$id": "4780",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster"
             },
             "location": {
              "$id": "4781",
              "kind": "string",
              "type": {
               "$ref": "1272"
              },
              "value": "eastus"
             },
             "properties": {
              "$id": "4782",
              "kind": "model",
              "type": {
               "$ref": "1276"
              },
              "value": {
               "$id": "4783",
               "adminUserName": {
                "$id": "4784",
                "kind": "string",
                "type": {
                 "$ref": "1312"
                },
                "value": "vmadmin"
               },
               "clientConnectionPort": {
                "$id": "4785",
                "kind": "number",
                "type": {
                 "$ref": "1304"
                },
                "value": 19000
               },
               "clusterCertificateThumbprints": {
                "$id": "4786",
                "kind": "array",
                "type": {
                 "$ref": "1299"
                },
                "value": [
                 {
                  "$id": "4787",
                  "kind": "string",
                  "type": {
                   "$ref": "1300"
                  },
                  "value": "12599211F8F14C90AFA9532AD79A6F2CA1C00622"
                 }
                ]
               },
               "clusterId": {
                "$id": "4788",
                "kind": "string",
                "type": {
                 "$ref": "1291"
                },
                "value": "92584666-9889-4ae8-8d02-91902923d37f"
               },
               "clusterState": {
                "$id": "4789",
                "kind": "string",
                "type": {
                 "$ref": "170"
                },
                "value": "WaitingForNodes"
               },
               "clusterUpgradeCadence": {
                "$id": "4790",
                "kind": "string",
                "type": {
                 "$ref": "204"
                },
                "value": "Wave1"
               },
               "clusterUpgradeMode": {
                "$id": "4791",
                "kind": "string",
                "type": {
                 "$ref": "198"
                },
                "value": "Automatic"
               },
               "dnsName": {
                "$id": "4792",
                "kind": "string",
                "type": {
                 "$ref": "1278"
                },
                "value": "myCluster"
               },
               "fabricSettings": {
                "$id": "4793",
                "kind": "array",
                "type": {
                 "$ref": "1397"
                },
                "value": [
                 {
                  "$id": "4794",
                  "kind": "model",
                  "type": {
                   "$ref": "1398"
                  },
                  "value": {
                   "$id": "4795",
                   "name": {
                    "$id": "4796",
                    "kind": "string",
                    "type": {
                     "$ref": "1400"
                    },
                    "value": "ManagedIdentityTokenService"
                   },
                   "parameters": {
                    "$id": "4797",
                    "kind": "array",
                    "type": {
                     "$ref": "1404"
                    },
                    "value": [
                     {
                      "$id": "4798",
                      "kind": "model",
                      "type": {
                       "$ref": "1405"
                      },
                      "value": {
                       "$id": "4799",
                       "name": {
                        "$id": "4800",
                        "kind": "string",
                        "type": {
                         "$ref": "1407"
                        },
                        "value": "IsEnabled"
                       },
                       "value": {
                        "$id": "4801",
                        "kind": "string",
                        "type": {
                         "$ref": "1411"
                        },
                        "value": "true"
                       }
                      }
                     }
                    ]
                   }
                  }
                 }
                ]
               },
               "fqdn": {
                "$id": "4802",
                "kind": "string",
                "type": {
                 "$ref": "1282"
                },
                "value": "MyCluster.eastus.cloudapp.azure.com"
               },
               "httpGatewayConnectionPort": {
                "$id": "4803",
                "kind": "number",
                "type": {
                 "$ref": "1308"
                },
                "value": 19080
               },
               "loadBalancingRules": {
                "$id": "4804",
                "kind": "array",
                "type": {
                 "$ref": "1320"
                },
                "value": []
               },
               "provisioningState": {
                "$id": "4805",
                "kind": "string",
                "type": {
                 "$ref": "70"
                },
                "value": "Updating"
               }
              }
             },
             "sku": {
              "$id": "4806",
              "kind": "model",
              "type": {
               "$ref": "1618"
              },
              "value": {
               "$id": "4807",
               "name": {
                "$id": "4808",
                "kind": "string",
                "type": {
                 "$ref": "248"
                },
                "value": "Basic"
               }
              }
             },
             "tags": {
              "$id": "4809",
              "kind": "dict",
              "type": {
               "$ref": "1266"
              },
              "value": {
               "$id": "4810"
              }
             }
            }
           }
          }
         ]
        }
       ]
      },
      {
       "$id": "4811",
       "name": "update",
       "resourceName": "ManagedCluster",
       "doc": "Update the tags of of a Service Fabric managed cluster resource with the specified name.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "4812",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "4813",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "4814",
          "type": {
           "$id": "4815",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4816",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "4817",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4818",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "4819",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4820",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "4821",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4822",
         "name": "contentType",
         "nameInRequest": "Content-Type",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$id": "4823",
          "kind": "constant",
          "valueType": {
           "$id": "4824",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": true,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4825",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "4826",
          "kind": "constant",
          "valueType": {
           "$id": "4827",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4828",
         "name": "parameters",
         "nameInRequest": "parameters",
         "doc": "The managed cluster resource updated tags.",
         "type": {
          "$ref": "1624"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "4829",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "1263"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "PATCH",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}",
       "requestMediaTypes": [
        "application/json"
       ],
       "bufferResponse": true,
       "generateProtocolMethod": true,
       "generateConvenienceMethod": false,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusters.update",
       "decorators": [],
       "examples": [
        {
         "$id": "4830",
         "kind": "http",
         "name": "Patch a managed cluster",
         "description": "Patch a managed cluster",
         "filePath": "2024-11-01-preview/ManagedClusterPatchOperation_example.json",
         "parameters": [
          {
           "$id": "4831",
           "parameter": {
            "$ref": "4812"
           },
           "value": {
            "$id": "4832",
            "kind": "string",
            "type": {
             "$ref": "4813"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "4833",
           "parameter": {
            "$ref": "4820"
           },
           "value": {
            "$id": "4834",
            "kind": "string",
            "type": {
             "$ref": "4821"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "4835",
           "parameter": {
            "$ref": "4818"
           },
           "value": {
            "$id": "4836",
            "kind": "string",
            "type": {
             "$ref": "4819"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "4837",
           "parameter": {
            "$ref": "4816"
           },
           "value": {
            "$id": "4838",
            "kind": "string",
            "type": {
             "$ref": "4817"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "4839",
           "response": {
            "$ref": "4829"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "4840",
            "kind": "model",
            "type": {
             "$ref": "1263"
            },
            "value": {
             "$id": "4841",
             "name": {
              "$id": "4842",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "myCluster"
             },
             "type": {
              "$id": "4843",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters"
             },
             "etag": {
              "$id": "4844",
              "kind": "string",
              "type": {
               "$ref": "1614"
              },
              "value": "W/\"636462502169240745\""
             },
             "id": {
              "$id": "4845",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster"
             },
             "location": {
              "$id": "4846",
              "kind": "string",
              "type": {
               "$ref": "1272"
              },
              "value": "eastus"
             },
             "properties": {
              "$id": "4847",
              "kind": "model",
              "type": {
               "$ref": "1276"
              },
              "value": {
               "$id": "4848",
               "addonFeatures": {
                "$id": "4849",
                "kind": "array",
                "type": {
                 "$ref": "1432"
                },
                "value": [
                 {
                  "$id": "4850",
                  "kind": "string",
                  "type": {
                   "$ref": "212"
                  },
                  "value": "DnsService"
                 },
                 {
                  "$id": "4851",
                  "kind": "string",
                  "type": {
                   "$ref": "212"
                  },
                  "value": "BackupRestoreService"
                 },
                 {
                  "$id": "4852",
                  "kind": "string",
                  "type": {
                   "$ref": "212"
                  },
                  "value": "ResourceMonitorService"
                 }
                ]
               },
               "adminUserName": {
                "$id": "4853",
                "kind": "string",
                "type": {
                 "$ref": "1312"
                },
                "value": "vmadmin"
               },
               "allowRdpAccess": {
                "$id": "4854",
                "kind": "boolean",
                "type": {
                 "$ref": "1351"
                },
                "value": true
               },
               "clientConnectionPort": {
                "$id": "4855",
                "kind": "number",
                "type": {
                 "$ref": "1304"
                },
                "value": 19001
               },
               "clusterCertificateThumbprints": {
                "$id": "4856",
                "kind": "array",
                "type": {
                 "$ref": "1299"
                },
                "value": [
                 {
                  "$id": "4857",
                  "kind": "string",
                  "type": {
                   "$ref": "1300"
                  },
                  "value": "12599211F8F14C90AFA9532AD79A6F2CA1C00622"
                 }
                ]
               },
               "clusterCodeVersion": {
                "$id": "4858",
                "kind": "string",
                "type": {
                 "$ref": "1422"
                },
                "value": "7.1.168.9494"
               },
               "clusterId": {
                "$id": "4859",
                "kind": "string",
                "type": {
                 "$ref": "1291"
                },
                "value": "92584666-9889-4ae8-8d02-91902923d37f"
               },
               "clusterState": {
                "$id": "4860",
                "kind": "string",
                "type": {
                 "$ref": "170"
                },
                "value": "WaitingForNodes"
               },
               "clusterUpgradeCadence": {
                "$id": "4861",
                "kind": "string",
                "type": {
                 "$ref": "204"
                },
                "value": "Wave0"
               },
               "clusterUpgradeMode": {
                "$id": "4862",
                "kind": "string",
                "type": {
                 "$ref": "198"
                },
                "value": "Automatic"
               },
               "dnsName": {
                "$id": "4863",
                "kind": "string",
                "type": {
                 "$ref": "1278"
                },
                "value": "myCluster"
               },
               "enableAutoOSUpgrade": {
                "$id": "4864",
                "kind": "boolean",
                "type": {
                 "$ref": "1436"
                },
                "value": true
               },
               "fabricSettings": {
                "$id": "4865",
                "kind": "array",
                "type": {
                 "$ref": "1397"
                },
                "value": [
                 {
                  "$id": "4866",
                  "kind": "model",
                  "type": {
                   "$ref": "1398"
                  },
                  "value": {
                   "$id": "4867",
                   "name": {
                    "$id": "4868",
                    "kind": "string",
                    "type": {
                     "$ref": "1400"
                    },
                    "value": "ManagedIdentityTokenService"
                   },
                   "parameters": {
                    "$id": "4869",
                    "kind": "array",
                    "type": {
                     "$ref": "1404"
                    },
                    "value": [
                     {
                      "$id": "4870",
                      "kind": "model",
                      "type": {
                       "$ref": "1405"
                      },
                      "value": {
                       "$id": "4871",
                       "name": {
                        "$id": "4872",
                        "kind": "string",
                        "type": {
                         "$ref": "1407"
                        },
                        "value": "IsEnabled"
                       },
                       "value": {
                        "$id": "4873",
                        "kind": "string",
                        "type": {
                         "$ref": "1411"
                        },
                        "value": "false"
                       }
                      }
                     }
                    ]
                   }
                  }
                 }
                ]
               },
               "fqdn": {
                "$id": "4874",
                "kind": "string",
                "type": {
                 "$ref": "1282"
                },
                "value": "MyCluster.eastus.cloudapp.azure.com"
               },
               "httpGatewayConnectionPort": {
                "$id": "4875",
                "kind": "number",
                "type": {
                 "$ref": "1308"
                },
                "value": 19081
               },
               "loadBalancingRules": {
                "$id": "4876",
                "kind": "array",
                "type": {
                 "$ref": "1320"
                },
                "value": [
                 {
                  "$id": "4877",
                  "kind": "model",
                  "type": {
                   "$ref": "1321"
                  },
                  "value": {
                   "$id": "4878",
                   "backendPort": {
                    "$id": "4879",
                    "kind": "number",
                    "type": {
                     "$ref": "1327"
                    },
                    "value": 80
                   },
                   "frontendPort": {
                    "$id": "4880",
                    "kind": "number",
                    "type": {
                     "$ref": "1323"
                    },
                    "value": 80
                   },
                   "probePort": {
                    "$id": "4881",
                    "kind": "number",
                    "type": {
                     "$ref": "1334"
                    },
                    "value": 80
                   },
                   "probeProtocol": {
                    "$id": "4882",
                    "kind": "string",
                    "type": {
                     "$ref": "190"
                    },
                    "value": "http"
                   },
                   "protocol": {
                    "$id": "4883",
                    "kind": "string",
                    "type": {
                     "$ref": "184"
                    },
                    "value": "http"
                   }
                  }
                 },
                 {
                  "$id": "4884",
                  "kind": "model",
                  "type": {
                   "$ref": "1321"
                  },
                  "value": {
                   "$id": "4885",
                   "backendPort": {
                    "$id": "4886",
                    "kind": "number",
                    "type": {
                     "$ref": "1327"
                    },
                    "value": 443
                   },
                   "frontendPort": {
                    "$id": "4887",
                    "kind": "number",
                    "type": {
                     "$ref": "1323"
                    },
                    "value": 443
                   },
                   "probePort": {
                    "$id": "4888",
                    "kind": "number",
                    "type": {
                     "$ref": "1334"
                    },
                    "value": 443
                   },
                   "probeProtocol": {
                    "$id": "4889",
                    "kind": "string",
                    "type": {
                     "$ref": "190"
                    },
                    "value": "http"
                   },
                   "protocol": {
                    "$id": "4890",
                    "kind": "string",
                    "type": {
                     "$ref": "184"
                    },
                    "value": "http"
                   }
                  }
                 },
                 {
                  "$id": "4891",
                  "kind": "model",
                  "type": {
                   "$ref": "1321"
                  },
                  "value": {
                   "$id": "4892",
                   "backendPort": {
                    "$id": "4893",
                    "kind": "number",
                    "type": {
                     "$ref": "1327"
                    },
                    "value": 10000
                   },
                   "frontendPort": {
                    "$id": "4894",
                    "kind": "number",
                    "type": {
                     "$ref": "1323"
                    },
                    "value": 10000
                   },
                   "probePort": {
                    "$id": "4895",
                    "kind": "number",
                    "type": {
                     "$ref": "1334"
                    },
                    "value": 10000
                   },
                   "probeProtocol": {
                    "$id": "4896",
                    "kind": "string",
                    "type": {
                     "$ref": "190"
                    },
                    "value": "http"
                   },
                   "protocol": {
                    "$id": "4897",
                    "kind": "string",
                    "type": {
                     "$ref": "184"
                    },
                    "value": "tcp"
                   }
                  }
                 }
                ]
               },
               "networkSecurityRules": {
                "$id": "4898",
                "kind": "array",
                "type": {
                 "$ref": "1355"
                },
                "value": [
                 {
                  "$id": "4899",
                  "kind": "model",
                  "type": {
                   "$ref": "737"
                  },
                  "value": {
                   "$id": "4900",
                   "name": {
                    "$id": "4901",
                    "kind": "string",
                    "type": {
                     "$ref": "739"
                    },
                    "value": "TestName"
                   },
                   "description": {
                    "$id": "4902",
                    "kind": "string",
                    "type": {
                     "$ref": "743"
                    },
                    "value": "Test description"
                   },
                   "access": {
                    "$id": "4903",
                    "kind": "string",
                    "type": {
                     "$ref": "58"
                    },
                    "value": "allow"
                   },
                   "destinationAddressPrefixes": {
                    "$id": "4904",
                    "kind": "array",
                    "type": {
                     "$ref": "755"
                    },
                    "value": [
                     {
                      "$id": "4905",
                      "kind": "string",
                      "type": {
                       "$ref": "756"
                      },
                      "value": "*"
                     }
                    ]
                   },
                   "destinationPortRanges": {
                    "$id": "4906",
                    "kind": "array",
                    "type": {
                     "$ref": "765"
                    },
                    "value": [
                     {
                      "$id": "4907",
                      "kind": "string",
                      "type": {
                       "$ref": "766"
                      },
                      "value": "*"
                     }
                    ]
                   },
                   "direction": {
                    "$id": "4908",
                    "kind": "string",
                    "type": {
                     "$ref": "64"
                    },
                    "value": "inbound"
                   },
                   "priority": {
                    "$id": "4909",
                    "kind": "number",
                    "type": {
                     "$ref": "789"
                    },
                    "value": 1010
                   },
                   "sourceAddressPrefixes": {
                    "$id": "4910",
                    "kind": "array",
                    "type": {
                     "$ref": "750"
                    },
                    "value": [
                     {
                      "$id": "4911",
                      "kind": "string",
                      "type": {
                       "$ref": "751"
                      },
                      "value": "*"
                     }
                    ]
                   },
                   "sourcePortRanges": {
                    "$id": "4912",
                    "kind": "array",
                    "type": {
                     "$ref": "760"
                    },
                    "value": [
                     {
                      "$id": "4913",
                      "kind": "string",
                      "type": {
                       "$ref": "761"
                      },
                      "value": "*"
                     }
                    ]
                   },
                   "protocol": {
                    "$id": "4914",
                    "kind": "string",
                    "type": {
                     "$ref": "42"
                    },
                    "value": "tcp"
                   }
                  }
                 }
                ]
               },
               "provisioningState": {
                "$id": "4915",
                "kind": "string",
                "type": {
                 "$ref": "70"
                },
                "value": "Succeeded"
               }
              }
             },
             "sku": {
              "$id": "4916",
              "kind": "model",
              "type": {
               "$ref": "1618"
              },
              "value": {
               "$id": "4917",
               "name": {
                "$id": "4918",
                "kind": "string",
                "type": {
                 "$ref": "248"
                },
                "value": "Standard"
               }
              }
             },
             "tags": {
              "$id": "4919",
              "kind": "dict",
              "type": {
               "$ref": "1266"
              },
              "value": {
               "$id": "4920",
               "a": {
                "$id": "4921",
                "kind": "string",
                "type": {
                 "$ref": "1268"
                },
                "value": "b"
               }
              }
             }
            }
           }
          }
         ]
        }
       ]
      },
      {
       "$id": "4922",
       "name": "delete",
       "resourceName": "ManagedCluster",
       "doc": "Delete a Service Fabric managed cluster resource with the specified name.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "4923",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "4924",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "4925",
          "type": {
           "$id": "4926",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4927",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "4928",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4929",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "4930",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4931",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "4932",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4933",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "4934",
          "kind": "constant",
          "valueType": {
           "$id": "4935",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "4936",
         "statusCodes": [
          202
         ],
         "headers": [
          {
           "$id": "4937",
           "name": "azureAsyncOperation",
           "nameInResponse": "Azure-AsyncOperation",
           "doc": "A link to the status monitor",
           "type": {
            "$id": "4938",
            "kind": "url",
            "name": "ResourceLocation",
            "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
            "baseType": {
             "$id": "4939",
             "kind": "url",
             "name": "url",
             "crossLanguageDefinitionId": "TypeSpec.url",
             "decorators": []
            },
            "decorators": []
           }
          },
          {
           "$id": "4940",
           "name": "location",
           "nameInResponse": "Location",
           "doc": "The Location header contains the URL where the status of the long running operation can be checked.",
           "type": {
            "$id": "4941",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           }
          }
         ],
         "isErrorResponse": false
        },
        {
         "$id": "4942",
         "statusCodes": [
          204
         ],
         "headers": [],
         "isErrorResponse": false
        }
       ],
       "httpMethod": "DELETE",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}",
       "bufferResponse": true,
       "longRunning": {
        "$id": "4943",
        "finalStateVia": 1,
        "finalResponse": {
         "$id": "4944",
         "statusCodes": [
          204
         ]
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusters.delete",
       "decorators": [],
       "examples": [
        {
         "$id": "4945",
         "kind": "http",
         "name": "Delete a cluster",
         "description": "Delete a cluster",
         "filePath": "2024-11-01-preview/ManagedClusterDeleteOperation_example.json",
         "parameters": [
          {
           "$id": "4946",
           "parameter": {
            "$ref": "4923"
           },
           "value": {
            "$id": "4947",
            "kind": "string",
            "type": {
             "$ref": "4924"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "4948",
           "parameter": {
            "$ref": "4931"
           },
           "value": {
            "$id": "4949",
            "kind": "string",
            "type": {
             "$ref": "4932"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "4950",
           "parameter": {
            "$ref": "4929"
           },
           "value": {
            "$id": "4951",
            "kind": "string",
            "type": {
             "$ref": "4930"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "4952",
           "parameter": {
            "$ref": "4927"
           },
           "value": {
            "$id": "4953",
            "kind": "string",
            "type": {
             "$ref": "4928"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "4954",
           "response": {
            "$ref": "4936"
           },
           "statusCode": 202
          },
          {
           "$id": "4955",
           "response": {
            "$ref": "4942"
           },
           "statusCode": 204
          }
         ]
        }
       ]
      },
      {
       "$id": "4956",
       "name": "listByResourceGroup",
       "resourceName": "ManagedCluster",
       "doc": "Gets all Service Fabric cluster resources created or in the process of being created in the resource group.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "4957",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "4958",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "4959",
          "type": {
           "$id": "4960",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4961",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "4962",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4963",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "4964",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "4965",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "4966",
          "kind": "constant",
          "valueType": {
           "$id": "4967",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "4968",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "1631"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "GET",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters",
       "bufferResponse": true,
       "paging": {
        "$id": "4969",
        "itemPropertySegments": [
         "value"
        ],
        "nextLink": {
         "$id": "4970",
         "responseSegments": [
          "nextLink"
         ],
         "responseLocation": "Body"
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusters.listByResourceGroup",
       "decorators": [],
       "examples": [
        {
         "$id": "4971",
         "kind": "http",
         "name": "List cluster by resource group",
         "description": "List cluster by resource group",
         "filePath": "2024-11-01-preview/ManagedClusterListByResourceGroupOperation_example.json",
         "parameters": [
          {
           "$id": "4972",
           "parameter": {
            "$ref": "4957"
           },
           "value": {
            "$id": "4973",
            "kind": "string",
            "type": {
             "$ref": "4958"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "4974",
           "parameter": {
            "$ref": "4963"
           },
           "value": {
            "$id": "4975",
            "kind": "string",
            "type": {
             "$ref": "4964"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "4976",
           "parameter": {
            "$ref": "4961"
           },
           "value": {
            "$id": "4977",
            "kind": "string",
            "type": {
             "$ref": "4962"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "4978",
           "response": {
            "$ref": "4968"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "4979",
            "kind": "model",
            "type": {
             "$ref": "1631"
            },
            "value": {
             "$id": "4980",
             "nextLink": {
              "$id": "4981",
              "kind": "string",
              "type": {
               "$ref": "1637"
              },
              "value": "http://examplelink.com"
             },
             "value": {
              "$id": "4982",
              "kind": "array",
              "type": {
               "$ref": "1633"
              },
              "value": [
               {
                "$id": "4983",
                "kind": "model",
                "type": {
                 "$ref": "1263"
                },
                "value": {
                 "$id": "4984",
                 "name": {
                  "$id": "4985",
                  "kind": "string",
                  "type": {
                   "$ref": "507"
                  },
                  "value": "myCluster"
                 },
                 "type": {
                  "$id": "4986",
                  "kind": "string",
                  "type": {
                   "$ref": "511"
                  },
                  "value": "Microsoft.ServiceFabric/managedClusters"
                 },
                 "etag": {
                  "$id": "4987",
                  "kind": "string",
                  "type": {
                   "$ref": "1614"
                  },
                  "value": "W/\"636462502169240745\""
                 },
                 "id": {
                  "$id": "4988",
                  "kind": "string",
                  "type": {
                   "$ref": "503"
                  },
                  "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster"
                 },
                 "location": {
                  "$id": "4989",
                  "kind": "string",
                  "type": {
                   "$ref": "1272"
                  },
                  "value": "eastus"
                 },
                 "properties": {
                  "$id": "4990",
                  "kind": "model",
                  "type": {
                   "$ref": "1276"
                  },
                  "value": {
                   "$id": "4991",
                   "adminUserName": {
                    "$id": "4992",
                    "kind": "string",
                    "type": {
                     "$ref": "1312"
                    },
                    "value": "vmadmin"
                   },
                   "clientConnectionPort": {
                    "$id": "4993",
                    "kind": "number",
                    "type": {
                     "$ref": "1304"
                    },
                    "value": 19000
                   },
                   "clusterCertificateThumbprints": {
                    "$id": "4994",
                    "kind": "array",
                    "type": {
                     "$ref": "1299"
                    },
                    "value": [
                     {
                      "$id": "4995",
                      "kind": "string",
                      "type": {
                       "$ref": "1300"
                      },
                      "value": "12599211F8F14C90AFA9532AD79A6F2CA1C00622"
                     }
                    ]
                   },
                   "clusterCodeVersion": {
                    "$id": "4996",
                    "kind": "string",
                    "type": {
                     "$ref": "1422"
                    },
                    "value": "7.1.168.9494"
                   },
                   "clusterId": {
                    "$id": "4997",
                    "kind": "string",
                    "type": {
                     "$ref": "1291"
                    },
                    "value": "92584666-9889-4ae8-8d02-91902923d37f"
                   },
                   "clusterState": {
                    "$id": "4998",
                    "kind": "string",
                    "type": {
                     "$ref": "170"
                    },
                    "value": "WaitingForNodes"
                   },
                   "clusterUpgradeCadence": {
                    "$id": "4999",
                    "kind": "string",
                    "type": {
                     "$ref": "204"
                    },
                    "value": "Wave0"
                   },
                   "clusterUpgradeMode": {
                    "$id": "5000",
                    "kind": "string",
                    "type": {
                     "$ref": "198"
                    },
                    "value": "Automatic"
                   },
                   "dnsName": {
                    "$id": "5001",
                    "kind": "string",
                    "type": {
                     "$ref": "1278"
                    },
                    "value": "myCluster"
                   },
                   "fabricSettings": {
                    "$id": "5002",
                    "kind": "array",
                    "type": {
                     "$ref": "1397"
                    },
                    "value": [
                     {
                      "$id": "5003",
                      "kind": "model",
                      "type": {
                       "$ref": "1398"
                      },
                      "value": {
                       "$id": "5004",
                       "name": {
                        "$id": "5005",
                        "kind": "string",
                        "type": {
                         "$ref": "1400"
                        },
                        "value": "ManagedIdentityTokenService"
                       },
                       "parameters": {
                        "$id": "5006",
                        "kind": "array",
                        "type": {
                         "$ref": "1404"
                        },
                        "value": [
                         {
                          "$id": "5007",
                          "kind": "model",
                          "type": {
                           "$ref": "1405"
                          },
                          "value": {
                           "$id": "5008",
                           "name": {
                            "$id": "5009",
                            "kind": "string",
                            "type": {
                             "$ref": "1407"
                            },
                            "value": "IsEnabled"
                           },
                           "value": {
                            "$id": "5010",
                            "kind": "string",
                            "type": {
                             "$ref": "1411"
                            },
                            "value": "true"
                           }
                          }
                         }
                        ]
                       }
                      }
                     }
                    ]
                   },
                   "fqdn": {
                    "$id": "5011",
                    "kind": "string",
                    "type": {
                     "$ref": "1282"
                    },
                    "value": "MyCluster.eastus.cloudapp.azure.com"
                   },
                   "httpGatewayConnectionPort": {
                    "$id": "5012",
                    "kind": "number",
                    "type": {
                     "$ref": "1308"
                    },
                    "value": 19080
                   },
                   "loadBalancingRules": {
                    "$id": "5013",
                    "kind": "array",
                    "type": {
                     "$ref": "1320"
                    },
                    "value": []
                   },
                   "provisioningState": {
                    "$id": "5014",
                    "kind": "string",
                    "type": {
                     "$ref": "70"
                    },
                    "value": "Succeeded"
                   }
                  }
                 },
                 "sku": {
                  "$id": "5015",
                  "kind": "model",
                  "type": {
                   "$ref": "1618"
                  },
                  "value": {
                   "$id": "5016",
                   "name": {
                    "$id": "5017",
                    "kind": "string",
                    "type": {
                     "$ref": "248"
                    },
                    "value": "Standard"
                   }
                  }
                 },
                 "tags": {
                  "$id": "5018",
                  "kind": "dict",
                  "type": {
                   "$ref": "1266"
                  },
                  "value": {
                   "$id": "5019"
                  }
                 }
                }
               },
               {
                "$id": "5020",
                "kind": "model",
                "type": {
                 "$ref": "1263"
                },
                "value": {
                 "$id": "5021",
                 "name": {
                  "$id": "5022",
                  "kind": "string",
                  "type": {
                   "$ref": "507"
                  },
                  "value": "myCluster2"
                 },
                 "type": {
                  "$id": "5023",
                  "kind": "string",
                  "type": {
                   "$ref": "511"
                  },
                  "value": "Microsoft.ServiceFabric/managedClusters"
                 },
                 "etag": {
                  "$id": "5024",
                  "kind": "string",
                  "type": {
                   "$ref": "1614"
                  },
                  "value": "W/\"636462502164040075\""
                 },
                 "id": {
                  "$id": "5025",
                  "kind": "string",
                  "type": {
                   "$ref": "503"
                  },
                  "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster2"
                 },
                 "location": {
                  "$id": "5026",
                  "kind": "string",
                  "type": {
                   "$ref": "1272"
                  },
                  "value": "eastus"
                 },
                 "properties": {
                  "$id": "5027",
                  "kind": "model",
                  "type": {
                   "$ref": "1276"
                  },
                  "value": {
                   "$id": "5028",
                   "adminUserName": {
                    "$id": "5029",
                    "kind": "string",
                    "type": {
                     "$ref": "1312"
                    },
                    "value": "vmadmin"
                   },
                   "clientConnectionPort": {
                    "$id": "5030",
                    "kind": "number",
                    "type": {
                     "$ref": "1304"
                    },
                    "value": 19000
                   },
                   "clusterCertificateThumbprints": {
                    "$id": "5031",
                    "kind": "array",
                    "type": {
                     "$ref": "1299"
                    },
                    "value": [
                     {
                      "$id": "5032",
                      "kind": "string",
                      "type": {
                       "$ref": "1300"
                      },
                      "value": "12599211F8F14C90AFA9532AD79A6F2CA1C00622"
                     }
                    ]
                   },
                   "clusterCodeVersion": {
                    "$id": "5033",
                    "kind": "string",
                    "type": {
                     "$ref": "1422"
                    },
                    "value": "7.1.168.9494"
                   },
                   "clusterId": {
                    "$id": "5034",
                    "kind": "string",
                    "type": {
                     "$ref": "1291"
                    },
                    "value": "2747e469-b24e-4039-8a0a-46151419523f"
                   },
                   "clusterState": {
                    "$id": "5035",
                    "kind": "string",
                    "type": {
                     "$ref": "170"
                    },
                    "value": "WaitingForNodes"
                   },
                   "clusterUpgradeCadence": {
                    "$id": "5036",
                    "kind": "string",
                    "type": {
                     "$ref": "204"
                    },
                    "value": "Wave0"
                   },
                   "clusterUpgradeMode": {
                    "$id": "5037",
                    "kind": "string",
                    "type": {
                     "$ref": "198"
                    },
                    "value": "Automatic"
                   },
                   "dnsName": {
                    "$id": "5038",
                    "kind": "string",
                    "type": {
                     "$ref": "1278"
                    },
                    "value": "myCluster2"
                   },
                   "fabricSettings": {
                    "$id": "5039",
                    "kind": "array",
                    "type": {
                     "$ref": "1397"
                    },
                    "value": [
                     {
                      "$id": "5040",
                      "kind": "model",
                      "type": {
                       "$ref": "1398"
                      },
                      "value": {
                       "$id": "5041",
                       "name": {
                        "$id": "5042",
                        "kind": "string",
                        "type": {
                         "$ref": "1400"
                        },
                        "value": "ManagedIdentityTokenService"
                       },
                       "parameters": {
                        "$id": "5043",
                        "kind": "array",
                        "type": {
                         "$ref": "1404"
                        },
                        "value": [
                         {
                          "$id": "5044",
                          "kind": "model",
                          "type": {
                           "$ref": "1405"
                          },
                          "value": {
                           "$id": "5045",
                           "name": {
                            "$id": "5046",
                            "kind": "string",
                            "type": {
                             "$ref": "1407"
                            },
                            "value": "IsEnabled"
                           },
                           "value": {
                            "$id": "5047",
                            "kind": "string",
                            "type": {
                             "$ref": "1411"
                            },
                            "value": "true"
                           }
                          }
                         }
                        ]
                       }
                      }
                     }
                    ]
                   },
                   "fqdn": {
                    "$id": "5048",
                    "kind": "string",
                    "type": {
                     "$ref": "1282"
                    },
                    "value": "MyCluster.eastus.cloudapp.azure.com"
                   },
                   "httpGatewayConnectionPort": {
                    "$id": "5049",
                    "kind": "number",
                    "type": {
                     "$ref": "1308"
                    },
                    "value": 19080
                   },
                   "loadBalancingRules": {
                    "$id": "5050",
                    "kind": "array",
                    "type": {
                     "$ref": "1320"
                    },
                    "value": []
                   },
                   "provisioningState": {
                    "$id": "5051",
                    "kind": "string",
                    "type": {
                     "$ref": "70"
                    },
                    "value": "Succeeded"
                   }
                  }
                 },
                 "sku": {
                  "$id": "5052",
                  "kind": "model",
                  "type": {
                   "$ref": "1618"
                  },
                  "value": {
                   "$id": "5053",
                   "name": {
                    "$id": "5054",
                    "kind": "string",
                    "type": {
                     "$ref": "248"
                    },
                    "value": "Standard"
                   }
                  }
                 },
                 "tags": {
                  "$id": "5055",
                  "kind": "dict",
                  "type": {
                   "$ref": "1266"
                  },
                  "value": {
                   "$id": "5056"
                  }
                 }
                }
               }
              ]
             }
            }
           }
          }
         ]
        }
       ]
      },
      {
       "$id": "5057",
       "name": "listBySubscription",
       "resourceName": "ManagedCluster",
       "doc": "Gets all Service Fabric cluster resources created or in the process of being created in the subscription.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "5058",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "5059",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "5060",
          "type": {
           "$id": "5061",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5062",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "5063",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5064",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "5065",
          "kind": "constant",
          "valueType": {
           "$id": "5066",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "5067",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "1631"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "GET",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/managedClusters",
       "bufferResponse": true,
       "paging": {
        "$id": "5068",
        "itemPropertySegments": [
         "value"
        ],
        "nextLink": {
         "$id": "5069",
         "responseSegments": [
          "nextLink"
         ],
         "responseLocation": "Body"
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusters.listBySubscription",
       "decorators": [],
       "examples": [
        {
         "$id": "5070",
         "kind": "http",
         "name": "List managed clusters",
         "description": "List managed clusters",
         "filePath": "2024-11-01-preview/ManagedClusterListBySubscriptionOperation_example.json",
         "parameters": [
          {
           "$id": "5071",
           "parameter": {
            "$ref": "5058"
           },
           "value": {
            "$id": "5072",
            "kind": "string",
            "type": {
             "$ref": "5059"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "5073",
           "parameter": {
            "$ref": "5062"
           },
           "value": {
            "$id": "5074",
            "kind": "string",
            "type": {
             "$ref": "5063"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "5075",
           "response": {
            "$ref": "5067"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "5076",
            "kind": "model",
            "type": {
             "$ref": "1631"
            },
            "value": {
             "$id": "5077",
             "nextLink": {
              "$id": "5078",
              "kind": "string",
              "type": {
               "$ref": "1637"
              },
              "value": "http://examplelink.com"
             },
             "value": {
              "$id": "5079",
              "kind": "array",
              "type": {
               "$ref": "1633"
              },
              "value": [
               {
                "$id": "5080",
                "kind": "model",
                "type": {
                 "$ref": "1263"
                },
                "value": {
                 "$id": "5081",
                 "name": {
                  "$id": "5082",
                  "kind": "string",
                  "type": {
                   "$ref": "507"
                  },
                  "value": "myCluster"
                 },
                 "type": {
                  "$id": "5083",
                  "kind": "string",
                  "type": {
                   "$ref": "511"
                  },
                  "value": "Microsoft.ServiceFabric/managedClusters"
                 },
                 "etag": {
                  "$id": "5084",
                  "kind": "string",
                  "type": {
                   "$ref": "1614"
                  },
                  "value": "W/\"636462502169240745\""
                 },
                 "id": {
                  "$id": "5085",
                  "kind": "string",
                  "type": {
                   "$ref": "503"
                  },
                  "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster"
                 },
                 "location": {
                  "$id": "5086",
                  "kind": "string",
                  "type": {
                   "$ref": "1272"
                  },
                  "value": "eastus"
                 },
                 "properties": {
                  "$id": "5087",
                  "kind": "model",
                  "type": {
                   "$ref": "1276"
                  },
                  "value": {
                   "$id": "5088",
                   "adminUserName": {
                    "$id": "5089",
                    "kind": "string",
                    "type": {
                     "$ref": "1312"
                    },
                    "value": "vmadmin"
                   },
                   "clientConnectionPort": {
                    "$id": "5090",
                    "kind": "number",
                    "type": {
                     "$ref": "1304"
                    },
                    "value": 19000
                   },
                   "clusterCertificateThumbprints": {
                    "$id": "5091",
                    "kind": "array",
                    "type": {
                     "$ref": "1299"
                    },
                    "value": [
                     {
                      "$id": "5092",
                      "kind": "string",
                      "type": {
                       "$ref": "1300"
                      },
                      "value": "12599211F8F14C90AFA9532AD79A6F2CA1C00622"
                     }
                    ]
                   },
                   "clusterCodeVersion": {
                    "$id": "5093",
                    "kind": "string",
                    "type": {
                     "$ref": "1422"
                    },
                    "value": "7.1.168.9494"
                   },
                   "clusterId": {
                    "$id": "5094",
                    "kind": "string",
                    "type": {
                     "$ref": "1291"
                    },
                    "value": "92584666-9889-4ae8-8d02-91902923d37f"
                   },
                   "clusterState": {
                    "$id": "5095",
                    "kind": "string",
                    "type": {
                     "$ref": "170"
                    },
                    "value": "WaitingForNodes"
                   },
                   "clusterUpgradeCadence": {
                    "$id": "5096",
                    "kind": "string",
                    "type": {
                     "$ref": "204"
                    },
                    "value": "Wave0"
                   },
                   "clusterUpgradeMode": {
                    "$id": "5097",
                    "kind": "string",
                    "type": {
                     "$ref": "198"
                    },
                    "value": "Automatic"
                   },
                   "dnsName": {
                    "$id": "5098",
                    "kind": "string",
                    "type": {
                     "$ref": "1278"
                    },
                    "value": "myCluster"
                   },
                   "fabricSettings": {
                    "$id": "5099",
                    "kind": "array",
                    "type": {
                     "$ref": "1397"
                    },
                    "value": [
                     {
                      "$id": "5100",
                      "kind": "model",
                      "type": {
                       "$ref": "1398"
                      },
                      "value": {
                       "$id": "5101",
                       "name": {
                        "$id": "5102",
                        "kind": "string",
                        "type": {
                         "$ref": "1400"
                        },
                        "value": "ManagedIdentityTokenService"
                       },
                       "parameters": {
                        "$id": "5103",
                        "kind": "array",
                        "type": {
                         "$ref": "1404"
                        },
                        "value": [
                         {
                          "$id": "5104",
                          "kind": "model",
                          "type": {
                           "$ref": "1405"
                          },
                          "value": {
                           "$id": "5105",
                           "name": {
                            "$id": "5106",
                            "kind": "string",
                            "type": {
                             "$ref": "1407"
                            },
                            "value": "IsEnabled"
                           },
                           "value": {
                            "$id": "5107",
                            "kind": "string",
                            "type": {
                             "$ref": "1411"
                            },
                            "value": "true"
                           }
                          }
                         }
                        ]
                       }
                      }
                     }
                    ]
                   },
                   "fqdn": {
                    "$id": "5108",
                    "kind": "string",
                    "type": {
                     "$ref": "1282"
                    },
                    "value": "MyCluster.eastus.cloudapp.azure.com"
                   },
                   "httpGatewayConnectionPort": {
                    "$id": "5109",
                    "kind": "number",
                    "type": {
                     "$ref": "1308"
                    },
                    "value": 19080
                   },
                   "loadBalancingRules": {
                    "$id": "5110",
                    "kind": "array",
                    "type": {
                     "$ref": "1320"
                    },
                    "value": []
                   },
                   "provisioningState": {
                    "$id": "5111",
                    "kind": "string",
                    "type": {
                     "$ref": "70"
                    },
                    "value": "Succeeded"
                   }
                  }
                 },
                 "sku": {
                  "$id": "5112",
                  "kind": "model",
                  "type": {
                   "$ref": "1618"
                  },
                  "value": {
                   "$id": "5113",
                   "name": {
                    "$id": "5114",
                    "kind": "string",
                    "type": {
                     "$ref": "248"
                    },
                    "value": "Standard"
                   }
                  }
                 },
                 "tags": {
                  "$id": "5115",
                  "kind": "dict",
                  "type": {
                   "$ref": "1266"
                  },
                  "value": {
                   "$id": "5116"
                  }
                 }
                }
               },
               {
                "$id": "5117",
                "kind": "model",
                "type": {
                 "$ref": "1263"
                },
                "value": {
                 "$id": "5118",
                 "name": {
                  "$id": "5119",
                  "kind": "string",
                  "type": {
                   "$ref": "507"
                  },
                  "value": "myCluster2"
                 },
                 "type": {
                  "$id": "5120",
                  "kind": "string",
                  "type": {
                   "$ref": "511"
                  },
                  "value": "Microsoft.ServiceFabric/managedClusters"
                 },
                 "etag": {
                  "$id": "5121",
                  "kind": "string",
                  "type": {
                   "$ref": "1614"
                  },
                  "value": "W/\"636462502164040075\""
                 },
                 "id": {
                  "$id": "5122",
                  "kind": "string",
                  "type": {
                   "$ref": "503"
                  },
                  "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster2"
                 },
                 "location": {
                  "$id": "5123",
                  "kind": "string",
                  "type": {
                   "$ref": "1272"
                  },
                  "value": "eastus"
                 },
                 "properties": {
                  "$id": "5124",
                  "kind": "model",
                  "type": {
                   "$ref": "1276"
                  },
                  "value": {
                   "$id": "5125",
                   "adminUserName": {
                    "$id": "5126",
                    "kind": "string",
                    "type": {
                     "$ref": "1312"
                    },
                    "value": "vmadmin"
                   },
                   "clientConnectionPort": {
                    "$id": "5127",
                    "kind": "number",
                    "type": {
                     "$ref": "1304"
                    },
                    "value": 19000
                   },
                   "clusterCertificateThumbprints": {
                    "$id": "5128",
                    "kind": "array",
                    "type": {
                     "$ref": "1299"
                    },
                    "value": [
                     {
                      "$id": "5129",
                      "kind": "string",
                      "type": {
                       "$ref": "1300"
                      },
                      "value": "12599211F8F14C90AFA9532AD79A6F2CA1C00622"
                     }
                    ]
                   },
                   "clusterCodeVersion": {
                    "$id": "5130",
                    "kind": "string",
                    "type": {
                     "$ref": "1422"
                    },
                    "value": "7.1.168.9494"
                   },
                   "clusterId": {
                    "$id": "5131",
                    "kind": "string",
                    "type": {
                     "$ref": "1291"
                    },
                    "value": "2747e469-b24e-4039-8a0a-46151419523f"
                   },
                   "clusterState": {
                    "$id": "5132",
                    "kind": "string",
                    "type": {
                     "$ref": "170"
                    },
                    "value": "WaitingForNodes"
                   },
                   "clusterUpgradeCadence": {
                    "$id": "5133",
                    "kind": "string",
                    "type": {
                     "$ref": "204"
                    },
                    "value": "Wave0"
                   },
                   "clusterUpgradeMode": {
                    "$id": "5134",
                    "kind": "string",
                    "type": {
                     "$ref": "198"
                    },
                    "value": "Automatic"
                   },
                   "dnsName": {
                    "$id": "5135",
                    "kind": "string",
                    "type": {
                     "$ref": "1278"
                    },
                    "value": "myCluster2"
                   },
                   "fabricSettings": {
                    "$id": "5136",
                    "kind": "array",
                    "type": {
                     "$ref": "1397"
                    },
                    "value": [
                     {
                      "$id": "5137",
                      "kind": "model",
                      "type": {
                       "$ref": "1398"
                      },
                      "value": {
                       "$id": "5138",
                       "name": {
                        "$id": "5139",
                        "kind": "string",
                        "type": {
                         "$ref": "1400"
                        },
                        "value": "ManagedIdentityTokenService"
                       },
                       "parameters": {
                        "$id": "5140",
                        "kind": "array",
                        "type": {
                         "$ref": "1404"
                        },
                        "value": [
                         {
                          "$id": "5141",
                          "kind": "model",
                          "type": {
                           "$ref": "1405"
                          },
                          "value": {
                           "$id": "5142",
                           "name": {
                            "$id": "5143",
                            "kind": "string",
                            "type": {
                             "$ref": "1407"
                            },
                            "value": "IsEnabled"
                           },
                           "value": {
                            "$id": "5144",
                            "kind": "string",
                            "type": {
                             "$ref": "1411"
                            },
                            "value": "true"
                           }
                          }
                         }
                        ]
                       }
                      }
                     }
                    ]
                   },
                   "fqdn": {
                    "$id": "5145",
                    "kind": "string",
                    "type": {
                     "$ref": "1282"
                    },
                    "value": "MyCluster.eastus.cloudapp.azure.com"
                   },
                   "httpGatewayConnectionPort": {
                    "$id": "5146",
                    "kind": "number",
                    "type": {
                     "$ref": "1308"
                    },
                    "value": 19080
                   },
                   "loadBalancingRules": {
                    "$id": "5147",
                    "kind": "array",
                    "type": {
                     "$ref": "1320"
                    },
                    "value": []
                   },
                   "provisioningState": {
                    "$id": "5148",
                    "kind": "string",
                    "type": {
                     "$ref": "70"
                    },
                    "value": "Succeeded"
                   }
                  }
                 },
                 "sku": {
                  "$id": "5149",
                  "kind": "model",
                  "type": {
                   "$ref": "1618"
                  },
                  "value": {
                   "$id": "5150",
                   "name": {
                    "$id": "5151",
                    "kind": "string",
                    "type": {
                     "$ref": "248"
                    },
                    "value": "Standard"
                   }
                  }
                 },
                 "tags": {
                  "$id": "5152",
                  "kind": "dict",
                  "type": {
                   "$ref": "1266"
                  },
                  "value": {
                   "$id": "5153"
                  }
                 }
                }
               }
              ]
             }
            }
           }
          }
         ]
        }
       ]
      },
      {
       "$id": "5154",
       "name": "getFaultSimulation",
       "resourceName": "ManagedClusters",
       "doc": "Gets a fault simulation by the simulationId.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "5155",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "5156",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "5157",
          "type": {
           "$id": "5158",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5159",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "5160",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5161",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "5162",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5163",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "5164",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5165",
         "name": "contentType",
         "nameInRequest": "Content-Type",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$id": "5166",
          "kind": "constant",
          "valueType": {
           "$id": "5167",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": true,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5168",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "5169",
          "kind": "constant",
          "valueType": {
           "$id": "5170",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5171",
         "name": "parameters",
         "nameInRequest": "parameters",
         "doc": "parameter with fault simulation id.",
         "type": {
          "$ref": "1189"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "5172",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "1137"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "POST",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/getFaultSimulation",
       "requestMediaTypes": [
        "application/json"
       ],
       "bufferResponse": true,
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusters.getFaultSimulation",
       "decorators": []
      },
      {
       "$id": "5173",
       "name": "listFaultSimulation",
       "resourceName": "ManagedClusters",
       "doc": "Gets the list of recent fault simulations for the cluster.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "5174",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "5175",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "5176",
          "type": {
           "$id": "5177",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5178",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "5179",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5180",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "5181",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5182",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "5183",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5184",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "5185",
          "kind": "constant",
          "valueType": {
           "$id": "5186",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "5187",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "1194"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "POST",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/listFaultSimulation",
       "bufferResponse": true,
       "paging": {
        "$id": "5188",
        "itemPropertySegments": [
         "value"
        ],
        "nextLink": {
         "$id": "5189",
         "responseSegments": [
          "nextLink"
         ],
         "responseLocation": "Body"
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusters.listFaultSimulation",
       "decorators": []
      },
      {
       "$id": "5190",
       "name": "startFaultSimulation",
       "resourceName": "ManagedClusters",
       "doc": "Starts a fault simulation on the cluster.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "5191",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "5192",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "5193",
          "type": {
           "$id": "5194",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5195",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "5196",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5197",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "5198",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5199",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "5200",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5201",
         "name": "contentType",
         "nameInRequest": "Content-Type",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$id": "5202",
          "kind": "constant",
          "valueType": {
           "$id": "5203",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": true,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5204",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "5205",
          "kind": "constant",
          "valueType": {
           "$id": "5206",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5207",
         "name": "parameters",
         "nameInRequest": "parameters",
         "doc": "parameters describing the fault simulation.",
         "type": {
          "$ref": "1108"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "5208",
         "statusCodes": [
          202
         ],
         "headers": [
          {
           "$id": "5209",
           "name": "location",
           "nameInResponse": "Location",
           "doc": "The Location header contains the URL where the status of the long running operation can be checked.",
           "type": {
            "$id": "5210",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           }
          },
          {
           "$id": "5211",
           "name": "azureAsyncOperation",
           "nameInResponse": "Azure-AsyncOperation",
           "doc": "A link to the status monitor",
           "type": {
            "$id": "5212",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           }
          }
         ],
         "isErrorResponse": false
        }
       ],
       "httpMethod": "POST",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/startFaultSimulation",
       "requestMediaTypes": [
        "application/json"
       ],
       "bufferResponse": true,
       "longRunning": {
        "$id": "5213",
        "finalStateVia": 1,
        "finalResponse": {
         "$id": "5214",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "1137"
         }
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusters.startFaultSimulation",
       "decorators": []
      },
      {
       "$id": "5215",
       "name": "stopFaultSimulation",
       "resourceName": "ManagedClusters",
       "doc": "Stops a fault simulation on the cluster.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "5216",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "5217",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "5218",
          "type": {
           "$id": "5219",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5220",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "5221",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5222",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "5223",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5224",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "5225",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5226",
         "name": "contentType",
         "nameInRequest": "Content-Type",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$id": "5227",
          "kind": "constant",
          "valueType": {
           "$id": "5228",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": true,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5229",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "5230",
          "kind": "constant",
          "valueType": {
           "$id": "5231",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5232",
         "name": "parameters",
         "nameInRequest": "parameters",
         "doc": "parameter with fault simulation id.",
         "type": {
          "$ref": "1189"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "5233",
         "statusCodes": [
          202
         ],
         "headers": [
          {
           "$id": "5234",
           "name": "location",
           "nameInResponse": "Location",
           "doc": "The Location header contains the URL where the status of the long running operation can be checked.",
           "type": {
            "$id": "5235",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           }
          },
          {
           "$id": "5236",
           "name": "azureAsyncOperation",
           "nameInResponse": "Azure-AsyncOperation",
           "doc": "A link to the status monitor",
           "type": {
            "$id": "5237",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           }
          }
         ],
         "isErrorResponse": false
        }
       ],
       "httpMethod": "POST",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/stopFaultSimulation",
       "requestMediaTypes": [
        "application/json"
       ],
       "bufferResponse": true,
       "longRunning": {
        "$id": "5238",
        "finalStateVia": 1,
        "finalResponse": {
         "$id": "5239",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "1137"
         }
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusters.stopFaultSimulation",
       "decorators": []
      }
     ],
     "parameters": [
      {
       "$id": "5240",
       "name": "endpoint",
       "nameInRequest": "endpoint",
       "doc": "Service host",
       "type": {
        "$id": "5241",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "defaultValue": {
        "$id": "5242",
        "type": {
         "$id": "5243",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "value": "https://management.azure.com"
       }
      }
     ],
     "decorators": [
      {
       "$id": "5244",
       "name": "Azure.ResourceManager.@armResourceOperations",
       "arguments": {
        "$id": "5245"
       }
      }
     ],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedClusters",
     "apiVersions": [
      "2024-11-01-preview"
     ],
     "parent": {
      "$ref": "2353"
     }
    },
    {
     "$id": "5246",
     "kind": "client",
     "name": "ManagedAzResiliencyStatus",
     "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
     "operations": [
      {
       "$id": "5247",
       "name": "GetManagedAzResiliencyStatus",
       "resourceName": "ManagedAzResiliencyStatus",
       "doc": "Action to get Az Resiliency Status of all the Base resources constituting Service Fabric Managed Clusters.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "5248",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "5249",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "5250",
          "type": {
           "$id": "5251",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5252",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "5253",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5254",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "5255",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5256",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "5257",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5258",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "5259",
          "kind": "constant",
          "valueType": {
           "$id": "5260",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "5261",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "1236"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "POST",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/getazresiliencystatus",
       "bufferResponse": true,
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedAzResiliencyStatus.get",
       "decorators": [],
       "examples": [
        {
         "$id": "5262",
         "kind": "http",
         "name": "Az Resiliency status of Base Resources",
         "description": "Az Resiliency status of Base Resources",
         "filePath": "2024-11-01-preview/managedAzResiliencyStatusGet_example.json",
         "parameters": [
          {
           "$id": "5263",
           "parameter": {
            "$ref": "5248"
           },
           "value": {
            "$id": "5264",
            "kind": "string",
            "type": {
             "$ref": "5249"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "5265",
           "parameter": {
            "$ref": "5256"
           },
           "value": {
            "$id": "5266",
            "kind": "string",
            "type": {
             "$ref": "5257"
            },
            "value": "mycluster1"
           }
          },
          {
           "$id": "5267",
           "parameter": {
            "$ref": "5254"
           },
           "value": {
            "$id": "5268",
            "kind": "string",
            "type": {
             "$ref": "5255"
            },
            "value": "resourceGroup1"
           }
          },
          {
           "$id": "5269",
           "parameter": {
            "$ref": "5252"
           },
           "value": {
            "$id": "5270",
            "kind": "string",
            "type": {
             "$ref": "5253"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "5271",
           "response": {
            "$ref": "5261"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "5272",
            "kind": "model",
            "type": {
             "$ref": "1236"
            },
            "value": {
             "$id": "5273",
             "baseResourceStatus": {
              "$id": "5274",
              "kind": "array",
              "type": {
               "$ref": "1238"
              },
              "value": [
               {
                "$id": "5275",
                "kind": "model",
                "type": {
                 "$ref": "1239"
                },
                "value": {
                 "$id": "5276",
                 "isZoneResilient": {
                  "$id": "5277",
                  "kind": "boolean",
                  "type": {
                   "$ref": "1250"
                  },
                  "value": false
                 },
                 "resourceName": {
                  "$id": "5278",
                  "kind": "string",
                  "type": {
                   "$ref": "1241"
                  },
                  "value": "mycluster1storage"
                 },
                 "resourceType": {
                  "$id": "5279",
                  "kind": "string",
                  "type": {
                   "$ref": "1245"
                  },
                  "value": "Microsoft.Storage/storageaccounts"
                 }
                }
               },
               {
                "$id": "5280",
                "kind": "model",
                "type": {
                 "$ref": "1239"
                },
                "value": {
                 "$id": "5281",
                 "isZoneResilient": {
                  "$id": "5282",
                  "kind": "boolean",
                  "type": {
                   "$ref": "1250"
                  },
                  "value": true
                 },
                 "resourceName": {
                  "$id": "5283",
                  "kind": "string",
                  "type": {
                   "$ref": "1241"
                  },
                  "value": "PublicIP-mycluster1"
                 },
                 "resourceType": {
                  "$id": "5284",
                  "kind": "string",
                  "type": {
                   "$ref": "1245"
                  },
                  "value": "Microsoft.Network/publicIPAddress"
                 }
                }
               },
               {
                "$id": "5285",
                "kind": "model",
                "type": {
                 "$ref": "1239"
                },
                "value": {
                 "$id": "5286",
                 "isZoneResilient": {
                  "$id": "5287",
                  "kind": "boolean",
                  "type": {
                   "$ref": "1250"
                  },
                  "value": false
                 },
                 "resourceName": {
                  "$id": "5288",
                  "kind": "string",
                  "type": {
                   "$ref": "1241"
                  },
                  "value": "Primary"
                 },
                 "resourceType": {
                  "$id": "5289",
                  "kind": "string",
                  "type": {
                   "$ref": "1245"
                  },
                  "value": "Microsoft.Compute/virtualmachinescalesets"
                 },
                 "details": {
                  "$id": "5290",
                  "kind": "string",
                  "type": {
                   "$ref": "1254"
                  },
                  "value": "Status: InProgress, ZonalNodes: 3, RegionalNodes: 3"
                 }
                }
               }
              ]
             },
             "isClusterZoneResilient": {
              "$id": "5291",
              "kind": "boolean",
              "type": {
               "$ref": "1260"
              },
              "value": false
             }
            }
           }
          }
         ]
        }
       ]
      }
     ],
     "parameters": [
      {
       "$id": "5292",
       "name": "endpoint",
       "nameInRequest": "endpoint",
       "doc": "Service host",
       "type": {
        "$id": "5293",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "defaultValue": {
        "$id": "5294",
        "type": {
         "$id": "5295",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "value": "https://management.azure.com"
       }
      }
     ],
     "decorators": [
      {
       "$id": "5296",
       "name": "Azure.ResourceManager.@armResourceOperations",
       "arguments": {
        "$id": "5297"
       }
      }
     ],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedAzResiliencyStatus",
     "apiVersions": [
      "2024-11-01-preview"
     ],
     "parent": {
      "$ref": "2353"
     }
    },
    {
     "$id": "5298",
     "kind": "client",
     "name": "ManagedApplyMaintenanceWindow",
     "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
     "operations": [
      {
       "$id": "5299",
       "name": "post",
       "resourceName": "ManagedApplyMaintenanceWindow",
       "doc": "Action to Apply Maintenance window on the Service Fabric Managed Clusters, right now. Any pending update will be applied.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "5300",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "5301",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "5302",
          "type": {
           "$id": "5303",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5304",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "5305",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5306",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "5307",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5308",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "5309",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5310",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "5311",
          "kind": "constant",
          "valueType": {
           "$id": "5312",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "5313",
         "statusCodes": [
          200
         ],
         "headers": [],
         "isErrorResponse": false
        }
       ],
       "httpMethod": "POST",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applyMaintenanceWindow",
       "bufferResponse": true,
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedApplyMaintenanceWindow.post",
       "decorators": [],
       "examples": [
        {
         "$id": "5314",
         "kind": "http",
         "name": "Apply Maintenance Window Status",
         "description": "Apply Maintenance Window Status",
         "filePath": "2024-11-01-preview/ManagedApplyMaintenanceWindowPost_example.json",
         "parameters": [
          {
           "$id": "5315",
           "parameter": {
            "$ref": "5300"
           },
           "value": {
            "$id": "5316",
            "kind": "string",
            "type": {
             "$ref": "5301"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "5317",
           "parameter": {
            "$ref": "5308"
           },
           "value": {
            "$id": "5318",
            "kind": "string",
            "type": {
             "$ref": "5309"
            },
            "value": "mycluster1"
           }
          },
          {
           "$id": "5319",
           "parameter": {
            "$ref": "5306"
           },
           "value": {
            "$id": "5320",
            "kind": "string",
            "type": {
             "$ref": "5307"
            },
            "value": "resourceGroup1"
           }
          },
          {
           "$id": "5321",
           "parameter": {
            "$ref": "5304"
           },
           "value": {
            "$id": "5322",
            "kind": "string",
            "type": {
             "$ref": "5305"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "5323",
           "response": {
            "$ref": "5313"
           },
           "statusCode": 200
          }
         ]
        }
       ]
      }
     ],
     "parameters": [
      {
       "$id": "5324",
       "name": "endpoint",
       "nameInRequest": "endpoint",
       "doc": "Service host",
       "type": {
        "$id": "5325",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "defaultValue": {
        "$id": "5326",
        "type": {
         "$id": "5327",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "value": "https://management.azure.com"
       }
      }
     ],
     "decorators": [
      {
       "$id": "5328",
       "name": "Azure.ResourceManager.@armResourceOperations",
       "arguments": {
        "$id": "5329"
       }
      }
     ],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedApplyMaintenanceWindow",
     "apiVersions": [
      "2024-11-01-preview"
     ],
     "parent": {
      "$ref": "2353"
     }
    },
    {
     "$id": "5330",
     "kind": "client",
     "name": "ManagedMaintenanceWindowStatus",
     "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
     "operations": [
      {
       "$id": "5331",
       "name": "get",
       "resourceName": "ManagedMaintenanceWindowStatus",
       "doc": "Action to get Maintenance Window Status of the Service Fabric Managed Clusters.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "5332",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "5333",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "5334",
          "type": {
           "$id": "5335",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5336",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "5337",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5338",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "5339",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5340",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "5341",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5342",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "5343",
          "kind": "constant",
          "valueType": {
           "$id": "5344",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "5345",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "1204"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "POST",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/getMaintenanceWindowStatus",
       "bufferResponse": true,
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedMaintenanceWindowStatus.get",
       "decorators": [],
       "examples": [
        {
         "$id": "5346",
         "kind": "http",
         "name": "Get Maintenance Window Status",
         "description": "Get Maintenance Window Status",
         "filePath": "2024-11-01-preview/ManagedMaintenanceWindowStatusGet_example.json",
         "parameters": [
          {
           "$id": "5347",
           "parameter": {
            "$ref": "5332"
           },
           "value": {
            "$id": "5348",
            "kind": "string",
            "type": {
             "$ref": "5333"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "5349",
           "parameter": {
            "$ref": "5340"
           },
           "value": {
            "$id": "5350",
            "kind": "string",
            "type": {
             "$ref": "5341"
            },
            "value": "mycluster1"
           }
          },
          {
           "$id": "5351",
           "parameter": {
            "$ref": "5338"
           },
           "value": {
            "$id": "5352",
            "kind": "string",
            "type": {
             "$ref": "5339"
            },
            "value": "resourceGroup1"
           }
          },
          {
           "$id": "5353",
           "parameter": {
            "$ref": "5336"
           },
           "value": {
            "$id": "5354",
            "kind": "string",
            "type": {
             "$ref": "5337"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "5355",
           "response": {
            "$ref": "5345"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "5356",
            "kind": "model",
            "type": {
             "$ref": "1204"
            },
            "value": {
             "$id": "5357",
             "canApplyUpdates": {
              "$id": "5358",
              "kind": "boolean",
              "type": {
               "$ref": "1218"
              },
              "value": true
             },
             "isRegionReady": {
              "$id": "5359",
              "kind": "boolean",
              "type": {
               "$ref": "1210"
              },
              "value": true
             },
             "isWindowActive": {
              "$id": "5360",
              "kind": "boolean",
              "type": {
               "$ref": "1214"
              },
              "value": true
             },
             "isWindowEnabled": {
              "$id": "5361",
              "kind": "boolean",
              "type": {
               "$ref": "1206"
              },
              "value": false
             },
             "lastWindowEndTimeUTC": {
              "$id": "5362",
              "kind": "string",
              "type": {
               "$ref": "1232"
              },
              "value": "2023-04-30T00:00:00"
             },
             "lastWindowStartTimeUTC": {
              "$id": "5363",
              "kind": "string",
              "type": {
               "$ref": "1227"
              },
              "value": "2023-04-30T00:00:00"
             },
             "lastWindowStatusUpdateAtUTC": {
              "$id": "5364",
              "kind": "string",
              "type": {
               "$ref": "1222"
              },
              "value": "2023-04-30T00:00:00"
             }
            }
           }
          }
         ]
        }
       ]
      }
     ],
     "parameters": [
      {
       "$id": "5365",
       "name": "endpoint",
       "nameInRequest": "endpoint",
       "doc": "Service host",
       "type": {
        "$id": "5366",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "defaultValue": {
        "$id": "5367",
        "type": {
         "$id": "5368",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "value": "https://management.azure.com"
       }
      }
     ],
     "decorators": [
      {
       "$id": "5369",
       "name": "Azure.ResourceManager.@armResourceOperations",
       "arguments": {
        "$id": "5370"
       }
      }
     ],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.ManagedMaintenanceWindowStatus",
     "apiVersions": [
      "2024-11-01-preview"
     ],
     "parent": {
      "$ref": "2353"
     }
    },
    {
     "$id": "5371",
     "kind": "client",
     "name": "NodeTypes",
     "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
     "operations": [
      {
       "$id": "5372",
       "name": "get",
       "resourceName": "NodeType",
       "doc": "Get a Service Fabric node type of a given managed cluster.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "5373",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "5374",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "5375",
          "type": {
           "$id": "5376",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5377",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "5378",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5379",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "5380",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5381",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "5382",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5383",
         "name": "nodeTypeName",
         "nameInRequest": "nodeTypeName",
         "doc": "The name of the node type.",
         "type": {
          "$id": "5384",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5385",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "5386",
          "kind": "constant",
          "valueType": {
           "$id": "5387",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "5388",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "499"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "GET",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}",
       "bufferResponse": true,
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypes.get",
       "decorators": [],
       "examples": [
        {
         "$id": "5389",
         "kind": "http",
         "name": "Get a node type",
         "description": "Get a node type",
         "filePath": "2024-11-01-preview/NodeTypeGetOperation_example.json",
         "parameters": [
          {
           "$id": "5390",
           "parameter": {
            "$ref": "5373"
           },
           "value": {
            "$id": "5391",
            "kind": "string",
            "type": {
             "$ref": "5374"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "5392",
           "parameter": {
            "$ref": "5381"
           },
           "value": {
            "$id": "5393",
            "kind": "string",
            "type": {
             "$ref": "5382"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "5394",
           "parameter": {
            "$ref": "5383"
           },
           "value": {
            "$id": "5395",
            "kind": "string",
            "type": {
             "$ref": "5384"
            },
            "value": "FE"
           }
          },
          {
           "$id": "5396",
           "parameter": {
            "$ref": "5379"
           },
           "value": {
            "$id": "5397",
            "kind": "string",
            "type": {
             "$ref": "5380"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "5398",
           "parameter": {
            "$ref": "5377"
           },
           "value": {
            "$id": "5399",
            "kind": "string",
            "type": {
             "$ref": "5378"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "5400",
           "response": {
            "$ref": "5388"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "5401",
            "kind": "model",
            "type": {
             "$ref": "499"
            },
            "value": {
             "$id": "5402",
             "name": {
              "$id": "5403",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "FE"
             },
             "type": {
              "$id": "5404",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/nodeTypes"
             },
             "id": {
              "$id": "5405",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster/nodeTypes/FE"
             },
             "properties": {
              "$id": "5406",
              "kind": "model",
              "type": {
               "$ref": "544"
              },
              "value": {
               "$id": "5407",
               "capacities": {
                "$id": "5408",
                "kind": "dict",
                "type": {
                 "$ref": "571"
                },
                "value": {
                 "$id": "5409"
                }
               },
               "dataDiskSizeGB": {
                "$id": "5410",
                "kind": "number",
                "type": {
                 "$ref": "554"
                },
                "value": 100
               },
               "dataDiskType": {
                "$id": "5411",
                "kind": "string",
                "type": {
                 "$ref": "18"
                },
                "value": "StandardSSD_LRS"
               },
               "isPrimary": {
                "$id": "5412",
                "kind": "boolean",
                "type": {
                 "$ref": "546"
                },
                "value": true
               },
               "isStateless": {
                "$id": "5413",
                "kind": "boolean",
                "type": {
                 "$ref": "705"
                },
                "value": false
               },
               "placementProperties": {
                "$id": "5414",
                "kind": "dict",
                "type": {
                 "$ref": "565"
                },
                "value": {
                 "$id": "5415"
                }
               },
               "vmImageOffer": {
                "$id": "5416",
                "kind": "string",
                "type": {
                 "$ref": "600"
                },
                "value": "WindowsServer"
               },
               "vmImagePublisher": {
                "$id": "5417",
                "kind": "string",
                "type": {
                 "$ref": "596"
                },
                "value": "MicrosoftWindowsServer"
               },
               "vmImageSku": {
                "$id": "5418",
                "kind": "string",
                "type": {
                 "$ref": "604"
                },
                "value": "2016-Datacenter"
               },
               "vmImageVersion": {
                "$id": "5419",
                "kind": "string",
                "type": {
                 "$ref": "608"
                },
                "value": "latest"
               },
               "vmInstanceCount": {
                "$id": "5420",
                "kind": "number",
                "type": {
                 "$ref": "550"
                },
                "value": 5
               },
               "vmSecrets": {
                "$id": "5421",
                "kind": "array",
                "type": {
                 "$ref": "612"
                },
                "value": [
                 {
                  "$id": "5422",
                  "kind": "model",
                  "type": {
                   "$ref": "613"
                  },
                  "value": {
                   "$id": "5423",
                   "sourceVault": {
                    "$id": "5424",
                    "kind": "model",
                    "type": {
                     "$ref": "615"
                    },
                    "value": {
                     "$id": "5425",
                     "id": {
                      "$id": "5426",
                      "kind": "string",
                      "type": {
                       "$ref": "617"
                      },
                      "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.KeyVault/vaults/myVault"
                     }
                    }
                   },
                   "vaultCertificates": {
                    "$id": "5427",
                    "kind": "array",
                    "type": {
                     "$ref": "623"
                    },
                    "value": [
                     {
                      "$id": "5428",
                      "kind": "model",
                      "type": {
                       "$ref": "624"
                      },
                      "value": {
                       "$id": "5429",
                       "certificateStore": {
                        "$id": "5430",
                        "kind": "string",
                        "type": {
                         "$ref": "630"
                        },
                        "value": "My"
                       },
                       "certificateUrl": {
                        "$id": "5431",
                        "kind": "string",
                        "type": {
                         "$ref": "626"
                        },
                        "value": "https://myVault.vault.azure.net:443/secrets/myCert/ef1a31d39e1f46bca33def54b6cda54c"
                       }
                      }
                     }
                    ]
                   }
                  }
                 }
                ]
               },
               "vmSize": {
                "$id": "5432",
                "kind": "string",
                "type": {
                 "$ref": "592"
                },
                "value": "Standard_D2"
               }
              }
             },
             "tags": {
              "$id": "5433",
              "kind": "dict",
              "type": {
               "$ref": "1054"
              },
              "value": {
               "$id": "5434"
              }
             }
            }
           }
          }
         ]
        }
       ]
      },
      {
       "$id": "5435",
       "name": "createOrUpdate",
       "resourceName": "NodeType",
       "doc": "Create or update a Service Fabric node type of a given managed cluster.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "5436",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "5437",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "5438",
          "type": {
           "$id": "5439",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5440",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "5441",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5442",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "5443",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5444",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "5445",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5446",
         "name": "nodeTypeName",
         "nameInRequest": "nodeTypeName",
         "doc": "The name of the node type.",
         "type": {
          "$id": "5447",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5448",
         "name": "contentType",
         "nameInRequest": "Content-Type",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$id": "5449",
          "kind": "constant",
          "valueType": {
           "$id": "5450",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": true,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5451",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "5452",
          "kind": "constant",
          "valueType": {
           "$id": "5453",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "5454",
         "name": "parameters",
         "nameInRequest": "parameters",
         "doc": "The node type resource.",
         "type": {
          "$ref": "499"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "5455",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "499"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        },
        {
         "$id": "5456",
         "statusCodes": [
          202
         ],
         "bodyType": {
          "$ref": "499"
         },
         "headers": [
          {
           "$id": "5457",
           "name": "azureAsyncOperation",
           "nameInResponse": "Azure-AsyncOperation",
           "doc": "A link to the status monitor",
           "type": {
            "$id": "5458",
            "kind": "url",
            "name": "ResourceLocation",
            "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
            "baseType": {
             "$id": "5459",
             "kind": "url",
             "name": "url",
             "crossLanguageDefinitionId": "TypeSpec.url",
             "decorators": []
            },
            "decorators": []
           }
          },
          {
           "$id": "5460",
           "name": "location",
           "nameInResponse": "Location",
           "doc": "The Location header contains the URL where the status of the long running operation can be checked.",
           "type": {
            "$id": "5461",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           }
          }
         ],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "PUT",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}",
       "requestMediaTypes": [
        "application/json"
       ],
       "bufferResponse": true,
       "longRunning": {
        "$id": "5462",
        "finalStateVia": 1,
        "finalResponse": {
         "$id": "5463",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "499"
         }
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypes.createOrUpdate",
       "decorators": [],
       "examples": [
        {
         "$id": "5464",
         "kind": "http",
         "name": "Put a node type with auto-scale parameters",
         "description": "Put a node type with auto-scale parameters",
         "filePath": "2024-11-01-preview/NodeTypePutOperationAutoScale_example.json",
         "parameters": [
          {
           "$id": "5465",
           "parameter": {
            "$ref": "5436"
           },
           "value": {
            "$id": "5466",
            "kind": "string",
            "type": {
             "$ref": "5437"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "5467",
           "parameter": {
            "$ref": "5444"
           },
           "value": {
            "$id": "5468",
            "kind": "string",
            "type": {
             "$ref": "5445"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "5469",
           "parameter": {
            "$ref": "5446"
           },
           "value": {
            "$id": "5470",
            "kind": "string",
            "type": {
             "$ref": "5447"
            },
            "value": "BE"
           }
          },
          {
           "$id": "5471",
           "parameter": {
            "$ref": "5442"
           },
           "value": {
            "$id": "5472",
            "kind": "string",
            "type": {
             "$ref": "5443"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "5473",
           "parameter": {
            "$ref": "5440"
           },
           "value": {
            "$id": "5474",
            "kind": "string",
            "type": {
             "$ref": "5441"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "5475",
           "response": {
            "$ref": "5455"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "5476",
            "kind": "model",
            "type": {
             "$ref": "499"
            },
            "value": {
             "$id": "5477",
             "name": {
              "$id": "5478",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "BE"
             },
             "type": {
              "$id": "5479",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/nodeTypes"
             },
             "id": {
              "$id": "5480",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster/nodeTypes/BE"
             },
             "properties": {
              "$id": "5481",
              "kind": "model",
              "type": {
               "$ref": "544"
              },
              "value": {
               "$id": "5482",
               "capacities": {
                "$id": "5483",
                "kind": "dict",
                "type": {
                 "$ref": "571"
                },
                "value": {
                 "$id": "5484",
                 "ClientConnections": {
                  "$id": "5485",
                  "kind": "string",
                  "type": {
                   "$ref": "573"
                  },
                  "value": "65536"
                 }
                }
               },
               "dataDiskSizeGB": {
                "$id": "5486",
                "kind": "number",
                "type": {
                 "$ref": "554"
                },
                "value": 200
               },
               "dataDiskType": {
                "$id": "5487",
                "kind": "string",
                "type": {
                 "$ref": "18"
                },
                "value": "Premium_LRS"
               },
               "isPrimary": {
                "$id": "5488",
                "kind": "boolean",
                "type": {
                 "$ref": "546"
                },
                "value": false
               },
               "isStateless": {
                "$id": "5489",
                "kind": "boolean",
                "type": {
                 "$ref": "705"
                },
                "value": true
               },
               "multiplePlacementGroups": {
                "$id": "5490",
                "kind": "boolean",
                "type": {
                 "$ref": "709"
                },
                "value": true
               },
               "placementProperties": {
                "$id": "5491",
                "kind": "dict",
                "type": {
                 "$ref": "565"
                },
                "value": {
                 "$id": "5492",
                 "HasSSD": {
                  "$id": "5493",
                  "kind": "string",
                  "type": {
                   "$ref": "567"
                  },
                  "value": "true"
                 },
                 "NodeColor": {
                  "$id": "5494",
                  "kind": "string",
                  "type": {
                   "$ref": "567"
                  },
                  "value": "green"
                 },
                 "SomeProperty": {
                  "$id": "5495",
                  "kind": "string",
                  "type": {
                   "$ref": "567"
                  },
                  "value": "5"
                 }
                }
               },
               "provisioningState": {
                "$id": "5496",
                "kind": "string",
                "type": {
                 "$ref": "70"
                },
                "value": "Creating"
               },
               "vmExtensions": {
                "$id": "5497",
                "kind": "array",
                "type": {
                 "$ref": "638"
                },
                "value": [
                 {
                  "$id": "5498",
                  "kind": "model",
                  "type": {
                   "$ref": "639"
                  },
                  "value": {
                   "$id": "5499",
                   "name": {
                    "$id": "5500",
                    "kind": "string",
                    "type": {
                     "$ref": "641"
                    },
                    "value": "Microsoft.Azure.Geneva.GenevaMonitoring"
                   },
                   "properties": {
                    "$id": "5501",
                    "kind": "model",
                    "type": {
                     "$ref": "645"
                    },
                    "value": {
                     "$id": "5502",
                     "type": {
                      "$id": "5503",
                      "kind": "string",
                      "type": {
                       "$ref": "651"
                      },
                      "value": "GenevaMonitoring"
                     },
                     "autoUpgradeMinorVersion": {
                      "$id": "5504",
                      "kind": "boolean",
                      "type": {
                       "$ref": "659"
                      },
                      "value": true
                     },
                     "forceUpdateTag": {
                      "$id": "5505",
                      "kind": "string",
                      "type": {
                       "$ref": "671"
                      },
                      "value": "v.1.0"
                     },
                     "publisher": {
                      "$id": "5506",
                      "kind": "string",
                      "type": {
                       "$ref": "647"
                      },
                      "value": "Microsoft.Azure.Geneva"
                     },
                     "settings": {
                      "$id": "5507",
                      "kind": "model",
                      "type": {
                       "$ref": "663"
                      },
                      "value": {
                       "$id": "5508"
                      }
                     },
                     "typeHandlerVersion": {
                      "$id": "5509",
                      "kind": "string",
                      "type": {
                       "$ref": "655"
                      },
                      "value": "2.0"
                     }
                    }
                   }
                  }
                 }
                ]
               },
               "vmImageOffer": {
                "$id": "5510",
                "kind": "string",
                "type": {
                 "$ref": "600"
                },
                "value": "WindowsServer"
               },
               "vmImagePublisher": {
                "$id": "5511",
                "kind": "string",
                "type": {
                 "$ref": "596"
                },
                "value": "MicrosoftWindowsServer"
               },
               "vmImageSku": {
                "$id": "5512",
                "kind": "string",
                "type": {
                 "$ref": "604"
                },
                "value": "2016-Datacenter-Server-Core"
               },
               "vmImageVersion": {
                "$id": "5513",
                "kind": "string",
                "type": {
                 "$ref": "608"
                },
                "value": "latest"
               },
               "vmInstanceCount": {
                "$id": "5514",
                "kind": "number",
                "type": {
                 "$ref": "550"
                },
                "value": 10
               },
               "vmManagedIdentity": {
                "$id": "5515",
                "kind": "model",
                "type": {
                 "$ref": "696"
                },
                "value": {
                 "$id": "5516",
                 "userAssignedIdentities": {
                  "$id": "5517",
                  "kind": "array",
                  "type": {
                   "$ref": "698"
                  },
                  "value": [
                   {
                    "$id": "5518",
                    "kind": "string",
                    "type": {
                     "$ref": "699"
                    },
                    "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myIdentity"
                   },
                   {
                    "$id": "5519",
                    "kind": "string",
                    "type": {
                     "$ref": "699"
                    },
                    "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myIdentity2"
                   }
                  ]
                 }
                }
               },
               "vmSecrets": {
                "$id": "5520",
                "kind": "array",
                "type": {
                 "$ref": "612"
                },
                "value": [
                 {
                  "$id": "5521",
                  "kind": "model",
                  "type": {
                   "$ref": "613"
                  },
                  "value": {
                   "$id": "5522",
                   "sourceVault": {
                    "$id": "5523",
                    "kind": "model",
                    "type": {
                     "$ref": "615"
                    },
                    "value": {
                     "$id": "5524",
                     "id": {
                      "$id": "5525",
                      "kind": "string",
                      "type": {
                       "$ref": "617"
                      },
                      "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.KeyVault/vaults/myVault"
                     }
                    }
                   },
                   "vaultCertificates": {
                    "$id": "5526",
                    "kind": "array",
                    "type": {
                     "$ref": "623"
                    },
                    "value": [
                     {
                      "$id": "5527",
                      "kind": "model",
                      "type": {
                       "$ref": "624"
                      },
                      "value": {
                       "$id": "5528",
                       "certificateStore": {
                        "$id": "5529",
                        "kind": "string",
                        "type": {
                         "$ref": "630"
                        },
                        "value": "My"
                       },
                       "certificateUrl": {
                        "$id": "5530",
                        "kind": "string",
                        "type": {
                         "$ref": "626"
                        },
                        "value": "https://myVault.vault.azure.net:443/secrets/myCert/ef1a31d39e1f46bca33def54b6cda54c"
                       }
                      }
                     }
                    ]
                   }
                  }
                 }
                ]
               },
               "vmSize": {
                "$id": "5531",
                "kind": "string",
                "type": {
                 "$ref": "592"
                },
                "value": "Standard_DS3"
               }
              }
             },
             "sku": {
              "$id": "5532",
              "kind": "model",
              "type": {
               "$ref": "1060"
              },
              "value": {
               "$id": "5533",
               "name": {
                "$id": "5534",
                "kind": "string",
                "type": {
                 "$ref": "1062"
                },
                "value": "Standard_S2"
               },
               "capacity": {
                "$id": "5535",
                "kind": "number",
                "type": {
                 "$ref": "1070"
                },
                "value": 10
               },
               "tier": {
                "$id": "5536",
                "kind": "string",
                "type": {
                 "$ref": "1066"
                },
                "value": "Standard"
               }
              }
             },
             "tags": {
              "$id": "5537",
              "kind": "dict",
              "type": {
               "$ref": "1054"
              },
              "value": {
               "$id": "5538"
              }
             }
            }
           }
          },
          {
           "$id": "5539",
           "response": {
            "$ref": "5456"
           },
           "statusCode": 202,
           "bodyValue": {
            "$id": "5540",
            "kind": "model",
            "type": {
             "$ref": "499"
            },
            "value": {
             "$id": "5541",
             "name": {
              "$id": "5542",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "BE"
             },
             "type": {
              "$id": "5543",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/nodeTypes"
             },
             "id": {
              "$id": "5544",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster/nodeTypes/BE"
             },
             "properties": {
              "$id": "5545",
              "kind": "model",
              "type": {
               "$ref": "544"
              },
              "value": {
               "$id": "5546",
               "capacities": {
                "$id": "5547",
                "kind": "dict",
                "type": {
                 "$ref": "571"
                },
                "value": {
                 "$id": "5548",
                 "ClientConnections": {
                  "$id": "5549",
                  "kind": "string",
                  "type": {
                   "$ref": "573"
                  },
                  "value": "65536"
                 }
                }
               },
               "dataDiskSizeGB": {
                "$id": "5550",
                "kind": "number",
                "type": {
                 "$ref": "554"
                },
                "value": 200
               },
               "dataDiskType": {
                "$id": "5551",
                "kind": "string",
                "type": {
                 "$ref": "18"
                },
                "value": "Premium_LRS"
               },
               "isPrimary": {
                "$id": "5552",
                "kind": "boolean",
                "type": {
                 "$ref": "546"
                },
                "value": false
               },
               "isStateless": {
                "$id": "5553",
                "kind": "boolean",
                "type": {
                 "$ref": "705"
                },
                "value": true
               },
               "multiplePlacementGroups": {
                "$id": "5554",
                "kind": "boolean",
                "type": {
                 "$ref": "709"
                },
                "value": true
               },
               "placementProperties": {
                "$id": "5555",
                "kind": "dict",
                "type": {
                 "$ref": "565"
                },
                "value": {
                 "$id": "5556",
                 "HasSSD": {
                  "$id": "5557",
                  "kind": "string",
                  "type": {
                   "$ref": "567"
                  },
                  "value": "true"
                 },
                 "NodeColor": {
                  "$id": "5558",
                  "kind": "string",
                  "type": {
                   "$ref": "567"
                  },
                  "value": "green"
                 },
                 "SomeProperty": {
                  "$id": "5559",
                  "kind": "string",
                  "type": {
                   "$ref": "567"
                  },
                  "value": "5"
                 }
                }
               },
               "provisioningState": {
                "$id": "5560",
                "kind": "string",
                "type": {
                 "$ref": "70"
                },
                "value": "Updating"
               },
               "vmExtensions": {
                "$id": "5561",
                "kind": "array",
                "type": {
                 "$ref": "638"
                },
                "value": [
                 {
                  "$id": "5562",
                  "kind": "model",
                  "type": {
                   "$ref": "639"
                  },
                  "value": {
                   "$id": "5563",
                   "name": {
                    "$id": "5564",
                    "kind": "string",
                    "type": {
                     "$ref": "641"
                    },
                    "value": "Microsoft.Azure.Geneva.GenevaMonitoring"
                   },
                   "properties": {
                    "$id": "5565",
                    "kind": "model",
                    "type": {
                     "$ref": "645"
                    },
                    "value": {
                     "$id": "5566",
                     "type": {
                      "$id": "5567",
                      "kind": "string",
                      "type": {
                       "$ref": "651"
                      },
                      "value": "GenevaMonitoring"
                     },
                     "autoUpgradeMinorVersion": {
                      "$id": "5568",
                      "kind": "boolean",
                      "type": {
                       "$ref": "659"
                      },
                      "value": true
                     },
                     "forceUpdateTag": {
                      "$id": "5569",
                      "kind": "string",
                      "type": {
                       "$ref": "671"
                      },
                      "value": "v.1.0"
                     },
                     "publisher": {
                      "$id": "5570",
                      "kind": "string",
                      "type": {
                       "$ref": "647"
                      },
                      "value": "Microsoft.Azure.Geneva"
                     },
                     "settings": {
                      "$id": "5571",
                      "kind": "model",
                      "type": {
                       "$ref": "663"
                      },
                      "value": {
                       "$id": "5572"
                      }
                     },
                     "typeHandlerVersion": {
                      "$id": "5573",
                      "kind": "string",
                      "type": {
                       "$ref": "655"
                      },
                      "value": "2.0"
                     }
                    }
                   }
                  }
                 }
                ]
               },
               "vmImageOffer": {
                "$id": "5574",
                "kind": "string",
                "type": {
                 "$ref": "600"
                },
                "value": "WindowsServer"
               },
               "vmImagePublisher": {
                "$id": "5575",
                "kind": "string",
                "type": {
                 "$ref": "596"
                },
                "value": "MicrosoftWindowsServer"
               },
               "vmImageSku": {
                "$id": "5576",
                "kind": "string",
                "type": {
                 "$ref": "604"
                },
                "value": "2016-Datacenter-Server-Core"
               },
               "vmImageVersion": {
                "$id": "5577",
                "kind": "string",
                "type": {
                 "$ref": "608"
                },
                "value": "latest"
               },
               "vmInstanceCount": {
                "$id": "5578",
                "kind": "number",
                "type": {
                 "$ref": "550"
                },
                "value": 10
               },
               "vmSecrets": {
                "$id": "5579",
                "kind": "array",
                "type": {
                 "$ref": "612"
                },
                "value": [
                 {
                  "$id": "5580",
                  "kind": "model",
                  "type": {
                   "$ref": "613"
                  },
                  "value": {
                   "$id": "5581",
                   "sourceVault": {
                    "$id": "5582",
                    "kind": "model",
                    "type": {
                     "$ref": "615"
                    },
                    "value": {
                     "$id": "5583",
                     "id": {
                      "$id": "5584",
                      "kind": "string",
                      "type": {
                       "$ref": "617"
                      },
                      "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.KeyVault/vaults/myVault"
                     }
                    }
                   },
                   "vaultCertificates": {
                    "$id": "5585",
                    "kind": "array",
                    "type": {
                     "$ref": "623"
                    },
                    "value": [
                     {
                      "$id": "5586",
                      "kind": "model",
                      "type": {
                       "$ref": "624"
                      },
                      "value": {
                       "$id": "5587",
                       "certificateStore": {
                        "$id": "5588",
                        "kind": "string",
                        "type": {
                         "$ref": "630"
                        },
                        "value": "My"
                       },
                       "certificateUrl": {
                        "$id": "5589",
                        "kind": "string",
                        "type": {
                         "$ref": "626"
                        },
                        "value": "https://myVault.vault.azure.net:443/secrets/myCert/ef1a31d39e1f46bca33def54b6cda54c"
                       }
                      }
                     }
                    ]
                   }
                  }
                 }
                ]
               },
               "vmSize": {
                "$id": "5590",
                "kind": "string",
                "type": {
                 "$ref": "592"
                },
                "value": "Standard_DS3"
               }
              }
             },
             "sku": {
              "$id": "5591",
              "kind": "model",
              "type": {
               "$ref": "1060"
              },
              "value": {
               "$id": "5592",
               "name": {
                "$id": "5593",
                "kind": "string",
                "type": {
                 "$ref": "1062"
                },
                "value": "Standard_S2"
               },
               "capacity": {
                "$id": "5594",
                "kind": "number",
                "type": {
                 "$ref": "1070"
                },
                "value": 10
               },
               "tier": {
                "$id": "5595",
                "kind": "string",
                "type": {
                 "$ref": "1066"
                },
                "value": "Standard"
               }
              }
             },
             "tags": {
              "$id": "5596",
              "kind": "dict",
              "type": {
               "$ref": "1054"
              },
              "value": {
               "$id": "5597"
              }
             }
            }
           }
          }
         ]
        },
        {
         "$id": "5598",
         "kind": "http",
         "name": "Put node type with custom vm image",
         "description": "Put node type with custom vm image",
         "filePath": "2024-11-01-preview/NodeTypePutOperationCustomImage_example.json",
         "parameters": [
          {
           "$id": "5599",
           "parameter": {
            "$ref": "5436"
           },
           "value": {
            "$id": "5600",
            "kind": "string",
            "type": {
             "$ref": "5437"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "5601",
           "parameter": {
            "$ref": "5444"
           },
           "value": {
            "$id": "5602",
            "kind": "string",
            "type": {
             "$ref": "5445"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "5603",
           "parameter": {
            "$ref": "5446"
           },
           "value": {
            "$id": "5604",
            "kind": "string",
            "type": {
             "$ref": "5447"
            },
            "value": "BE"
           }
          },
          {
           "$id": "5605",
           "parameter": {
            "$ref": "5442"
           },
           "value": {
            "$id": "5606",
            "kind": "string",
            "type": {
             "$ref": "5443"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "5607",
           "parameter": {
            "$ref": "5440"
           },
           "value": {
            "$id": "5608",
            "kind": "string",
            "type": {
             "$ref": "5441"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "5609",
           "response": {
            "$ref": "5455"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "5610",
            "kind": "model",
            "type": {
             "$ref": "499"
            },
            "value": {
             "$id": "5611",
             "name": {
              "$id": "5612",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "BE"
             },
             "type": {
              "$id": "5613",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/nodeTypes"
             },
             "id": {
              "$id": "5614",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster/nodeTypes/BE"
             },
             "properties": {
              "$id": "5615",
              "kind": "model",
              "type": {
               "$ref": "544"
              },
              "value": {
               "$id": "5616",
               "capacities": {
                "$id": "5617",
                "kind": "dict",
                "type": {
                 "$ref": "571"
                },
                "value": {
                 "$id": "5618"
                }
               },
               "dataDiskSizeGB": {
                "$id": "5619",
                "kind": "number",
                "type": {
                 "$ref": "554"
                },
                "value": 200
               },
               "dataDiskType": {
                "$id": "5620",
                "kind": "string",
                "type": {
                 "$ref": "18"
                },
                "value": "StandardSSD_LRS"
               },
               "isPrimary": {
                "$id": "5621",
                "kind": "boolean",
                "type": {
                 "$ref": "546"
                },
                "value": false
               },
               "isStateless": {
                "$id": "5622",
                "kind": "boolean",
                "type": {
                 "$ref": "705"
                },
                "value": false
               },
               "placementProperties": {
                "$id": "5623",
                "kind": "dict",
                "type": {
                 "$ref": "565"
                },
                "value": {
                 "$id": "5624"
                }
               },
               "provisioningState": {
                "$id": "5625",
                "kind": "string",
                "type": {
                 "$ref": "70"
                },
                "value": "Creating"
               },
               "vmImageResourceId": {
                "$id": "5626",
                "kind": "string",
                "type": {
                 "$ref": "865"
                },
                "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-custom-image/providers/Microsoft.Compute/galleries/myCustomImages/images/Win2019DC"
               },
               "vmInstanceCount": {
                "$id": "5627",
                "kind": "number",
                "type": {
                 "$ref": "550"
                },
                "value": 10
               },
               "vmSize": {
                "$id": "5628",
                "kind": "string",
                "type": {
                 "$ref": "592"
                },
                "value": "Standard_D3"
               }
              }
             },
             "tags": {
              "$id": "5629",
              "kind": "dict",
              "type": {
               "$ref": "1054"
              },
              "value": {
               "$id": "5630"
              }
             }
            }
           }
          },
          {
           "$id": "5631",
           "response": {
            "$ref": "5456"
           },
           "statusCode": 202,
           "bodyValue": {
            "$id": "5632",
            "kind": "model",
            "type": {
             "$ref": "499"
            },
            "value": {
             "$id": "5633",
             "name": {
              "$id": "5634",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "BE"
             },
             "type": {
              "$id": "5635",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/nodeTypes"
             },
             "id": {
              "$id": "5636",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster/nodeTypes/BE"
             },
             "properties": {
              "$id": "5637",
              "kind": "model",
              "type": {
               "$ref": "544"
              },
              "value": {
               "$id": "5638",
               "capacities": {
                "$id": "5639",
                "kind": "dict",
                "type": {
                 "$ref": "571"
                },
                "value": {
                 "$id": "5640"
                }
               },
               "dataDiskSizeGB": {
                "$id": "5641",
                "kind": "number",
                "type": {
                 "$ref": "554"
                },
                "value": 200
               },
               "dataDiskType": {
                "$id": "5642",
                "kind": "string",
                "type": {
                 "$ref": "18"
                },
                "value": "StandardSSD_LRS"
               },
               "isPrimary": {
                "$id": "5643",
                "kind": "boolean",
                "type": {
                 "$ref": "546"
                },
                "value": false
               },
               "isStateless": {
                "$id": "5644",
                "kind": "boolean",
                "type": {
                 "$ref": "705"
                },
                "value": false
               },
               "placementProperties": {
                "$id": "5645",
                "kind": "dict",
                "type": {
                 "$ref": "565"
                },
                "value": {
                 "$id": "5646"
                }
               },
               "provisioningState": {
                "$id": "5647",
                "kind": "string",
                "type": {
                 "$ref": "70"
                },
                "value": "Updating"
               },
               "vmImageResourceId": {
                "$id": "5648",
                "kind": "string",
                "type": {
                 "$ref": "865"
                },
                "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-custom-image/providers/Microsoft.Compute/galleries/myCustomImages/images/Win2019DC"
               },
               "vmInstanceCount": {
                "$id": "5649",
                "kind": "number",
                "type": {
                 "$ref": "550"
                },
                "value": 10
               },
               "vmSize": {
                "$id": "5650",
                "kind": "string",
                "type": {
                 "$ref": "592"
                },
                "value": "Standard_D3"
               }
              }
             },
             "tags": {
              "$id": "5651",
              "kind": "dict",
              "type": {
               "$ref": "1054"
              },
              "value": {
               "$id": "5652"
              }
             }
            }
           }
          }
         ]
        },
        {
         "$id": "5653",
         "kind": "http",
         "name": "Put node type with shared galleries custom vm image",
         "description": "Put node type with shared galleries custom vm image",
         "filePath": "2024-11-01-preview/NodeTypePutOperationCustomSharedGalleriesImage_example.json",
         "parameters": [
          {
           "$id": "5654",
           "parameter": {
            "$ref": "5436"
           },
           "value": {
            "$id": "5655",
            "kind": "string",
            "type": {
             "$ref": "5437"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "5656",
           "parameter": {
            "$ref": "5444"
           },
           "value": {
            "$id": "5657",
            "kind": "string",
            "type": {
             "$ref": "5445"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "5658",
           "parameter": {
            "$ref": "5446"
           },
           "value": {
            "$id": "5659",
            "kind": "string",
            "type": {
             "$ref": "5447"
            },
            "value": "BE"
           }
          },
          {
           "$id": "5660",
           "parameter": {
            "$ref": "5442"
           },
           "value": {
            "$id": "5661",
            "kind": "string",
            "type": {
             "$ref": "5443"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "5662",
           "parameter": {
            "$ref": "5440"
           },
           "value": {
            "$id": "5663",
            "kind": "string",
            "type": {
             "$ref": "5441"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "5664",
           "response": {
            "$ref": "5455"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "5665",
            "kind": "model",
            "type": {
             "$ref": "499"
            },
            "value": {
             "$id": "5666",
             "name": {
              "$id": "5667",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "BE"
             },
             "type": {
              "$id": "5668",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/nodeTypes"
             },
             "id": {
              "$id": "5669",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster/nodeTypes/BE"
             },
             "properties": {
              "$id": "5670",
              "kind": "model",
              "type": {
               "$ref": "544"
              },
              "value": {
               "$id": "5671",
               "capacities": {
                "$id": "5672",
                "kind": "dict",
                "type": {
                 "$ref": "571"
                },
                "value": {
                 "$id": "5673"
                }
               },
               "dataDiskSizeGB": {
                "$id": "5674",
                "kind": "number",
                "type": {
                 "$ref": "554"
                },
                "value": 200
               },
               "dataDiskType": {
                "$id": "5675",
                "kind": "string",
                "type": {
                 "$ref": "18"
                },
                "value": "StandardSSD_LRS"
               },
               "isPrimary": {
                "$id": "5676",
                "kind": "boolean",
                "type": {
                 "$ref": "546"
                },
                "value": false
               },
               "isStateless": {
                "$id": "5677",
                "kind": "boolean",
                "type": {
                 "$ref": "705"
                },
                "value": false
               },
               "placementProperties": {
                "$id": "5678",
                "kind": "dict",
                "type": {
                 "$ref": "565"
                },
                "value": {
                 "$id": "5679"
                }
               },
               "provisioningState": {
                "$id": "5680",
                "kind": "string",
                "type": {
                 "$ref": "70"
                },
                "value": "Creating"
               },
               "vmInstanceCount": {
                "$id": "5681",
                "kind": "number",
                "type": {
                 "$ref": "550"
                },
                "value": 10
               },
               "vmSharedGalleryImageId": {
                "$id": "5682",
                "kind": "string",
                "type": {
                 "$ref": "894"
                },
                "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-custom-image/providers/Microsoft.Compute/sharedGalleries/35349201-a0b3-405e-8a23-9f1450984307-SFSHAREDGALLERY/images/TestNoProdContainerDImage/versions/latest"
               },
               "vmSize": {
                "$id": "5683",
                "kind": "string",
                "type": {
                 "$ref": "592"
                },
                "value": "Standard_D3"
               }
              }
             },
             "tags": {
              "$id": "5684",
              "kind": "dict",
              "type": {
               "$ref": "1054"
              },
              "value": {
               "$id": "5685"
              }
             }
            }
           }
          },
          {
           "$id": "5686",
           "response": {
            "$ref": "5456"
           },
           "statusCode": 202,
           "bodyValue": {
            "$id": "5687",
            "kind": "model",
            "type": {
             "$ref": "499"
            },
            "value": {
             "$id": "5688",
             "name": {
              "$id": "5689",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "BE"
             },
             "type": {
              "$id": "5690",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/nodeTypes"
             },
             "id": {
              "$id": "5691",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster/nodeTypes/BE"
             },
             "properties": {
              "$id": "5692",
              "kind": "model",
              "type": {
               "$ref": "544"
              },
              "value": {
               "$id": "5693",
               "capacities": {
                "$id": "5694",
                "kind": "dict",
                "type": {
                 "$ref": "571"
                },
                "value": {
                 "$id": "5695"
                }
               },
               "dataDiskSizeGB": {
                "$id": "5696",
                "kind": "number",
                "type": {
                 "$ref": "554"
                },
                "value": 200
               },
               "dataDiskType": {
                "$id": "5697",
                "kind": "string",
                "type": {
                 "$ref": "18"
                },
                "value": "StandardSSD_LRS"
               },
               "isPrimary": {
                "$id": "5698",
                "kind": "boolean",
                "type": {
                 "$ref": "546"
                },
                "value": false
               },
               "isStateless": {
                "$id": "5699",
                "kind": "boolean",
                "type": {
                 "$ref": "705"
                },
                "value": false
               },
               "placementProperties": {
                "$id": "5700",
                "kind": "dict",
                "type": {
                 "$ref": "565"
                },
                "value": {
                 "$id": "5701"
                }
               },
               "provisioningState": {
                "$id": "5702",
                "kind": "string",
                "type": {
                 "$ref": "70"
                },
                "value": "Updating"
               },
               "vmInstanceCount": {
                "$id": "5703",
                "kind": "number",
                "type": {
                 "$ref": "550"
                },
                "value": 10
               },
               "vmSharedGalleryImageId": {
                "$id": "5704",
                "kind": "string",
                "type": {
                 "$ref": "894"
                },
                "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-custom-image/providers/Microsoft.Compute/sharedGalleries/35349201-a0b3-405e-8a23-9f1450984307-SFSHAREDGALLERY/images/TestNoProdContainerDImage/versions/latest"
               },
               "vmSize": {
                "$id": "5705",
                "kind": "string",
                "type": {
                 "$ref": "592"
                },
                "value": "Standard_D3"
               }
              }
             },
             "tags": {
              "$id": "5706",
              "kind": "dict",
              "type": {
               "$ref": "1054"
              },
              "value": {
               "$id": "5707"
              }
             }
            }
           }
          }
         ]
        },
        {
         "$id": "5708",
         "kind": "http",
         "name": "Put node type with dedicated hosts",
         "description": "Put node type with dedicated hosts",
         "filePath": "2024-11-01-preview/NodeTypePutOperationDedicatedHost_example.json",
         "parameters": [
          {
           "$id": "5709",
           "parameter": {
            "$ref": "5436"
           },
           "value": {
            "$id": "5710",
            "kind": "string",
            "type": {
             "$ref": "5437"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "5711",
           "parameter": {
            "$ref": "5444"
           },
           "value": {
            "$id": "5712",
            "kind": "string",
            "type": {
             "$ref": "5445"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "5713",
           "parameter": {
            "$ref": "5446"
           },
           "value": {
            "$id": "5714",
            "kind": "string",
            "type": {
             "$ref": "5447"
            },
            "value": "BE"
           }
          },
          {
           "$id": "5715",
           "parameter": {
            "$ref": "5442"
           },
           "value": {
            "$id": "5716",
            "kind": "string",
            "type": {
             "$ref": "5443"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "5717",
           "parameter": {
            "$ref": "5440"
           },
           "value": {
            "$id": "5718",
            "kind": "string",
            "type": {
             "$ref": "5441"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "5719",
           "response": {
            "$ref": "5455"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "5720",
            "kind": "model",
            "type": {
             "$ref": "499"
            },
            "value": {
             "$id": "5721",
             "name": {
              "$id": "5722",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "BE"
             },
             "type": {
              "$id": "5723",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/nodeTypes"
             },
             "id": {
              "$id": "5724",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster/nodeTypes/BE"
             },
             "properties": {
              "$id": "5725",
              "kind": "model",
              "type": {
               "$ref": "544"
              },
              "value": {
               "$id": "5726",
               "capacities": {
                "$id": "5727",
                "kind": "dict",
                "type": {
                 "$ref": "571"
                },
                "value": {
                 "$id": "5728"
                }
               },
               "dataDiskSizeGB": {
                "$id": "5729",
                "kind": "number",
                "type": {
                 "$ref": "554"
                },
                "value": 200
               },
               "dataDiskType": {
                "$id": "5730",
                "kind": "string",
                "type": {
                 "$ref": "18"
                },
                "value": "StandardSSD_LRS"
               },
               "hostGroupId": {
                "$id": "5731",
                "kind": "string",
                "type": {
                 "$ref": "850"
                },
                "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testhostgroupRG/providers/Microsoft.Compute/hostGroups/testHostGroup"
               },
               "isPrimary": {
                "$id": "5732",
                "kind": "boolean",
                "type": {
                 "$ref": "546"
                },
                "value": false
               },
               "isStateless": {
                "$id": "5733",
                "kind": "boolean",
                "type": {
                 "$ref": "705"
                },
                "value": false
               },
               "placementProperties": {
                "$id": "5734",
                "kind": "dict",
                "type": {
                 "$ref": "565"
                },
                "value": {
                 "$id": "5735"
                }
               },
               "provisioningState": {
                "$id": "5736",
                "kind": "string",
                "type": {
                 "$ref": "70"
                },
                "value": "Creating"
               },
               "vmImageOffer": {
                "$id": "5737",
                "kind": "string",
                "type": {
                 "$ref": "600"
                },
                "value": "WindowsServer"
               },
               "vmImagePublisher": {
                "$id": "5738",
                "kind": "string",
                "type": {
                 "$ref": "596"
                },
                "value": "MicrosoftWindowsServer"
               },
               "vmImageSku": {
                "$id": "5739",
                "kind": "string",
                "type": {
                 "$ref": "604"
                },
                "value": "2019-Datacenter"
               },
               "vmImageVersion": {
                "$id": "5740",
                "kind": "string",
                "type": {
                 "$ref": "608"
                },
                "value": "latest"
               },
               "vmInstanceCount": {
                "$id": "5741",
                "kind": "number",
                "type": {
                 "$ref": "550"
                },
                "value": 10
               },
               "vmSize": {
                "$id": "5742",
                "kind": "string",
                "type": {
                 "$ref": "592"
                },
                "value": "Standard_D8s_v3"
               },
               "zones": {
                "$id": "5743",
                "kind": "array",
                "type": {
                 "$ref": "841"
                },
                "value": [
                 {
                  "$id": "5744",
                  "kind": "string",
                  "type": {
                   "$ref": "842"
                  },
                  "value": "1"
                 }
                ]
               }
              }
             },
             "tags": {
              "$id": "5745",
              "kind": "dict",
              "type": {
               "$ref": "1054"
              },
              "value": {
               "$id": "5746"
              }
             }
            }
           }
          },
          {
           "$id": "5747",
           "response": {
            "$ref": "5456"
           },
           "statusCode": 202,
           "bodyValue": {
            "$id": "5748",
            "kind": "model",
            "type": {
             "$ref": "499"
            },
            "value": {
             "$id": "5749",
             "name": {
              "$id": "5750",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "BE"
             },
             "type": {
              "$id": "5751",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/nodeTypes"
             },
             "id": {
              "$id": "5752",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster/nodeTypes/BE"
             },
             "properties": {
              "$id": "5753",
              "kind": "model",
              "type": {
               "$ref": "544"
              },
              "value": {
               "$id": "5754",
               "capacities": {
                "$id": "5755",
                "kind": "dict",
                "type": {
                 "$ref": "571"
                },
                "value": {
                 "$id": "5756"
                }
               },
               "dataDiskSizeGB": {
                "$id": "5757",
                "kind": "number",
                "type": {
                 "$ref": "554"
                },
                "value": 200
               },
               "dataDiskType": {
                "$id": "5758",
                "kind": "string",
                "type": {
                 "$ref": "18"
                },
                "value": "StandardSSD_LRS"
               },
               "hostGroupId": {
                "$id": "5759",
                "kind": "string",
                "type": {
                 "$ref": "850"
                },
                "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testhostgroupRG/providers/Microsoft.Compute/hostGroups/testHostGroup"
               },
               "isPrimary": {
                "$id": "5760",
                "kind": "boolean",
                "type": {
                 "$ref": "546"
                },
                "value": false
               },
               "isStateless": {
                "$id": "5761",
                "kind": "boolean",
                "type": {
                 "$ref": "705"
                },
                "value": false
               },
               "placementProperties": {
                "$id": "5762",
                "kind": "dict",
                "type": {
                 "$ref": "565"
                },
                "value": {
                 "$id": "5763"
                }
               },
               "provisioningState": {
                "$id": "5764",
                "kind": "string",
                "type": {
                 "$ref": "70"
                },
                "value": "Updating"
               },
               "vmImageOffer": {
                "$id": "5765",
                "kind": "string",
                "type": {
                 "$ref": "600"
                },
                "value": "WindowsServer"
               },
               "vmImagePublisher": {
                "$id": "5766",
                "kind": "string",
                "type": {
                 "$ref": "596"
                },
                "value": "MicrosoftWindowsServer"
               },
               "vmImageSku": {
                "$id": "5767",
                "kind": "string",
                "type": {
                 "$ref": "604"
                },
                "value": "2019-Datacenter"
               },
               "vmImageVersion": {
                "$id": "5768",
                "kind": "string",
                "type": {
                 "$ref": "608"
                },
                "value": "latest"
               },
               "vmInstanceCount": {
                "$id": "5769",
                "kind": "number",
                "type": {
                 "$ref": "550"
                },
                "value": 10
               },
               "vmSize": {
                "$id": "5770",
                "kind": "string",
                "type": {
                 "$ref": "592"
                },
                "value": "Standard_D8s_v3"
               },
               "zones": {
                "$id": "5771",
                "kind": "array",
                "type": {
                 "$ref": "841"
                },
                "value": [
                 {
                  "$id": "5772",
                  "kind": "string",
                  "type": {
                   "$ref": "842"
                  },
                  "value": "1"
                 }
                ]
               }
              }
             },
             "tags": {
              "$id": "5773",
              "kind": "dict",
              "type": {
               "$ref": "1054"
              },
              "value": {
               "$id": "5774"
              }
             }
            }
           }
          }
         ]
        },
        {
         "$id": "5775",
         "kind": "http",
         "name": "Put an stateless node type with temporary disk for service fabric",
         "description": "Put an stateless node type with temporary disk for service fabric",
         "filePath": "2024-11-01-preview/NodeTypePutOperationStateless_example.json",
         "parameters": [
          {
           "$id": "5776",
           "parameter": {
            "$ref": "5436"
           },
           "value": {
            "$id": "5777",
            "kind": "string",
            "type": {
             "$ref": "5437"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "5778",
           "parameter": {
            "$ref": "5444"
           },
           "value": {
            "$id": "5779",
            "kind": "string",
            "type": {
             "$ref": "5445"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "5780",
           "parameter": {
            "$ref": "5446"
           },
           "value": {
            "$id": "5781",
            "kind": "string",
            "type": {
             "$ref": "5447"
            },
            "value": "BE"
           }
          },
          {
           "$id": "5782",
           "parameter": {
            "$ref": "5442"
           },
           "value": {
            "$id": "5783",
            "kind": "string",
            "type": {
             "$ref": "5443"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "5784",
           "parameter": {
            "$ref": "5440"
           },
           "value": {
            "$id": "5785",
            "kind": "string",
            "type": {
             "$ref": "5441"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "5786",
           "response": {
            "$ref": "5455"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "5787",
            "kind": "model",
            "type": {
             "$ref": "499"
            },
            "value": {
             "$id": "5788",
             "name": {
              "$id": "5789",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "BE"
             },
             "type": {
              "$id": "5790",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/nodeTypes"
             },
             "id": {
              "$id": "5791",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster/nodeTypes/BE"
             },
             "properties": {
              "$id": "5792",
              "kind": "model",
              "type": {
               "$ref": "544"
              },
              "value": {
               "$id": "5793",
               "enableEncryptionAtHost": {
                "$id": "5794",
                "kind": "boolean",
                "type": {
                 "$ref": "818"
                },
                "value": true
               },
               "isPrimary": {
                "$id": "5795",
                "kind": "boolean",
                "type": {
                 "$ref": "546"
                },
                "value": false
               },
               "isStateless": {
                "$id": "5796",
                "kind": "boolean",
                "type": {
                 "$ref": "705"
                },
                "value": true
               },
               "multiplePlacementGroups": {
                "$id": "5797",
                "kind": "boolean",
                "type": {
                 "$ref": "709"
                },
                "value": true
               },
               "provisioningState": {
                "$id": "5798",
                "kind": "string",
                "type": {
                 "$ref": "70"
                },
                "value": "Creating"
               },
               "useTempDataDisk": {
                "$id": "5799",
                "kind": "boolean",
                "type": {
                 "$ref": "833"
                },
                "value": true
               },
               "vmExtensions": {
                "$id": "5800",
                "kind": "array",
                "type": {
                 "$ref": "638"
                },
                "value": [
                 {
                  "$id": "5801",
                  "kind": "model",
                  "type": {
                   "$ref": "639"
                  },
                  "value": {
                   "$id": "5802",
                   "name": {
                    "$id": "5803",
                    "kind": "string",
                    "type": {
                     "$ref": "641"
                    },
                    "value": "Microsoft.Azure.Geneva.GenevaMonitoring"
                   },
                   "properties": {
                    "$id": "5804",
                    "kind": "model",
                    "type": {
                     "$ref": "645"
                    },
                    "value": {
                     "$id": "5805",
                     "type": {
                      "$id": "5806",
                      "kind": "string",
                      "type": {
                       "$ref": "651"
                      },
                      "value": "GenevaMonitoring"
                     },
                     "autoUpgradeMinorVersion": {
                      "$id": "5807",
                      "kind": "boolean",
                      "type": {
                       "$ref": "659"
                      },
                      "value": true
                     },
                     "publisher": {
                      "$id": "5808",
                      "kind": "string",
                      "type": {
                       "$ref": "647"
                      },
                      "value": "Microsoft.Azure.Geneva"
                     },
                     "settings": {
                      "$id": "5809",
                      "kind": "model",
                      "type": {
                       "$ref": "663"
                      },
                      "value": {
                       "$id": "5810"
                      }
                     },
                     "typeHandlerVersion": {
                      "$id": "5811",
                      "kind": "string",
                      "type": {
                       "$ref": "655"
                      },
                      "value": "2.0"
                     }
                    }
                   }
                  }
                 }
                ]
               },
               "vmImageOffer": {
                "$id": "5812",
                "kind": "string",
                "type": {
                 "$ref": "600"
                },
                "value": "WindowsServer"
               },
               "vmImagePublisher": {
                "$id": "5813",
                "kind": "string",
                "type": {
                 "$ref": "596"
                },
                "value": "MicrosoftWindowsServer"
               },
               "vmImageSku": {
                "$id": "5814",
                "kind": "string",
                "type": {
                 "$ref": "604"
                },
                "value": "2016-Datacenter-Server-Core"
               },
               "vmImageVersion": {
                "$id": "5815",
                "kind": "string",
                "type": {
                 "$ref": "608"
                },
                "value": "latest"
               },
               "vmInstanceCount": {
                "$id": "5816",
                "kind": "number",
                "type": {
                 "$ref": "550"
                },
                "value": 10
               },
               "vmSize": {
                "$id": "5817",
                "kind": "string",
                "type": {
                 "$ref": "592"
                },
                "value": "Standard_DS3"
               }
              }
             },
             "tags": {
              "$id": "5818",
              "kind": "dict",
              "type": {
               "$ref": "1054"
              },
              "value": {
               "$id": "5819"
              }
             }
            }
           }
          },
          {
           "$id": "5820",
           "response": {
            "$ref": "5456"
           },
           "statusCode": 202,
           "bodyValue": {
            "$id": "5821",
            "kind": "model",
            "type": {
             "$ref": "499"
            },
            "value": {
             "$id": "5822",
             "name": {
              "$id": "5823",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "BE"
             },
             "type": {
              "$id": "5824",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/nodeTypes"
             },
             "id": {
              "$id": "5825",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster/nodeTypes/BE"
             },
             "properties": {
              "$id": "5826",
              "kind": "model",
              "type": {
               "$ref": "544"
              },
              "value": {
               "$id": "5827",
               "enableEncryptionAtHost": {
                "$id": "5828",
                "kind": "boolean",
                "type": {
                 "$ref": "818"
                },
                "value": true
               },
               "isPrimary": {
                "$id": "5829",
                "kind": "boolean",
                "type": {
                 "$ref": "546"
                },
                "value": false
               },
               "isStateless": {
                "$id": "5830",
                "kind": "boolean",
                "type": {
                 "$ref": "705"
                },
                "value": true
               },
               "multiplePlacementGroups": {
                "$id": "5831",
                "kind": "boolean",
                "type": {
                 "$ref": "709"
                },
                "value": true
               },
               "provisioningState": {
                "$id": "5832",
                "kind": "string",
                "type": {
                 "$ref": "70"
                },
                "value": "Updating"
               },
               "useTempDataDisk": {
                "$id": "5833",
                "kind": "boolean",
                "type": {
                 "$ref": "833"
                },
                "value": true
               },
               "vmExtensions": {
                "$id": "5834",
                "kind": "array",
                "type": {
                 "$ref": "638"
                },
                "value": [
                 {
                  "$id": "5835",
                  "kind": "model",
                  "type": {
                   "$ref": "639"
                  },
                  "value": {
                   "$id": "5836",
                   "name": {
                    "$id": "5837",
                    "kind": "string",
                    "type": {
                     "$ref": "641"
                    },
                    "value": "Microsoft.Azure.Geneva.GenevaMonitoring"
                   },
                   "properties": {
                    "$id": "5838",
                    "kind": "model",
                    "type": {
                     "$ref": "645"
                    },
                    "value": {
                     "$id": "5839",
                     "type": {
                      "$id": "5840",
                      "kind": "string",
                      "type": {
                       "$ref": "651"
                      },
                      "value": "GenevaMonitoring"
                     },
                     "autoUpgradeMinorVersion": {
                      "$id": "5841",
                      "kind": "boolean",
                      "type": {
                       "$ref": "659"
                      },
                      "value": true
                     },
                     "publisher": {
                      "$id": "5842",
                      "kind": "string",
                      "type": {
                       "$ref": "647"
                      },
                      "value": "Microsoft.Azure.Geneva"
                     },
                     "settings": {
                      "$id": "5843",
                      "kind": "model",
                      "type": {
                       "$ref": "663"
                      },
                      "value": {
                       "$id": "5844"
                      }
                     },
                     "typeHandlerVersion": {
                      "$id": "5845",
                      "kind": "string",
                      "type": {
                       "$ref": "655"
                      },
                      "value": "2.0"
                     }
                    }
                   }
                  }
                 }
                ]
               },
               "vmImageOffer": {
                "$id": "5846",
                "kind": "string",
                "type": {
                 "$ref": "600"
                },
                "value": "WindowsServer"
               },
               "vmImagePublisher": {
                "$id": "5847",
                "kind": "string",
                "type": {
                 "$ref": "596"
                },
                "value": "MicrosoftWindowsServer"
               },
               "vmImageSku": {
                "$id": "5848",
                "kind": "string",
                "type": {
                 "$ref": "604"
                },
                "value": "2016-Datacenter-Server-Core"
               },
               "vmImageVersion": {
                "$id": "5849",
                "kind": "string",
                "type": {
                 "$ref": "608"
                },
                "value": "latest"
               },
               "vmInstanceCount": {
                "$id": "5850",
                "kind": "number",
                "type": {
                 "$ref": "550"
                },
                "value": 10
               },
               "vmSize": {
                "$id": "5851",
                "kind": "string",
                "type": {
                 "$ref": "592"
                },
                "value": "Standard_DS3"
               }
              }
             },
             "tags": {
              "$id": "5852",
              "kind": "dict",
              "type": {
               "$ref": "1054"
              },
              "value": {
               "$id": "5853"
              }
             }
            }
           }
          }
         ]
        },
        {
         "$id": "5854",
         "kind": "http",
         "name": "Put node type with vm image plan ",
         "description": "Put node type with vm image plan ",
         "filePath": "2024-11-01-preview/NodeTypePutOperationVmImagePlan_example.json",
         "parameters": [
          {
           "$id": "5855",
           "parameter": {
            "$ref": "5436"
           },
           "value": {
            "$id": "5856",
            "kind": "string",
            "type": {
             "$ref": "5437"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "5857",
           "parameter": {
            "$ref": "5444"
           },
           "value": {
            "$id": "5858",
            "kind": "string",
            "type": {
             "$ref": "5445"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "5859",
           "parameter": {
            "$ref": "5446"
           },
           "value": {
            "$id": "5860",
            "kind": "string",
            "type": {
             "$ref": "5447"
            },
            "value": "BE"
           }
          },
          {
           "$id": "5861",
           "parameter": {
            "$ref": "5442"
           },
           "value": {
            "$id": "5862",
            "kind": "string",
            "type": {
             "$ref": "5443"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "5863",
           "parameter": {
            "$ref": "5440"
           },
           "value": {
            "$id": "5864",
            "kind": "string",
            "type": {
             "$ref": "5441"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "5865",
           "response": {
            "$ref": "5455"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "5866",
            "kind": "model",
            "type": {
             "$ref": "499"
            },
            "value": {
             "$id": "5867",
             "name": {
              "$id": "5868",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "BE"
             },
             "type": {
              "$id": "5869",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/nodeTypes"
             },
             "id": {
              "$id": "5870",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster/nodeTypes/BE"
             },
             "properties": {
              "$id": "5871",
              "kind": "model",
              "type": {
               "$ref": "544"
              },
              "value": {
               "$id": "5872",
               "capacities": {
                "$id": "5873",
                "kind": "dict",
                "type": {
                 "$ref": "571"
                },
                "value": {
                 "$id": "5874"
                }
               },
               "dataDiskSizeGB": {
                "$id": "5875",
                "kind": "number",
                "type": {
                 "$ref": "554"
                },
                "value": 200
               },
               "dataDiskType": {
                "$id": "5876",
                "kind": "string",
                "type": {
                 "$ref": "18"
                },
                "value": "StandardSSD_LRS"
               },
               "isPrimary": {
                "$id": "5877",
                "kind": "boolean",
                "type": {
                 "$ref": "546"
                },
                "value": false
               },
               "isStateless": {
                "$id": "5878",
                "kind": "boolean",
                "type": {
                 "$ref": "705"
                },
                "value": false
               },
               "placementProperties": {
                "$id": "5879",
                "kind": "dict",
                "type": {
                 "$ref": "565"
                },
                "value": {
                 "$id": "5880"
                }
               },
               "provisioningState": {
                "$id": "5881",
                "kind": "string",
                "type": {
                 "$ref": "70"
                },
                "value": "Creating"
               },
               "vmImageOffer": {
                "$id": "5882",
                "kind": "string",
                "type": {
                 "$ref": "600"
                },
                "value": "windows_2022_test"
               },
               "vmImagePlan": {
                "$id": "5883",
                "kind": "model",
                "type": {
                 "$ref": "921"
                },
                "value": {
                 "$id": "5884",
                 "name": {
                  "$id": "5885",
                  "kind": "string",
                  "type": {
                   "$ref": "923"
                  },
                  "value": "win_2022_test_20_10_gen2"
                 },
                 "product": {
                  "$id": "5886",
                  "kind": "string",
                  "type": {
                   "$ref": "927"
                  },
                  "value": "windows_2022_test"
                 },
                 "publisher": {
                  "$id": "5887",
                  "kind": "string",
                  "type": {
                   "$ref": "935"
                  },
                  "value": "testpublisher"
                 }
                }
               },
               "vmImagePublisher": {
                "$id": "5888",
                "kind": "string",
                "type": {
                 "$ref": "596"
                },
                "value": "testpublisher"
               },
               "vmImageSku": {
                "$id": "5889",
                "kind": "string",
                "type": {
                 "$ref": "604"
                },
                "value": "win_2022_test_20_10_gen2"
               },
               "vmImageVersion": {
                "$id": "5890",
                "kind": "string",
                "type": {
                 "$ref": "608"
                },
                "value": "latest"
               },
               "vmInstanceCount": {
                "$id": "5891",
                "kind": "number",
                "type": {
                 "$ref": "550"
                },
                "value": 10
               },
               "vmSize": {
                "$id": "5892",
                "kind": "string",
                "type": {
                 "$ref": "592"
                },
                "value": "Standard_D3"
               }
              }
             },
             "tags": {
              "$id": "5893",
              "kind": "dict",
              "type": {
               "$ref": "1054"
              },
              "value": {
               "$id": "5894"
              }
             }
            }
           }
          },
          {
           "$id": "5895",
           "response": {
            "$ref": "5456"
           },
           "statusCode": 202,
           "bodyValue": {
            "$id": "5896",
            "kind": "model",
            "type": {
             "$ref": "499"
            },
            "value": {
             "$id": "5897",
             "name": {
              "$id": "5898",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "BE"
             },
             "type": {
              "$id": "5899",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/nodeTypes"
             },
             "id": {
              "$id": "5900",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster/nodeTypes/BE"
             },
             "properties": {
              "$id": "5901",
              "kind": "model",
              "type": {
               "$ref": "544"
              },
              "value": {
               "$id": "5902",
               "capacities": {
                "$id": "5903",
                "kind": "dict",
                "type": {
                 "$ref": "571"
                },
                "value": {
                 "$id": "5904"
                }
               },
               "dataDiskSizeGB": {
                "$id": "5905",
                "kind": "number",
                "type": {
                 "$ref": "554"
                },
                "value": 200
               },
               "dataDiskType": {
                "$id": "5906",
                "kind": "string",
                "type": {
                 "$ref": "18"
                },
                "value": "StandardSSD_LRS"
               },
               "isPrimary": {
                "$id": "5907",
                "kind": "boolean",
                "type": {
                 "$ref": "546"
                },
                "value": false
               },
               "isStateless": {
                "$id": "5908",
                "kind": "boolean",
                "type": {
                 "$ref": "705"
                },
                "value": false
               },
               "placementProperties": {
                "$id": "5909",
                "kind": "dict",
                "type": {
                 "$ref": "565"
                },
                "value": {
                 "$id": "5910"
                }
               },
               "provisioningState": {
                "$id": "5911",
                "kind": "string",
                "type": {
                 "$ref": "70"
                },
                "value": "Updating"
               },
               "vmImageOffer": {
                "$id": "5912",
                "kind": "string",
                "type": {
                 "$ref": "600"
                },
                "value": "windows_2022_test"
               },
               "vmImagePlan": {
                "$id": "5913",
                "kind": "model",
                "type": {
                 "$ref": "921"
                },
                "value": {
                 "$id": "5914",
                 "name": {
                  "$id": "5915",
                  "kind": "string",
                  "type": {
                   "$ref": "923"
                  },
                  "value": "win_2022_test_20_10_gen2"
                 },
                 "product": {
                  "$id": "5916",
                  "kind": "string",
                  "type": {
                   "$ref": "927"
                  },
                  "value": "windows_2022_test"
                 },
                 "publisher": {
                  "$id": "5917",
                  "kind": "string",
                  "type": {
                   "$ref": "935"
                  },
                  "value": "testpublisher"
                 }
                }
               },
               "vmImagePublisher": {
                "$id": "5918",
                "kind": "string",
                "type": {
                 "$ref": "596"
                },
                "value": "testpublisher"
               },
               "vmImageSku": {
                "$id": "5919",
                "kind": "string",
                "type": {
                 "$ref": "604"
                },
                "value": "win_2022_test_20_10_gen2"
               },
               "vmImageVersion": {
                "$id": "5920",
                "kind": "string",
                "type": {
                 "$ref": "608"
                },
                "value": "latest"
               },
               "vmInstanceCount": {
                "$id": "5921",
                "kind": "number",
                "type": {
                 "$ref": "550"
                },
                "value": 10
               },
               "vmSize": {
                "$id": "5922",
                "kind": "string",
                "type": {
                 "$ref": "592"
                },
                "value": "Standard_D3"
               }
              }
             },
             "tags": {
              "$id": "5923",
              "kind": "dict",
              "type": {
               "$ref": "1054"
              },
              "value": {
               "$id": "5924"
              }
             }
            }
           }
          }
         ]
        },
        {
         "$id": "5925",
         "kind": "http",
         "name": "Put a node type with maximum parameters",
         "description": "Put a node type with maximum parameters",
         "filePath": "2024-11-01-preview/NodeTypePutOperation_example_max.json",
         "parameters": [
          {
           "$id": "5926",
           "parameter": {
            "$ref": "5436"
           },
           "value": {
            "$id": "5927",
            "kind": "string",
            "type": {
             "$ref": "5437"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "5928",
           "parameter": {
            "$ref": "5444"
           },
           "value": {
            "$id": "5929",
            "kind": "string",
            "type": {
             "$ref": "5445"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "5930",
           "parameter": {
            "$ref": "5446"
           },
           "value": {
            "$id": "5931",
            "kind": "string",
            "type": {
             "$ref": "5447"
            },
            "value": "BE-testResourceGroup-testRegion-test"
           }
          },
          {
           "$id": "5932",
           "parameter": {
            "$ref": "5442"
           },
           "value": {
            "$id": "5933",
            "kind": "string",
            "type": {
             "$ref": "5443"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "5934",
           "parameter": {
            "$ref": "5440"
           },
           "value": {
            "$id": "5935",
            "kind": "string",
            "type": {
             "$ref": "5441"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "5936",
           "response": {
            "$ref": "5455"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "5937",
            "kind": "model",
            "type": {
             "$ref": "499"
            },
            "value": {
             "$id": "5938",
             "name": {
              "$id": "5939",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "BE"
             },
             "type": {
              "$id": "5940",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/nodeTypes"
             },
             "id": {
              "$id": "5941",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster/nodeTypes/BE"
             },
             "properties": {
              "$id": "5942",
              "kind": "model",
              "type": {
               "$ref": "544"
              },
              "value": {
               "$id": "5943",
               "additionalDataDisks": {
                "$id": "5944",
                "kind": "array",
                "type": {
                 "$ref": "798"
                },
                "value": [
                 {
                  "$id": "5945",
                  "kind": "model",
                  "type": {
                   "$ref": "799"
                  },
                  "value": {
                   "$id": "5946",
                   "diskLetter": {
                    "$id": "5947",
                    "kind": "string",
                    "type": {
                     "$ref": "812"
                    },
                    "value": "F"
                   },
                   "diskSizeGB": {
                    "$id": "5948",
                    "kind": "number",
                    "type": {
                     "$ref": "805"
                    },
                    "value": 256
                   },
                   "diskType": {
                    "$id": "5949",
                    "kind": "string",
                    "type": {
                     "$ref": "18"
                    },
                    "value": "StandardSSD_LRS"
                   },
                   "lun": {
                    "$id": "5950",
                    "kind": "number",
                    "type": {
                     "$ref": "801"
                    },
                    "value": 1
                   }
                  }
                 },
                 {
                  "$id": "5951",
                  "kind": "model",
                  "type": {
                   "$ref": "799"
                  },
                  "value": {
                   "$id": "5952",
                   "diskLetter": {
                    "$id": "5953",
                    "kind": "string",
                    "type": {
                     "$ref": "812"
                    },
                    "value": "G"
                   },
                   "diskSizeGB": {
                    "$id": "5954",
                    "kind": "number",
                    "type": {
                     "$ref": "805"
                    },
                    "value": 150
                   },
                   "diskType": {
                    "$id": "5955",
                    "kind": "string",
                    "type": {
                     "$ref": "18"
                    },
                    "value": "Premium_LRS"
                   },
                   "lun": {
                    "$id": "5956",
                    "kind": "number",
                    "type": {
                     "$ref": "801"
                    },
                    "value": 2
                   }
                  }
                 }
                ]
               },
               "additionalNetworkInterfaceConfigurations": {
                "$id": "5957",
                "kind": "array",
                "type": {
                 "$ref": "951"
                },
                "value": [
                 {
                  "$id": "5958",
                  "kind": "model",
                  "type": {
                   "$ref": "952"
                  },
                  "value": {
                   "$id": "5959",
                   "name": {
                    "$id": "5960",
                    "kind": "string",
                    "type": {
                     "$ref": "954"
                    },
                    "value": "nic-1"
                   },
                   "dscpConfiguration": {
                    "$id": "5961",
                    "kind": "model",
                    "type": {
                     "$ref": "615"
                    },
                    "value": {
                     "$id": "5962",
                     "id": {
                      "$id": "5963",
                      "kind": "string",
                      "type": {
                       "$ref": "617"
                      },
                      "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/dscpConfigurations/myDscpConfig"
                     }
                    }
                   },
                   "enableAcceleratedNetworking": {
                    "$id": "5964",
                    "kind": "boolean",
                    "type": {
                     "$ref": "958"
                    },
                    "value": true
                   },
                   "ipConfigurations": {
                    "$id": "5965",
                    "kind": "array",
                    "type": {
                     "$ref": "965"
                    },
                    "value": [
                     {
                      "$id": "5966",
                      "kind": "model",
                      "type": {
                       "$ref": "966"
                      },
                      "value": {
                       "$id": "5967",
                       "name": {
                        "$id": "5968",
                        "kind": "string",
                        "type": {
                         "$ref": "968"
                        },
                        "value": "ipconfig-1"
                       },
                       "applicationGatewayBackendAddressPools": {
                        "$id": "5969",
                        "kind": "array",
                        "type": {
                         "$ref": "972"
                        },
                        "value": [
                         {
                          "$id": "5970",
                          "kind": "model",
                          "type": {
                           "$ref": "615"
                          },
                          "value": {
                           "$id": "5971",
                           "id": {
                            "$id": "5972",
                            "kind": "string",
                            "type": {
                             "$ref": "617"
                            },
                            "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/applicationGateways/appgw-test/backendAddressPools/appgwBepoolTest"
                           }
                          }
                         }
                        ]
                       },
                       "loadBalancerBackendAddressPools": {
                        "$id": "5973",
                        "kind": "array",
                        "type": {
                         "$ref": "976"
                        },
                        "value": [
                         {
                          "$id": "5974",
                          "kind": "model",
                          "type": {
                           "$ref": "615"
                          },
                          "value": {
                           "$id": "5975",
                           "id": {
                            "$id": "5976",
                            "kind": "string",
                            "type": {
                             "$ref": "617"
                            },
                            "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/loadBalancers/test-LB/backendAddressPools/LoadBalancerBEAddressPool"
                           }
                          }
                         }
                        ]
                       },
                       "loadBalancerInboundNatPools": {
                        "$id": "5977",
                        "kind": "array",
                        "type": {
                         "$ref": "980"
                        },
                        "value": [
                         {
                          "$id": "5978",
                          "kind": "model",
                          "type": {
                           "$ref": "615"
                          },
                          "value": {
                           "$id": "5979",
                           "id": {
                            "$id": "5980",
                            "kind": "string",
                            "type": {
                             "$ref": "617"
                            },
                            "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/loadBalancers/test-LB/inboundNatPools/LoadBalancerNATPool"
                           }
                          }
                         }
                        ]
                       },
                       "privateIPAddressVersion": {
                        "$id": "5981",
                        "kind": "string",
                        "type": {
                         "$ref": "110"
                        },
                        "value": "IPv4"
                       },
                       "publicIPAddressConfiguration": {
                        "$id": "5982",
                        "kind": "model",
                        "type": {
                         "$ref": "990"
                        },
                        "value": {
                         "$id": "5983",
                         "name": {
                          "$id": "5984",
                          "kind": "string",
                          "type": {
                           "$ref": "992"
                          },
                          "value": "publicip-1"
                         },
                         "ipTags": {
                          "$id": "5985",
                          "kind": "array",
                          "type": {
                           "$ref": "996"
                          },
                          "value": [
                           {
                            "$id": "5986",
                            "kind": "model",
                            "type": {
                             "$ref": "997"
                            },
                            "value": {
                             "$id": "5987",
                             "ipTagType": {
                              "$id": "5988",
                              "kind": "string",
                              "type": {
                               "$ref": "999"
                              },
                              "value": "RoutingPreference"
                             },
                             "tag": {
                              "$id": "5989",
                              "kind": "string",
                              "type": {
                               "$ref": "1003"
                              },
                              "value": "Internet"
                             }
                            }
                           }
                          ]
                         },
                         "publicIPAddressVersion": {
                          "$id": "5990",
                          "kind": "string",
                          "type": {
                           "$ref": "116"
                          },
                          "value": "IPv4"
                         }
                        }
                       },
                       "subnet": {
                        "$id": "5991",
                        "kind": "model",
                        "type": {
                         "$ref": "615"
                        },
                        "value": {
                         "$id": "5992",
                         "id": {
                          "$id": "5993",
                          "kind": "string",
                          "type": {
                           "$ref": "617"
                          },
                          "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/virtualNetworks/vnet1/subnets/subnet1"
                         }
                        }
                       }
                      }
                     }
                    ]
                   }
                  }
                 }
                ]
               },
               "capacities": {
                "$id": "5994",
                "kind": "dict",
                "type": {
                 "$ref": "571"
                },
                "value": {
                 "$id": "5995",
                 "ClientConnections": {
                  "$id": "5996",
                  "kind": "string",
                  "type": {
                   "$ref": "573"
                  },
                  "value": "65536"
                 }
                }
               },
               "dataDiskLetter": {
                "$id": "5997",
                "kind": "string",
                "type": {
                 "$ref": "561"
                },
                "value": "S"
               },
               "dataDiskSizeGB": {
                "$id": "5998",
                "kind": "number",
                "type": {
                 "$ref": "554"
                },
                "value": 200
               },
               "dataDiskType": {
                "$id": "5999",
                "kind": "string",
                "type": {
                 "$ref": "18"
                },
                "value": "Premium_LRS"
               },
               "dscpConfigurationId": {
                "$id": "6000",
                "kind": "string",
                "type": {
                 "$ref": "946"
                },
                "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/dscpConfigurations/myDscpConfig"
               },
               "enableAcceleratedNetworking": {
                "$id": "6001",
                "kind": "boolean",
                "type": {
                 "$ref": "825"
                },
                "value": true
               },
               "enableEncryptionAtHost": {
                "$id": "6002",
                "kind": "boolean",
                "type": {
                 "$ref": "818"
                },
                "value": true
               },
               "enableNodePublicIP": {
                "$id": "6003",
                "kind": "boolean",
                "type": {
                 "$ref": "886"
                },
                "value": true
               },
               "enableNodePublicIPv6": {
                "$id": "6004",
                "kind": "boolean",
                "type": {
                 "$ref": "890"
                },
                "value": true
               },
               "enableOverProvisioning": {
                "$id": "6005",
                "kind": "boolean",
                "type": {
                 "$ref": "837"
                },
                "value": false
               },
               "evictionPolicy": {
                "$id": "6006",
                "kind": "string",
                "type": {
                 "$ref": "92"
                },
                "value": "Deallocate"
               },
               "frontendConfigurations": {
                "$id": "6007",
                "kind": "array",
                "type": {
                 "$ref": "713"
                },
                "value": [
                 {
                  "$id": "6008",
                  "kind": "model",
                  "type": {
                   "$ref": "714"
                  },
                  "value": {
                   "$id": "6009",
                   "applicationGatewayBackendAddressPoolId": {
                    "$id": "6010",
                    "kind": "string",
                    "type": {
                     "$ref": "729"
                    },
                    "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/applicationGateways/appgw-test/backendAddressPools/appgwBepoolTest"
                   },
                   "loadBalancerBackendAddressPoolId": {
                    "$id": "6011",
                    "kind": "string",
                    "type": {
                     "$ref": "719"
                    },
                    "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/loadBalancers/test-LB/backendAddressPools/LoadBalancerBEAddressPool"
                   },
                   "loadBalancerInboundNatPoolId": {
                    "$id": "6012",
                    "kind": "string",
                    "type": {
                     "$ref": "724"
                    },
                    "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/loadBalancers/test-LB/inboundNatPools/LoadBalancerNATPool"
                   }
                  }
                 }
                ]
               },
               "isPrimary": {
                "$id": "6013",
                "kind": "boolean",
                "type": {
                 "$ref": "546"
                },
                "value": false
               },
               "isSpotVM": {
                "$id": "6014",
                "kind": "boolean",
                "type": {
                 "$ref": "846"
                },
                "value": true
               },
               "isStateless": {
                "$id": "6015",
                "kind": "boolean",
                "type": {
                 "$ref": "705"
                },
                "value": true
               },
               "multiplePlacementGroups": {
                "$id": "6016",
                "kind": "boolean",
                "type": {
                 "$ref": "709"
                },
                "value": true
               },
               "natGatewayId": {
                "$id": "6017",
                "kind": "string",
                "type": {
                 "$ref": "899"
                },
                "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/natGateways/myNatGateway"
               },
               "placementProperties": {
                "$id": "6018",
                "kind": "dict",
                "type": {
                 "$ref": "565"
                },
                "value": {
                 "$id": "6019",
                 "HasSSD": {
                  "$id": "6020",
                  "kind": "string",
                  "type": {
                   "$ref": "567"
                  },
                  "value": "true"
                 },
                 "NodeColor": {
                  "$id": "6021",
                  "kind": "string",
                  "type": {
                   "$ref": "567"
                  },
                  "value": "green"
                 },
                 "SomeProperty": {
                  "$id": "6022",
                  "kind": "string",
                  "type": {
                   "$ref": "567"
                  },
                  "value": "5"
                 }
                }
               },
               "provisioningState": {
                "$id": "6023",
                "kind": "string",
                "type": {
                 "$ref": "70"
                },
                "value": "Creating"
               },
               "secureBootEnabled": {
                "$id": "6024",
                "kind": "boolean",
                "type": {
                 "$ref": "882"
                },
                "value": true
               },
               "securityType": {
                "$id": "6025",
                "kind": "string",
                "type": {
                 "$ref": "104"
                },
                "value": "TrustedLaunch"
               },
               "serviceArtifactReferenceId": {
                "$id": "6026",
                "kind": "string",
                "type": {
                 "$ref": "941"
                },
                "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Compute/galleries/myGallery/serviceArtifacts/myServiceArtifact/vmArtifactsProfiles/myVmArtifactProfile"
               },
               "spotRestoreTimeout": {
                "$id": "6027",
                "kind": "string",
                "type": {
                 "$ref": "858"
                },
                "value": "PT30M"
               },
               "subnetId": {
                "$id": "6028",
                "kind": "string",
                "type": {
                 "$ref": "870"
                },
                "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/virtualNetworks/vnet1/subnets/subnet1"
               },
               "useDefaultPublicLoadBalancer": {
                "$id": "6029",
                "kind": "boolean",
                "type": {
                 "$ref": "829"
                },
                "value": true
               },
               "useEphemeralOSDisk": {
                "$id": "6030",
                "kind": "boolean",
                "type": {
                 "$ref": "854"
                },
                "value": true
               },
               "vmApplications": {
                "$id": "6031",
                "kind": "array",
                "type": {
                 "$ref": "1022"
                },
                "value": [
                 {
                  "$id": "6032",
                  "kind": "model",
                  "type": {
                   "$ref": "1023"
                  },
                  "value": {
                   "$id": "6033",
                   "configurationReference": {
                    "$id": "6034",
                    "kind": "string",
                    "type": {
                     "$ref": "1025"
                    },
                    "value": "https://mystorageaccount.blob.core.windows.net/containername/blobname"
                   },
                   "enableAutomaticUpgrade": {
                    "$id": "6035",
                    "kind": "boolean",
                    "type": {
                     "$ref": "1029"
                    },
                    "value": true
                   },
                   "order": {
                    "$id": "6036",
                    "kind": "number",
                    "type": {
                     "$ref": "1033"
                    },
                    "value": 1
                   },
                   "packageReferenceId": {
                    "$id": "6037",
                    "kind": "string",
                    "type": {
                     "$ref": "1037"
                    },
                    "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Compute/galleries/myGallery/applications/myApplication/versions/1.0.0"
                   },
                   "treatFailureAsDeploymentFailure": {
                    "$id": "6038",
                    "kind": "boolean",
                    "type": {
                     "$ref": "1046"
                    },
                    "value": false
                   },
                   "vmGalleryTags": {
                    "$id": "6039",
                    "kind": "string",
                    "type": {
                     "$ref": "1042"
                    },
                    "value": "{\"Tag1\":\"Value1\",\"Tag2\":\"Value2\"}"
                   }
                  }
                 }
                ]
               },
               "vmExtensions": {
                "$id": "6040",
                "kind": "array",
                "type": {
                 "$ref": "638"
                },
                "value": [
                 {
                  "$id": "6041",
                  "kind": "model",
                  "type": {
                   "$ref": "639"
                  },
                  "value": {
                   "$id": "6042",
                   "name": {
                    "$id": "6043",
                    "kind": "string",
                    "type": {
                     "$ref": "641"
                    },
                    "value": "Microsoft.Azure.Geneva.GenevaMonitoring"
                   },
                   "properties": {
                    "$id": "6044",
                    "kind": "model",
                    "type": {
                     "$ref": "645"
                    },
                    "value": {
                     "$id": "6045",
                     "type": {
                      "$id": "6046",
                      "kind": "string",
                      "type": {
                       "$ref": "651"
                      },
                      "value": "GenevaMonitoring"
                     },
                     "autoUpgradeMinorVersion": {
                      "$id": "6047",
                      "kind": "boolean",
                      "type": {
                       "$ref": "659"
                      },
                      "value": true
                     },
                     "enableAutomaticUpgrade": {
                      "$id": "6048",
                      "kind": "boolean",
                      "type": {
                       "$ref": "684"
                      },
                      "value": true
                     },
                     "forceUpdateTag": {
                      "$id": "6049",
                      "kind": "string",
                      "type": {
                       "$ref": "671"
                      },
                      "value": "v.1.0"
                     },
                     "publisher": {
                      "$id": "6050",
                      "kind": "string",
                      "type": {
                       "$ref": "647"
                      },
                      "value": "Microsoft.Azure.Geneva"
                     },
                     "settings": {
                      "$id": "6051",
                      "kind": "model",
                      "type": {
                       "$ref": "663"
                      },
                      "value": {
                       "$id": "6052"
                      }
                     },
                     "setupOrder": {
                      "$id": "6053",
                      "kind": "array",
                      "type": {
                       "$ref": "688"
                      },
                      "value": [
                       {
                        "$id": "6054",
                        "kind": "string",
                        "type": {
                         "$ref": "32"
                        },
                        "value": "BeforeSFRuntime"
                       }
                      ]
                     },
                     "typeHandlerVersion": {
                      "$id": "6055",
                      "kind": "string",
                      "type": {
                       "$ref": "655"
                      },
                      "value": "2.0"
                     }
                    }
                   }
                  }
                 }
                ]
               },
               "vmImageOffer": {
                "$id": "6056",
                "kind": "string",
                "type": {
                 "$ref": "600"
                },
                "value": "WindowsServer"
               },
               "vmImagePublisher": {
                "$id": "6057",
                "kind": "string",
                "type": {
                 "$ref": "596"
                },
                "value": "MicrosoftWindowsServer"
               },
               "vmImageSku": {
                "$id": "6058",
                "kind": "string",
                "type": {
                 "$ref": "604"
                },
                "value": "2016-Datacenter-Server-Core"
               },
               "vmImageVersion": {
                "$id": "6059",
                "kind": "string",
                "type": {
                 "$ref": "608"
                },
                "value": "latest"
               },
               "vmInstanceCount": {
                "$id": "6060",
                "kind": "number",
                "type": {
                 "$ref": "550"
                },
                "value": 10
               },
               "vmManagedIdentity": {
                "$id": "6061",
                "kind": "model",
                "type": {
                 "$ref": "696"
                },
                "value": {
                 "$id": "6062",
                 "userAssignedIdentities": {
                  "$id": "6063",
                  "kind": "array",
                  "type": {
                   "$ref": "698"
                  },
                  "value": [
                   {
                    "$id": "6064",
                    "kind": "string",
                    "type": {
                     "$ref": "699"
                    },
                    "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myIdentity"
                   },
                   {
                    "$id": "6065",
                    "kind": "string",
                    "type": {
                     "$ref": "699"
                    },
                    "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myIdentity2"
                   }
                  ]
                 }
                }
               },
               "vmSecrets": {
                "$id": "6066",
                "kind": "array",
                "type": {
                 "$ref": "612"
                },
                "value": [
                 {
                  "$id": "6067",
                  "kind": "model",
                  "type": {
                   "$ref": "613"
                  },
                  "value": {
                   "$id": "6068",
                   "sourceVault": {
                    "$id": "6069",
                    "kind": "model",
                    "type": {
                     "$ref": "615"
                    },
                    "value": {
                     "$id": "6070",
                     "id": {
                      "$id": "6071",
                      "kind": "string",
                      "type": {
                       "$ref": "617"
                      },
                      "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.KeyVault/vaults/myVault"
                     }
                    }
                   },
                   "vaultCertificates": {
                    "$id": "6072",
                    "kind": "array",
                    "type": {
                     "$ref": "623"
                    },
                    "value": [
                     {
                      "$id": "6073",
                      "kind": "model",
                      "type": {
                       "$ref": "624"
                      },
                      "value": {
                       "$id": "6074",
                       "certificateStore": {
                        "$id": "6075",
                        "kind": "string",
                        "type": {
                         "$ref": "630"
                        },
                        "value": "My"
                       },
                       "certificateUrl": {
                        "$id": "6076",
                        "kind": "string",
                        "type": {
                         "$ref": "626"
                        },
                        "value": "https://myVault.vault.azure.net:443/secrets/myCert/ef1a31d39e1f46bca33def54b6cda54c"
                       }
                      }
                     }
                    ]
                   }
                  }
                 }
                ]
               },
               "vmSetupActions": {
                "$id": "6077",
                "kind": "array",
                "type": {
                 "$ref": "875"
                },
                "value": [
                 {
                  "$id": "6078",
                  "kind": "string",
                  "type": {
                   "$ref": "98"
                  },
                  "value": "EnableContainers"
                 },
                 {
                  "$id": "6079",
                  "kind": "string",
                  "type": {
                   "$ref": "98"
                  },
                  "value": "EnableHyperV"
                 }
                ]
               },
               "vmSize": {
                "$id": "6080",
                "kind": "string",
                "type": {
                 "$ref": "592"
                },
                "value": "Standard_DS3"
               },
               "zones": {
                "$id": "6081",
                "kind": "array",
                "type": {
                 "$ref": "841"
                },
                "value": [
                 {
                  "$id": "6082",
                  "kind": "string",
                  "type": {
                   "$ref": "842"
                  },
                  "value": "1"
                 },
                 {
                  "$id": "6083",
                  "kind": "string",
                  "type": {
                   "$ref": "842"
                  },
                  "value": "2"
                 },
                 {
                  "$id": "6084",
                  "kind": "string",
                  "type": {
                   "$ref": "842"
                  },
                  "value": "3"
                 }
                ]
               }
              }
             },
             "tags": {
              "$id": "6085",
              "kind": "dict",
              "type": {
               "$ref": "1054"
              },
              "value": {
               "$id": "6086"
              }
             }
            }
           }
          },
          {
           "$id": "6087",
           "response": {
            "$ref": "5456"
           },
           "statusCode": 202,
           "bodyValue": {
            "$id": "6088",
            "kind": "model",
            "type": {
             "$ref": "499"
            },
            "value": {
             "$id": "6089",
             "name": {
              "$id": "6090",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "BE"
             },
             "type": {
              "$id": "6091",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/nodeTypes"
             },
             "id": {
              "$id": "6092",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster/nodeTypes/BE"
             },
             "properties": {
              "$id": "6093",
              "kind": "model",
              "type": {
               "$ref": "544"
              },
              "value": {
               "$id": "6094",
               "additionalDataDisks": {
                "$id": "6095",
                "kind": "array",
                "type": {
                 "$ref": "798"
                },
                "value": [
                 {
                  "$id": "6096",
                  "kind": "model",
                  "type": {
                   "$ref": "799"
                  },
                  "value": {
                   "$id": "6097",
                   "diskLetter": {
                    "$id": "6098",
                    "kind": "string",
                    "type": {
                     "$ref": "812"
                    },
                    "value": "F"
                   },
                   "diskSizeGB": {
                    "$id": "6099",
                    "kind": "number",
                    "type": {
                     "$ref": "805"
                    },
                    "value": 256
                   },
                   "diskType": {
                    "$id": "6100",
                    "kind": "string",
                    "type": {
                     "$ref": "18"
                    },
                    "value": "StandardSSD_LRS"
                   },
                   "lun": {
                    "$id": "6101",
                    "kind": "number",
                    "type": {
                     "$ref": "801"
                    },
                    "value": 1
                   }
                  }
                 },
                 {
                  "$id": "6102",
                  "kind": "model",
                  "type": {
                   "$ref": "799"
                  },
                  "value": {
                   "$id": "6103",
                   "diskLetter": {
                    "$id": "6104",
                    "kind": "string",
                    "type": {
                     "$ref": "812"
                    },
                    "value": "G"
                   },
                   "diskSizeGB": {
                    "$id": "6105",
                    "kind": "number",
                    "type": {
                     "$ref": "805"
                    },
                    "value": 150
                   },
                   "diskType": {
                    "$id": "6106",
                    "kind": "string",
                    "type": {
                     "$ref": "18"
                    },
                    "value": "Premium_LRS"
                   },
                   "lun": {
                    "$id": "6107",
                    "kind": "number",
                    "type": {
                     "$ref": "801"
                    },
                    "value": 2
                   }
                  }
                 }
                ]
               },
               "additionalNetworkInterfaceConfigurations": {
                "$id": "6108",
                "kind": "array",
                "type": {
                 "$ref": "951"
                },
                "value": [
                 {
                  "$id": "6109",
                  "kind": "model",
                  "type": {
                   "$ref": "952"
                  },
                  "value": {
                   "$id": "6110",
                   "name": {
                    "$id": "6111",
                    "kind": "string",
                    "type": {
                     "$ref": "954"
                    },
                    "value": "nic-1"
                   },
                   "dscpConfiguration": {
                    "$id": "6112",
                    "kind": "model",
                    "type": {
                     "$ref": "615"
                    },
                    "value": {
                     "$id": "6113",
                     "id": {
                      "$id": "6114",
                      "kind": "string",
                      "type": {
                       "$ref": "617"
                      },
                      "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/dscpConfigurations/myDscpConfig"
                     }
                    }
                   },
                   "enableAcceleratedNetworking": {
                    "$id": "6115",
                    "kind": "boolean",
                    "type": {
                     "$ref": "958"
                    },
                    "value": true
                   },
                   "ipConfigurations": {
                    "$id": "6116",
                    "kind": "array",
                    "type": {
                     "$ref": "965"
                    },
                    "value": [
                     {
                      "$id": "6117",
                      "kind": "model",
                      "type": {
                       "$ref": "966"
                      },
                      "value": {
                       "$id": "6118",
                       "name": {
                        "$id": "6119",
                        "kind": "string",
                        "type": {
                         "$ref": "968"
                        },
                        "value": "ipconfig-1"
                       },
                       "applicationGatewayBackendAddressPools": {
                        "$id": "6120",
                        "kind": "array",
                        "type": {
                         "$ref": "972"
                        },
                        "value": [
                         {
                          "$id": "6121",
                          "kind": "model",
                          "type": {
                           "$ref": "615"
                          },
                          "value": {
                           "$id": "6122",
                           "id": {
                            "$id": "6123",
                            "kind": "string",
                            "type": {
                             "$ref": "617"
                            },
                            "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/applicationGateways/appgw-test/backendAddressPools/appgwBepoolTest"
                           }
                          }
                         }
                        ]
                       },
                       "loadBalancerBackendAddressPools": {
                        "$id": "6124",
                        "kind": "array",
                        "type": {
                         "$ref": "976"
                        },
                        "value": [
                         {
                          "$id": "6125",
                          "kind": "model",
                          "type": {
                           "$ref": "615"
                          },
                          "value": {
                           "$id": "6126",
                           "id": {
                            "$id": "6127",
                            "kind": "string",
                            "type": {
                             "$ref": "617"
                            },
                            "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/loadBalancers/test-LB/backendAddressPools/LoadBalancerBEAddressPool"
                           }
                          }
                         }
                        ]
                       },
                       "loadBalancerInboundNatPools": {
                        "$id": "6128",
                        "kind": "array",
                        "type": {
                         "$ref": "980"
                        },
                        "value": [
                         {
                          "$id": "6129",
                          "kind": "model",
                          "type": {
                           "$ref": "615"
                          },
                          "value": {
                           "$id": "6130",
                           "id": {
                            "$id": "6131",
                            "kind": "string",
                            "type": {
                             "$ref": "617"
                            },
                            "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/loadBalancers/test-LB/inboundNatPools/LoadBalancerNATPool"
                           }
                          }
                         }
                        ]
                       },
                       "privateIPAddressVersion": {
                        "$id": "6132",
                        "kind": "string",
                        "type": {
                         "$ref": "110"
                        },
                        "value": "IPv4"
                       },
                       "publicIPAddressConfiguration": {
                        "$id": "6133",
                        "kind": "model",
                        "type": {
                         "$ref": "990"
                        },
                        "value": {
                         "$id": "6134",
                         "name": {
                          "$id": "6135",
                          "kind": "string",
                          "type": {
                           "$ref": "992"
                          },
                          "value": "publicip-1"
                         },
                         "ipTags": {
                          "$id": "6136",
                          "kind": "array",
                          "type": {
                           "$ref": "996"
                          },
                          "value": [
                           {
                            "$id": "6137",
                            "kind": "model",
                            "type": {
                             "$ref": "997"
                            },
                            "value": {
                             "$id": "6138",
                             "ipTagType": {
                              "$id": "6139",
                              "kind": "string",
                              "type": {
                               "$ref": "999"
                              },
                              "value": "RoutingPreference"
                             },
                             "tag": {
                              "$id": "6140",
                              "kind": "string",
                              "type": {
                               "$ref": "1003"
                              },
                              "value": "Internet"
                             }
                            }
                           }
                          ]
                         },
                         "publicIPAddressVersion": {
                          "$id": "6141",
                          "kind": "string",
                          "type": {
                           "$ref": "116"
                          },
                          "value": "IPv4"
                         }
                        }
                       },
                       "subnet": {
                        "$id": "6142",
                        "kind": "model",
                        "type": {
                         "$ref": "615"
                        },
                        "value": {
                         "$id": "6143",
                         "id": {
                          "$id": "6144",
                          "kind": "string",
                          "type": {
                           "$ref": "617"
                          },
                          "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/virtualNetworks/vnet1/subnets/subnet1"
                         }
                        }
                       }
                      }
                     }
                    ]
                   }
                  }
                 }
                ]
               },
               "capacities": {
                "$id": "6145",
                "kind": "dict",
                "type": {
                 "$ref": "571"
                },
                "value": {
                 "$id": "6146",
                 "ClientConnections": {
                  "$id": "6147",
                  "kind": "string",
                  "type": {
                   "$ref": "573"
                  },
                  "value": "65536"
                 }
                }
               },
               "dataDiskLetter": {
                "$id": "6148",
                "kind": "string",
                "type": {
                 "$ref": "561"
                },
                "value": "S"
               },
               "dataDiskSizeGB": {
                "$id": "6149",
                "kind": "number",
                "type": {
                 "$ref": "554"
                },
                "value": 200
               },
               "dataDiskType": {
                "$id": "6150",
                "kind": "string",
                "type": {
                 "$ref": "18"
                },
                "value": "Premium_LRS"
               },
               "dscpConfigurationId": {
                "$id": "6151",
                "kind": "string",
                "type": {
                 "$ref": "946"
                },
                "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/dscpConfigurations/myDscpConfig"
               },
               "enableAcceleratedNetworking": {
                "$id": "6152",
                "kind": "boolean",
                "type": {
                 "$ref": "825"
                },
                "value": true
               },
               "enableEncryptionAtHost": {
                "$id": "6153",
                "kind": "boolean",
                "type": {
                 "$ref": "818"
                },
                "value": true
               },
               "enableNodePublicIP": {
                "$id": "6154",
                "kind": "boolean",
                "type": {
                 "$ref": "886"
                },
                "value": true
               },
               "enableNodePublicIPv6": {
                "$id": "6155",
                "kind": "boolean",
                "type": {
                 "$ref": "890"
                },
                "value": true
               },
               "enableOverProvisioning": {
                "$id": "6156",
                "kind": "boolean",
                "type": {
                 "$ref": "837"
                },
                "value": false
               },
               "evictionPolicy": {
                "$id": "6157",
                "kind": "string",
                "type": {
                 "$ref": "92"
                },
                "value": "Deallocate"
               },
               "frontendConfigurations": {
                "$id": "6158",
                "kind": "array",
                "type": {
                 "$ref": "713"
                },
                "value": [
                 {
                  "$id": "6159",
                  "kind": "model",
                  "type": {
                   "$ref": "714"
                  },
                  "value": {
                   "$id": "6160",
                   "applicationGatewayBackendAddressPoolId": {
                    "$id": "6161",
                    "kind": "string",
                    "type": {
                     "$ref": "729"
                    },
                    "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/applicationGateways/appgw-test/backendAddressPools/appgwBepoolTest"
                   },
                   "loadBalancerBackendAddressPoolId": {
                    "$id": "6162",
                    "kind": "string",
                    "type": {
                     "$ref": "719"
                    },
                    "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/loadBalancers/test-LB/backendAddressPools/LoadBalancerBEAddressPool"
                   },
                   "loadBalancerInboundNatPoolId": {
                    "$id": "6163",
                    "kind": "string",
                    "type": {
                     "$ref": "724"
                    },
                    "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/loadBalancers/test-LB/inboundNatPools/LoadBalancerNATPool"
                   }
                  }
                 }
                ]
               },
               "isPrimary": {
                "$id": "6164",
                "kind": "boolean",
                "type": {
                 "$ref": "546"
                },
                "value": false
               },
               "isSpotVM": {
                "$id": "6165",
                "kind": "boolean",
                "type": {
                 "$ref": "846"
                },
                "value": true
               },
               "isStateless": {
                "$id": "6166",
                "kind": "boolean",
                "type": {
                 "$ref": "705"
                },
                "value": true
               },
               "multiplePlacementGroups": {
                "$id": "6167",
                "kind": "boolean",
                "type": {
                 "$ref": "709"
                },
                "value": true
               },
               "natGatewayId": {
                "$id": "6168",
                "kind": "string",
                "type": {
                 "$ref": "899"
                },
                "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/natGateways/myNatGateway"
               },
               "placementProperties": {
                "$id": "6169",
                "kind": "dict",
                "type": {
                 "$ref": "565"
                },
                "value": {
                 "$id": "6170",
                 "HasSSD": {
                  "$id": "6171",
                  "kind": "string",
                  "type": {
                   "$ref": "567"
                  },
                  "value": "true"
                 },
                 "NodeColor": {
                  "$id": "6172",
                  "kind": "string",
                  "type": {
                   "$ref": "567"
                  },
                  "value": "green"
                 },
                 "SomeProperty": {
                  "$id": "6173",
                  "kind": "string",
                  "type": {
                   "$ref": "567"
                  },
                  "value": "5"
                 }
                }
               },
               "provisioningState": {
                "$id": "6174",
                "kind": "string",
                "type": {
                 "$ref": "70"
                },
                "value": "Updating"
               },
               "secureBootEnabled": {
                "$id": "6175",
                "kind": "boolean",
                "type": {
                 "$ref": "882"
                },
                "value": true
               },
               "securityType": {
                "$id": "6176",
                "kind": "string",
                "type": {
                 "$ref": "104"
                },
                "value": "TrustedLaunch"
               },
               "serviceArtifactReferenceId": {
                "$id": "6177",
                "kind": "string",
                "type": {
                 "$ref": "941"
                },
                "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Compute/galleries/myGallery/serviceArtifacts/myServiceArtifact/vmArtifactsProfiles/myVmArtifactProfile"
               },
               "spotRestoreTimeout": {
                "$id": "6178",
                "kind": "string",
                "type": {
                 "$ref": "858"
                },
                "value": "PT30M"
               },
               "subnetId": {
                "$id": "6179",
                "kind": "string",
                "type": {
                 "$ref": "870"
                },
                "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/virtualNetworks/vnet1/subnets/subnet1"
               },
               "useDefaultPublicLoadBalancer": {
                "$id": "6180",
                "kind": "boolean",
                "type": {
                 "$ref": "829"
                },
                "value": true
               },
               "useEphemeralOSDisk": {
                "$id": "6181",
                "kind": "boolean",
                "type": {
                 "$ref": "854"
                },
                "value": true
               },
               "vmApplications": {
                "$id": "6182",
                "kind": "array",
                "type": {
                 "$ref": "1022"
                },
                "value": [
                 {
                  "$id": "6183",
                  "kind": "model",
                  "type": {
                   "$ref": "1023"
                  },
                  "value": {
                   "$id": "6184",
                   "configurationReference": {
                    "$id": "6185",
                    "kind": "string",
                    "type": {
                     "$ref": "1025"
                    },
                    "value": "https://mystorageaccount.blob.core.windows.net/containername/blobname"
                   },
                   "enableAutomaticUpgrade": {
                    "$id": "6186",
                    "kind": "boolean",
                    "type": {
                     "$ref": "1029"
                    },
                    "value": true
                   },
                   "order": {
                    "$id": "6187",
                    "kind": "number",
                    "type": {
                     "$ref": "1033"
                    },
                    "value": 1
                   },
                   "packageReferenceId": {
                    "$id": "6188",
                    "kind": "string",
                    "type": {
                     "$ref": "1037"
                    },
                    "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Compute/galleries/myGallery/applications/myApplication/versions/1.0.0"
                   },
                   "treatFailureAsDeploymentFailure": {
                    "$id": "6189",
                    "kind": "boolean",
                    "type": {
                     "$ref": "1046"
                    },
                    "value": false
                   },
                   "vmGalleryTags": {
                    "$id": "6190",
                    "kind": "string",
                    "type": {
                     "$ref": "1042"
                    },
                    "value": "{\"Tag1\":\"Value1\",\"Tag2\":\"Value2\"}"
                   }
                  }
                 }
                ]
               },
               "vmExtensions": {
                "$id": "6191",
                "kind": "array",
                "type": {
                 "$ref": "638"
                },
                "value": [
                 {
                  "$id": "6192",
                  "kind": "model",
                  "type": {
                   "$ref": "639"
                  },
                  "value": {
                   "$id": "6193",
                   "name": {
                    "$id": "6194",
                    "kind": "string",
                    "type": {
                     "$ref": "641"
                    },
                    "value": "Microsoft.Azure.Geneva.GenevaMonitoring"
                   },
                   "properties": {
                    "$id": "6195",
                    "kind": "model",
                    "type": {
                     "$ref": "645"
                    },
                    "value": {
                     "$id": "6196",
                     "type": {
                      "$id": "6197",
                      "kind": "string",
                      "type": {
                       "$ref": "651"
                      },
                      "value": "GenevaMonitoring"
                     },
                     "autoUpgradeMinorVersion": {
                      "$id": "6198",
                      "kind": "boolean",
                      "type": {
                       "$ref": "659"
                      },
                      "value": true
                     },
                     "enableAutomaticUpgrade": {
                      "$id": "6199",
                      "kind": "boolean",
                      "type": {
                       "$ref": "684"
                      },
                      "value": true
                     },
                     "forceUpdateTag": {
                      "$id": "6200",
                      "kind": "string",
                      "type": {
                       "$ref": "671"
                      },
                      "value": "v.1.0"
                     },
                     "publisher": {
                      "$id": "6201",
                      "kind": "string",
                      "type": {
                       "$ref": "647"
                      },
                      "value": "Microsoft.Azure.Geneva"
                     },
                     "settings": {
                      "$id": "6202",
                      "kind": "model",
                      "type": {
                       "$ref": "663"
                      },
                      "value": {
                       "$id": "6203"
                      }
                     },
                     "setupOrder": {
                      "$id": "6204",
                      "kind": "array",
                      "type": {
                       "$ref": "688"
                      },
                      "value": [
                       {
                        "$id": "6205",
                        "kind": "string",
                        "type": {
                         "$ref": "32"
                        },
                        "value": "BeforeSFRuntime"
                       }
                      ]
                     },
                     "typeHandlerVersion": {
                      "$id": "6206",
                      "kind": "string",
                      "type": {
                       "$ref": "655"
                      },
                      "value": "2.0"
                     }
                    }
                   }
                  }
                 }
                ]
               },
               "vmImageOffer": {
                "$id": "6207",
                "kind": "string",
                "type": {
                 "$ref": "600"
                },
                "value": "WindowsServer"
               },
               "vmImagePublisher": {
                "$id": "6208",
                "kind": "string",
                "type": {
                 "$ref": "596"
                },
                "value": "MicrosoftWindowsServer"
               },
               "vmImageSku": {
                "$id": "6209",
                "kind": "string",
                "type": {
                 "$ref": "604"
                },
                "value": "2016-Datacenter-Server-Core"
               },
               "vmImageVersion": {
                "$id": "6210",
                "kind": "string",
                "type": {
                 "$ref": "608"
                },
                "value": "latest"
               },
               "vmInstanceCount": {
                "$id": "6211",
                "kind": "number",
                "type": {
                 "$ref": "550"
                },
                "value": 10
               },
               "vmManagedIdentity": {
                "$id": "6212",
                "kind": "model",
                "type": {
                 "$ref": "696"
                },
                "value": {
                 "$id": "6213",
                 "userAssignedIdentities": {
                  "$id": "6214",
                  "kind": "array",
                  "type": {
                   "$ref": "698"
                  },
                  "value": [
                   {
                    "$id": "6215",
                    "kind": "string",
                    "type": {
                     "$ref": "699"
                    },
                    "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myIdentity"
                   },
                   {
                    "$id": "6216",
                    "kind": "string",
                    "type": {
                     "$ref": "699"
                    },
                    "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myIdentity2"
                   }
                  ]
                 }
                }
               },
               "vmSecrets": {
                "$id": "6217",
                "kind": "array",
                "type": {
                 "$ref": "612"
                },
                "value": [
                 {
                  "$id": "6218",
                  "kind": "model",
                  "type": {
                   "$ref": "613"
                  },
                  "value": {
                   "$id": "6219",
                   "sourceVault": {
                    "$id": "6220",
                    "kind": "model",
                    "type": {
                     "$ref": "615"
                    },
                    "value": {
                     "$id": "6221",
                     "id": {
                      "$id": "6222",
                      "kind": "string",
                      "type": {
                       "$ref": "617"
                      },
                      "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.KeyVault/vaults/myVault"
                     }
                    }
                   },
                   "vaultCertificates": {
                    "$id": "6223",
                    "kind": "array",
                    "type": {
                     "$ref": "623"
                    },
                    "value": [
                     {
                      "$id": "6224",
                      "kind": "model",
                      "type": {
                       "$ref": "624"
                      },
                      "value": {
                       "$id": "6225",
                       "certificateStore": {
                        "$id": "6226",
                        "kind": "string",
                        "type": {
                         "$ref": "630"
                        },
                        "value": "My"
                       },
                       "certificateUrl": {
                        "$id": "6227",
                        "kind": "string",
                        "type": {
                         "$ref": "626"
                        },
                        "value": "https://myVault.vault.azure.net:443/secrets/myCert/ef1a31d39e1f46bca33def54b6cda54c"
                       }
                      }
                     }
                    ]
                   }
                  }
                 }
                ]
               },
               "vmSetupActions": {
                "$id": "6228",
                "kind": "array",
                "type": {
                 "$ref": "875"
                },
                "value": [
                 {
                  "$id": "6229",
                  "kind": "string",
                  "type": {
                   "$ref": "98"
                  },
                  "value": "EnableContainers"
                 },
                 {
                  "$id": "6230",
                  "kind": "string",
                  "type": {
                   "$ref": "98"
                  },
                  "value": "EnableHyperV"
                 }
                ]
               },
               "vmSize": {
                "$id": "6231",
                "kind": "string",
                "type": {
                 "$ref": "592"
                },
                "value": "Standard_DS3"
               },
               "zones": {
                "$id": "6232",
                "kind": "array",
                "type": {
                 "$ref": "841"
                },
                "value": [
                 {
                  "$id": "6233",
                  "kind": "string",
                  "type": {
                   "$ref": "842"
                  },
                  "value": "1"
                 },
                 {
                  "$id": "6234",
                  "kind": "string",
                  "type": {
                   "$ref": "842"
                  },
                  "value": "2"
                 },
                 {
                  "$id": "6235",
                  "kind": "string",
                  "type": {
                   "$ref": "842"
                  },
                  "value": "3"
                 }
                ]
               }
              }
             },
             "tags": {
              "$id": "6236",
              "kind": "dict",
              "type": {
               "$ref": "1054"
              },
              "value": {
               "$id": "6237"
              }
             }
            }
           }
          }
         ]
        },
        {
         "$id": "6238",
         "kind": "http",
         "name": "Put a node type with minimum parameters",
         "description": "Put a node type with minimum parameters",
         "filePath": "2024-11-01-preview/NodeTypePutOperation_example_min.json",
         "parameters": [
          {
           "$id": "6239",
           "parameter": {
            "$ref": "5436"
           },
           "value": {
            "$id": "6240",
            "kind": "string",
            "type": {
             "$ref": "5437"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "6241",
           "parameter": {
            "$ref": "5444"
           },
           "value": {
            "$id": "6242",
            "kind": "string",
            "type": {
             "$ref": "5445"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "6243",
           "parameter": {
            "$ref": "5446"
           },
           "value": {
            "$id": "6244",
            "kind": "string",
            "type": {
             "$ref": "5447"
            },
            "value": "BE"
           }
          },
          {
           "$id": "6245",
           "parameter": {
            "$ref": "5442"
           },
           "value": {
            "$id": "6246",
            "kind": "string",
            "type": {
             "$ref": "5443"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "6247",
           "parameter": {
            "$ref": "5440"
           },
           "value": {
            "$id": "6248",
            "kind": "string",
            "type": {
             "$ref": "5441"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "6249",
           "response": {
            "$ref": "5455"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "6250",
            "kind": "model",
            "type": {
             "$ref": "499"
            },
            "value": {
             "$id": "6251",
             "name": {
              "$id": "6252",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "BE"
             },
             "type": {
              "$id": "6253",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/nodeTypes"
             },
             "id": {
              "$id": "6254",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster/nodeTypes/BE"
             },
             "properties": {
              "$id": "6255",
              "kind": "model",
              "type": {
               "$ref": "544"
              },
              "value": {
               "$id": "6256",
               "capacities": {
                "$id": "6257",
                "kind": "dict",
                "type": {
                 "$ref": "571"
                },
                "value": {
                 "$id": "6258"
                }
               },
               "dataDiskSizeGB": {
                "$id": "6259",
                "kind": "number",
                "type": {
                 "$ref": "554"
                },
                "value": 200
               },
               "dataDiskType": {
                "$id": "6260",
                "kind": "string",
                "type": {
                 "$ref": "18"
                },
                "value": "StandardSSD_LRS"
               },
               "isPrimary": {
                "$id": "6261",
                "kind": "boolean",
                "type": {
                 "$ref": "546"
                },
                "value": false
               },
               "isStateless": {
                "$id": "6262",
                "kind": "boolean",
                "type": {
                 "$ref": "705"
                },
                "value": false
               },
               "placementProperties": {
                "$id": "6263",
                "kind": "dict",
                "type": {
                 "$ref": "565"
                },
                "value": {
                 "$id": "6264"
                }
               },
               "provisioningState": {
                "$id": "6265",
                "kind": "string",
                "type": {
                 "$ref": "70"
                },
                "value": "Creating"
               },
               "vmImageOffer": {
                "$id": "6266",
                "kind": "string",
                "type": {
                 "$ref": "600"
                },
                "value": "WindowsServer"
               },
               "vmImagePublisher": {
                "$id": "6267",
                "kind": "string",
                "type": {
                 "$ref": "596"
                },
                "value": "MicrosoftWindowsServer"
               },
               "vmImageSku": {
                "$id": "6268",
                "kind": "string",
                "type": {
                 "$ref": "604"
                },
                "value": "2016-Datacenter-Server-Core"
               },
               "vmImageVersion": {
                "$id": "6269",
                "kind": "string",
                "type": {
                 "$ref": "608"
                },
                "value": "latest"
               },
               "vmInstanceCount": {
                "$id": "6270",
                "kind": "number",
                "type": {
                 "$ref": "550"
                },
                "value": 10
               },
               "vmSize": {
                "$id": "6271",
                "kind": "string",
                "type": {
                 "$ref": "592"
                },
                "value": "Standard_D3"
               }
              }
             },
             "tags": {
              "$id": "6272",
              "kind": "dict",
              "type": {
               "$ref": "1054"
              },
              "value": {
               "$id": "6273"
              }
             }
            }
           }
          },
          {
           "$id": "6274",
           "response": {
            "$ref": "5456"
           },
           "statusCode": 202,
           "bodyValue": {
            "$id": "6275",
            "kind": "model",
            "type": {
             "$ref": "499"
            },
            "value": {
             "$id": "6276",
             "name": {
              "$id": "6277",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "BE"
             },
             "type": {
              "$id": "6278",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/nodeTypes"
             },
             "id": {
              "$id": "6279",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster/nodeTypes/BE"
             },
             "properties": {
              "$id": "6280",
              "kind": "model",
              "type": {
               "$ref": "544"
              },
              "value": {
               "$id": "6281",
               "capacities": {
                "$id": "6282",
                "kind": "dict",
                "type": {
                 "$ref": "571"
                },
                "value": {
                 "$id": "6283"
                }
               },
               "dataDiskSizeGB": {
                "$id": "6284",
                "kind": "number",
                "type": {
                 "$ref": "554"
                },
                "value": 200
               },
               "dataDiskType": {
                "$id": "6285",
                "kind": "string",
                "type": {
                 "$ref": "18"
                },
                "value": "StandardSSD_LRS"
               },
               "isPrimary": {
                "$id": "6286",
                "kind": "boolean",
                "type": {
                 "$ref": "546"
                },
                "value": false
               },
               "isStateless": {
                "$id": "6287",
                "kind": "boolean",
                "type": {
                 "$ref": "705"
                },
                "value": false
               },
               "placementProperties": {
                "$id": "6288",
                "kind": "dict",
                "type": {
                 "$ref": "565"
                },
                "value": {
                 "$id": "6289"
                }
               },
               "provisioningState": {
                "$id": "6290",
                "kind": "string",
                "type": {
                 "$ref": "70"
                },
                "value": "Updating"
               },
               "vmImageOffer": {
                "$id": "6291",
                "kind": "string",
                "type": {
                 "$ref": "600"
                },
                "value": "WindowsServer"
               },
               "vmImagePublisher": {
                "$id": "6292",
                "kind": "string",
                "type": {
                 "$ref": "596"
                },
                "value": "MicrosoftWindowsServer"
               },
               "vmImageSku": {
                "$id": "6293",
                "kind": "string",
                "type": {
                 "$ref": "604"
                },
                "value": "2016-Datacenter-Server-Core"
               },
               "vmImageVersion": {
                "$id": "6294",
                "kind": "string",
                "type": {
                 "$ref": "608"
                },
                "value": "latest"
               },
               "vmInstanceCount": {
                "$id": "6295",
                "kind": "number",
                "type": {
                 "$ref": "550"
                },
                "value": 10
               },
               "vmSize": {
                "$id": "6296",
                "kind": "string",
                "type": {
                 "$ref": "592"
                },
                "value": "Standard_D3"
               }
              }
             },
             "tags": {
              "$id": "6297",
              "kind": "dict",
              "type": {
               "$ref": "1054"
              },
              "value": {
               "$id": "6298"
              }
             }
            }
           }
          }
         ]
        }
       ]
      },
      {
       "$id": "6299",
       "name": "update",
       "resourceName": "NodeType",
       "doc": "Update the configuration of a node type of a given managed cluster, only updating tags.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "6300",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "6301",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "6302",
          "type": {
           "$id": "6303",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6304",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "6305",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6306",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "6307",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6308",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "6309",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6310",
         "name": "nodeTypeName",
         "nameInRequest": "nodeTypeName",
         "doc": "The name of the node type.",
         "type": {
          "$id": "6311",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6312",
         "name": "contentType",
         "nameInRequest": "Content-Type",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$id": "6313",
          "kind": "constant",
          "valueType": {
           "$id": "6314",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": true,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6315",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "6316",
          "kind": "constant",
          "valueType": {
           "$id": "6317",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6318",
         "name": "parameters",
         "nameInRequest": "parameters",
         "doc": "The parameters to update the node type configuration.",
         "type": {
          "$ref": "1075"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "6319",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "499"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        },
        {
         "$id": "6320",
         "statusCodes": [
          202
         ],
         "headers": [
          {
           "$id": "6321",
           "name": "azureAsyncOperation",
           "nameInResponse": "Azure-AsyncOperation",
           "doc": "A link to the status monitor",
           "type": {
            "$id": "6322",
            "kind": "url",
            "name": "ResourceLocation",
            "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
            "baseType": {
             "$id": "6323",
             "kind": "url",
             "name": "url",
             "crossLanguageDefinitionId": "TypeSpec.url",
             "decorators": []
            },
            "decorators": []
           }
          },
          {
           "$id": "6324",
           "name": "location",
           "nameInResponse": "Location",
           "doc": "The Location header contains the URL where the status of the long running operation can be checked.",
           "type": {
            "$id": "6325",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           }
          }
         ],
         "isErrorResponse": false
        }
       ],
       "httpMethod": "PATCH",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}",
       "requestMediaTypes": [
        "application/json"
       ],
       "bufferResponse": true,
       "longRunning": {
        "$id": "6326",
        "finalStateVia": 1,
        "finalResponse": {
         "$id": "6327",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "499"
         }
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": false,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypes.update",
       "decorators": [],
       "examples": [
        {
         "$id": "6328",
         "kind": "http",
         "name": "Patch a node type while auto-scaling",
         "description": "Patch a node type while auto-scaling",
         "filePath": "2024-11-01-preview/NodeTypePatchOperationAutoScale_example.json",
         "parameters": [
          {
           "$id": "6329",
           "parameter": {
            "$ref": "6300"
           },
           "value": {
            "$id": "6330",
            "kind": "string",
            "type": {
             "$ref": "6301"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "6331",
           "parameter": {
            "$ref": "6308"
           },
           "value": {
            "$id": "6332",
            "kind": "string",
            "type": {
             "$ref": "6309"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "6333",
           "parameter": {
            "$ref": "6310"
           },
           "value": {
            "$id": "6334",
            "kind": "string",
            "type": {
             "$ref": "6311"
            },
            "value": "BE"
           }
          },
          {
           "$id": "6335",
           "parameter": {
            "$ref": "6306"
           },
           "value": {
            "$id": "6336",
            "kind": "string",
            "type": {
             "$ref": "6307"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "6337",
           "parameter": {
            "$ref": "6304"
           },
           "value": {
            "$id": "6338",
            "kind": "string",
            "type": {
             "$ref": "6305"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "6339",
           "response": {
            "$ref": "6319"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "6340",
            "kind": "model",
            "type": {
             "$ref": "499"
            },
            "value": {
             "$id": "6341",
             "name": {
              "$id": "6342",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "BE"
             },
             "type": {
              "$id": "6343",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/nodeTypes"
             },
             "id": {
              "$id": "6344",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster/nodeTypes/BE"
             },
             "properties": {
              "$id": "6345",
              "kind": "model",
              "type": {
               "$ref": "544"
              },
              "value": {
               "$id": "6346",
               "capacities": {
                "$id": "6347",
                "kind": "dict",
                "type": {
                 "$ref": "571"
                },
                "value": {
                 "$id": "6348",
                 "ClientConnections": {
                  "$id": "6349",
                  "kind": "string",
                  "type": {
                   "$ref": "573"
                  },
                  "value": "65536"
                 }
                }
               },
               "dataDiskSizeGB": {
                "$id": "6350",
                "kind": "number",
                "type": {
                 "$ref": "554"
                },
                "value": 200
               },
               "dataDiskType": {
                "$id": "6351",
                "kind": "string",
                "type": {
                 "$ref": "18"
                },
                "value": "StandardSSD_LRS"
               },
               "isPrimary": {
                "$id": "6352",
                "kind": "boolean",
                "type": {
                 "$ref": "546"
                },
                "value": false
               },
               "isStateless": {
                "$id": "6353",
                "kind": "boolean",
                "type": {
                 "$ref": "705"
                },
                "value": false
               },
               "placementProperties": {
                "$id": "6354",
                "kind": "dict",
                "type": {
                 "$ref": "565"
                },
                "value": {
                 "$id": "6355",
                 "HasSSD": {
                  "$id": "6356",
                  "kind": "string",
                  "type": {
                   "$ref": "567"
                  },
                  "value": "true"
                 },
                 "NodeColor": {
                  "$id": "6357",
                  "kind": "string",
                  "type": {
                   "$ref": "567"
                  },
                  "value": "green"
                 },
                 "SomeProperty": {
                  "$id": "6358",
                  "kind": "string",
                  "type": {
                   "$ref": "567"
                  },
                  "value": "5"
                 }
                }
               },
               "provisioningState": {
                "$id": "6359",
                "kind": "string",
                "type": {
                 "$ref": "70"
                },
                "value": "Succeeded"
               },
               "vmExtensions": {
                "$id": "6360",
                "kind": "array",
                "type": {
                 "$ref": "638"
                },
                "value": [
                 {
                  "$id": "6361",
                  "kind": "model",
                  "type": {
                   "$ref": "639"
                  },
                  "value": {
                   "$id": "6362",
                   "name": {
                    "$id": "6363",
                    "kind": "string",
                    "type": {
                     "$ref": "641"
                    },
                    "value": "Microsoft.Azure.Geneva.GenevaMonitoring"
                   },
                   "properties": {
                    "$id": "6364",
                    "kind": "model",
                    "type": {
                     "$ref": "645"
                    },
                    "value": {
                     "$id": "6365",
                     "type": {
                      "$id": "6366",
                      "kind": "string",
                      "type": {
                       "$ref": "651"
                      },
                      "value": "GenevaMonitoring"
                     },
                     "autoUpgradeMinorVersion": {
                      "$id": "6367",
                      "kind": "boolean",
                      "type": {
                       "$ref": "659"
                      },
                      "value": true
                     },
                     "publisher": {
                      "$id": "6368",
                      "kind": "string",
                      "type": {
                       "$ref": "647"
                      },
                      "value": "Microsoft.Azure.Geneva"
                     },
                     "settings": {
                      "$id": "6369",
                      "kind": "model",
                      "type": {
                       "$ref": "663"
                      },
                      "value": {
                       "$id": "6370"
                      }
                     },
                     "typeHandlerVersion": {
                      "$id": "6371",
                      "kind": "string",
                      "type": {
                       "$ref": "655"
                      },
                      "value": "2.0"
                     }
                    }
                   }
                  }
                 }
                ]
               },
               "vmImageOffer": {
                "$id": "6372",
                "kind": "string",
                "type": {
                 "$ref": "600"
                },
                "value": "WindowsServer"
               },
               "vmImagePublisher": {
                "$id": "6373",
                "kind": "string",
                "type": {
                 "$ref": "596"
                },
                "value": "MicrosoftWindowsServer"
               },
               "vmImageSku": {
                "$id": "6374",
                "kind": "string",
                "type": {
                 "$ref": "604"
                },
                "value": "2016-Datacenter-Server-Core"
               },
               "vmImageVersion": {
                "$id": "6375",
                "kind": "string",
                "type": {
                 "$ref": "608"
                },
                "value": "latest"
               },
               "vmInstanceCount": {
                "$id": "6376",
                "kind": "number",
                "type": {
                 "$ref": "550"
                },
                "value": 10
               },
               "vmManagedIdentity": {
                "$id": "6377",
                "kind": "model",
                "type": {
                 "$ref": "696"
                },
                "value": {
                 "$id": "6378",
                 "userAssignedIdentities": {
                  "$id": "6379",
                  "kind": "array",
                  "type": {
                   "$ref": "698"
                  },
                  "value": [
                   {
                    "$id": "6380",
                    "kind": "string",
                    "type": {
                     "$ref": "699"
                    },
                    "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myIdentity"
                   }
                  ]
                 }
                }
               },
               "vmSecrets": {
                "$id": "6381",
                "kind": "array",
                "type": {
                 "$ref": "612"
                },
                "value": [
                 {
                  "$id": "6382",
                  "kind": "model",
                  "type": {
                   "$ref": "613"
                  },
                  "value": {
                   "$id": "6383",
                   "sourceVault": {
                    "$id": "6384",
                    "kind": "model",
                    "type": {
                     "$ref": "615"
                    },
                    "value": {
                     "$id": "6385",
                     "id": {
                      "$id": "6386",
                      "kind": "string",
                      "type": {
                       "$ref": "617"
                      },
                      "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.KeyVault/vaults/myVault"
                     }
                    }
                   },
                   "vaultCertificates": {
                    "$id": "6387",
                    "kind": "array",
                    "type": {
                     "$ref": "623"
                    },
                    "value": [
                     {
                      "$id": "6388",
                      "kind": "model",
                      "type": {
                       "$ref": "624"
                      },
                      "value": {
                       "$id": "6389",
                       "certificateStore": {
                        "$id": "6390",
                        "kind": "string",
                        "type": {
                         "$ref": "630"
                        },
                        "value": "My"
                       },
                       "certificateUrl": {
                        "$id": "6391",
                        "kind": "string",
                        "type": {
                         "$ref": "626"
                        },
                        "value": "https://myVault.vault.azure.net:443/secrets/myCert/ef1a31d39e1f46bca33def54b6cda54c"
                       }
                      }
                     }
                    ]
                   }
                  }
                 }
                ]
               },
               "vmSize": {
                "$id": "6392",
                "kind": "string",
                "type": {
                 "$ref": "592"
                },
                "value": "Standard_D3"
               }
              }
             },
             "sku": {
              "$id": "6393",
              "kind": "model",
              "type": {
               "$ref": "1060"
              },
              "value": {
               "$id": "6394",
               "name": {
                "$id": "6395",
                "kind": "string",
                "type": {
                 "$ref": "1062"
                },
                "value": "Standard_S0"
               },
               "capacity": {
                "$id": "6396",
                "kind": "number",
                "type": {
                 "$ref": "1070"
                },
                "value": 10
               },
               "tier": {
                "$id": "6397",
                "kind": "string",
                "type": {
                 "$ref": "1066"
                },
                "value": "Standard"
               }
              }
             },
             "tags": {
              "$id": "6398",
              "kind": "dict",
              "type": {
               "$ref": "1054"
              },
              "value": {
               "$id": "6399",
               "a": {
                "$id": "6400",
                "kind": "string",
                "type": {
                 "$ref": "1056"
                },
                "value": "b"
               }
              }
             }
            }
           }
          },
          {
           "$id": "6401",
           "response": {
            "$ref": "6320"
           },
           "statusCode": 202
          }
         ]
        },
        {
         "$id": "6402",
         "kind": "http",
         "name": "Patch a node type",
         "description": "Patch a node type",
         "filePath": "2024-11-01-preview/NodeTypePatchOperation_example.json",
         "parameters": [
          {
           "$id": "6403",
           "parameter": {
            "$ref": "6300"
           },
           "value": {
            "$id": "6404",
            "kind": "string",
            "type": {
             "$ref": "6301"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "6405",
           "parameter": {
            "$ref": "6308"
           },
           "value": {
            "$id": "6406",
            "kind": "string",
            "type": {
             "$ref": "6309"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "6407",
           "parameter": {
            "$ref": "6310"
           },
           "value": {
            "$id": "6408",
            "kind": "string",
            "type": {
             "$ref": "6311"
            },
            "value": "BE"
           }
          },
          {
           "$id": "6409",
           "parameter": {
            "$ref": "6306"
           },
           "value": {
            "$id": "6410",
            "kind": "string",
            "type": {
             "$ref": "6307"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "6411",
           "parameter": {
            "$ref": "6304"
           },
           "value": {
            "$id": "6412",
            "kind": "string",
            "type": {
             "$ref": "6305"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "6413",
           "response": {
            "$ref": "6319"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "6414",
            "kind": "model",
            "type": {
             "$ref": "499"
            },
            "value": {
             "$id": "6415",
             "name": {
              "$id": "6416",
              "kind": "string",
              "type": {
               "$ref": "507"
              },
              "value": "BE"
             },
             "type": {
              "$id": "6417",
              "kind": "string",
              "type": {
               "$ref": "511"
              },
              "value": "Microsoft.ServiceFabric/managedClusters/nodeTypes"
             },
             "id": {
              "$id": "6418",
              "kind": "string",
              "type": {
               "$ref": "503"
              },
              "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster/nodeTypes/BE"
             },
             "properties": {
              "$id": "6419",
              "kind": "model",
              "type": {
               "$ref": "544"
              },
              "value": {
               "$id": "6420",
               "capacities": {
                "$id": "6421",
                "kind": "dict",
                "type": {
                 "$ref": "571"
                },
                "value": {
                 "$id": "6422",
                 "ClientConnections": {
                  "$id": "6423",
                  "kind": "string",
                  "type": {
                   "$ref": "573"
                  },
                  "value": "65536"
                 }
                }
               },
               "dataDiskSizeGB": {
                "$id": "6424",
                "kind": "number",
                "type": {
                 "$ref": "554"
                },
                "value": 200
               },
               "dataDiskType": {
                "$id": "6425",
                "kind": "string",
                "type": {
                 "$ref": "18"
                },
                "value": "StandardSSD_LRS"
               },
               "isPrimary": {
                "$id": "6426",
                "kind": "boolean",
                "type": {
                 "$ref": "546"
                },
                "value": false
               },
               "isStateless": {
                "$id": "6427",
                "kind": "boolean",
                "type": {
                 "$ref": "705"
                },
                "value": false
               },
               "placementProperties": {
                "$id": "6428",
                "kind": "dict",
                "type": {
                 "$ref": "565"
                },
                "value": {
                 "$id": "6429",
                 "HasSSD": {
                  "$id": "6430",
                  "kind": "string",
                  "type": {
                   "$ref": "567"
                  },
                  "value": "true"
                 },
                 "NodeColor": {
                  "$id": "6431",
                  "kind": "string",
                  "type": {
                   "$ref": "567"
                  },
                  "value": "green"
                 },
                 "SomeProperty": {
                  "$id": "6432",
                  "kind": "string",
                  "type": {
                   "$ref": "567"
                  },
                  "value": "5"
                 }
                }
               },
               "provisioningState": {
                "$id": "6433",
                "kind": "string",
                "type": {
                 "$ref": "70"
                },
                "value": "Succeeded"
               },
               "vmExtensions": {
                "$id": "6434",
                "kind": "array",
                "type": {
                 "$ref": "638"
                },
                "value": [
                 {
                  "$id": "6435",
                  "kind": "model",
                  "type": {
                   "$ref": "639"
                  },
                  "value": {
                   "$id": "6436",
                   "name": {
                    "$id": "6437",
                    "kind": "string",
                    "type": {
                     "$ref": "641"
                    },
                    "value": "Microsoft.Azure.Geneva.GenevaMonitoring"
                   },
                   "properties": {
                    "$id": "6438",
                    "kind": "model",
                    "type": {
                     "$ref": "645"
                    },
                    "value": {
                     "$id": "6439",
                     "type": {
                      "$id": "6440",
                      "kind": "string",
                      "type": {
                       "$ref": "651"
                      },
                      "value": "GenevaMonitoring"
                     },
                     "autoUpgradeMinorVersion": {
                      "$id": "6441",
                      "kind": "boolean",
                      "type": {
                       "$ref": "659"
                      },
                      "value": true
                     },
                     "publisher": {
                      "$id": "6442",
                      "kind": "string",
                      "type": {
                       "$ref": "647"
                      },
                      "value": "Microsoft.Azure.Geneva"
                     },
                     "settings": {
                      "$id": "6443",
                      "kind": "model",
                      "type": {
                       "$ref": "663"
                      },
                      "value": {
                       "$id": "6444"
                      }
                     },
                     "typeHandlerVersion": {
                      "$id": "6445",
                      "kind": "string",
                      "type": {
                       "$ref": "655"
                      },
                      "value": "2.0"
                     }
                    }
                   }
                  }
                 }
                ]
               },
               "vmImageOffer": {
                "$id": "6446",
                "kind": "string",
                "type": {
                 "$ref": "600"
                },
                "value": "WindowsServer"
               },
               "vmImagePublisher": {
                "$id": "6447",
                "kind": "string",
                "type": {
                 "$ref": "596"
                },
                "value": "MicrosoftWindowsServer"
               },
               "vmImageSku": {
                "$id": "6448",
                "kind": "string",
                "type": {
                 "$ref": "604"
                },
                "value": "2016-Datacenter-Server-Core"
               },
               "vmImageVersion": {
                "$id": "6449",
                "kind": "string",
                "type": {
                 "$ref": "608"
                },
                "value": "latest"
               },
               "vmInstanceCount": {
                "$id": "6450",
                "kind": "number",
                "type": {
                 "$ref": "550"
                },
                "value": 10
               },
               "vmManagedIdentity": {
                "$id": "6451",
                "kind": "model",
                "type": {
                 "$ref": "696"
                },
                "value": {
                 "$id": "6452",
                 "userAssignedIdentities": {
                  "$id": "6453",
                  "kind": "array",
                  "type": {
                   "$ref": "698"
                  },
                  "value": [
                   {
                    "$id": "6454",
                    "kind": "string",
                    "type": {
                     "$ref": "699"
                    },
                    "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myIdentity"
                   }
                  ]
                 }
                }
               },
               "vmSecrets": {
                "$id": "6455",
                "kind": "array",
                "type": {
                 "$ref": "612"
                },
                "value": [
                 {
                  "$id": "6456",
                  "kind": "model",
                  "type": {
                   "$ref": "613"
                  },
                  "value": {
                   "$id": "6457",
                   "sourceVault": {
                    "$id": "6458",
                    "kind": "model",
                    "type": {
                     "$ref": "615"
                    },
                    "value": {
                     "$id": "6459",
                     "id": {
                      "$id": "6460",
                      "kind": "string",
                      "type": {
                       "$ref": "617"
                      },
                      "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.KeyVault/vaults/myVault"
                     }
                    }
                   },
                   "vaultCertificates": {
                    "$id": "6461",
                    "kind": "array",
                    "type": {
                     "$ref": "623"
                    },
                    "value": [
                     {
                      "$id": "6462",
                      "kind": "model",
                      "type": {
                       "$ref": "624"
                      },
                      "value": {
                       "$id": "6463",
                       "certificateStore": {
                        "$id": "6464",
                        "kind": "string",
                        "type": {
                         "$ref": "630"
                        },
                        "value": "My"
                       },
                       "certificateUrl": {
                        "$id": "6465",
                        "kind": "string",
                        "type": {
                         "$ref": "626"
                        },
                        "value": "https://myVault.vault.azure.net:443/secrets/myCert/ef1a31d39e1f46bca33def54b6cda54c"
                       }
                      }
                     }
                    ]
                   }
                  }
                 }
                ]
               },
               "vmSize": {
                "$id": "6466",
                "kind": "string",
                "type": {
                 "$ref": "592"
                },
                "value": "Standard_D3"
               }
              }
             },
             "tags": {
              "$id": "6467",
              "kind": "dict",
              "type": {
               "$ref": "1054"
              },
              "value": {
               "$id": "6468",
               "a": {
                "$id": "6469",
                "kind": "string",
                "type": {
                 "$ref": "1056"
                },
                "value": "b"
               }
              }
             }
            }
           }
          },
          {
           "$id": "6470",
           "response": {
            "$ref": "6320"
           },
           "statusCode": 202
          }
         ]
        }
       ]
      },
      {
       "$id": "6471",
       "name": "delete",
       "resourceName": "NodeType",
       "doc": "Delete a Service Fabric node type of a given managed cluster.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "6472",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "6473",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "6474",
          "type": {
           "$id": "6475",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6476",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "6477",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6478",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "6479",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6480",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "6481",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6482",
         "name": "nodeTypeName",
         "nameInRequest": "nodeTypeName",
         "doc": "The name of the node type.",
         "type": {
          "$id": "6483",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6484",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "6485",
          "kind": "constant",
          "valueType": {
           "$id": "6486",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "6487",
         "statusCodes": [
          202
         ],
         "headers": [
          {
           "$id": "6488",
           "name": "azureAsyncOperation",
           "nameInResponse": "Azure-AsyncOperation",
           "doc": "A link to the status monitor",
           "type": {
            "$id": "6489",
            "kind": "url",
            "name": "ResourceLocation",
            "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
            "baseType": {
             "$id": "6490",
             "kind": "url",
             "name": "url",
             "crossLanguageDefinitionId": "TypeSpec.url",
             "decorators": []
            },
            "decorators": []
           }
          },
          {
           "$id": "6491",
           "name": "location",
           "nameInResponse": "Location",
           "doc": "The Location header contains the URL where the status of the long running operation can be checked.",
           "type": {
            "$id": "6492",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           }
          }
         ],
         "isErrorResponse": false
        },
        {
         "$id": "6493",
         "statusCodes": [
          204
         ],
         "headers": [],
         "isErrorResponse": false
        }
       ],
       "httpMethod": "DELETE",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}",
       "bufferResponse": true,
       "longRunning": {
        "$id": "6494",
        "finalStateVia": 1,
        "finalResponse": {
         "$id": "6495",
         "statusCodes": [
          204
         ]
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypes.delete",
       "decorators": [],
       "examples": [
        {
         "$id": "6496",
         "kind": "http",
         "name": "Delete a node type",
         "description": "Delete a node type",
         "filePath": "2024-11-01-preview/NodeTypeDeleteOperation_example.json",
         "parameters": [
          {
           "$id": "6497",
           "parameter": {
            "$ref": "6472"
           },
           "value": {
            "$id": "6498",
            "kind": "string",
            "type": {
             "$ref": "6473"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "6499",
           "parameter": {
            "$ref": "6480"
           },
           "value": {
            "$id": "6500",
            "kind": "string",
            "type": {
             "$ref": "6481"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "6501",
           "parameter": {
            "$ref": "6482"
           },
           "value": {
            "$id": "6502",
            "kind": "string",
            "type": {
             "$ref": "6483"
            },
            "value": "BE"
           }
          },
          {
           "$id": "6503",
           "parameter": {
            "$ref": "6478"
           },
           "value": {
            "$id": "6504",
            "kind": "string",
            "type": {
             "$ref": "6479"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "6505",
           "parameter": {
            "$ref": "6476"
           },
           "value": {
            "$id": "6506",
            "kind": "string",
            "type": {
             "$ref": "6477"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "6507",
           "response": {
            "$ref": "6487"
           },
           "statusCode": 202
          },
          {
           "$id": "6508",
           "response": {
            "$ref": "6493"
           },
           "statusCode": 204
          }
         ]
        }
       ]
      },
      {
       "$id": "6509",
       "name": "listByManagedClusters",
       "resourceName": "NodeType",
       "doc": "Gets all Node types of the specified managed cluster.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "6510",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "6511",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "6512",
          "type": {
           "$id": "6513",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6514",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "6515",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6516",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "6517",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6518",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "6519",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6520",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "6521",
          "kind": "constant",
          "valueType": {
           "$id": "6522",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "6523",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "1085"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "GET",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes",
       "bufferResponse": true,
       "paging": {
        "$id": "6524",
        "itemPropertySegments": [
         "value"
        ],
        "nextLink": {
         "$id": "6525",
         "responseSegments": [
          "nextLink"
         ],
         "responseLocation": "Body"
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypes.listByManagedClusters",
       "decorators": [],
       "examples": [
        {
         "$id": "6526",
         "kind": "http",
         "name": "List node type of the specified managed cluster",
         "description": "List node type of the specified managed cluster",
         "filePath": "2024-11-01-preview/NodeTypeListOperation_example.json",
         "parameters": [
          {
           "$id": "6527",
           "parameter": {
            "$ref": "6510"
           },
           "value": {
            "$id": "6528",
            "kind": "string",
            "type": {
             "$ref": "6511"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "6529",
           "parameter": {
            "$ref": "6518"
           },
           "value": {
            "$id": "6530",
            "kind": "string",
            "type": {
             "$ref": "6519"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "6531",
           "parameter": {
            "$ref": "6516"
           },
           "value": {
            "$id": "6532",
            "kind": "string",
            "type": {
             "$ref": "6517"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "6533",
           "parameter": {
            "$ref": "6514"
           },
           "value": {
            "$id": "6534",
            "kind": "string",
            "type": {
             "$ref": "6515"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "6535",
           "response": {
            "$ref": "6523"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "6536",
            "kind": "model",
            "type": {
             "$ref": "1085"
            },
            "value": {
             "$id": "6537",
             "nextLink": {
              "$id": "6538",
              "kind": "string",
              "type": {
               "$ref": "1091"
              },
              "value": "http://examplelink.com"
             },
             "value": {
              "$id": "6539",
              "kind": "array",
              "type": {
               "$ref": "1087"
              },
              "value": [
               {
                "$id": "6540",
                "kind": "model",
                "type": {
                 "$ref": "499"
                },
                "value": {
                 "$id": "6541",
                 "name": {
                  "$id": "6542",
                  "kind": "string",
                  "type": {
                   "$ref": "507"
                  },
                  "value": "FE"
                 },
                 "type": {
                  "$id": "6543",
                  "kind": "string",
                  "type": {
                   "$ref": "511"
                  },
                  "value": "Microsoft.ServiceFabric/managedClusters/nodeTypes"
                 },
                 "id": {
                  "$id": "6544",
                  "kind": "string",
                  "type": {
                   "$ref": "503"
                  },
                  "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster/nodeTypes/FE"
                 },
                 "properties": {
                  "$id": "6545",
                  "kind": "model",
                  "type": {
                   "$ref": "544"
                  },
                  "value": {
                   "$id": "6546",
                   "capacities": {
                    "$id": "6547",
                    "kind": "dict",
                    "type": {
                     "$ref": "571"
                    },
                    "value": {
                     "$id": "6548"
                    }
                   },
                   "dataDiskSizeGB": {
                    "$id": "6549",
                    "kind": "number",
                    "type": {
                     "$ref": "554"
                    },
                    "value": 100
                   },
                   "dataDiskType": {
                    "$id": "6550",
                    "kind": "string",
                    "type": {
                     "$ref": "18"
                    },
                    "value": "StandardSSD_LRS"
                   },
                   "isPrimary": {
                    "$id": "6551",
                    "kind": "boolean",
                    "type": {
                     "$ref": "546"
                    },
                    "value": true
                   },
                   "isStateless": {
                    "$id": "6552",
                    "kind": "boolean",
                    "type": {
                     "$ref": "705"
                    },
                    "value": false
                   },
                   "placementProperties": {
                    "$id": "6553",
                    "kind": "dict",
                    "type": {
                     "$ref": "565"
                    },
                    "value": {
                     "$id": "6554"
                    }
                   },
                   "vmImageOffer": {
                    "$id": "6555",
                    "kind": "string",
                    "type": {
                     "$ref": "600"
                    },
                    "value": "WindowsServer"
                   },
                   "vmImagePublisher": {
                    "$id": "6556",
                    "kind": "string",
                    "type": {
                     "$ref": "596"
                    },
                    "value": "MicrosoftWindowsServer"
                   },
                   "vmImageSku": {
                    "$id": "6557",
                    "kind": "string",
                    "type": {
                     "$ref": "604"
                    },
                    "value": "2016-Datacenter"
                   },
                   "vmImageVersion": {
                    "$id": "6558",
                    "kind": "string",
                    "type": {
                     "$ref": "608"
                    },
                    "value": "latest"
                   },
                   "vmInstanceCount": {
                    "$id": "6559",
                    "kind": "number",
                    "type": {
                     "$ref": "550"
                    },
                    "value": 5
                   },
                   "vmSize": {
                    "$id": "6560",
                    "kind": "string",
                    "type": {
                     "$ref": "592"
                    },
                    "value": "Standard_D2"
                   }
                  }
                 },
                 "sku": {
                  "$id": "6561",
                  "kind": "model",
                  "type": {
                   "$ref": "1060"
                  },
                  "value": {
                   "$id": "6562",
                   "name": {
                    "$id": "6563",
                    "kind": "string",
                    "type": {
                     "$ref": "1062"
                    },
                    "value": "Standard_P0"
                   },
                   "capacity": {
                    "$id": "6564",
                    "kind": "number",
                    "type": {
                     "$ref": "1070"
                    },
                    "value": 5
                   },
                   "tier": {
                    "$id": "6565",
                    "kind": "string",
                    "type": {
                     "$ref": "1066"
                    },
                    "value": "Standard"
                   }
                  }
                 },
                 "tags": {
                  "$id": "6566",
                  "kind": "dict",
                  "type": {
                   "$ref": "1054"
                  },
                  "value": {
                   "$id": "6567"
                  }
                 }
                }
               },
               {
                "$id": "6568",
                "kind": "model",
                "type": {
                 "$ref": "499"
                },
                "value": {
                 "$id": "6569",
                 "name": {
                  "$id": "6570",
                  "kind": "string",
                  "type": {
                   "$ref": "507"
                  },
                  "value": "BE"
                 },
                 "type": {
                  "$id": "6571",
                  "kind": "string",
                  "type": {
                   "$ref": "511"
                  },
                  "value": "Microsoft.ServiceFabric/managedClusters/nodeTypes"
                 },
                 "id": {
                  "$id": "6572",
                  "kind": "string",
                  "type": {
                   "$ref": "503"
                  },
                  "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedClusters/myCluster/nodeTypes/BE"
                 },
                 "properties": {
                  "$id": "6573",
                  "kind": "model",
                  "type": {
                   "$ref": "544"
                  },
                  "value": {
                   "$id": "6574",
                   "capacities": {
                    "$id": "6575",
                    "kind": "dict",
                    "type": {
                     "$ref": "571"
                    },
                    "value": {
                     "$id": "6576"
                    }
                   },
                   "dataDiskSizeGB": {
                    "$id": "6577",
                    "kind": "number",
                    "type": {
                     "$ref": "554"
                    },
                    "value": 200
                   },
                   "dataDiskType": {
                    "$id": "6578",
                    "kind": "string",
                    "type": {
                     "$ref": "18"
                    },
                    "value": "Premium_LRS"
                   },
                   "isPrimary": {
                    "$id": "6579",
                    "kind": "boolean",
                    "type": {
                     "$ref": "546"
                    },
                    "value": false
                   },
                   "isStateless": {
                    "$id": "6580",
                    "kind": "boolean",
                    "type": {
                     "$ref": "705"
                    },
                    "value": false
                   },
                   "placementProperties": {
                    "$id": "6581",
                    "kind": "dict",
                    "type": {
                     "$ref": "565"
                    },
                    "value": {
                     "$id": "6582"
                    }
                   },
                   "vmExtensions": {
                    "$id": "6583",
                    "kind": "array",
                    "type": {
                     "$ref": "638"
                    },
                    "value": [
                     {
                      "$id": "6584",
                      "kind": "model",
                      "type": {
                       "$ref": "639"
                      },
                      "value": {
                       "$id": "6585",
                       "name": {
                        "$id": "6586",
                        "kind": "string",
                        "type": {
                         "$ref": "641"
                        },
                        "value": "Microsoft.Azure.Geneva.GenevaMonitoring"
                       },
                       "properties": {
                        "$id": "6587",
                        "kind": "model",
                        "type": {
                         "$ref": "645"
                        },
                        "value": {
                         "$id": "6588",
                         "type": {
                          "$id": "6589",
                          "kind": "string",
                          "type": {
                           "$ref": "651"
                          },
                          "value": "GenevaMonitoring"
                         },
                         "autoUpgradeMinorVersion": {
                          "$id": "6590",
                          "kind": "boolean",
                          "type": {
                           "$ref": "659"
                          },
                          "value": true
                         },
                         "publisher": {
                          "$id": "6591",
                          "kind": "string",
                          "type": {
                           "$ref": "647"
                          },
                          "value": "Microsoft.Azure.Geneva"
                         },
                         "settings": {
                          "$id": "6592",
                          "kind": "model",
                          "type": {
                           "$ref": "663"
                          },
                          "value": {
                           "$id": "6593"
                          }
                         },
                         "typeHandlerVersion": {
                          "$id": "6594",
                          "kind": "string",
                          "type": {
                           "$ref": "655"
                          },
                          "value": "2.0"
                         }
                        }
                       }
                      }
                     }
                    ]
                   },
                   "vmImageOffer": {
                    "$id": "6595",
                    "kind": "string",
                    "type": {
                     "$ref": "600"
                    },
                    "value": "WindowsServer"
                   },
                   "vmImagePublisher": {
                    "$id": "6596",
                    "kind": "string",
                    "type": {
                     "$ref": "596"
                    },
                    "value": "MicrosoftWindowsServer"
                   },
                   "vmImageSku": {
                    "$id": "6597",
                    "kind": "string",
                    "type": {
                     "$ref": "604"
                    },
                    "value": "2016-Datacenter-Server-Core"
                   },
                   "vmImageVersion": {
                    "$id": "6598",
                    "kind": "string",
                    "type": {
                     "$ref": "608"
                    },
                    "value": "latest"
                   },
                   "vmInstanceCount": {
                    "$id": "6599",
                    "kind": "number",
                    "type": {
                     "$ref": "550"
                    },
                    "value": 10
                   },
                   "vmSecrets": {
                    "$id": "6600",
                    "kind": "array",
                    "type": {
                     "$ref": "612"
                    },
                    "value": [
                     {
                      "$id": "6601",
                      "kind": "model",
                      "type": {
                       "$ref": "613"
                      },
                      "value": {
                       "$id": "6602",
                       "sourceVault": {
                        "$id": "6603",
                        "kind": "model",
                        "type": {
                         "$ref": "615"
                        },
                        "value": {
                         "$id": "6604",
                         "id": {
                          "$id": "6605",
                          "kind": "string",
                          "type": {
                           "$ref": "617"
                          },
                          "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.KeyVault/vaults/myVault"
                         }
                        }
                       },
                       "vaultCertificates": {
                        "$id": "6606",
                        "kind": "array",
                        "type": {
                         "$ref": "623"
                        },
                        "value": [
                         {
                          "$id": "6607",
                          "kind": "model",
                          "type": {
                           "$ref": "624"
                          },
                          "value": {
                           "$id": "6608",
                           "certificateStore": {
                            "$id": "6609",
                            "kind": "string",
                            "type": {
                             "$ref": "630"
                            },
                            "value": "My"
                           },
                           "certificateUrl": {
                            "$id": "6610",
                            "kind": "string",
                            "type": {
                             "$ref": "626"
                            },
                            "value": "https://myVault.vault.azure.net:443/secrets/myCert/ef1a31d39e1f46bca33def54b6cda54c"
                           }
                          }
                         }
                        ]
                       }
                      }
                     }
                    ]
                   },
                   "vmSize": {
                    "$id": "6611",
                    "kind": "string",
                    "type": {
                     "$ref": "592"
                    },
                    "value": "Standard_DS3"
                   }
                  }
                 },
                 "sku": {
                  "$id": "6612",
                  "kind": "model",
                  "type": {
                   "$ref": "1060"
                  },
                  "value": {
                   "$id": "6613",
                   "name": {
                    "$id": "6614",
                    "kind": "string",
                    "type": {
                     "$ref": "1062"
                    },
                    "value": "Standard_S0"
                   },
                   "capacity": {
                    "$id": "6615",
                    "kind": "number",
                    "type": {
                     "$ref": "1070"
                    },
                    "value": 10
                   },
                   "tier": {
                    "$id": "6616",
                    "kind": "string",
                    "type": {
                     "$ref": "1066"
                    },
                    "value": "Standard"
                   }
                  }
                 },
                 "tags": {
                  "$id": "6617",
                  "kind": "dict",
                  "type": {
                   "$ref": "1054"
                  },
                  "value": {
                   "$id": "6618"
                  }
                 }
                }
               }
              ]
             }
            }
           }
          }
         ]
        }
       ]
      },
      {
       "$id": "6619",
       "name": "deallocate",
       "resourceName": "NodeTypes",
       "doc": "Deallocates one or more nodes on the node type. It will disable the fabric nodes, trigger a shutdown on the VMs and release them from the cluster.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "6620",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "6621",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "6622",
          "type": {
           "$id": "6623",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6624",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "6625",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6626",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "6627",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6628",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "6629",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6630",
         "name": "nodeTypeName",
         "nameInRequest": "nodeTypeName",
         "doc": "The name of the node type.",
         "type": {
          "$id": "6631",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6632",
         "name": "contentType",
         "nameInRequest": "Content-Type",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$id": "6633",
          "kind": "constant",
          "valueType": {
           "$id": "6634",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": true,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6635",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "6636",
          "kind": "constant",
          "valueType": {
           "$id": "6637",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6638",
         "name": "parameters",
         "nameInRequest": "parameters",
         "doc": "parameters for deallocate action.",
         "type": {
          "$ref": "1095"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "6639",
         "statusCodes": [
          202
         ],
         "headers": [
          {
           "$id": "6640",
           "name": "azureAsyncOperation",
           "nameInResponse": "Azure-AsyncOperation",
           "doc": "A link to the status monitor",
           "type": {
            "$id": "6641",
            "kind": "url",
            "name": "ResourceLocation",
            "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
            "baseType": {
             "$id": "6642",
             "kind": "url",
             "name": "url",
             "crossLanguageDefinitionId": "TypeSpec.url",
             "decorators": []
            },
            "decorators": []
           }
          },
          {
           "$id": "6643",
           "name": "location",
           "nameInResponse": "Location",
           "doc": "The Location header contains the URL where the status of the long running operation can be checked.",
           "type": {
            "$id": "6644",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           }
          }
         ],
         "isErrorResponse": false
        }
       ],
       "httpMethod": "POST",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/deallocate",
       "requestMediaTypes": [
        "application/json"
       ],
       "bufferResponse": true,
       "longRunning": {
        "$id": "6645",
        "finalStateVia": 1,
        "finalResponse": {
         "$id": "6646",
         "statusCodes": [
          200
         ]
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypes.deallocate",
       "decorators": [],
       "examples": [
        {
         "$id": "6647",
         "kind": "http",
         "name": "Deallocate nodes",
         "description": "Deallocate nodes",
         "filePath": "2024-11-01-preview/DeallocateNodes_example.json",
         "parameters": [
          {
           "$id": "6648",
           "parameter": {
            "$ref": "6620"
           },
           "value": {
            "$id": "6649",
            "kind": "string",
            "type": {
             "$ref": "6621"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "6650",
           "parameter": {
            "$ref": "6628"
           },
           "value": {
            "$id": "6651",
            "kind": "string",
            "type": {
             "$ref": "6629"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "6652",
           "parameter": {
            "$ref": "6630"
           },
           "value": {
            "$id": "6653",
            "kind": "string",
            "type": {
             "$ref": "6631"
            },
            "value": "BE"
           }
          },
          {
           "$id": "6654",
           "parameter": {
            "$ref": "6626"
           },
           "value": {
            "$id": "6655",
            "kind": "string",
            "type": {
             "$ref": "6627"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "6656",
           "parameter": {
            "$ref": "6624"
           },
           "value": {
            "$id": "6657",
            "kind": "string",
            "type": {
             "$ref": "6625"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "6658",
           "response": {
            "$ref": "6639"
           },
           "statusCode": 202
          }
         ]
        }
       ]
      },
      {
       "$id": "6659",
       "name": "deleteNode",
       "resourceName": "NodeTypes",
       "doc": "Deletes one or more nodes on the node type. It will disable the fabric nodes, trigger a delete on the VMs and removes the state from the cluster.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "6660",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "6661",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "6662",
          "type": {
           "$id": "6663",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6664",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "6665",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6666",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "6667",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6668",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "6669",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6670",
         "name": "nodeTypeName",
         "nameInRequest": "nodeTypeName",
         "doc": "The name of the node type.",
         "type": {
          "$id": "6671",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6672",
         "name": "contentType",
         "nameInRequest": "Content-Type",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$id": "6673",
          "kind": "constant",
          "valueType": {
           "$id": "6674",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": true,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6675",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "6676",
          "kind": "constant",
          "valueType": {
           "$id": "6677",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6678",
         "name": "parameters",
         "nameInRequest": "parameters",
         "doc": "parameters for delete action.",
         "type": {
          "$ref": "1095"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "6679",
         "statusCodes": [
          202
         ],
         "headers": [
          {
           "$id": "6680",
           "name": "azureAsyncOperation",
           "nameInResponse": "Azure-AsyncOperation",
           "doc": "A link to the status monitor",
           "type": {
            "$id": "6681",
            "kind": "url",
            "name": "ResourceLocation",
            "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
            "baseType": {
             "$id": "6682",
             "kind": "url",
             "name": "url",
             "crossLanguageDefinitionId": "TypeSpec.url",
             "decorators": []
            },
            "decorators": []
           }
          },
          {
           "$id": "6683",
           "name": "location",
           "nameInResponse": "Location",
           "doc": "The Location header contains the URL where the status of the long running operation can be checked.",
           "type": {
            "$id": "6684",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           }
          }
         ],
         "isErrorResponse": false
        }
       ],
       "httpMethod": "POST",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/deleteNode",
       "requestMediaTypes": [
        "application/json"
       ],
       "bufferResponse": true,
       "longRunning": {
        "$id": "6685",
        "finalStateVia": 1,
        "finalResponse": {
         "$id": "6686",
         "statusCodes": [
          200
         ]
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypes.deleteNode",
       "decorators": [],
       "examples": [
        {
         "$id": "6687",
         "kind": "http",
         "name": "Delete nodes",
         "description": "Delete nodes",
         "filePath": "2024-11-01-preview/DeleteNodes_example.json",
         "parameters": [
          {
           "$id": "6688",
           "parameter": {
            "$ref": "6660"
           },
           "value": {
            "$id": "6689",
            "kind": "string",
            "type": {
             "$ref": "6661"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "6690",
           "parameter": {
            "$ref": "6668"
           },
           "value": {
            "$id": "6691",
            "kind": "string",
            "type": {
             "$ref": "6669"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "6692",
           "parameter": {
            "$ref": "6670"
           },
           "value": {
            "$id": "6693",
            "kind": "string",
            "type": {
             "$ref": "6671"
            },
            "value": "BE"
           }
          },
          {
           "$id": "6694",
           "parameter": {
            "$ref": "6666"
           },
           "value": {
            "$id": "6695",
            "kind": "string",
            "type": {
             "$ref": "6667"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "6696",
           "parameter": {
            "$ref": "6664"
           },
           "value": {
            "$id": "6697",
            "kind": "string",
            "type": {
             "$ref": "6665"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "6698",
           "response": {
            "$ref": "6679"
           },
           "statusCode": 202
          }
         ]
        }
       ]
      },
      {
       "$id": "6699",
       "name": "redeploy",
       "resourceName": "NodeTypes",
       "doc": "Redeploys one or more nodes on the node type. It will disable the fabric nodes, trigger a shut down on the VMs, move them to a new node, and power them back on.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "6700",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "6701",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "6702",
          "type": {
           "$id": "6703",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6704",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "6705",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6706",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "6707",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6708",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "6709",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6710",
         "name": "nodeTypeName",
         "nameInRequest": "nodeTypeName",
         "doc": "The name of the node type.",
         "type": {
          "$id": "6711",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6712",
         "name": "contentType",
         "nameInRequest": "Content-Type",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$id": "6713",
          "kind": "constant",
          "valueType": {
           "$id": "6714",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": true,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6715",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "6716",
          "kind": "constant",
          "valueType": {
           "$id": "6717",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6718",
         "name": "parameters",
         "nameInRequest": "parameters",
         "doc": "parameters for redeploy action.",
         "type": {
          "$ref": "1095"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "6719",
         "statusCodes": [
          202
         ],
         "headers": [
          {
           "$id": "6720",
           "name": "azureAsyncOperation",
           "nameInResponse": "Azure-AsyncOperation",
           "doc": "A link to the status monitor",
           "type": {
            "$id": "6721",
            "kind": "url",
            "name": "ResourceLocation",
            "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
            "baseType": {
             "$id": "6722",
             "kind": "url",
             "name": "url",
             "crossLanguageDefinitionId": "TypeSpec.url",
             "decorators": []
            },
            "decorators": []
           }
          },
          {
           "$id": "6723",
           "name": "location",
           "nameInResponse": "Location",
           "doc": "The Location header contains the URL where the status of the long running operation can be checked.",
           "type": {
            "$id": "6724",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           }
          }
         ],
         "isErrorResponse": false
        }
       ],
       "httpMethod": "POST",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/redeploy",
       "requestMediaTypes": [
        "application/json"
       ],
       "bufferResponse": true,
       "longRunning": {
        "$id": "6725",
        "finalStateVia": 1,
        "finalResponse": {
         "$id": "6726",
         "statusCodes": [
          200
         ]
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypes.redeploy",
       "decorators": [],
       "examples": [
        {
         "$id": "6727",
         "kind": "http",
         "name": "Redeploy all nodes by upgrade domain",
         "description": "Redeploy all nodes by upgrade domain",
         "filePath": "2024-11-01-preview/RedeployNodes_UD_example.json",
         "parameters": [
          {
           "$id": "6728",
           "parameter": {
            "$ref": "6700"
           },
           "value": {
            "$id": "6729",
            "kind": "string",
            "type": {
             "$ref": "6701"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "6730",
           "parameter": {
            "$ref": "6708"
           },
           "value": {
            "$id": "6731",
            "kind": "string",
            "type": {
             "$ref": "6709"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "6732",
           "parameter": {
            "$ref": "6710"
           },
           "value": {
            "$id": "6733",
            "kind": "string",
            "type": {
             "$ref": "6711"
            },
            "value": "BE"
           }
          },
          {
           "$id": "6734",
           "parameter": {
            "$ref": "6706"
           },
           "value": {
            "$id": "6735",
            "kind": "string",
            "type": {
             "$ref": "6707"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "6736",
           "parameter": {
            "$ref": "6704"
           },
           "value": {
            "$id": "6737",
            "kind": "string",
            "type": {
             "$ref": "6705"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "6738",
           "response": {
            "$ref": "6719"
           },
           "statusCode": 202
          }
         ]
        },
        {
         "$id": "6739",
         "kind": "http",
         "name": "Redeploy nodes",
         "description": "Redeploy nodes",
         "filePath": "2024-11-01-preview/RedeployNodes_example.json",
         "parameters": [
          {
           "$id": "6740",
           "parameter": {
            "$ref": "6700"
           },
           "value": {
            "$id": "6741",
            "kind": "string",
            "type": {
             "$ref": "6701"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "6742",
           "parameter": {
            "$ref": "6708"
           },
           "value": {
            "$id": "6743",
            "kind": "string",
            "type": {
             "$ref": "6709"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "6744",
           "parameter": {
            "$ref": "6710"
           },
           "value": {
            "$id": "6745",
            "kind": "string",
            "type": {
             "$ref": "6711"
            },
            "value": "BE"
           }
          },
          {
           "$id": "6746",
           "parameter": {
            "$ref": "6706"
           },
           "value": {
            "$id": "6747",
            "kind": "string",
            "type": {
             "$ref": "6707"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "6748",
           "parameter": {
            "$ref": "6704"
           },
           "value": {
            "$id": "6749",
            "kind": "string",
            "type": {
             "$ref": "6705"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "6750",
           "response": {
            "$ref": "6719"
           },
           "statusCode": 202
          }
         ]
        }
       ]
      },
      {
       "$id": "6751",
       "name": "reimage",
       "resourceName": "NodeTypes",
       "doc": "Reimages one or more nodes on the node type. It will disable the fabric nodes, trigger a reimage on the VMs and activate the nodes back again.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "6752",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "6753",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "6754",
          "type": {
           "$id": "6755",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6756",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "6757",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6758",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "6759",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6760",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "6761",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6762",
         "name": "nodeTypeName",
         "nameInRequest": "nodeTypeName",
         "doc": "The name of the node type.",
         "type": {
          "$id": "6763",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6764",
         "name": "contentType",
         "nameInRequest": "Content-Type",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$id": "6765",
          "kind": "constant",
          "valueType": {
           "$id": "6766",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": true,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6767",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "6768",
          "kind": "constant",
          "valueType": {
           "$id": "6769",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6770",
         "name": "parameters",
         "nameInRequest": "parameters",
         "doc": "parameters for reimage action.",
         "type": {
          "$ref": "1095"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "6771",
         "statusCodes": [
          202
         ],
         "headers": [
          {
           "$id": "6772",
           "name": "azureAsyncOperation",
           "nameInResponse": "Azure-AsyncOperation",
           "doc": "A link to the status monitor",
           "type": {
            "$id": "6773",
            "kind": "url",
            "name": "ResourceLocation",
            "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
            "baseType": {
             "$id": "6774",
             "kind": "url",
             "name": "url",
             "crossLanguageDefinitionId": "TypeSpec.url",
             "decorators": []
            },
            "decorators": []
           }
          },
          {
           "$id": "6775",
           "name": "location",
           "nameInResponse": "Location",
           "doc": "The Location header contains the URL where the status of the long running operation can be checked.",
           "type": {
            "$id": "6776",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           }
          }
         ],
         "isErrorResponse": false
        }
       ],
       "httpMethod": "POST",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/reimage",
       "requestMediaTypes": [
        "application/json"
       ],
       "bufferResponse": true,
       "longRunning": {
        "$id": "6777",
        "finalStateVia": 1,
        "finalResponse": {
         "$id": "6778",
         "statusCodes": [
          200
         ]
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypes.reimage",
       "decorators": [],
       "examples": [
        {
         "$id": "6779",
         "kind": "http",
         "name": "Reimage all nodes by upgrade domain",
         "description": "Reimage all nodes by upgrade domain",
         "filePath": "2024-11-01-preview/ReimageNodes_UD_example.json",
         "parameters": [
          {
           "$id": "6780",
           "parameter": {
            "$ref": "6752"
           },
           "value": {
            "$id": "6781",
            "kind": "string",
            "type": {
             "$ref": "6753"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "6782",
           "parameter": {
            "$ref": "6760"
           },
           "value": {
            "$id": "6783",
            "kind": "string",
            "type": {
             "$ref": "6761"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "6784",
           "parameter": {
            "$ref": "6762"
           },
           "value": {
            "$id": "6785",
            "kind": "string",
            "type": {
             "$ref": "6763"
            },
            "value": "BE"
           }
          },
          {
           "$id": "6786",
           "parameter": {
            "$ref": "6758"
           },
           "value": {
            "$id": "6787",
            "kind": "string",
            "type": {
             "$ref": "6759"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "6788",
           "parameter": {
            "$ref": "6756"
           },
           "value": {
            "$id": "6789",
            "kind": "string",
            "type": {
             "$ref": "6757"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "6790",
           "response": {
            "$ref": "6771"
           },
           "statusCode": 202
          }
         ]
        },
        {
         "$id": "6791",
         "kind": "http",
         "name": "Reimage nodes",
         "description": "Reimage nodes",
         "filePath": "2024-11-01-preview/ReimageNodes_example.json",
         "parameters": [
          {
           "$id": "6792",
           "parameter": {
            "$ref": "6752"
           },
           "value": {
            "$id": "6793",
            "kind": "string",
            "type": {
             "$ref": "6753"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "6794",
           "parameter": {
            "$ref": "6760"
           },
           "value": {
            "$id": "6795",
            "kind": "string",
            "type": {
             "$ref": "6761"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "6796",
           "parameter": {
            "$ref": "6762"
           },
           "value": {
            "$id": "6797",
            "kind": "string",
            "type": {
             "$ref": "6763"
            },
            "value": "BE"
           }
          },
          {
           "$id": "6798",
           "parameter": {
            "$ref": "6758"
           },
           "value": {
            "$id": "6799",
            "kind": "string",
            "type": {
             "$ref": "6759"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "6800",
           "parameter": {
            "$ref": "6756"
           },
           "value": {
            "$id": "6801",
            "kind": "string",
            "type": {
             "$ref": "6757"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "6802",
           "response": {
            "$ref": "6771"
           },
           "statusCode": 202
          }
         ]
        }
       ]
      },
      {
       "$id": "6803",
       "name": "restart",
       "resourceName": "NodeTypes",
       "doc": "Restarts one or more nodes on the node type. It will disable the fabric nodes, trigger a restart on the VMs and activate the nodes back again.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "6804",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "6805",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "6806",
          "type": {
           "$id": "6807",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6808",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "6809",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6810",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "6811",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6812",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "6813",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6814",
         "name": "nodeTypeName",
         "nameInRequest": "nodeTypeName",
         "doc": "The name of the node type.",
         "type": {
          "$id": "6815",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6816",
         "name": "contentType",
         "nameInRequest": "Content-Type",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$id": "6817",
          "kind": "constant",
          "valueType": {
           "$id": "6818",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": true,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6819",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "6820",
          "kind": "constant",
          "valueType": {
           "$id": "6821",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6822",
         "name": "parameters",
         "nameInRequest": "parameters",
         "doc": "parameters for restart action.",
         "type": {
          "$ref": "1095"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "6823",
         "statusCodes": [
          202
         ],
         "headers": [
          {
           "$id": "6824",
           "name": "azureAsyncOperation",
           "nameInResponse": "Azure-AsyncOperation",
           "doc": "A link to the status monitor",
           "type": {
            "$id": "6825",
            "kind": "url",
            "name": "ResourceLocation",
            "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
            "baseType": {
             "$id": "6826",
             "kind": "url",
             "name": "url",
             "crossLanguageDefinitionId": "TypeSpec.url",
             "decorators": []
            },
            "decorators": []
           }
          },
          {
           "$id": "6827",
           "name": "location",
           "nameInResponse": "Location",
           "doc": "The Location header contains the URL where the status of the long running operation can be checked.",
           "type": {
            "$id": "6828",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           }
          }
         ],
         "isErrorResponse": false
        }
       ],
       "httpMethod": "POST",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/restart",
       "requestMediaTypes": [
        "application/json"
       ],
       "bufferResponse": true,
       "longRunning": {
        "$id": "6829",
        "finalStateVia": 1,
        "finalResponse": {
         "$id": "6830",
         "statusCodes": [
          200
         ]
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypes.restart",
       "decorators": [],
       "examples": [
        {
         "$id": "6831",
         "kind": "http",
         "name": "Restart nodes",
         "description": "Restart nodes",
         "filePath": "2024-11-01-preview/RestartNodes_example.json",
         "parameters": [
          {
           "$id": "6832",
           "parameter": {
            "$ref": "6804"
           },
           "value": {
            "$id": "6833",
            "kind": "string",
            "type": {
             "$ref": "6805"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "6834",
           "parameter": {
            "$ref": "6812"
           },
           "value": {
            "$id": "6835",
            "kind": "string",
            "type": {
             "$ref": "6813"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "6836",
           "parameter": {
            "$ref": "6814"
           },
           "value": {
            "$id": "6837",
            "kind": "string",
            "type": {
             "$ref": "6815"
            },
            "value": "BE"
           }
          },
          {
           "$id": "6838",
           "parameter": {
            "$ref": "6810"
           },
           "value": {
            "$id": "6839",
            "kind": "string",
            "type": {
             "$ref": "6811"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "6840",
           "parameter": {
            "$ref": "6808"
           },
           "value": {
            "$id": "6841",
            "kind": "string",
            "type": {
             "$ref": "6809"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "6842",
           "response": {
            "$ref": "6823"
           },
           "statusCode": 202
          }
         ]
        }
       ]
      },
      {
       "$id": "6843",
       "name": "start",
       "resourceName": "NodeTypes",
       "doc": "Starts one or more nodes on the node type. It will trigger an allocation of the fabric node if needed and activate them.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "6844",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "6845",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "6846",
          "type": {
           "$id": "6847",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6848",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "6849",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6850",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "6851",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6852",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "6853",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6854",
         "name": "nodeTypeName",
         "nameInRequest": "nodeTypeName",
         "doc": "The name of the node type.",
         "type": {
          "$id": "6855",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6856",
         "name": "contentType",
         "nameInRequest": "Content-Type",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$id": "6857",
          "kind": "constant",
          "valueType": {
           "$id": "6858",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": true,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6859",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "6860",
          "kind": "constant",
          "valueType": {
           "$id": "6861",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6862",
         "name": "parameters",
         "nameInRequest": "parameters",
         "doc": "parameters for start action.",
         "type": {
          "$ref": "1095"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "6863",
         "statusCodes": [
          202
         ],
         "headers": [
          {
           "$id": "6864",
           "name": "azureAsyncOperation",
           "nameInResponse": "Azure-AsyncOperation",
           "doc": "A link to the status monitor",
           "type": {
            "$id": "6865",
            "kind": "url",
            "name": "ResourceLocation",
            "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
            "baseType": {
             "$id": "6866",
             "kind": "url",
             "name": "url",
             "crossLanguageDefinitionId": "TypeSpec.url",
             "decorators": []
            },
            "decorators": []
           }
          },
          {
           "$id": "6867",
           "name": "location",
           "nameInResponse": "Location",
           "doc": "The Location header contains the URL where the status of the long running operation can be checked.",
           "type": {
            "$id": "6868",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           }
          }
         ],
         "isErrorResponse": false
        }
       ],
       "httpMethod": "POST",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/start",
       "requestMediaTypes": [
        "application/json"
       ],
       "bufferResponse": true,
       "longRunning": {
        "$id": "6869",
        "finalStateVia": 1,
        "finalResponse": {
         "$id": "6870",
         "statusCodes": [
          200
         ]
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypes.start",
       "decorators": [],
       "examples": [
        {
         "$id": "6871",
         "kind": "http",
         "name": "Start nodes",
         "description": "Start nodes",
         "filePath": "2024-11-01-preview/StartNodes_example.json",
         "parameters": [
          {
           "$id": "6872",
           "parameter": {
            "$ref": "6844"
           },
           "value": {
            "$id": "6873",
            "kind": "string",
            "type": {
             "$ref": "6845"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "6874",
           "parameter": {
            "$ref": "6852"
           },
           "value": {
            "$id": "6875",
            "kind": "string",
            "type": {
             "$ref": "6853"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "6876",
           "parameter": {
            "$ref": "6854"
           },
           "value": {
            "$id": "6877",
            "kind": "string",
            "type": {
             "$ref": "6855"
            },
            "value": "BE"
           }
          },
          {
           "$id": "6878",
           "parameter": {
            "$ref": "6850"
           },
           "value": {
            "$id": "6879",
            "kind": "string",
            "type": {
             "$ref": "6851"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "6880",
           "parameter": {
            "$ref": "6848"
           },
           "value": {
            "$id": "6881",
            "kind": "string",
            "type": {
             "$ref": "6849"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "6882",
           "response": {
            "$ref": "6863"
           },
           "statusCode": 202
          }
         ]
        }
       ]
      },
      {
       "$id": "6883",
       "name": "startFaultSimulation",
       "resourceName": "NodeTypes",
       "doc": "Starts a fault simulation on the node type.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "6884",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "6885",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "6886",
          "type": {
           "$id": "6887",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6888",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "6889",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6890",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "6891",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6892",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "6893",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6894",
         "name": "nodeTypeName",
         "nameInRequest": "nodeTypeName",
         "doc": "The name of the node type.",
         "type": {
          "$id": "6895",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6896",
         "name": "contentType",
         "nameInRequest": "Content-Type",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$id": "6897",
          "kind": "constant",
          "valueType": {
           "$id": "6898",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": true,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6899",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "6900",
          "kind": "constant",
          "valueType": {
           "$id": "6901",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6902",
         "name": "parameters",
         "nameInRequest": "parameters",
         "doc": "parameters describing the fault simulation.",
         "type": {
          "$ref": "1108"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "6903",
         "statusCodes": [
          202
         ],
         "headers": [
          {
           "$id": "6904",
           "name": "location",
           "nameInResponse": "Location",
           "doc": "The Location header contains the URL where the status of the long running operation can be checked.",
           "type": {
            "$id": "6905",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           }
          },
          {
           "$id": "6906",
           "name": "azureAsyncOperation",
           "nameInResponse": "Azure-AsyncOperation",
           "doc": "A link to the status monitor",
           "type": {
            "$id": "6907",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           }
          }
         ],
         "isErrorResponse": false
        }
       ],
       "httpMethod": "POST",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/startFaultSimulation",
       "requestMediaTypes": [
        "application/json"
       ],
       "bufferResponse": true,
       "longRunning": {
        "$id": "6908",
        "finalStateVia": 1,
        "finalResponse": {
         "$id": "6909",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "1137"
         }
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypes.startFaultSimulation",
       "decorators": []
      },
      {
       "$id": "6910",
       "name": "stopFaultSimulation",
       "resourceName": "NodeTypes",
       "doc": "Stops a fault simulation on the node type.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "6911",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "6912",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "6913",
          "type": {
           "$id": "6914",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6915",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "6916",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6917",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "6918",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6919",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "6920",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6921",
         "name": "nodeTypeName",
         "nameInRequest": "nodeTypeName",
         "doc": "The name of the node type.",
         "type": {
          "$id": "6922",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6923",
         "name": "contentType",
         "nameInRequest": "Content-Type",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$id": "6924",
          "kind": "constant",
          "valueType": {
           "$id": "6925",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": true,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6926",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "6927",
          "kind": "constant",
          "valueType": {
           "$id": "6928",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6929",
         "name": "parameters",
         "nameInRequest": "parameters",
         "doc": "parameter with fault simulation id.",
         "type": {
          "$ref": "1189"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "6930",
         "statusCodes": [
          202
         ],
         "headers": [
          {
           "$id": "6931",
           "name": "location",
           "nameInResponse": "Location",
           "doc": "The Location header contains the URL where the status of the long running operation can be checked.",
           "type": {
            "$id": "6932",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           }
          },
          {
           "$id": "6933",
           "name": "azureAsyncOperation",
           "nameInResponse": "Azure-AsyncOperation",
           "doc": "A link to the status monitor",
           "type": {
            "$id": "6934",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           }
          }
         ],
         "isErrorResponse": false
        }
       ],
       "httpMethod": "POST",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/stopFaultSimulation",
       "requestMediaTypes": [
        "application/json"
       ],
       "bufferResponse": true,
       "longRunning": {
        "$id": "6935",
        "finalStateVia": 1,
        "finalResponse": {
         "$id": "6936",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "1137"
         }
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypes.stopFaultSimulation",
       "decorators": []
      },
      {
       "$id": "6937",
       "name": "getFaultSimulation",
       "resourceName": "NodeTypes",
       "doc": "Gets a fault simulation by the simulationId.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "6938",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "6939",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "6940",
          "type": {
           "$id": "6941",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6942",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "6943",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6944",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "6945",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6946",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "6947",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6948",
         "name": "nodeTypeName",
         "nameInRequest": "nodeTypeName",
         "doc": "The name of the node type.",
         "type": {
          "$id": "6949",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6950",
         "name": "contentType",
         "nameInRequest": "Content-Type",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$id": "6951",
          "kind": "constant",
          "valueType": {
           "$id": "6952",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": true,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6953",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "6954",
          "kind": "constant",
          "valueType": {
           "$id": "6955",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6956",
         "name": "parameters",
         "nameInRequest": "parameters",
         "doc": "parameter with fault simulation id.",
         "type": {
          "$ref": "1189"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "6957",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "1137"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "POST",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/getFaultSimulation",
       "requestMediaTypes": [
        "application/json"
       ],
       "bufferResponse": true,
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypes.getFaultSimulation",
       "decorators": []
      },
      {
       "$id": "6958",
       "name": "listFaultSimulation",
       "resourceName": "NodeTypes",
       "doc": "Gets the list of recent fault simulations for the node type.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "6959",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "6960",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "6961",
          "type": {
           "$id": "6962",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6963",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "6964",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6965",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "6966",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6967",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "6968",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6969",
         "name": "nodeTypeName",
         "nameInRequest": "nodeTypeName",
         "doc": "The name of the node type.",
         "type": {
          "$id": "6970",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6971",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "6972",
          "kind": "constant",
          "valueType": {
           "$id": "6973",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "6974",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "1194"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "POST",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/listFaultSimulation",
       "bufferResponse": true,
       "paging": {
        "$id": "6975",
        "itemPropertySegments": [
         "value"
        ],
        "nextLink": {
         "$id": "6976",
         "responseSegments": [
          "nextLink"
         ],
         "responseLocation": "Body"
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypes.listFaultSimulation",
       "decorators": []
      }
     ],
     "parameters": [
      {
       "$id": "6977",
       "name": "endpoint",
       "nameInRequest": "endpoint",
       "doc": "Service host",
       "type": {
        "$id": "6978",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "defaultValue": {
        "$id": "6979",
        "type": {
         "$id": "6980",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "value": "https://management.azure.com"
       }
      }
     ],
     "decorators": [
      {
       "$id": "6981",
       "name": "Azure.ResourceManager.@armResourceOperations",
       "arguments": {
        "$id": "6982"
       }
      }
     ],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypes",
     "apiVersions": [
      "2024-11-01-preview"
     ],
     "parent": {
      "$ref": "2353"
     }
    },
    {
     "$id": "6983",
     "kind": "client",
     "name": "NodeTypeSkus",
     "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
     "operations": [
      {
       "$id": "6984",
       "name": "GetAvailableSkus",
       "resourceName": "NodeTypeSkus",
       "doc": "Get a Service Fabric node type supported SKUs.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "6985",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "6986",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "6987",
          "type": {
           "$id": "6988",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6989",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "6990",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6991",
         "name": "resourceGroupName",
         "nameInRequest": "resourceGroupName",
         "doc": "The name of the resource group. The name is case insensitive.",
         "type": {
          "$id": "6992",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6993",
         "name": "clusterName",
         "nameInRequest": "clusterName",
         "doc": "The name of the cluster resource.",
         "type": {
          "$id": "6994",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6995",
         "name": "nodeTypeName",
         "nameInRequest": "nodeTypeName",
         "doc": "The name of the node type.",
         "type": {
          "$id": "6996",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "6997",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "6998",
          "kind": "constant",
          "valueType": {
           "$id": "6999",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "7000",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "452"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "GET",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/skus",
       "bufferResponse": true,
       "paging": {
        "$id": "7001",
        "itemPropertySegments": [
         "value"
        ],
        "nextLink": {
         "$id": "7002",
         "responseSegments": [
          "nextLink"
         ],
         "responseLocation": "Body"
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeSkus.list",
       "decorators": [],
       "examples": [
        {
         "$id": "7003",
         "kind": "http",
         "name": "List a node type SKUs",
         "description": "List a node type SKUs",
         "filePath": "2024-11-01-preview/NodeTypeSkusListOperation_example.json",
         "parameters": [
          {
           "$id": "7004",
           "parameter": {
            "$ref": "6985"
           },
           "value": {
            "$id": "7005",
            "kind": "string",
            "type": {
             "$ref": "6986"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "7006",
           "parameter": {
            "$ref": "6993"
           },
           "value": {
            "$id": "7007",
            "kind": "string",
            "type": {
             "$ref": "6994"
            },
            "value": "myCluster"
           }
          },
          {
           "$id": "7008",
           "parameter": {
            "$ref": "6995"
           },
           "value": {
            "$id": "7009",
            "kind": "string",
            "type": {
             "$ref": "6996"
            },
            "value": "BE"
           }
          },
          {
           "$id": "7010",
           "parameter": {
            "$ref": "6991"
           },
           "value": {
            "$id": "7011",
            "kind": "string",
            "type": {
             "$ref": "6992"
            },
            "value": "resRg"
           }
          },
          {
           "$id": "7012",
           "parameter": {
            "$ref": "6989"
           },
           "value": {
            "$id": "7013",
            "kind": "string",
            "type": {
             "$ref": "6990"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          }
         ],
         "responses": [
          {
           "$id": "7014",
           "response": {
            "$ref": "7000"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "7015",
            "kind": "model",
            "type": {
             "$ref": "452"
            },
            "value": {
             "$id": "7016",
             "nextLink": {
              "$id": "7017",
              "kind": "string",
              "type": {
               "$ref": "495"
              },
              "value": "http://examplelink.com"
             },
             "value": {
              "$id": "7018",
              "kind": "array",
              "type": {
               "$ref": "454"
              },
              "value": [
               {
                "$id": "7019",
                "kind": "model",
                "type": {
                 "$ref": "455"
                },
                "value": {
                 "$id": "7020",
                 "capacity": {
                  "$id": "7021",
                  "kind": "model",
                  "type": {
                   "$ref": "474"
                  },
                  "value": {
                   "$id": "7022",
                   "default": {
                    "$id": "7023",
                    "kind": "number",
                    "type": {
                     "$ref": "484"
                    },
                    "value": 1
                   },
                   "maximum": {
                    "$id": "7024",
                    "kind": "number",
                    "type": {
                     "$ref": "480"
                    },
                    "value": 100
                   },
                   "minimum": {
                    "$id": "7025",
                    "kind": "number",
                    "type": {
                     "$ref": "476"
                    },
                    "value": 1
                   },
                   "scaleType": {
                    "$id": "7026",
                    "kind": "string",
                    "type": {
                     "$ref": "10"
                    },
                    "value": "Automatic"
                   }
                  }
                 },
                 "resourceType": {
                  "$id": "7027",
                  "kind": "string",
                  "type": {
                   "$ref": "457"
                  },
                  "value": "Microsoft.ServiceFabric/managedClusters/nodeTypes"
                 },
                 "sku": {
                  "$id": "7028",
                  "kind": "model",
                  "type": {
                   "$ref": "462"
                  },
                  "value": {
                   "$id": "7029",
                   "name": {
                    "$id": "7030",
                    "kind": "string",
                    "type": {
                     "$ref": "464"
                    },
                    "value": "Standard_S0"
                   },
                   "tier": {
                    "$id": "7031",
                    "kind": "string",
                    "type": {
                     "$ref": "468"
                    },
                    "value": "Standard"
                   }
                  }
                 }
                }
               },
               {
                "$id": "7032",
                "kind": "model",
                "type": {
                 "$ref": "455"
                },
                "value": {
                 "$id": "7033",
                 "capacity": {
                  "$id": "7034",
                  "kind": "model",
                  "type": {
                   "$ref": "474"
                  },
                  "value": {
                   "$id": "7035",
                   "default": {
                    "$id": "7036",
                    "kind": "number",
                    "type": {
                     "$ref": "484"
                    },
                    "value": 3
                   },
                   "maximum": {
                    "$id": "7037",
                    "kind": "number",
                    "type": {
                     "$ref": "480"
                    },
                    "value": 300
                   },
                   "minimum": {
                    "$id": "7038",
                    "kind": "number",
                    "type": {
                     "$ref": "476"
                    },
                    "value": 3
                   },
                   "scaleType": {
                    "$id": "7039",
                    "kind": "string",
                    "type": {
                     "$ref": "10"
                    },
                    "value": "Automatic"
                   }
                  }
                 },
                 "resourceType": {
                  "$id": "7040",
                  "kind": "string",
                  "type": {
                   "$ref": "457"
                  },
                  "value": "Microsoft.ServiceFabric/managedClusters/nodeTypes"
                 },
                 "sku": {
                  "$id": "7041",
                  "kind": "model",
                  "type": {
                   "$ref": "462"
                  },
                  "value": {
                   "$id": "7042",
                   "name": {
                    "$id": "7043",
                    "kind": "string",
                    "type": {
                     "$ref": "464"
                    },
                    "value": "Standard_S1"
                   },
                   "tier": {
                    "$id": "7044",
                    "kind": "string",
                    "type": {
                     "$ref": "468"
                    },
                    "value": "Standard"
                   }
                  }
                 }
                }
               },
               {
                "$id": "7045",
                "kind": "model",
                "type": {
                 "$ref": "455"
                },
                "value": {
                 "$id": "7046",
                 "capacity": {
                  "$id": "7047",
                  "kind": "model",
                  "type": {
                   "$ref": "474"
                  },
                  "value": {
                   "$id": "7048",
                   "default": {
                    "$id": "7049",
                    "kind": "number",
                    "type": {
                     "$ref": "484"
                    },
                    "value": 1
                   },
                   "maximum": {
                    "$id": "7050",
                    "kind": "number",
                    "type": {
                     "$ref": "480"
                    },
                    "value": 1000
                   },
                   "minimum": {
                    "$id": "7051",
                    "kind": "number",
                    "type": {
                     "$ref": "476"
                    },
                    "value": 1
                   },
                   "scaleType": {
                    "$id": "7052",
                    "kind": "string",
                    "type": {
                     "$ref": "10"
                    },
                    "value": "Automatic"
                   }
                  }
                 },
                 "resourceType": {
                  "$id": "7053",
                  "kind": "string",
                  "type": {
                   "$ref": "457"
                  },
                  "value": "Microsoft.ServiceFabric/managedClusters/nodeTypes"
                 },
                 "sku": {
                  "$id": "7054",
                  "kind": "model",
                  "type": {
                   "$ref": "462"
                  },
                  "value": {
                   "$id": "7055",
                   "name": {
                    "$id": "7056",
                    "kind": "string",
                    "type": {
                     "$ref": "464"
                    },
                    "value": "Standard_S2"
                   },
                   "tier": {
                    "$id": "7057",
                    "kind": "string",
                    "type": {
                     "$ref": "468"
                    },
                    "value": "Standard"
                   }
                  }
                 }
                }
               },
               {
                "$id": "7058",
                "kind": "model",
                "type": {
                 "$ref": "455"
                },
                "value": {
                 "$id": "7059",
                 "capacity": {
                  "$id": "7060",
                  "kind": "model",
                  "type": {
                   "$ref": "474"
                  },
                  "value": {
                   "$id": "7061",
                   "default": {
                    "$id": "7062",
                    "kind": "number",
                    "type": {
                     "$ref": "484"
                    },
                    "value": 3
                   },
                   "maximum": {
                    "$id": "7063",
                    "kind": "number",
                    "type": {
                     "$ref": "480"
                    },
                    "value": 1000
                   },
                   "minimum": {
                    "$id": "7064",
                    "kind": "number",
                    "type": {
                     "$ref": "476"
                    },
                    "value": 3
                   },
                   "scaleType": {
                    "$id": "7065",
                    "kind": "string",
                    "type": {
                     "$ref": "10"
                    },
                    "value": "Automatic"
                   }
                  }
                 },
                 "resourceType": {
                  "$id": "7066",
                  "kind": "string",
                  "type": {
                   "$ref": "457"
                  },
                  "value": "Microsoft.ServiceFabric/managedClusters/nodeTypes"
                 },
                 "sku": {
                  "$id": "7067",
                  "kind": "model",
                  "type": {
                   "$ref": "462"
                  },
                  "value": {
                   "$id": "7068",
                   "name": {
                    "$id": "7069",
                    "kind": "string",
                    "type": {
                     "$ref": "464"
                    },
                    "value": "Standard_S3"
                   },
                   "tier": {
                    "$id": "7070",
                    "kind": "string",
                    "type": {
                     "$ref": "468"
                    },
                    "value": "Standard"
                   }
                  }
                 }
                }
               }
              ]
             }
            }
           }
          }
         ]
        }
       ]
      }
     ],
     "parameters": [
      {
       "$id": "7071",
       "name": "endpoint",
       "nameInRequest": "endpoint",
       "doc": "Service host",
       "type": {
        "$id": "7072",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "defaultValue": {
        "$id": "7073",
        "type": {
         "$id": "7074",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "value": "https://management.azure.com"
       }
      }
     ],
     "decorators": [
      {
       "$id": "7075",
       "name": "Azure.ResourceManager.@armResourceOperations",
       "arguments": {
        "$id": "7076"
       }
      }
     ],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.NodeTypeSkus",
     "apiVersions": [
      "2024-11-01-preview"
     ],
     "parent": {
      "$ref": "2353"
     }
    },
    {
     "$id": "7077",
     "kind": "client",
     "name": "OperationResults",
     "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
     "operations": [
      {
       "$id": "7078",
       "name": "get",
       "resourceName": "OperationResults",
       "summary": "Get long running operation result.",
       "doc": "Get long running operation result.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "7079",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "7080",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "7081",
          "type": {
           "$id": "7082",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "7083",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "7084",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "7085",
         "name": "location",
         "nameInRequest": "location",
         "doc": "The name of the Azure region.",
         "type": {
          "$id": "7086",
          "kind": "string",
          "name": "azureLocation",
          "crossLanguageDefinitionId": "Azure.Core.azureLocation",
          "baseType": {
           "$id": "7087",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "7088",
         "name": "operationId",
         "nameInRequest": "operationId",
         "doc": "operation identifier.",
         "type": {
          "$id": "7089",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "7090",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "7091",
          "kind": "constant",
          "valueType": {
           "$id": "7092",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "7093",
         "statusCodes": [
          200
         ],
         "headers": [],
         "isErrorResponse": false
        },
        {
         "$id": "7094",
         "statusCodes": [
          202
         ],
         "headers": [
          {
           "$id": "7095",
           "name": "location",
           "nameInResponse": "Location",
           "doc": "The Location header contains the URL where the status of the long running operation can be checked.",
           "type": {
            "$id": "7096",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           }
          }
         ],
         "isErrorResponse": false
        },
        {
         "$id": "7097",
         "statusCodes": [
          204
         ],
         "headers": [],
         "isErrorResponse": false
        }
       ],
       "httpMethod": "GET",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedClusterOperationResults/{operationId}",
       "bufferResponse": true,
       "longRunning": {
        "$id": "7098",
        "finalStateVia": 1,
        "finalResponse": {
         "$id": "7099",
         "statusCodes": [
          200
         ]
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.OperationResults.get",
       "decorators": [],
       "examples": [
        {
         "$id": "7100",
         "kind": "http",
         "name": "Get long running operation result",
         "description": "Get long running operation result",
         "filePath": "2024-11-01-preview/OperationResultsGet_example.json",
         "parameters": [
          {
           "$id": "7101",
           "parameter": {
            "$ref": "7083"
           },
           "value": {
            "$id": "7102",
            "kind": "string",
            "type": {
             "$ref": "7084"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          },
          {
           "$id": "7103",
           "parameter": {
            "$ref": "7085"
           },
           "value": {
            "$id": "7104",
            "kind": "string",
            "type": {
             "$ref": "7086"
            },
            "value": "eastus"
           }
          },
          {
           "$id": "7105",
           "parameter": {
            "$ref": "7079"
           },
           "value": {
            "$id": "7106",
            "kind": "string",
            "type": {
             "$ref": "7080"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "7107",
           "parameter": {
            "$ref": "7088"
           },
           "value": {
            "$id": "7108",
            "kind": "string",
            "type": {
             "$ref": "7089"
            },
            "value": "00000000-0000-0000-0000-000000001234"
           }
          }
         ],
         "responses": [
          {
           "$id": "7109",
           "response": {
            "$ref": "7093"
           },
           "statusCode": 200
          },
          {
           "$id": "7110",
           "response": {
            "$ref": "7094"
           },
           "statusCode": 202
          },
          {
           "$id": "7111",
           "response": {
            "$ref": "7097"
           },
           "statusCode": 204
          }
         ]
        }
       ]
      }
     ],
     "parameters": [
      {
       "$id": "7112",
       "name": "endpoint",
       "nameInRequest": "endpoint",
       "doc": "Service host",
       "type": {
        "$id": "7113",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "defaultValue": {
        "$id": "7114",
        "type": {
         "$id": "7115",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "value": "https://management.azure.com"
       }
      }
     ],
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.OperationResults",
     "apiVersions": [
      "2024-11-01-preview"
     ],
     "parent": {
      "$ref": "2353"
     }
    },
    {
     "$id": "7116",
     "kind": "client",
     "name": "OperationStatus",
     "namespace": "Azure.ResourceManager.ServiceFabricManagedClusters",
     "operations": [
      {
       "$id": "7117",
       "name": "get",
       "resourceName": "OperationStatus",
       "summary": "Get long running operation status.",
       "doc": "Get long running operation status.",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "7118",
         "name": "apiVersion",
         "nameInRequest": "api-version",
         "doc": "The API version to use for this operation.",
         "type": {
          "$id": "7119",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": true,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "defaultValue": {
          "$id": "7120",
          "type": {
           "$id": "7121",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string"
          },
          "value": "2024-11-01-preview"
         },
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "7122",
         "name": "subscriptionId",
         "nameInRequest": "subscriptionId",
         "doc": "The ID of the target subscription. The value must be an UUID.",
         "type": {
          "$id": "7123",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Client",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "7124",
         "name": "location",
         "nameInRequest": "location",
         "doc": "The name of the Azure region.",
         "type": {
          "$id": "7125",
          "kind": "string",
          "name": "azureLocation",
          "crossLanguageDefinitionId": "Azure.Core.azureLocation",
          "baseType": {
           "$id": "7126",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "7127",
         "name": "operationId",
         "nameInRequest": "operationId",
         "doc": "operation identifier.",
         "type": {
          "$id": "7128",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "7129",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "7130",
          "kind": "constant",
          "valueType": {
           "$id": "7131",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "7132",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "358"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "GET",
       "uri": "{endpoint}",
       "path": "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedClusterOperations/{operationId}",
       "bufferResponse": true,
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Microsoft.ServiceFabric.OperationStatus.get",
       "decorators": [],
       "examples": [
        {
         "$id": "7133",
         "kind": "http",
         "name": "Error response describing why the operation failed.",
         "description": "Error response describing why the operation failed.",
         "filePath": "2024-11-01-preview/OperationStatusFailed_example.json",
         "parameters": [
          {
           "$id": "7134",
           "parameter": {
            "$ref": "7122"
           },
           "value": {
            "$id": "7135",
            "kind": "string",
            "type": {
             "$ref": "7123"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          },
          {
           "$id": "7136",
           "parameter": {
            "$ref": "7124"
           },
           "value": {
            "$id": "7137",
            "kind": "string",
            "type": {
             "$ref": "7125"
            },
            "value": "eastus"
           }
          },
          {
           "$id": "7138",
           "parameter": {
            "$ref": "7118"
           },
           "value": {
            "$id": "7139",
            "kind": "string",
            "type": {
             "$ref": "7119"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "7140",
           "parameter": {
            "$ref": "7127"
           },
           "value": {
            "$id": "7141",
            "kind": "string",
            "type": {
             "$ref": "7128"
            },
            "value": "00000000-0000-0000-0000-000000001234"
           }
          }
         ],
         "responses": [
          {
           "$id": "7142",
           "response": {
            "$ref": "7132"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "7143",
            "kind": "model",
            "type": {
             "$ref": "358"
            },
            "value": {
             "$id": "7144",
             "name": {
              "$id": "7145",
              "kind": "string",
              "type": {
               "$ref": "360"
              },
              "value": "00000000-0000-0000-0000-000000001234"
             },
             "startTime": {
              "$id": "7146",
              "kind": "string",
              "type": {
               "$ref": "364"
              },
              "value": "2022-01-03T23:58:02.2501337Z"
             },
             "endTime": {
              "$id": "7147",
              "kind": "string",
              "type": {
               "$ref": "369"
              },
              "value": "2022-01-04T00:13:03.2790951Z"
             },
             "percentComplete": {
              "$id": "7148",
              "kind": "number",
              "type": {
               "$ref": "374"
              },
              "value": 100
             },
             "status": {
              "$id": "7149",
              "kind": "string",
              "type": {
               "$ref": "378"
              },
              "value": "Failed"
             },
             "error": {
              "$id": "7150",
              "kind": "model",
              "type": {
               "$ref": "382"
              },
              "value": {
               "$id": "7151",
               "code": {
                "$id": "7152",
                "kind": "string",
                "type": {
                 "$ref": "384"
                },
                "value": "-2146233029"
               },
               "message": {
                "$id": "7153",
                "kind": "string",
                "type": {
                 "$ref": "388"
                },
                "value": "A task was canceled."
               }
              }
             }
            }
           }
          }
         ]
        },
        {
         "$id": "7154",
         "kind": "http",
         "name": "OK. The request has succeeded.",
         "description": "OK. The request has succeeded.",
         "filePath": "2024-11-01-preview/OperationStatusSucceeded_example.json",
         "parameters": [
          {
           "$id": "7155",
           "parameter": {
            "$ref": "7122"
           },
           "value": {
            "$id": "7156",
            "kind": "string",
            "type": {
             "$ref": "7123"
            },
            "value": "00000000-0000-0000-0000-000000000000"
           }
          },
          {
           "$id": "7157",
           "parameter": {
            "$ref": "7124"
           },
           "value": {
            "$id": "7158",
            "kind": "string",
            "type": {
             "$ref": "7125"
            },
            "value": "eastus"
           }
          },
          {
           "$id": "7159",
           "parameter": {
            "$ref": "7118"
           },
           "value": {
            "$id": "7160",
            "kind": "string",
            "type": {
             "$ref": "7119"
            },
            "value": "2024-11-01-preview"
           }
          },
          {
           "$id": "7161",
           "parameter": {
            "$ref": "7127"
           },
           "value": {
            "$id": "7162",
            "kind": "string",
            "type": {
             "$ref": "7128"
            },
            "value": "00000000-0000-0000-0000-000000001234"
           }
          }
         ],
         "responses": [
          {
           "$id": "7163",
           "response": {
            "$ref": "7132"
           },
           "statusCode": 200,
           "bodyValue": {
            "$id": "7164",
            "kind": "model",
            "type": {
             "$ref": "358"
            },
            "value": {
             "$id": "7165",
             "name": {
              "$id": "7166",
              "kind": "string",
              "type": {
               "$ref": "360"
              },
              "value": "00000000-0000-0000-0000-000000001234"
             },
             "startTime": {
              "$id": "7167",
              "kind": "string",
              "type": {
               "$ref": "364"
              },
              "value": "2022-01-03T23:58:02.2501337Z"
             },
             "endTime": {
              "$id": "7168",
              "kind": "string",
              "type": {
               "$ref": "369"
              },
              "value": "2022-01-04T00:13:03.2790951Z"
             },
             "percentComplete": {
              "$id": "7169",
              "kind": "number",
              "type": {
               "$ref": "374"
              },
              "value": 100
             },
             "status": {
              "$id": "7170",
              "kind": "string",
              "type": {
               "$ref": "378"
              },
              "value": "Succeeded"
             }
            }
           }
          }
         ]
        }
       ]
      }
     ],
     "parameters": [
      {
       "$id": "7171",
       "name": "endpoint",
       "nameInRequest": "endpoint",
       "doc": "Service host",
       "type": {
        "$id": "7172",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "defaultValue": {
        "$id": "7173",
        "type": {
         "$id": "7174",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "value": "https://management.azure.com"
       }
      }
     ],
     "decorators": [],
     "crossLanguageDefinitionId": "Microsoft.ServiceFabric.OperationStatus",
     "apiVersions": [
      "2024-11-01-preview"
     ],
     "parent": {
      "$ref": "2353"
     }
    }
   ]
  }
 ],
 "auth": {
  "$id": "7175",
  "oAuth2": {
   "$id": "7176",
   "scopes": [
    "user_impersonation"
   ]
  }
 }
}
