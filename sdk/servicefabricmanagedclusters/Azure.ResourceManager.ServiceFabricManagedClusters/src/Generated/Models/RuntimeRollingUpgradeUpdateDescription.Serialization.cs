// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ServiceFabricManagedClusters.Models
{
    public partial class RuntimeRollingUpgradeUpdateDescription : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("rollingUpgradeMode"u8);
            writer.WriteStringValue(RollingUpgradeMode.ToString());
            if (Optional.IsDefined(ForceRestart))
            {
                writer.WritePropertyName("forceRestart"u8);
                writer.WriteBooleanValue(ForceRestart.Value);
            }
            if (Optional.IsDefined(ReplicaSetCheckTimeoutInMilliseconds))
            {
                writer.WritePropertyName("replicaSetCheckTimeoutInMilliseconds"u8);
                writer.WriteNumberValue(ReplicaSetCheckTimeoutInMilliseconds.Value);
            }
            if (Optional.IsDefined(FailureAction))
            {
                writer.WritePropertyName("failureAction"u8);
                writer.WriteStringValue(FailureAction.Value.ToString());
            }
            if (Optional.IsDefined(HealthCheckWaitDurationInMilliseconds))
            {
                writer.WritePropertyName("healthCheckWaitDurationInMilliseconds"u8);
                writer.WriteStringValue(HealthCheckWaitDurationInMilliseconds);
            }
            if (Optional.IsDefined(HealthCheckStableDurationInMilliseconds))
            {
                writer.WritePropertyName("healthCheckStableDurationInMilliseconds"u8);
                writer.WriteStringValue(HealthCheckStableDurationInMilliseconds);
            }
            if (Optional.IsDefined(HealthCheckRetryTimeoutInMilliseconds))
            {
                writer.WritePropertyName("healthCheckRetryTimeoutInMilliseconds"u8);
                writer.WriteStringValue(HealthCheckRetryTimeoutInMilliseconds);
            }
            if (Optional.IsDefined(UpgradeTimeoutInMilliseconds))
            {
                writer.WritePropertyName("upgradeTimeoutInMilliseconds"u8);
                writer.WriteStringValue(UpgradeTimeoutInMilliseconds);
            }
            if (Optional.IsDefined(UpgradeDomainTimeoutInMilliseconds))
            {
                writer.WritePropertyName("upgradeDomainTimeoutInMilliseconds"u8);
                writer.WriteStringValue(UpgradeDomainTimeoutInMilliseconds);
            }
            if (Optional.IsDefined(InstanceCloseDelayDurationInSeconds))
            {
                writer.WritePropertyName("instanceCloseDelayDurationInSeconds"u8);
                writer.WriteNumberValue(InstanceCloseDelayDurationInSeconds.Value);
            }
            writer.WriteEndObject();
        }
    }
}
