// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Search.Documents.Indexes
{
    /// <summary> Abstract class to share properties between concrete selectors. </summary>
    public partial class SearchIndexerKnowledgeStoreBlobProjectionSelector : SearchIndexerKnowledgeStoreProjectionSelector
    {
        /// <summary> Initializes a new instance of <see cref="SearchIndexerKnowledgeStoreBlobProjectionSelector"/>. </summary>
        /// <param name="storageContainer"> Blob container to store projections in. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="storageContainer"/> is null. </exception>
        public SearchIndexerKnowledgeStoreBlobProjectionSelector(string storageContainer)
        {
            Argument.AssertNotNull(storageContainer, nameof(storageContainer));

            StorageContainer = storageContainer;
        }

        /// <summary> Initializes a new instance of <see cref="SearchIndexerKnowledgeStoreBlobProjectionSelector"/>. </summary>
        /// <param name="referenceKeyName"> Name of reference key to different projection. </param>
        /// <param name="generatedKeyName"> Name of generated key to store projection under. </param>
        /// <param name="source"> Source data to project. </param>
        /// <param name="sourceContext"> Source context for complex projections. </param>
        /// <param name="inputs"> Nested inputs for complex projections. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="storageContainer"> Blob container to store projections in. </param>
        internal SearchIndexerKnowledgeStoreBlobProjectionSelector(string referenceKeyName, string generatedKeyName, string source, string sourceContext, IList<InputFieldMappingEntry> inputs, IDictionary<string, BinaryData> serializedAdditionalRawData, string storageContainer) : base(referenceKeyName, generatedKeyName, source, sourceContext, inputs, serializedAdditionalRawData)
        {
            StorageContainer = storageContainer;
        }

        /// <summary> Initializes a new instance of <see cref="SearchIndexerKnowledgeStoreBlobProjectionSelector"/> for deserialization. </summary>
        internal SearchIndexerKnowledgeStoreBlobProjectionSelector()
        {
        }

        /// <summary> Blob container to store projections in. </summary>
        public string StorageContainer { get; set; }
    }
}
