// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.Search.Models
{
    internal static partial class SearchServiceSkuNameExtensions
    {
        public static string ToSerialString(this SearchServiceSkuName value) => value switch
        {
            SearchServiceSkuName.Free => "free",
            SearchServiceSkuName.Basic => "basic",
            SearchServiceSkuName.Standard => "standard",
            SearchServiceSkuName.Standard2 => "standard2",
            SearchServiceSkuName.Standard3 => "standard3",
            SearchServiceSkuName.StorageOptimizedL1 => "storage_optimized_l1",
            SearchServiceSkuName.StorageOptimizedL2 => "storage_optimized_l2",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown SearchServiceSkuName value.")
        };

        public static SearchServiceSkuName ToSearchServiceSkuName(this string value)
        {
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "free")) return SearchServiceSkuName.Free;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "basic")) return SearchServiceSkuName.Basic;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "standard")) return SearchServiceSkuName.Standard;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "standard2")) return SearchServiceSkuName.Standard2;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "standard3")) return SearchServiceSkuName.Standard3;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "storage_optimized_l1")) return SearchServiceSkuName.StorageOptimizedL1;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "storage_optimized_l2")) return SearchServiceSkuName.StorageOptimizedL2;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown SearchServiceSkuName value.");
        }
    }
}
