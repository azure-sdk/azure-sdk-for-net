// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Search.Documents
{
    /// <summary> Specifies the parameters for connecting to the Azure OpenAI resource. </summary>
    public partial class AzureOpenAIVectorizerParameters
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="AzureOpenAIVectorizerParameters"/>. </summary>
        public AzureOpenAIVectorizerParameters()
        {
        }

        /// <summary> Initializes a new instance of <see cref="AzureOpenAIVectorizerParameters"/>. </summary>
        /// <param name="resourceUrl"> The resource URI of the Azure OpenAI resource. </param>
        /// <param name="deploymentName"> ID of the Azure OpenAI model deployment on the designated resource. </param>
        /// <param name="apiKey"> API key of the designated Azure OpenAI resource. </param>
        /// <param name="authIdentity">
        /// The user-assigned managed identity used for outbound connections.
        /// Please note <see cref="SearchIndexerDataIdentity"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="SearchIndexerDataNoneIdentity"/> and <see cref="SearchIndexerDataUserAssignedIdentity"/>.
        /// </param>
        /// <param name="modelName">
        /// The name of the embedding model that is deployed at the provided deploymentId
        /// path.
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal AzureOpenAIVectorizerParameters(Uri resourceUrl, string deploymentName, string apiKey, SearchIndexerDataIdentity authIdentity, AzureOpenAIModelName? modelName, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            ResourceUrl = resourceUrl;
            DeploymentName = deploymentName;
            ApiKey = apiKey;
            AuthIdentity = authIdentity;
            ModelName = modelName;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The resource URI of the Azure OpenAI resource. </summary>
        public Uri ResourceUrl { get; set; }
        /// <summary> ID of the Azure OpenAI model deployment on the designated resource. </summary>
        public string DeploymentName { get; set; }
        /// <summary> API key of the designated Azure OpenAI resource. </summary>
        public string ApiKey { get; set; }
        /// <summary>
        /// The user-assigned managed identity used for outbound connections.
        /// Please note <see cref="SearchIndexerDataIdentity"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="SearchIndexerDataNoneIdentity"/> and <see cref="SearchIndexerDataUserAssignedIdentity"/>.
        /// </summary>
        public SearchIndexerDataIdentity AuthIdentity { get; set; }
        /// <summary>
        /// The name of the embedding model that is deployed at the provided deploymentId
        /// path.
        /// </summary>
        public AzureOpenAIModelName? ModelName { get; set; }
    }
}
