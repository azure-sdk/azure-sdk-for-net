// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.Search.Documents.Indexes.Models
{
    /// <summary> Contains the parameters specific to using the Azure Open AI service for vectorization at query time. </summary>
    public partial class AzureOpenAIParameters
    {
        /// <summary> Initializes a new instance of AzureOpenAIParameters. </summary>
        public AzureOpenAIParameters()
        {
        }

        /// <summary> Initializes a new instance of AzureOpenAIParameters. </summary>
        /// <param name="resourceUri"> The resource uri for your Azure Open AI resource. </param>
        /// <param name="deploymentId"> ID of your Azure Open AI model deployment on the designated resource. </param>
        /// <param name="apiKey"> API key for the designated Azure Open AI resource. </param>
        /// <param name="authResourceId"> This value should be the application ID created for the Azure Open AI resource when it was registered with Azure Active Directory. When specified, the query connects to the Azure Open AI resource using a managed ID (either system or user-assigned) of the search service and the access token of the resource, using this value as the resource id for creating the scope of the access token. </param>
        /// <param name="authIdentity">
        /// The user-assigned managed identity used for outbound connections. If an authResourceId is provided and it's not specified, the system-assigned managed identity is used. On updates to the indexer, if the identity is unspecified, the value remains unchanged. If set to "none", the value of this property is cleared.
        /// Please note <see cref="SearchIndexerDataIdentity"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="SearchIndexerDataNoneIdentity"/> and <see cref="SearchIndexerDataUserAssignedIdentity"/>.
        /// </param>
        internal AzureOpenAIParameters(string resourceUri, string deploymentId, string apiKey, string authResourceId, SearchIndexerDataIdentity authIdentity)
        {
            ResourceUri = resourceUri;
            DeploymentId = deploymentId;
            ApiKey = apiKey;
            AuthResourceId = authResourceId;
            AuthIdentity = authIdentity;
        }

        /// <summary> The resource uri for your Azure Open AI resource. </summary>
        public string ResourceUri { get; set; }
        /// <summary> ID of your Azure Open AI model deployment on the designated resource. </summary>
        public string DeploymentId { get; set; }
        /// <summary> API key for the designated Azure Open AI resource. </summary>
        public string ApiKey { get; set; }
        /// <summary> This value should be the application ID created for the Azure Open AI resource when it was registered with Azure Active Directory. When specified, the query connects to the Azure Open AI resource using a managed ID (either system or user-assigned) of the search service and the access token of the resource, using this value as the resource id for creating the scope of the access token. </summary>
        public string AuthResourceId { get; set; }
        /// <summary>
        /// The user-assigned managed identity used for outbound connections. If an authResourceId is provided and it's not specified, the system-assigned managed identity is used. On updates to the indexer, if the identity is unspecified, the value remains unchanged. If set to "none", the value of this property is cleared.
        /// Please note <see cref="SearchIndexerDataIdentity"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="SearchIndexerDataNoneIdentity"/> and <see cref="SearchIndexerDataUserAssignedIdentity"/>.
        /// </summary>
        public SearchIndexerDataIdentity AuthIdentity { get; set; }
    }
}
