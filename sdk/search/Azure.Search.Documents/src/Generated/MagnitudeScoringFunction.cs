// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Search.Documents
{
    /// <summary> Defines a function that boosts scores based on the magnitude of a numeric field. </summary>
    public partial class MagnitudeScoringFunction : ScoringFunction
    {
        /// <summary> Initializes a new instance of <see cref="MagnitudeScoringFunction"/>. </summary>
        /// <param name="fieldName"> The name of the field used as input to the scoring function. </param>
        /// <param name="boost"> A multiplier for the raw score. Must be a positive number not equal to 1.0. </param>
        /// <param name="parameters"> Parameter values for the magnitude scoring function. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="fieldName"/> or <paramref name="parameters"/> is null. </exception>
        public MagnitudeScoringFunction(string fieldName, double boost, MagnitudeScoringParameters parameters) : base(fieldName, boost)
        {
            Argument.AssertNotNull(fieldName, nameof(fieldName));
            Argument.AssertNotNull(parameters, nameof(parameters));

            Type = "magnitude";
            Parameters = parameters;
        }

        /// <summary> Initializes a new instance of <see cref="MagnitudeScoringFunction"/>. </summary>
        /// <param name="fieldName"> The name of the field used as input to the scoring function. </param>
        /// <param name="boost"> A multiplier for the raw score. Must be a positive number not equal to 1.0. </param>
        /// <param name="interpolation">
        /// A value indicating how boosting will be interpolated across document scores;
        /// defaults to "Linear".
        /// </param>
        /// <param name="type"> Type of ScoringFunction. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="parameters"> Parameter values for the magnitude scoring function. </param>
        internal MagnitudeScoringFunction(string fieldName, double boost, ScoringFunctionInterpolation? interpolation, string type, IDictionary<string, BinaryData> serializedAdditionalRawData, MagnitudeScoringParameters parameters) : base(fieldName, boost, interpolation, type, serializedAdditionalRawData)
        {
            Parameters = parameters;
        }

        /// <summary> Initializes a new instance of <see cref="MagnitudeScoringFunction"/> for deserialization. </summary>
        internal MagnitudeScoringFunction()
        {
        }

        /// <summary> Parameter values for the magnitude scoring function. </summary>
        public MagnitudeScoringParameters Parameters { get; set; }
    }
}
