<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="CreateOrUpdateAsync(string,SearchIndexerSkillset,bool?,bool?,MatchConditions,CancellationToken)">
      <example>
This sample shows how to call CreateOrUpdateAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Skillsets client = new SearchClient(endpoint, credential).GetSkillsetsClient();

SearchIndexerSkillset skillset = new SearchIndexerSkillset("tempskillset", Array.Empty<SearchIndexerSkill>())
{
    Description = "Skillset for extracting entities and more",
    ETag = "0x1234568AE7E58A1",
    EncryptionKey = new SearchResourceEncryptionKey("myUserManagedEncryptionKey-createdinAzureKeyVault", "https://myKeyVault.vault.azure.net")
    {
        KeyVersion = "myKeyVersion-32charAlphaNumericString",
        AccessCredentials = new AzureActiveDirectoryApplicationCredentials("00000000-0000-0000-0000-000000000000")
        {
            ApplicationSecret = "<applicationSecret>",
        },
    },
};
Response<SearchIndexerSkillset> response = await client.CreateOrUpdateAsync("tempskillset", skillset);
]]></code></example>
    </member>
    <member name="CreateOrUpdate(string,SearchIndexerSkillset,bool?,bool?,MatchConditions,CancellationToken)">
      <example>
This sample shows how to call CreateOrUpdate.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Skillsets client = new SearchClient(endpoint, credential).GetSkillsetsClient();

SearchIndexerSkillset skillset = new SearchIndexerSkillset("tempskillset", Array.Empty<SearchIndexerSkill>())
{
    Description = "Skillset for extracting entities and more",
    ETag = "0x1234568AE7E58A1",
    EncryptionKey = new SearchResourceEncryptionKey("myUserManagedEncryptionKey-createdinAzureKeyVault", "https://myKeyVault.vault.azure.net")
    {
        KeyVersion = "myKeyVersion-32charAlphaNumericString",
        AccessCredentials = new AzureActiveDirectoryApplicationCredentials("00000000-0000-0000-0000-000000000000")
        {
            ApplicationSecret = "<applicationSecret>",
        },
    },
};
Response<SearchIndexerSkillset> response = client.CreateOrUpdate("tempskillset", skillset);
]]></code></example>
    </member>
    <member name="CreateOrUpdateAsync(string,RequestContent,bool?,bool?,MatchConditions,RequestContext)">
      <example>
This sample shows how to call CreateOrUpdateAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Skillsets client = new SearchClient(endpoint, credential).GetSkillsetsClient();

using RequestContent content = RequestContent.Create(new Dictionary<string, object>
{
    ["name"] = "tempskillset",
    ["description"] = "Skillset for extracting entities and more",
    ["skills"] = Array.Empty<object>(),
    ["@odata.etag"] = "0x1234568AE7E58A1",
    ["encryptionKey"] = new
    {
        keyVaultKeyName = "myUserManagedEncryptionKey-createdinAzureKeyVault",
        keyVaultKeyVersion = "myKeyVersion-32charAlphaNumericString",
        keyVaultUri = "https://myKeyVault.vault.azure.net",
        accessCredentials = new
        {
            applicationId = "00000000-0000-0000-0000-000000000000",
            applicationSecret = "<applicationSecret>",
        },
    }
});
Response response = await client.CreateOrUpdateAsync("tempskillset", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("skills")[0].GetProperty("@odata.type").ToString());
Console.WriteLine(result.GetProperty("skills")[0].GetProperty("inputs")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("skills")[0].GetProperty("outputs")[0].GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="CreateOrUpdate(string,RequestContent,bool?,bool?,MatchConditions,RequestContext)">
      <example>
This sample shows how to call CreateOrUpdate and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Skillsets client = new SearchClient(endpoint, credential).GetSkillsetsClient();

using RequestContent content = RequestContent.Create(new Dictionary<string, object>
{
    ["name"] = "tempskillset",
    ["description"] = "Skillset for extracting entities and more",
    ["skills"] = Array.Empty<object>(),
    ["@odata.etag"] = "0x1234568AE7E58A1",
    ["encryptionKey"] = new
    {
        keyVaultKeyName = "myUserManagedEncryptionKey-createdinAzureKeyVault",
        keyVaultKeyVersion = "myKeyVersion-32charAlphaNumericString",
        keyVaultUri = "https://myKeyVault.vault.azure.net",
        accessCredentials = new
        {
            applicationId = "00000000-0000-0000-0000-000000000000",
            applicationSecret = "<applicationSecret>",
        },
    }
});
Response response = client.CreateOrUpdate("tempskillset", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("skills")[0].GetProperty("@odata.type").ToString());
Console.WriteLine(result.GetProperty("skills")[0].GetProperty("inputs")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("skills")[0].GetProperty("outputs")[0].GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="DeleteAsync(string,MatchConditions,RequestContext)">
      <example>
This sample shows how to call DeleteAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Skillsets client = new SearchClient(endpoint, credential).GetSkillsetsClient();

Response response = await client.DeleteAsync("tempskillset");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Delete(string,MatchConditions,RequestContext)">
      <example>
This sample shows how to call Delete.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Skillsets client = new SearchClient(endpoint, credential).GetSkillsetsClient();

Response response = client.Delete("tempskillset");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetSkillsetAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetSkillsetAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Skillsets client = new SearchClient(endpoint, credential).GetSkillsetsClient();

Response<SearchIndexerSkillset> response = await client.GetSkillsetAsync("myskillset");
]]></code></example>
    </member>
    <member name="GetSkillset(string,CancellationToken)">
      <example>
This sample shows how to call GetSkillset.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Skillsets client = new SearchClient(endpoint, credential).GetSkillsetsClient();

Response<SearchIndexerSkillset> response = client.GetSkillset("myskillset");
]]></code></example>
    </member>
    <member name="GetSkillsetAsync(string,RequestContext)">
      <example>
This sample shows how to call GetSkillsetAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Skillsets client = new SearchClient(endpoint, credential).GetSkillsetsClient();

Response response = await client.GetSkillsetAsync("myskillset", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("skills")[0].GetProperty("@odata.type").ToString());
Console.WriteLine(result.GetProperty("skills")[0].GetProperty("inputs")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("skills")[0].GetProperty("outputs")[0].GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="GetSkillset(string,RequestContext)">
      <example>
This sample shows how to call GetSkillset and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Skillsets client = new SearchClient(endpoint, credential).GetSkillsetsClient();

Response response = client.GetSkillset("myskillset", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("skills")[0].GetProperty("@odata.type").ToString());
Console.WriteLine(result.GetProperty("skills")[0].GetProperty("inputs")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("skills")[0].GetProperty("outputs")[0].GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="GetSkillsetsAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetSkillsetsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Skillsets client = new SearchClient(endpoint, credential).GetSkillsetsClient();

Response<ListSkillsetsResult> response = await client.GetSkillsetsAsync();
]]></code></example>
    </member>
    <member name="GetSkillsets(string,CancellationToken)">
      <example>
This sample shows how to call GetSkillsets.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Skillsets client = new SearchClient(endpoint, credential).GetSkillsetsClient();

Response<ListSkillsetsResult> response = client.GetSkillsets();
]]></code></example>
    </member>
    <member name="GetSkillsetsAsync(string,RequestContext)">
      <example>
This sample shows how to call GetSkillsetsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Skillsets client = new SearchClient(endpoint, credential).GetSkillsetsClient();

Response response = await client.GetSkillsetsAsync(null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("skills")[0].GetProperty("@odata.type").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("skills")[0].GetProperty("inputs")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("skills")[0].GetProperty("outputs")[0].GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="GetSkillsets(string,RequestContext)">
      <example>
This sample shows how to call GetSkillsets and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Skillsets client = new SearchClient(endpoint, credential).GetSkillsetsClient();

Response response = client.GetSkillsets(null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("skills")[0].GetProperty("@odata.type").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("skills")[0].GetProperty("inputs")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("skills")[0].GetProperty("outputs")[0].GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="CreateAsync(SearchIndexerSkillset,CancellationToken)">
      <example>
This sample shows how to call CreateAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Skillsets client = new SearchClient(endpoint, credential).GetSkillsetsClient();

SearchIndexerSkillset skillset = new SearchIndexerSkillset("tempskillset", Array.Empty<SearchIndexerSkill>())
{
    Description = "Skillset for extracting entities and more",
    ETag = "0x1234568AE7E58A1",
    EncryptionKey = new SearchResourceEncryptionKey("myUserManagedEncryptionKey-createdinAzureKeyVault", "https://myKeyVault.vault.azure.net")
    {
        KeyVersion = "myKeyVersion-32charAlphaNumericString",
        AccessCredentials = new AzureActiveDirectoryApplicationCredentials("00000000-0000-0000-0000-000000000000")
        {
            ApplicationSecret = "<applicationSecret>",
        },
    },
};
Response<SearchIndexerSkillset> response = await client.CreateAsync(skillset);
]]></code></example>
    </member>
    <member name="Create(SearchIndexerSkillset,CancellationToken)">
      <example>
This sample shows how to call Create.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Skillsets client = new SearchClient(endpoint, credential).GetSkillsetsClient();

SearchIndexerSkillset skillset = new SearchIndexerSkillset("tempskillset", Array.Empty<SearchIndexerSkill>())
{
    Description = "Skillset for extracting entities and more",
    ETag = "0x1234568AE7E58A1",
    EncryptionKey = new SearchResourceEncryptionKey("myUserManagedEncryptionKey-createdinAzureKeyVault", "https://myKeyVault.vault.azure.net")
    {
        KeyVersion = "myKeyVersion-32charAlphaNumericString",
        AccessCredentials = new AzureActiveDirectoryApplicationCredentials("00000000-0000-0000-0000-000000000000")
        {
            ApplicationSecret = "<applicationSecret>",
        },
    },
};
Response<SearchIndexerSkillset> response = client.Create(skillset);
]]></code></example>
    </member>
    <member name="CreateAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Skillsets client = new SearchClient(endpoint, credential).GetSkillsetsClient();

using RequestContent content = RequestContent.Create(new Dictionary<string, object>
{
    ["name"] = "tempskillset",
    ["description"] = "Skillset for extracting entities and more",
    ["skills"] = Array.Empty<object>(),
    ["@odata.etag"] = "0x1234568AE7E58A1",
    ["encryptionKey"] = new
    {
        keyVaultKeyName = "myUserManagedEncryptionKey-createdinAzureKeyVault",
        keyVaultKeyVersion = "myKeyVersion-32charAlphaNumericString",
        keyVaultUri = "https://myKeyVault.vault.azure.net",
        accessCredentials = new
        {
            applicationId = "00000000-0000-0000-0000-000000000000",
            applicationSecret = "<applicationSecret>",
        },
    }
});
Response response = await client.CreateAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("skills")[0].GetProperty("@odata.type").ToString());
Console.WriteLine(result.GetProperty("skills")[0].GetProperty("inputs")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("skills")[0].GetProperty("outputs")[0].GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="Create(RequestContent,RequestContext)">
      <example>
This sample shows how to call Create and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Skillsets client = new SearchClient(endpoint, credential).GetSkillsetsClient();

using RequestContent content = RequestContent.Create(new Dictionary<string, object>
{
    ["name"] = "tempskillset",
    ["description"] = "Skillset for extracting entities and more",
    ["skills"] = Array.Empty<object>(),
    ["@odata.etag"] = "0x1234568AE7E58A1",
    ["encryptionKey"] = new
    {
        keyVaultKeyName = "myUserManagedEncryptionKey-createdinAzureKeyVault",
        keyVaultKeyVersion = "myKeyVersion-32charAlphaNumericString",
        keyVaultUri = "https://myKeyVault.vault.azure.net",
        accessCredentials = new
        {
            applicationId = "00000000-0000-0000-0000-000000000000",
            applicationSecret = "<applicationSecret>",
        },
    }
});
Response response = client.Create(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("skills")[0].GetProperty("@odata.type").ToString());
Console.WriteLine(result.GetProperty("skills")[0].GetProperty("inputs")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("skills")[0].GetProperty("outputs")[0].GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="ResetSkillsAsync(string,ResetSkillsOptions,CancellationToken)">
      <example>
This sample shows how to call ResetSkillsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Skillsets client = new SearchClient(endpoint, credential).GetSkillsetsClient();

ResetSkillsOptions resetSkillsOptions = null;
Response response = await client.ResetSkillsAsync("myskillset", resetSkillsOptions);
]]></code></example>
    </member>
    <member name="ResetSkills(string,ResetSkillsOptions,CancellationToken)">
      <example>
This sample shows how to call ResetSkills.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Skillsets client = new SearchClient(endpoint, credential).GetSkillsetsClient();

ResetSkillsOptions resetSkillsOptions = null;
Response response = client.ResetSkills("myskillset", resetSkillsOptions);
]]></code></example>
    </member>
    <member name="ResetSkillsAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call ResetSkillsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Skillsets client = new SearchClient(endpoint, credential).GetSkillsetsClient();

using RequestContent content = RequestContent.Create(new
{
    skillNames = new object[]
    {
        "skill2",
        "skill3",
        "skill4"
    },
});
Response response = await client.ResetSkillsAsync("myskillset", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ResetSkills(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call ResetSkills.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Skillsets client = new SearchClient(endpoint, credential).GetSkillsetsClient();

using RequestContent content = RequestContent.Create(new
{
    skillNames = new object[]
    {
        "skill2",
        "skill3",
        "skill4"
    },
});
Response response = client.ResetSkills("myskillset", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
  </members>
</doc>