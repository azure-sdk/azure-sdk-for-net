<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="CreateAsync(SearchAlias,CancellationToken)">
      <example>
This sample shows how to call CreateAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Aliases client = new SearchClient(endpoint, credential).GetAliasesClient();

SearchAlias @alias = new SearchAlias("tempalias", new string[] { "preview-test" });
Response<SearchAlias> response = await client.CreateAsync(@alias);
]]></code></example>
    </member>
    <member name="Create(SearchAlias,CancellationToken)">
      <example>
This sample shows how to call Create.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Aliases client = new SearchClient(endpoint, credential).GetAliasesClient();

SearchAlias @alias = new SearchAlias("tempalias", new string[] { "preview-test" });
Response<SearchAlias> response = client.Create(@alias);
]]></code></example>
    </member>
    <member name="CreateAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Aliases client = new SearchClient(endpoint, credential).GetAliasesClient();

using RequestContent content = RequestContent.Create(new
{
    name = "tempalias",
    indexes = new object[]
    {
        "preview-test"
    },
});
Response response = await client.CreateAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("indexes")[0].ToString());
]]></code></example>
    </member>
    <member name="Create(RequestContent,RequestContext)">
      <example>
This sample shows how to call Create and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Aliases client = new SearchClient(endpoint, credential).GetAliasesClient();

using RequestContent content = RequestContent.Create(new
{
    name = "tempalias",
    indexes = new object[]
    {
        "preview-test"
    },
});
Response response = client.Create(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("indexes")[0].ToString());
]]></code></example>
    </member>
    <member name="CreateOrUpdateAsync(string,SearchAlias,MatchConditions,CancellationToken)">
      <example>
This sample shows how to call CreateOrUpdateAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Aliases client = new SearchClient(endpoint, credential).GetAliasesClient();

SearchAlias @alias = new SearchAlias("myalias", new string[] { "preview-test" });
Response<SearchAlias> response = await client.CreateOrUpdateAsync("myalias", @alias);
]]></code></example>
    </member>
    <member name="CreateOrUpdate(string,SearchAlias,MatchConditions,CancellationToken)">
      <example>
This sample shows how to call CreateOrUpdate.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Aliases client = new SearchClient(endpoint, credential).GetAliasesClient();

SearchAlias @alias = new SearchAlias("myalias", new string[] { "preview-test" });
Response<SearchAlias> response = client.CreateOrUpdate("myalias", @alias);
]]></code></example>
    </member>
    <member name="CreateOrUpdateAsync(string,RequestContent,MatchConditions,RequestContext)">
      <example>
This sample shows how to call CreateOrUpdateAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Aliases client = new SearchClient(endpoint, credential).GetAliasesClient();

using RequestContent content = RequestContent.Create(new
{
    name = "myalias",
    indexes = new object[]
    {
        "preview-test"
    },
});
Response response = await client.CreateOrUpdateAsync("myalias", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("indexes")[0].ToString());
]]></code></example>
    </member>
    <member name="CreateOrUpdate(string,RequestContent,MatchConditions,RequestContext)">
      <example>
This sample shows how to call CreateOrUpdate and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Aliases client = new SearchClient(endpoint, credential).GetAliasesClient();

using RequestContent content = RequestContent.Create(new
{
    name = "myalias",
    indexes = new object[]
    {
        "preview-test"
    },
});
Response response = client.CreateOrUpdate("myalias", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("indexes")[0].ToString());
]]></code></example>
    </member>
    <member name="DeleteAsync(string,MatchConditions,RequestContext)">
      <example>
This sample shows how to call DeleteAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Aliases client = new SearchClient(endpoint, credential).GetAliasesClient();

Response response = await client.DeleteAsync("tempalias");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Delete(string,MatchConditions,RequestContext)">
      <example>
This sample shows how to call Delete.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Aliases client = new SearchClient(endpoint, credential).GetAliasesClient();

Response response = client.Delete("tempalias");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetAliasesOperationAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetAliasesOperationAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Aliases client = new SearchClient(endpoint, credential).GetAliasesClient();

Response<SearchAlias> response = await client.GetAliasesOperationAsync("myalias");
]]></code></example>
    </member>
    <member name="GetAliasesOperation(string,CancellationToken)">
      <example>
This sample shows how to call GetAliasesOperation.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Aliases client = new SearchClient(endpoint, credential).GetAliasesClient();

Response<SearchAlias> response = client.GetAliasesOperation("myalias");
]]></code></example>
    </member>
    <member name="GetAliasesOperationAsync(string,RequestContext)">
      <example>
This sample shows how to call GetAliasesOperationAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Aliases client = new SearchClient(endpoint, credential).GetAliasesClient();

Response response = await client.GetAliasesOperationAsync("myalias", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("indexes")[0].ToString());
]]></code></example>
    </member>
    <member name="GetAliasesOperation(string,RequestContext)">
      <example>
This sample shows how to call GetAliasesOperation and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Aliases client = new SearchClient(endpoint, credential).GetAliasesClient();

Response response = client.GetAliasesOperation("myalias", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("indexes")[0].ToString());
]]></code></example>
    </member>
    <member name="GetAliasesOperationsAsync(CancellationToken)">
      <example>
This sample shows how to call GetAliasesOperationsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Aliases client = new SearchClient(endpoint, credential).GetAliasesClient();

await foreach (SearchAlias item in client.GetAliasesOperationsAsync())
{
}
]]></code></example>
    </member>
    <member name="GetAliasesOperations(CancellationToken)">
      <example>
This sample shows how to call GetAliasesOperations.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Aliases client = new SearchClient(endpoint, credential).GetAliasesClient();

foreach (SearchAlias item in client.GetAliasesOperations())
{
}
]]></code></example>
    </member>
    <member name="GetAliasesOperationsAsync(RequestContext)">
      <example>
This sample shows how to call GetAliasesOperationsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Aliases client = new SearchClient(endpoint, credential).GetAliasesClient();

await foreach (BinaryData item in client.GetAliasesOperationsAsync(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("indexes")[0].ToString());
}
]]></code></example>
    </member>
    <member name="GetAliasesOperations(RequestContext)">
      <example>
This sample shows how to call GetAliasesOperations and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Aliases client = new SearchClient(endpoint, credential).GetAliasesClient();

foreach (BinaryData item in client.GetAliasesOperations(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("indexes")[0].ToString());
}
]]></code></example>
    </member>
  </members>
</doc>