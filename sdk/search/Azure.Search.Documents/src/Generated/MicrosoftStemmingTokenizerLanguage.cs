// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.Search.Documents
{
    /// <summary> Lists the languages supported by the Microsoft language stemming tokenizer. </summary>
    public readonly partial struct MicrosoftStemmingTokenizerLanguage : IEquatable<MicrosoftStemmingTokenizerLanguage>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="MicrosoftStemmingTokenizerLanguage"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public MicrosoftStemmingTokenizerLanguage(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string ArabicValue = "arabic";
        private const string BanglaValue = "bangla";
        private const string BulgarianValue = "bulgarian";
        private const string CatalanValue = "catalan";
        private const string CroatianValue = "croatian";
        private const string CzechValue = "czech";
        private const string DanishValue = "danish";
        private const string DutchValue = "dutch";
        private const string EnglishValue = "english";
        private const string EstonianValue = "estonian";
        private const string FinnishValue = "finnish";
        private const string FrenchValue = "french";
        private const string GermanValue = "german";
        private const string GreekValue = "greek";
        private const string GujaratiValue = "gujarati";
        private const string HebrewValue = "hebrew";
        private const string HindiValue = "hindi";
        private const string HungarianValue = "hungarian";
        private const string IcelandicValue = "icelandic";
        private const string IndonesianValue = "indonesian";
        private const string ItalianValue = "italian";
        private const string KannadaValue = "kannada";
        private const string LatvianValue = "latvian";
        private const string LithuanianValue = "lithuanian";
        private const string MalayValue = "malay";
        private const string MalayalamValue = "malayalam";
        private const string MarathiValue = "marathi";
        private const string NorwegianBokmaalValue = "norwegianBokmaal";
        private const string PolishValue = "polish";
        private const string PortugueseValue = "portuguese";
        private const string PortugueseBrazilianValue = "portugueseBrazilian";
        private const string PunjabiValue = "punjabi";
        private const string RomanianValue = "romanian";
        private const string RussianValue = "russian";
        private const string SerbianCyrillicValue = "serbianCyrillic";
        private const string SerbianLatinValue = "serbianLatin";
        private const string SlovakValue = "slovak";
        private const string SlovenianValue = "slovenian";
        private const string SpanishValue = "spanish";
        private const string SwedishValue = "swedish";
        private const string TamilValue = "tamil";
        private const string TeluguValue = "telugu";
        private const string TurkishValue = "turkish";
        private const string UkrainianValue = "ukrainian";
        private const string UrduValue = "urdu";

        /// <summary> Selects the Microsoft stemming tokenizer for Arabic. </summary>
        public static MicrosoftStemmingTokenizerLanguage Arabic { get; } = new MicrosoftStemmingTokenizerLanguage(ArabicValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Bangla. </summary>
        public static MicrosoftStemmingTokenizerLanguage Bangla { get; } = new MicrosoftStemmingTokenizerLanguage(BanglaValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Bulgarian. </summary>
        public static MicrosoftStemmingTokenizerLanguage Bulgarian { get; } = new MicrosoftStemmingTokenizerLanguage(BulgarianValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Catalan. </summary>
        public static MicrosoftStemmingTokenizerLanguage Catalan { get; } = new MicrosoftStemmingTokenizerLanguage(CatalanValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Croatian. </summary>
        public static MicrosoftStemmingTokenizerLanguage Croatian { get; } = new MicrosoftStemmingTokenizerLanguage(CroatianValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Czech. </summary>
        public static MicrosoftStemmingTokenizerLanguage Czech { get; } = new MicrosoftStemmingTokenizerLanguage(CzechValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Danish. </summary>
        public static MicrosoftStemmingTokenizerLanguage Danish { get; } = new MicrosoftStemmingTokenizerLanguage(DanishValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Dutch. </summary>
        public static MicrosoftStemmingTokenizerLanguage Dutch { get; } = new MicrosoftStemmingTokenizerLanguage(DutchValue);
        /// <summary> Selects the Microsoft stemming tokenizer for English. </summary>
        public static MicrosoftStemmingTokenizerLanguage English { get; } = new MicrosoftStemmingTokenizerLanguage(EnglishValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Estonian. </summary>
        public static MicrosoftStemmingTokenizerLanguage Estonian { get; } = new MicrosoftStemmingTokenizerLanguage(EstonianValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Finnish. </summary>
        public static MicrosoftStemmingTokenizerLanguage Finnish { get; } = new MicrosoftStemmingTokenizerLanguage(FinnishValue);
        /// <summary> Selects the Microsoft stemming tokenizer for French. </summary>
        public static MicrosoftStemmingTokenizerLanguage French { get; } = new MicrosoftStemmingTokenizerLanguage(FrenchValue);
        /// <summary> Selects the Microsoft stemming tokenizer for German. </summary>
        public static MicrosoftStemmingTokenizerLanguage German { get; } = new MicrosoftStemmingTokenizerLanguage(GermanValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Greek. </summary>
        public static MicrosoftStemmingTokenizerLanguage Greek { get; } = new MicrosoftStemmingTokenizerLanguage(GreekValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Gujarati. </summary>
        public static MicrosoftStemmingTokenizerLanguage Gujarati { get; } = new MicrosoftStemmingTokenizerLanguage(GujaratiValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Hebrew. </summary>
        public static MicrosoftStemmingTokenizerLanguage Hebrew { get; } = new MicrosoftStemmingTokenizerLanguage(HebrewValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Hindi. </summary>
        public static MicrosoftStemmingTokenizerLanguage Hindi { get; } = new MicrosoftStemmingTokenizerLanguage(HindiValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Hungarian. </summary>
        public static MicrosoftStemmingTokenizerLanguage Hungarian { get; } = new MicrosoftStemmingTokenizerLanguage(HungarianValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Icelandic. </summary>
        public static MicrosoftStemmingTokenizerLanguage Icelandic { get; } = new MicrosoftStemmingTokenizerLanguage(IcelandicValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Indonesian. </summary>
        public static MicrosoftStemmingTokenizerLanguage Indonesian { get; } = new MicrosoftStemmingTokenizerLanguage(IndonesianValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Italian. </summary>
        public static MicrosoftStemmingTokenizerLanguage Italian { get; } = new MicrosoftStemmingTokenizerLanguage(ItalianValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Kannada. </summary>
        public static MicrosoftStemmingTokenizerLanguage Kannada { get; } = new MicrosoftStemmingTokenizerLanguage(KannadaValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Latvian. </summary>
        public static MicrosoftStemmingTokenizerLanguage Latvian { get; } = new MicrosoftStemmingTokenizerLanguage(LatvianValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Lithuanian. </summary>
        public static MicrosoftStemmingTokenizerLanguage Lithuanian { get; } = new MicrosoftStemmingTokenizerLanguage(LithuanianValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Malay. </summary>
        public static MicrosoftStemmingTokenizerLanguage Malay { get; } = new MicrosoftStemmingTokenizerLanguage(MalayValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Malayalam. </summary>
        public static MicrosoftStemmingTokenizerLanguage Malayalam { get; } = new MicrosoftStemmingTokenizerLanguage(MalayalamValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Marathi. </summary>
        public static MicrosoftStemmingTokenizerLanguage Marathi { get; } = new MicrosoftStemmingTokenizerLanguage(MarathiValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Norwegian (Bokm√•l). </summary>
        public static MicrosoftStemmingTokenizerLanguage NorwegianBokmaal { get; } = new MicrosoftStemmingTokenizerLanguage(NorwegianBokmaalValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Polish. </summary>
        public static MicrosoftStemmingTokenizerLanguage Polish { get; } = new MicrosoftStemmingTokenizerLanguage(PolishValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Portuguese. </summary>
        public static MicrosoftStemmingTokenizerLanguage Portuguese { get; } = new MicrosoftStemmingTokenizerLanguage(PortugueseValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Portuguese (Brazil). </summary>
        public static MicrosoftStemmingTokenizerLanguage PortugueseBrazilian { get; } = new MicrosoftStemmingTokenizerLanguage(PortugueseBrazilianValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Punjabi. </summary>
        public static MicrosoftStemmingTokenizerLanguage Punjabi { get; } = new MicrosoftStemmingTokenizerLanguage(PunjabiValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Romanian. </summary>
        public static MicrosoftStemmingTokenizerLanguage Romanian { get; } = new MicrosoftStemmingTokenizerLanguage(RomanianValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Russian. </summary>
        public static MicrosoftStemmingTokenizerLanguage Russian { get; } = new MicrosoftStemmingTokenizerLanguage(RussianValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Serbian (Cyrillic). </summary>
        public static MicrosoftStemmingTokenizerLanguage SerbianCyrillic { get; } = new MicrosoftStemmingTokenizerLanguage(SerbianCyrillicValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Serbian (Latin). </summary>
        public static MicrosoftStemmingTokenizerLanguage SerbianLatin { get; } = new MicrosoftStemmingTokenizerLanguage(SerbianLatinValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Slovak. </summary>
        public static MicrosoftStemmingTokenizerLanguage Slovak { get; } = new MicrosoftStemmingTokenizerLanguage(SlovakValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Slovenian. </summary>
        public static MicrosoftStemmingTokenizerLanguage Slovenian { get; } = new MicrosoftStemmingTokenizerLanguage(SlovenianValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Spanish. </summary>
        public static MicrosoftStemmingTokenizerLanguage Spanish { get; } = new MicrosoftStemmingTokenizerLanguage(SpanishValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Swedish. </summary>
        public static MicrosoftStemmingTokenizerLanguage Swedish { get; } = new MicrosoftStemmingTokenizerLanguage(SwedishValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Tamil. </summary>
        public static MicrosoftStemmingTokenizerLanguage Tamil { get; } = new MicrosoftStemmingTokenizerLanguage(TamilValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Telugu. </summary>
        public static MicrosoftStemmingTokenizerLanguage Telugu { get; } = new MicrosoftStemmingTokenizerLanguage(TeluguValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Turkish. </summary>
        public static MicrosoftStemmingTokenizerLanguage Turkish { get; } = new MicrosoftStemmingTokenizerLanguage(TurkishValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Ukrainian. </summary>
        public static MicrosoftStemmingTokenizerLanguage Ukrainian { get; } = new MicrosoftStemmingTokenizerLanguage(UkrainianValue);
        /// <summary> Selects the Microsoft stemming tokenizer for Urdu. </summary>
        public static MicrosoftStemmingTokenizerLanguage Urdu { get; } = new MicrosoftStemmingTokenizerLanguage(UrduValue);
        /// <summary> Determines if two <see cref="MicrosoftStemmingTokenizerLanguage"/> values are the same. </summary>
        public static bool operator ==(MicrosoftStemmingTokenizerLanguage left, MicrosoftStemmingTokenizerLanguage right) => left.Equals(right);
        /// <summary> Determines if two <see cref="MicrosoftStemmingTokenizerLanguage"/> values are not the same. </summary>
        public static bool operator !=(MicrosoftStemmingTokenizerLanguage left, MicrosoftStemmingTokenizerLanguage right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="MicrosoftStemmingTokenizerLanguage"/>. </summary>
        public static implicit operator MicrosoftStemmingTokenizerLanguage(string value) => new MicrosoftStemmingTokenizerLanguage(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is MicrosoftStemmingTokenizerLanguage other && Equals(other);
        /// <inheritdoc />
        public bool Equals(MicrosoftStemmingTokenizerLanguage other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
