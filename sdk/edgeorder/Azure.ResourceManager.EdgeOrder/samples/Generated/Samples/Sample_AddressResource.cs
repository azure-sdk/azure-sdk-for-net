// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.EdgeOrder.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.EdgeOrder.Samples
{
    public partial class Sample_AddressResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_GetAddressByName()
        {
            // Generated from example definition: 2024-02-01/GetAddressByName.json
            // this example is just showing the usage of "AddressResource_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AddressResource created on azure
            // for more information of creating AddressResource, please refer to the document of AddressResource
            string subscriptionId = "eb5dc900-6186-49d8-b7d7-febd866fdc1d";
            string resourceGroupName = "YourResourceGroupName";
            string addressName = "TestAddressName1";
            ResourceIdentifier addressResourceId = AddressResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, addressName);
            AddressResource addressResource = client.GetAddressResource(addressResourceId);

            // invoke the operation
            AddressResource result = await addressResource.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AddressResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_DeleteAddressByName()
        {
            // Generated from example definition: 2024-02-01/DeleteAddressByName.json
            // this example is just showing the usage of "AddressResource_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AddressResource created on azure
            // for more information of creating AddressResource, please refer to the document of AddressResource
            string subscriptionId = "eb5dc900-6186-49d8-b7d7-febd866fdc1d";
            string resourceGroupName = "YourResourceGroupName";
            string addressName = "TestAddressName1";
            ResourceIdentifier addressResourceId = AddressResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, addressName);
            AddressResource addressResource = client.GetAddressResource(addressResourceId);

            // invoke the operation
            await addressResource.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_UpdateAddress()
        {
            // Generated from example definition: 2024-02-01/UpdateAddress.json
            // this example is just showing the usage of "AddressResource_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AddressResource created on azure
            // for more information of creating AddressResource, please refer to the document of AddressResource
            string subscriptionId = "eb5dc900-6186-49d8-b7d7-febd866fdc1d";
            string resourceGroupName = "YourResourceGroupName";
            string addressName = "TestAddressName2";
            ResourceIdentifier addressResourceId = AddressResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, addressName);
            AddressResource addressResource = client.GetAddressResource(addressResourceId);

            // invoke the operation
            AddressResourcePatch patch = new AddressResourcePatch();
            ArmOperation<AddressResource> lro = await addressResource.UpdateAsync(WaitUntil.Completed, patch);
            AddressResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AddressResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
