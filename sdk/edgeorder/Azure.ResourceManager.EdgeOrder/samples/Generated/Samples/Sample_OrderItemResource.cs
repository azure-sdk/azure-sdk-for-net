// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.EdgeOrder.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.EdgeOrder.Samples
{
    public partial class Sample_OrderItemResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_GetOrderItemByName()
        {
            // Generated from example definition: 2024-02-01/GetOrderItemByName.json
            // this example is just showing the usage of "OrderItemResource_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OrderItemResource created on azure
            // for more information of creating OrderItemResource, please refer to the document of OrderItemResource
            string subscriptionId = "eb5dc900-6186-49d8-b7d7-febd866fdc1d";
            string resourceGroupName = "YourResourceGroupName";
            string orderItemName = "TestOrderItemName1";
            ResourceIdentifier orderItemResourceId = OrderItemResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, orderItemName);
            OrderItemResource orderItemResource = client.GetOrderItemResource(orderItemResourceId);

            // invoke the operation
            OrderItemResource result = await orderItemResource.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            OrderItemResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_DeleteOrderItemByName()
        {
            // Generated from example definition: 2024-02-01/DeleteOrderItemByName.json
            // this example is just showing the usage of "OrderItemResource_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OrderItemResource created on azure
            // for more information of creating OrderItemResource, please refer to the document of OrderItemResource
            string subscriptionId = "eb5dc900-6186-49d8-b7d7-febd866fdc1d";
            string resourceGroupName = "YourResourceGroupName";
            string orderItemName = "TestOrderItemName3";
            ResourceIdentifier orderItemResourceId = OrderItemResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, orderItemName);
            OrderItemResource orderItemResource = client.GetOrderItemResource(orderItemResourceId);

            // invoke the operation
            await orderItemResource.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_UpdateOrderItem()
        {
            // Generated from example definition: 2024-02-01/UpdateOrderItem.json
            // this example is just showing the usage of "OrderItemResource_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OrderItemResource created on azure
            // for more information of creating OrderItemResource, please refer to the document of OrderItemResource
            string subscriptionId = "eb5dc900-6186-49d8-b7d7-febd866fdc1d";
            string resourceGroupName = "YourResourceGroupName";
            string orderItemName = "TestOrderItemName3";
            ResourceIdentifier orderItemResourceId = OrderItemResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, orderItemName);
            OrderItemResource orderItemResource = client.GetOrderItemResource(orderItemResourceId);

            // invoke the operation
            OrderItemResourcePatch patch = new OrderItemResourcePatch();
            ArmOperation<OrderItemResource> lro = await orderItemResource.UpdateAsync(WaitUntil.Completed, patch);
            OrderItemResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            OrderItemResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Cancel_CancelOrderItem()
        {
            // Generated from example definition: 2024-02-01/CancelOrderItem.json
            // this example is just showing the usage of "OrderItemResources_Cancel" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OrderItemResource created on azure
            // for more information of creating OrderItemResource, please refer to the document of OrderItemResource
            string subscriptionId = "eb5dc900-6186-49d8-b7d7-febd866fdc1d";
            string resourceGroupName = "YourResourceGroupName";
            string orderItemName = "TestOrderItemName3";
            ResourceIdentifier orderItemResourceId = OrderItemResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, orderItemName);
            OrderItemResource orderItemResource = client.GetOrderItemResource(orderItemResourceId);

            // invoke the operation
            CancellationReason cancellationReason = new CancellationReason(null);
            await orderItemResource.CancelAsync(cancellationReason);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task ReturnOrderItem_ReturnOrderItem()
        {
            // Generated from example definition: 2024-02-01/ReturnOrderItem.json
            // this example is just showing the usage of "OrderItemResources_ReturnOrderItem" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OrderItemResource created on azure
            // for more information of creating OrderItemResource, please refer to the document of OrderItemResource
            string subscriptionId = "eb5dc900-6186-49d8-b7d7-febd866fdc1d";
            string resourceGroupName = "YourResourceGroupName";
            string orderItemName = "TestOrderName4";
            ResourceIdentifier orderItemResourceId = OrderItemResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, orderItemName);
            OrderItemResource orderItemResource = client.GetOrderItemResource(orderItemResourceId);

            // invoke the operation
            ReturnOrderItemDetails details = new ReturnOrderItemDetails(null);
            ArmOperation<OkResponse> lro = await orderItemResource.ReturnOrderItemAsync(WaitUntil.Completed, details);
            OkResponse result = lro.Value;

            Console.WriteLine($"Succeeded: {result}");
        }
    }
}
