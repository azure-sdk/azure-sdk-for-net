<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="CreateOrUpdateAsync(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrUpdateAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
TestRuns client = new ReportingClient(endpoint, credential).GetTestRunsClient(apiVersion: "2025-02-24");

using RequestContent content = RequestContent.Create(new
{
    displayName = "Sample Test Run",
    creationTime = "2024-09-28T12:32:33Z",
    ciConfig = new
    {
        branch = "main",
        author = "John Doe",
        revisionUrl = "https://github.com/azure-rest-api-specs/1234",
    },
    testRunConfig = new
    {
        retryCount = 3,
        repeatEach = 5000,
        testFramework = new
        {
            name = "Playwright",
            version = "3.1.0",
            runnerType = "Nunit",
        },
        shardDetails = new
        {
            total = 5,
        },
        timeoutInMs = 60000L,
        testType = "WebTest",
        testSdkLanguage = "JavaScript",
        servicePackageVersion = "1.0.0-beta.4",
    },
    cloudReportingEnabled = false,
});
Response response = await client.CreateOrUpdateAsync("4eastasia_a56bbc94-fbb7-4c20-9b17-981067e4580a", "123e4567-e89b-12d3-a456-426614174000", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("testRunId").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("creationTime").ToString());
Console.WriteLine(result.GetProperty("creatorId").ToString());
Console.WriteLine(result.GetProperty("creatorName").ToString());
Console.WriteLine(result.GetProperty("cloudRunEnabled").ToString());
Console.WriteLine(result.GetProperty("cloudReportingEnabled").ToString());
]]></code></example>
    </member>
    <member name="CreateOrUpdate(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrUpdate and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
TestRuns client = new ReportingClient(endpoint, credential).GetTestRunsClient(apiVersion: "2025-02-24");

using RequestContent content = RequestContent.Create(new
{
    displayName = "Sample Test Run",
    creationTime = "2024-09-28T12:32:33Z",
    ciConfig = new
    {
        branch = "main",
        author = "John Doe",
        revisionUrl = "https://github.com/azure-rest-api-specs/1234",
    },
    testRunConfig = new
    {
        retryCount = 3,
        repeatEach = 5000,
        testFramework = new
        {
            name = "Playwright",
            version = "3.1.0",
            runnerType = "Nunit",
        },
        shardDetails = new
        {
            total = 5,
        },
        timeoutInMs = 60000L,
        testType = "WebTest",
        testSdkLanguage = "JavaScript",
        servicePackageVersion = "1.0.0-beta.4",
    },
    cloudReportingEnabled = false,
});
Response response = client.CreateOrUpdate("4eastasia_a56bbc94-fbb7-4c20-9b17-981067e4580a", "123e4567-e89b-12d3-a456-426614174000", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("testRunId").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("creationTime").ToString());
Console.WriteLine(result.GetProperty("creatorId").ToString());
Console.WriteLine(result.GetProperty("creatorName").ToString());
Console.WriteLine(result.GetProperty("cloudRunEnabled").ToString());
Console.WriteLine(result.GetProperty("cloudReportingEnabled").ToString());
]]></code></example>
    </member>
    <member name="GetTestRunAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call GetTestRunAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
TestRuns client = new ReportingClient(endpoint, credential).GetTestRunsClient(apiVersion: "2025-02-24");

Response<TestRun> response = await client.GetTestRunAsync("eastasia_a56bbc94-fbb7-4c20-9b17-981067e4580a", "123e4567-e89b-12d3-a456-426614174000");
]]></code></example>
    </member>
    <member name="GetTestRun(string,string,CancellationToken)">
      <example>
This sample shows how to call GetTestRun.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
TestRuns client = new ReportingClient(endpoint, credential).GetTestRunsClient(apiVersion: "2025-02-24");

Response<TestRun> response = client.GetTestRun("eastasia_a56bbc94-fbb7-4c20-9b17-981067e4580a", "123e4567-e89b-12d3-a456-426614174000");
]]></code></example>
    </member>
    <member name="GetTestRunAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetTestRunAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
TestRuns client = new ReportingClient(endpoint, credential).GetTestRunsClient(apiVersion: "2025-02-24");

Response response = await client.GetTestRunAsync("eastasia_a56bbc94-fbb7-4c20-9b17-981067e4580a", "123e4567-e89b-12d3-a456-426614174000", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("testRunId").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("creationTime").ToString());
Console.WriteLine(result.GetProperty("creatorId").ToString());
Console.WriteLine(result.GetProperty("creatorName").ToString());
Console.WriteLine(result.GetProperty("cloudRunEnabled").ToString());
Console.WriteLine(result.GetProperty("cloudReportingEnabled").ToString());
]]></code></example>
    </member>
    <member name="GetTestRun(string,string,RequestContext)">
      <example>
This sample shows how to call GetTestRun and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
TestRuns client = new ReportingClient(endpoint, credential).GetTestRunsClient(apiVersion: "2025-02-24");

Response response = client.GetTestRun("eastasia_a56bbc94-fbb7-4c20-9b17-981067e4580a", "123e4567-e89b-12d3-a456-426614174000", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("testRunId").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("creationTime").ToString());
Console.WriteLine(result.GetProperty("creatorId").ToString());
Console.WriteLine(result.GetProperty("creatorName").ToString());
Console.WriteLine(result.GetProperty("cloudRunEnabled").ToString());
Console.WriteLine(result.GetProperty("cloudReportingEnabled").ToString());
]]></code></example>
    </member>
    <member name="CreateArtifactsUploadBaseUrlAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call CreateArtifactsUploadBaseUrlAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
TestRuns client = new ReportingClient(endpoint, credential).GetTestRunsClient(apiVersion: "2025-02-24");

Response<TestResultsUrl> response = await client.CreateArtifactsUploadBaseUrlAsync("eastasia_a56bbc94-fbb7-4c20-9b17-981067e4580a", "123e4567-e89b-12d3-a456-426614174000");
]]></code></example>
    </member>
    <member name="CreateArtifactsUploadBaseUrl(string,string,CancellationToken)">
      <example>
This sample shows how to call CreateArtifactsUploadBaseUrl.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
TestRuns client = new ReportingClient(endpoint, credential).GetTestRunsClient(apiVersion: "2025-02-24");

Response<TestResultsUrl> response = client.CreateArtifactsUploadBaseUrl("eastasia_a56bbc94-fbb7-4c20-9b17-981067e4580a", "123e4567-e89b-12d3-a456-426614174000");
]]></code></example>
    </member>
    <member name="CreateArtifactsUploadBaseUrlAsync(string,string,RequestContext)">
      <example>
This sample shows how to call CreateArtifactsUploadBaseUrlAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
TestRuns client = new ReportingClient(endpoint, credential).GetTestRunsClient(apiVersion: "2025-02-24");

Response response = await client.CreateArtifactsUploadBaseUrlAsync("eastasia_a56bbc94-fbb7-4c20-9b17-981067e4580a", "123e4567-e89b-12d3-a456-426614174000", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("url").ToString());
Console.WriteLine(result.GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("expiresAt").ToString());
Console.WriteLine(result.GetProperty("accessLevel").ToString());
]]></code></example>
    </member>
    <member name="CreateArtifactsUploadBaseUrl(string,string,RequestContext)">
      <example>
This sample shows how to call CreateArtifactsUploadBaseUrl and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
TestRuns client = new ReportingClient(endpoint, credential).GetTestRunsClient(apiVersion: "2025-02-24");

Response response = client.CreateArtifactsUploadBaseUrl("eastasia_a56bbc94-fbb7-4c20-9b17-981067e4580a", "123e4567-e89b-12d3-a456-426614174000", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("url").ToString());
Console.WriteLine(result.GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("expiresAt").ToString());
Console.WriteLine(result.GetProperty("accessLevel").ToString());
]]></code></example>
    </member>
    <member name="UpdateShardExecutionStatusAsync(string,string,int,UpdateShardExecutionSummary,int,bool?,CancellationToken)">
      <example>
This sample shows how to call UpdateShardExecutionStatusAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
TestRuns client = new ReportingClient(endpoint, credential).GetTestRunsClient(apiVersion: "2025-02-24");

UpdateShardExecutionSummary summary = new UpdateShardExecutionSummary(DateTimeOffset.Parse("8819-10-30T18:52:21Z"), DateTimeOffset.Parse("6230-12-03T14:22:58Z"))
{
    UploadMetadata = new UploadMetadata(100, 100, 48200L),
};
Response response = await client.UpdateShardExecutionStatusAsync("eastasia_a56bbc94-fbb7-4c20-9b17-981067e4580a", "123e4567-e89b-12d3-a456-426614174000", 1, summary, 5);
]]></code></example>
    </member>
    <member name="UpdateShardExecutionStatus(string,string,int,UpdateShardExecutionSummary,int,bool?,CancellationToken)">
      <example>
This sample shows how to call UpdateShardExecutionStatus.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
TestRuns client = new ReportingClient(endpoint, credential).GetTestRunsClient(apiVersion: "2025-02-24");

UpdateShardExecutionSummary summary = new UpdateShardExecutionSummary(DateTimeOffset.Parse("8819-10-30T18:52:21Z"), DateTimeOffset.Parse("6230-12-03T14:22:58Z"))
{
    UploadMetadata = new UploadMetadata(100, 100, 48200L),
};
Response response = client.UpdateShardExecutionStatus("eastasia_a56bbc94-fbb7-4c20-9b17-981067e4580a", "123e4567-e89b-12d3-a456-426614174000", 1, summary, 5);
]]></code></example>
    </member>
    <member name="UpdateShardExecutionStatusAsync(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateShardExecutionStatusAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
TestRuns client = new ReportingClient(endpoint, credential).GetTestRunsClient(apiVersion: "2025-02-24");

using RequestContent content = RequestContent.Create(new
{
    shardId = 1,
    workersCount = 5,
    uploadCompleted = true,
    summary = new
    {
        startTime = "8819-10-30T18:52:21Z",
        endTime = "6230-12-03T14:22:58Z",
        uploadMetadata = new
        {
            testResultsCount = 100,
            totalAttachmentsCount = 100,
            totalAttachmentsSize = 48200L,
        },
    },
});
Response response = await client.UpdateShardExecutionStatusAsync("eastasia_a56bbc94-fbb7-4c20-9b17-981067e4580a", "123e4567-e89b-12d3-a456-426614174000", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="UpdateShardExecutionStatus(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateShardExecutionStatus.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
TestRuns client = new ReportingClient(endpoint, credential).GetTestRunsClient(apiVersion: "2025-02-24");

using RequestContent content = RequestContent.Create(new
{
    shardId = 1,
    workersCount = 5,
    uploadCompleted = true,
    summary = new
    {
        startTime = "8819-10-30T18:52:21Z",
        endTime = "6230-12-03T14:22:58Z",
        uploadMetadata = new
        {
            testResultsCount = 100,
            totalAttachmentsCount = 100,
            totalAttachmentsSize = 48200L,
        },
    },
});
Response response = client.UpdateShardExecutionStatus("eastasia_a56bbc94-fbb7-4c20-9b17-981067e4580a", "123e4567-e89b-12d3-a456-426614174000", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ComputeAccountRunStatsAsync(string,int?,int?,int?,string,CancellationToken)">
      <example>
This sample shows how to call ComputeAccountRunStatsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
TestRuns client = new ReportingClient(endpoint, credential).GetTestRunsClient(apiVersion: "2025-02-24");

Response<AccountTestRunStats> response = await client.ComputeAccountRunStatsAsync("eastasia_a56bbc94-fbb7-4c20-9b17-981067e4580a");
]]></code></example>
    </member>
    <member name="ComputeAccountRunStats(string,int?,int?,int?,string,CancellationToken)">
      <example>
This sample shows how to call ComputeAccountRunStats.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
TestRuns client = new ReportingClient(endpoint, credential).GetTestRunsClient(apiVersion: "2025-02-24");

Response<AccountTestRunStats> response = client.ComputeAccountRunStats("eastasia_a56bbc94-fbb7-4c20-9b17-981067e4580a");
]]></code></example>
    </member>
    <member name="ComputeAccountRunStatsAsync(string,int?,int?,int?,string,RequestContext)">
      <example>
This sample shows how to call ComputeAccountRunStatsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
TestRuns client = new ReportingClient(endpoint, credential).GetTestRunsClient(apiVersion: "2025-02-24");

Response response = await client.ComputeAccountRunStatsAsync("eastasia_a56bbc94-fbb7-4c20-9b17-981067e4580a", 10, 0, 50, "status eq 'FAILED'", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("passed").ToString());
Console.WriteLine(result.GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("flaky").ToString());
Console.WriteLine(result.GetProperty("all").ToString());
Console.WriteLine(result.GetProperty("cloudExecutionRuns").ToString());
]]></code></example>
    </member>
    <member name="ComputeAccountRunStats(string,int?,int?,int?,string,RequestContext)">
      <example>
This sample shows how to call ComputeAccountRunStats and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
TestRuns client = new ReportingClient(endpoint, credential).GetTestRunsClient(apiVersion: "2025-02-24");

Response response = client.ComputeAccountRunStats("eastasia_a56bbc94-fbb7-4c20-9b17-981067e4580a", 10, 0, 50, "status eq 'FAILED'", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("passed").ToString());
Console.WriteLine(result.GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("flaky").ToString());
Console.WriteLine(result.GetProperty("all").ToString());
Console.WriteLine(result.GetProperty("cloudExecutionRuns").ToString());
]]></code></example>
    </member>
    <member name="ComputeMetadataAsync(string,CancellationToken)">
      <example>
This sample shows how to call ComputeMetadataAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
TestRuns client = new ReportingClient(endpoint, credential).GetTestRunsClient(apiVersion: "2025-02-24");

Response<TestRunsMetadata> response = await client.ComputeMetadataAsync("eastasia_a56bbc94-fbb7-4c20-9b17-981067e4580a");
]]></code></example>
    </member>
    <member name="ComputeMetadata(string,CancellationToken)">
      <example>
This sample shows how to call ComputeMetadata.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
TestRuns client = new ReportingClient(endpoint, credential).GetTestRunsClient(apiVersion: "2025-02-24");

Response<TestRunsMetadata> response = client.ComputeMetadata("eastasia_a56bbc94-fbb7-4c20-9b17-981067e4580a");
]]></code></example>
    </member>
    <member name="ComputeMetadataAsync(string,RequestContext)">
      <example>
This sample shows how to call ComputeMetadataAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
TestRuns client = new ReportingClient(endpoint, credential).GetTestRunsClient(apiVersion: "2025-02-24");

Response response = await client.ComputeMetadataAsync("eastasia_a56bbc94-fbb7-4c20-9b17-981067e4580a", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("branches")[0].ToString());
]]></code></example>
    </member>
    <member name="ComputeMetadata(string,RequestContext)">
      <example>
This sample shows how to call ComputeMetadata and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
TestRuns client = new ReportingClient(endpoint, credential).GetTestRunsClient(apiVersion: "2025-02-24");

Response response = client.ComputeMetadata("eastasia_a56bbc94-fbb7-4c20-9b17-981067e4580a", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("branches")[0].ToString());
]]></code></example>
    </member>
    <member name="GetTestRunsAsync(string,int?,int?,int?,string,CancellationToken)">
      <example>
This sample shows how to call GetTestRunsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
TestRuns client = new ReportingClient(endpoint, credential).GetTestRunsClient(apiVersion: "2025-02-24");

await foreach (TestRun item in client.GetTestRunsAsync("eastasia_a56bbc94-fbb7-4c20-9b17-981067e4580a"))
{
}
]]></code></example>
    </member>
    <member name="GetTestRuns(string,int?,int?,int?,string,CancellationToken)">
      <example>
This sample shows how to call GetTestRuns.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
TestRuns client = new ReportingClient(endpoint, credential).GetTestRunsClient(apiVersion: "2025-02-24");

foreach (TestRun item in client.GetTestRuns("eastasia_a56bbc94-fbb7-4c20-9b17-981067e4580a"))
{
}
]]></code></example>
    </member>
    <member name="GetTestRunsAsync(string,int?,int?,int?,string,RequestContext)">
      <example>
This sample shows how to call GetTestRunsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
TestRuns client = new ReportingClient(endpoint, credential).GetTestRunsClient(apiVersion: "2025-02-24");

await foreach (BinaryData item in client.GetTestRunsAsync("eastasia_a56bbc94-fbb7-4c20-9b17-981067e4580a", null, 0, null, "status eq 'Passed'", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("testRunId").ToString());
    Console.WriteLine(result.GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("creationTime").ToString());
    Console.WriteLine(result.GetProperty("creatorId").ToString());
    Console.WriteLine(result.GetProperty("creatorName").ToString());
    Console.WriteLine(result.GetProperty("cloudRunEnabled").ToString());
    Console.WriteLine(result.GetProperty("cloudReportingEnabled").ToString());
}
]]></code></example>
    </member>
    <member name="GetTestRuns(string,int?,int?,int?,string,RequestContext)">
      <example>
This sample shows how to call GetTestRuns and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
TestRuns client = new ReportingClient(endpoint, credential).GetTestRunsClient(apiVersion: "2025-02-24");

foreach (BinaryData item in client.GetTestRuns("eastasia_a56bbc94-fbb7-4c20-9b17-981067e4580a", null, 0, null, "status eq 'Passed'", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("testRunId").ToString());
    Console.WriteLine(result.GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("creationTime").ToString());
    Console.WriteLine(result.GetProperty("creatorId").ToString());
    Console.WriteLine(result.GetProperty("creatorName").ToString());
    Console.WriteLine(result.GetProperty("cloudRunEnabled").ToString());
    Console.WriteLine(result.GetProperty("cloudReportingEnabled").ToString());
}
]]></code></example>
    </member>
  </members>
</doc>