// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Developer.MicrosoftPlaywrightTesting
{
    /// <summary> An account is a parent resource for most of the other service resources. It's directly mapped to an Azure resource. </summary>
    public partial class Account
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="Account"/>. </summary>
        internal Account()
        {
        }

        /// <summary> Initializes a new instance of <see cref="Account"/>. </summary>
        /// <param name="id"> The account id. </param>
        /// <param name="resourceId"> The fully-qualified Azure resource id for the account. </param>
        /// <param name="name"> The account name. </param>
        /// <param name="state"> The state of account - Active | Inactive. </param>
        /// <param name="subscriptionId"> The Azure subscription id for the account. </param>
        /// <param name="subscriptionState"> The Azure subscription state - Registered | Unregistered | Warned | Suspended | Deleted. </param>
        /// <param name="tenantId"> The Azure tenant id of the account. </param>
        /// <param name="location"> The account resource location in Azure, for eg. eastus, southeastasia. </param>
        /// <param name="regionalAffinity"> This property sets the connection region for Playwright client workers to cloud-hosted browsers. If enabled, workers connect to browsers in the closest Azure region, ensuring lower latency. If disabled, workers connect to browsers in the Azure region in which the workspace was initially created. </param>
        /// <param name="scalableExecution"> When enabled, Playwright client workers can connect to cloud-hosted browsers. This can increase the number of parallel workers for a test run, significantly minimizing test completion durations. </param>
        /// <param name="reporting"> When enabled, this feature allows the workspace to upload and display test results, including artifacts like traces and screenshots, in the Playwright portal. This enables faster and more efficient troubleshooting. </param>
        /// <param name="localAuth"> When enabled, this feature allows the workspace to use local auth (through service access token) for executing operations. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal Account(string id, string resourceId, string name, AccountState state, Guid subscriptionId, SubscriptionState subscriptionState, Guid tenantId, string location, EnablementStatus? regionalAffinity, EnablementStatus? scalableExecution, EnablementStatus? reporting, EnablementStatus? localAuth, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Id = id;
            ResourceId = resourceId;
            Name = name;
            State = state;
            SubscriptionId = subscriptionId;
            SubscriptionState = subscriptionState;
            TenantId = tenantId;
            Location = location;
            RegionalAffinity = regionalAffinity;
            ScalableExecution = scalableExecution;
            Reporting = reporting;
            LocalAuth = localAuth;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The account id. </summary>
        public string Id { get; }
        /// <summary> The fully-qualified Azure resource id for the account. </summary>
        public string ResourceId { get; }
        /// <summary> The account name. </summary>
        public string Name { get; }
        /// <summary> The state of account - Active | Inactive. </summary>
        public AccountState State { get; }
        /// <summary> The Azure subscription id for the account. </summary>
        public Guid SubscriptionId { get; }
        /// <summary> The Azure subscription state - Registered | Unregistered | Warned | Suspended | Deleted. </summary>
        public SubscriptionState SubscriptionState { get; }
        /// <summary> The Azure tenant id of the account. </summary>
        public Guid TenantId { get; }
        /// <summary> The account resource location in Azure, for eg. eastus, southeastasia. </summary>
        public string Location { get; }
        /// <summary> This property sets the connection region for Playwright client workers to cloud-hosted browsers. If enabled, workers connect to browsers in the closest Azure region, ensuring lower latency. If disabled, workers connect to browsers in the Azure region in which the workspace was initially created. </summary>
        public EnablementStatus? RegionalAffinity { get; }
        /// <summary> When enabled, Playwright client workers can connect to cloud-hosted browsers. This can increase the number of parallel workers for a test run, significantly minimizing test completion durations. </summary>
        public EnablementStatus? ScalableExecution { get; }
        /// <summary> When enabled, this feature allows the workspace to upload and display test results, including artifacts like traces and screenshots, in the Playwright portal. This enables faster and more efficient troubleshooting. </summary>
        public EnablementStatus? Reporting { get; }
        /// <summary> When enabled, this feature allows the workspace to use local auth (through service access token) for executing operations. </summary>
        public EnablementStatus? LocalAuth { get; }
    }
}
