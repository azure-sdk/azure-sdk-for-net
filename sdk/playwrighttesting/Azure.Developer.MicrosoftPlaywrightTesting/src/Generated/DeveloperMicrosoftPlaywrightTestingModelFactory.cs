// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.Developer.MicrosoftPlaywrightTesting
{
    /// <summary> Model factory for models. </summary>
    public static partial class DeveloperMicrosoftPlaywrightTestingModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="MicrosoftPlaywrightTesting.AccessToken"/>. </summary>
        /// <param name="id"> The access-token id. </param>
        /// <param name="name"> The access-token name. </param>
        /// <param name="jwtToken"> The access-token value in JWT format. </param>
        /// <param name="createdAt"> The access-token createdAt utcDateTime. </param>
        /// <param name="expiryAt"> The access-token expiryAt utcDateTime. </param>
        /// <param name="state"> The access-token state - Active | Expired. </param>
        /// <returns> A new <see cref="MicrosoftPlaywrightTesting.AccessToken"/> instance for mocking. </returns>
        public static AccessToken AccessToken(Guid id = default, string name = null, string jwtToken = null, DateTimeOffset createdAt = default, DateTimeOffset expiryAt = default, AccessTokenState state = default)
        {
            return new AccessToken(
                id,
                name,
                jwtToken,
                createdAt,
                expiryAt,
                state,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="MicrosoftPlaywrightTesting.Account"/>. </summary>
        /// <param name="id"> The account id. </param>
        /// <param name="resourceId"> The fully-qualified Azure resource id for the account. </param>
        /// <param name="name"> The account name. </param>
        /// <param name="state"> The state of account - Active | Inactive. </param>
        /// <param name="subscriptionId"> The Azure subscription id for the account. </param>
        /// <param name="subscriptionState"> The Azure subscription state - Registered | Unregistered | Warned | Suspended | Deleted. </param>
        /// <param name="tenantId"> The Azure tenant id of the account. </param>
        /// <param name="location"> The account resource location in Azure, for eg. eastus, southeastasia. </param>
        /// <param name="regionalAffinity"> This property sets the connection region for Playwright client workers to cloud-hosted browsers. If enabled, workers connect to browsers in the closest Azure region, ensuring lower latency. If disabled, workers connect to browsers in the Azure region in which the workspace was initially created. </param>
        /// <param name="scalableExecution"> When enabled, Playwright client workers can connect to cloud-hosted browsers. This can increase the number of parallel workers for a test run, significantly minimizing test completion durations. </param>
        /// <param name="reporting"> When enabled, this feature allows the workspace to upload and display test results, including artifacts like traces and screenshots, in the Playwright portal. This enables faster and more efficient troubleshooting. </param>
        /// <param name="localAuth"> When enabled, this feature allows the workspace to use local auth (through service access token) for executing operations. </param>
        /// <returns> A new <see cref="MicrosoftPlaywrightTesting.Account"/> instance for mocking. </returns>
        public static Account Account(string id = null, string resourceId = null, string name = null, AccountState state = default, Guid subscriptionId = default, SubscriptionState subscriptionState = default, Guid tenantId = default, string location = null, EnablementStatus? regionalAffinity = null, EnablementStatus? scalableExecution = null, EnablementStatus? reporting = null, EnablementStatus? localAuth = null)
        {
            return new Account(
                id,
                resourceId,
                name,
                state,
                subscriptionId,
                subscriptionState,
                tenantId,
                location,
                regionalAffinity,
                scalableExecution,
                reporting,
                localAuth,
                serializedAdditionalRawData: null);
        }
    }
}
