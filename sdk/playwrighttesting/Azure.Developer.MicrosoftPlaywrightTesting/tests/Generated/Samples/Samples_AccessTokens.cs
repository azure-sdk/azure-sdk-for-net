// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.Developer.MicrosoftPlaywrightTesting.Samples
{
    public partial class Samples_AccessTokens
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AccessToken_CreateOrReplace_AccessTokensCreateOrReplace()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            AccessTokens client = new AuthManagerClient(endpoint, credential).GetAccessTokensClient(apiVersion: "2024-12-01");

            using RequestContent content = RequestContent.Create(new
            {
                id = "00000000-0000-0000-0000-000000000000",
                name = "sampleAccessToken",
                expiryAt = "2022-09-28T12:32:33Z",
            });
            Response response = client.CreateOrReplace("sampleAccountId", Guid.Parse("00000000-0000-0000-0000-000000000000"), content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("expiryAt").ToString());
            Console.WriteLine(result.GetProperty("state").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_AccessToken_CreateOrReplace_AccessTokensCreateOrReplace_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            AccessTokens client = new AuthManagerClient(endpoint, credential).GetAccessTokensClient(apiVersion: "2024-12-01");

            using RequestContent content = RequestContent.Create(new
            {
                id = "00000000-0000-0000-0000-000000000000",
                name = "sampleAccessToken",
                expiryAt = "2022-09-28T12:32:33Z",
            });
            Response response = await client.CreateOrReplaceAsync("sampleAccountId", Guid.Parse("00000000-0000-0000-0000-000000000000"), content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("expiryAt").ToString());
            Console.WriteLine(result.GetProperty("state").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AccessToken_CreateOrReplace_AccessTokensCreateOrReplace_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            AccessTokens client = new AuthManagerClient(endpoint, credential).GetAccessTokensClient(apiVersion: "2024-12-01");

            AccessToken resource = new AccessToken("sampleAccessToken", DateTimeOffset.Parse("2022-09-28T12:32:33Z"));
            Response<AccessToken> response = client.CreateOrReplace("sampleAccountId", Guid.Parse("00000000-0000-0000-0000-000000000000"), resource);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_AccessToken_CreateOrReplace_AccessTokensCreateOrReplace_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            AccessTokens client = new AuthManagerClient(endpoint, credential).GetAccessTokensClient(apiVersion: "2024-12-01");

            AccessToken resource = new AccessToken("sampleAccessToken", DateTimeOffset.Parse("2022-09-28T12:32:33Z"));
            Response<AccessToken> response = await client.CreateOrReplaceAsync("sampleAccountId", Guid.Parse("00000000-0000-0000-0000-000000000000"), resource);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AccessToken_GetAccessToken_AccessTokensGet()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            AccessTokens client = new AuthManagerClient(endpoint, credential).GetAccessTokensClient(apiVersion: "2024-12-01");

            Response response = client.GetAccessToken("sampleAccountId", Guid.Parse("00000000-0000-0000-0000-000000000000"), null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("expiryAt").ToString());
            Console.WriteLine(result.GetProperty("state").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_AccessToken_GetAccessToken_AccessTokensGet_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            AccessTokens client = new AuthManagerClient(endpoint, credential).GetAccessTokensClient(apiVersion: "2024-12-01");

            Response response = await client.GetAccessTokenAsync("sampleAccountId", Guid.Parse("00000000-0000-0000-0000-000000000000"), null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("expiryAt").ToString());
            Console.WriteLine(result.GetProperty("state").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AccessToken_GetAccessToken_AccessTokensGet_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            AccessTokens client = new AuthManagerClient(endpoint, credential).GetAccessTokensClient(apiVersion: "2024-12-01");

            Response<AccessToken> response = client.GetAccessToken("sampleAccountId", Guid.Parse("00000000-0000-0000-0000-000000000000"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_AccessToken_GetAccessToken_AccessTokensGet_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            AccessTokens client = new AuthManagerClient(endpoint, credential).GetAccessTokensClient(apiVersion: "2024-12-01");

            Response<AccessToken> response = await client.GetAccessTokenAsync("sampleAccountId", Guid.Parse("00000000-0000-0000-0000-000000000000"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AccessToken_Delete_AccessTokensDelete()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            AccessTokens client = new AuthManagerClient(endpoint, credential).GetAccessTokensClient(apiVersion: "2024-12-01");

            Response response = client.Delete("sampleAccountId", Guid.Parse("00000000-0000-0000-0000-000000000000"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_AccessToken_Delete_AccessTokensDelete_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            AccessTokens client = new AuthManagerClient(endpoint, credential).GetAccessTokensClient(apiVersion: "2024-12-01");

            Response response = await client.DeleteAsync("sampleAccountId", Guid.Parse("00000000-0000-0000-0000-000000000000"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AccessTokens_Validate_AccessTokensValidate()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            AccessTokens client = new AuthManagerClient(endpoint, credential).GetAccessTokensClient(apiVersion: "2024-12-01");

            Response response = client.Validate("sampleAccountId");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_AccessTokens_Validate_AccessTokensValidate_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            AccessTokens client = new AuthManagerClient(endpoint, credential).GetAccessTokensClient(apiVersion: "2024-12-01");

            Response response = await client.ValidateAsync("sampleAccountId");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AccessToken_GetAccessTokens_AccessTokensList()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            AccessTokens client = new AuthManagerClient(endpoint, credential).GetAccessTokensClient(apiVersion: "2024-12-01");

            foreach (BinaryData item in client.GetAccessTokens("sampleAccountId", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("createdAt").ToString());
                Console.WriteLine(result.GetProperty("expiryAt").ToString());
                Console.WriteLine(result.GetProperty("state").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_AccessToken_GetAccessTokens_AccessTokensList_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            AccessTokens client = new AuthManagerClient(endpoint, credential).GetAccessTokensClient(apiVersion: "2024-12-01");

            await foreach (BinaryData item in client.GetAccessTokensAsync("sampleAccountId", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("createdAt").ToString());
                Console.WriteLine(result.GetProperty("expiryAt").ToString());
                Console.WriteLine(result.GetProperty("state").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AccessToken_GetAccessTokens_AccessTokensList_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            AccessTokens client = new AuthManagerClient(endpoint, credential).GetAccessTokensClient(apiVersion: "2024-12-01");

            foreach (AccessToken item in client.GetAccessTokens("sampleAccountId"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_AccessToken_GetAccessTokens_AccessTokensList_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            AccessTokens client = new AuthManagerClient(endpoint, credential).GetAccessTokensClient(apiVersion: "2024-12-01");

            await foreach (AccessToken item in client.GetAccessTokensAsync("sampleAccountId"))
            {
            }
        }
    }
}
