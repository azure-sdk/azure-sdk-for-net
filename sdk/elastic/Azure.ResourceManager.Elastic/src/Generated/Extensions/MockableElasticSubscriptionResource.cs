// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Autorest.CSharp.Core;
using Azure.Core;
using Azure.Core.Pipeline;
using Azure.ResourceManager.Elastic.Models;

namespace Azure.ResourceManager.Elastic.Mocking
{
    /// <summary> A class to add extension methods to SubscriptionResource. </summary>
    public partial class MockableElasticSubscriptionResource : ArmResource
    {
        private ClientDiagnostics _elasticMonitorResourceClientDiagnostics;
        private ElasticMonitorResourcesRestOperations _elasticMonitorResourceRestClient;
        private ClientDiagnostics _elasticVersionsOperationGroupClientDiagnostics;
        private ElasticVersionsOperationGroupRestOperations _elasticVersionsOperationGroupRestClient;
        private ClientDiagnostics _organizationsOperationGroupClientDiagnostics;
        private OrganizationsOperationGroupRestOperations _organizationsOperationGroupRestClient;

        /// <summary> Initializes a new instance of the <see cref="MockableElasticSubscriptionResource"/> class for mocking. </summary>
        protected MockableElasticSubscriptionResource()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="MockableElasticSubscriptionResource"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableElasticSubscriptionResource(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        private ClientDiagnostics ElasticMonitorResourceClientDiagnostics => _elasticMonitorResourceClientDiagnostics ??= new ClientDiagnostics("Azure.ResourceManager.Elastic", ElasticMonitorResource.ResourceType.Namespace, Diagnostics);
        private ElasticMonitorResourcesRestOperations ElasticMonitorResourceRestClient => _elasticMonitorResourceRestClient ??= new ElasticMonitorResourcesRestOperations(Pipeline, Diagnostics.ApplicationId, Endpoint, GetApiVersionOrNull(ElasticMonitorResource.ResourceType));
        private ClientDiagnostics ElasticVersionsOperationGroupClientDiagnostics => _elasticVersionsOperationGroupClientDiagnostics ??= new ClientDiagnostics("Azure.ResourceManager.Elastic", ProviderConstants.DefaultProviderNamespace, Diagnostics);
        private ElasticVersionsOperationGroupRestOperations ElasticVersionsOperationGroupRestClient => _elasticVersionsOperationGroupRestClient ??= new ElasticVersionsOperationGroupRestOperations(Pipeline, Diagnostics.ApplicationId, Endpoint);
        private ClientDiagnostics OrganizationsOperationGroupClientDiagnostics => _organizationsOperationGroupClientDiagnostics ??= new ClientDiagnostics("Azure.ResourceManager.Elastic", ProviderConstants.DefaultProviderNamespace, Diagnostics);
        private OrganizationsOperationGroupRestOperations OrganizationsOperationGroupRestClient => _organizationsOperationGroupRestClient ??= new OrganizationsOperationGroupRestOperations(Pipeline, Diagnostics.ApplicationId, Endpoint);

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary>
        /// List all monitors under the specified subscription.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.Elastic/monitors</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>ElasticMonitorResource_List</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-01-15-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="ElasticMonitorResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="ElasticMonitorResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual AsyncPageable<ElasticMonitorResource> GetElasticMonitorResourcesAsync(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => ElasticMonitorResourceRestClient.CreateListRequest(Id.SubscriptionId);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => ElasticMonitorResourceRestClient.CreateListNextPageRequest(nextLink, Id.SubscriptionId);
            return GeneratorPageableHelpers.CreateAsyncPageable(FirstPageRequest, NextPageRequest, e => new ElasticMonitorResource(Client, ElasticMonitorResourceData.DeserializeElasticMonitorResourceData(e)), ElasticMonitorResourceClientDiagnostics, Pipeline, "MockableElasticSubscriptionResource.GetElasticMonitorResources", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// List all monitors under the specified subscription.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.Elastic/monitors</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>ElasticMonitorResource_List</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-01-15-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="ElasticMonitorResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="ElasticMonitorResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual Pageable<ElasticMonitorResource> GetElasticMonitorResources(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => ElasticMonitorResourceRestClient.CreateListRequest(Id.SubscriptionId);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => ElasticMonitorResourceRestClient.CreateListNextPageRequest(nextLink, Id.SubscriptionId);
            return GeneratorPageableHelpers.CreatePageable(FirstPageRequest, NextPageRequest, e => new ElasticMonitorResource(Client, ElasticMonitorResourceData.DeserializeElasticMonitorResourceData(e)), ElasticMonitorResourceClientDiagnostics, Pipeline, "MockableElasticSubscriptionResource.GetElasticMonitorResources", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// Get a list of available versions for a region.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.Elastic/elasticVersions</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>ElasticVersionsOperationGroup_List</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-01-15-preview</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="region"> Region where elastic deployment will take place. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="region"/> is null. </exception>
        /// <returns> An async collection of <see cref="ElasticVersionListFormat"/> that may take multiple service requests to iterate over. </returns>
        public virtual AsyncPageable<ElasticVersionListFormat> GetElasticVersionsOperationGroupsAsync(string region, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(region, nameof(region));

            HttpMessage FirstPageRequest(int? pageSizeHint) => ElasticVersionsOperationGroupRestClient.CreateListRequest(Id.SubscriptionId, region);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => ElasticVersionsOperationGroupRestClient.CreateListNextPageRequest(nextLink, Id.SubscriptionId, region);
            return GeneratorPageableHelpers.CreateAsyncPageable(FirstPageRequest, NextPageRequest, e => ElasticVersionListFormat.DeserializeElasticVersionListFormat(e), ElasticVersionsOperationGroupClientDiagnostics, Pipeline, "MockableElasticSubscriptionResource.GetElasticVersionsOperationGroups", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// Get a list of available versions for a region.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.Elastic/elasticVersions</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>ElasticVersionsOperationGroup_List</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-01-15-preview</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="region"> Region where elastic deployment will take place. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="region"/> is null. </exception>
        /// <returns> A collection of <see cref="ElasticVersionListFormat"/> that may take multiple service requests to iterate over. </returns>
        public virtual Pageable<ElasticVersionListFormat> GetElasticVersionsOperationGroups(string region, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(region, nameof(region));

            HttpMessage FirstPageRequest(int? pageSizeHint) => ElasticVersionsOperationGroupRestClient.CreateListRequest(Id.SubscriptionId, region);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => ElasticVersionsOperationGroupRestClient.CreateListNextPageRequest(nextLink, Id.SubscriptionId, region);
            return GeneratorPageableHelpers.CreatePageable(FirstPageRequest, NextPageRequest, e => ElasticVersionListFormat.DeserializeElasticVersionListFormat(e), ElasticVersionsOperationGroupClientDiagnostics, Pipeline, "MockableElasticSubscriptionResource.GetElasticVersionsOperationGroups", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// Fetch User API Key from internal database, if it was generated and stored while creating the Elasticsearch Organization.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.Elastic/getOrganizationApiKey</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>OrganizationsOperationGroup_GetApiKey</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-01-15-preview</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="body"> The request body. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="body"/> is null. </exception>
        public virtual async Task<Response<UserApiKeyResponse>> GetApiKeyOrganizationsOperationGroupAsync(UserEmailId body, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(body, nameof(body));

            using var scope = OrganizationsOperationGroupClientDiagnostics.CreateScope("MockableElasticSubscriptionResource.GetApiKeyOrganizationsOperationGroup");
            scope.Start();
            try
            {
                var response = await OrganizationsOperationGroupRestClient.GetApiKeyAsync(Id.SubscriptionId, body, cancellationToken).ConfigureAwait(false);
                return response;
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// Fetch User API Key from internal database, if it was generated and stored while creating the Elasticsearch Organization.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.Elastic/getOrganizationApiKey</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>OrganizationsOperationGroup_GetApiKey</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-01-15-preview</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="body"> The request body. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="body"/> is null. </exception>
        public virtual Response<UserApiKeyResponse> GetApiKeyOrganizationsOperationGroup(UserEmailId body, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(body, nameof(body));

            using var scope = OrganizationsOperationGroupClientDiagnostics.CreateScope("MockableElasticSubscriptionResource.GetApiKeyOrganizationsOperationGroup");
            scope.Start();
            try
            {
                var response = OrganizationsOperationGroupRestClient.GetApiKey(Id.SubscriptionId, body, cancellationToken);
                return response;
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// &gt;;
        ///   /**
        /// Get Elastic Organization To Azure Subscription Mapping details for the logged-in user.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.Elastic/getElasticOrganizationToAzureSubscriptionMapping</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>OrganizationsOperationGroup_GetElasticToAzureSubscriptionMapping</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-01-15-preview</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response<ElasticOrganizationToAzureSubscriptionMappingResponse>> GetElasticToAzureSubscriptionMappingOrganizationsOperationGroupAsync(CancellationToken cancellationToken = default)
        {
            using var scope = OrganizationsOperationGroupClientDiagnostics.CreateScope("MockableElasticSubscriptionResource.GetElasticToAzureSubscriptionMappingOrganizationsOperationGroup");
            scope.Start();
            try
            {
                var response = await OrganizationsOperationGroupRestClient.GetElasticToAzureSubscriptionMappingAsync(Id.SubscriptionId, cancellationToken).ConfigureAwait(false);
                return response;
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// &gt;;
        ///   /**
        /// Get Elastic Organization To Azure Subscription Mapping details for the logged-in user.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.Elastic/getElasticOrganizationToAzureSubscriptionMapping</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>OrganizationsOperationGroup_GetElasticToAzureSubscriptionMapping</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-01-15-preview</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response<ElasticOrganizationToAzureSubscriptionMappingResponse> GetElasticToAzureSubscriptionMappingOrganizationsOperationGroup(CancellationToken cancellationToken = default)
        {
            using var scope = OrganizationsOperationGroupClientDiagnostics.CreateScope("MockableElasticSubscriptionResource.GetElasticToAzureSubscriptionMappingOrganizationsOperationGroup");
            scope.Start();
            try
            {
                var response = OrganizationsOperationGroupRestClient.GetElasticToAzureSubscriptionMapping(Id.SubscriptionId, cancellationToken);
                return response;
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }
    }
}
