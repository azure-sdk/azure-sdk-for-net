// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.HealthcareApis.Models
{
    /// <summary> A measurement extracted during the Medtech device event normalization process. </summary>
    public partial class MedtechMeasurement
    {
        /// <summary> Initializes a new instance of MedtechMeasurement. </summary>
        internal MedtechMeasurement()
        {
            Properties = new ChangeTrackingList<MedtechMeasurementProperty>();
        }

        /// <summary> Initializes a new instance of MedtechMeasurement. </summary>
        /// <param name="medtechMeasurementType"> The type of measurement being collected. </param>
        /// <param name="correlationId"> The id used to group values into a single observation. </param>
        /// <param name="deviceId"> The id of the device that collected the measurement. </param>
        /// <param name="encounterId"> The id of the encounter. </param>
        /// <param name="occurrenceTimeUtc"> The time that device collected the measurement. </param>
        /// <param name="properties"></param>
        internal MedtechMeasurement(string medtechMeasurementType, string correlationId, string deviceId, string encounterId, DateTimeOffset? occurrenceTimeUtc, IReadOnlyList<MedtechMeasurementProperty> properties)
        {
            MedtechMeasurementType = medtechMeasurementType;
            CorrelationId = correlationId;
            DeviceId = deviceId;
            EncounterId = encounterId;
            OccurrenceTimeUtc = occurrenceTimeUtc;
            Properties = properties;
        }

        /// <summary> The type of measurement being collected. </summary>
        public string MedtechMeasurementType { get; }
        /// <summary> The id used to group values into a single observation. </summary>
        public string CorrelationId { get; }
        /// <summary> The id of the device that collected the measurement. </summary>
        public string DeviceId { get; }
        /// <summary> The id of the encounter. </summary>
        public string EncounterId { get; }
        /// <summary> The time that device collected the measurement. </summary>
        public DateTimeOffset? OccurrenceTimeUtc { get; }
        /// <summary> Gets the properties. </summary>
        public IReadOnlyList<MedtechMeasurementProperty> Properties { get; }
    }
}
