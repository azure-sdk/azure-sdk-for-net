// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.HealthcareApis.Models
{
    /// <summary> An Application configured in the Identity Provider used to access FHIR resources. </summary>
    public partial class SmartIdentityProviderApplication
    {
        /// <summary> Initializes a new instance of <see cref="SmartIdentityProviderApplication"/>. </summary>
        public SmartIdentityProviderApplication()
        {
            AllowedDataActions = new ChangeTrackingList<SmartDataAction>();
        }

        /// <summary> Initializes a new instance of <see cref="SmartIdentityProviderApplication"/>. </summary>
        /// <param name="clientId"> The application client id defined in the identity provider. This value will be used to validate bearer tokens against the given authority. </param>
        /// <param name="audience"> The audience that will be used to validate bearer tokens against the given authority. </param>
        /// <param name="allowedDataActions"> The actions that are permitted to be performed on FHIR resources for the application. </param>
        internal SmartIdentityProviderApplication(string clientId, string audience, IList<SmartDataAction> allowedDataActions)
        {
            ClientId = clientId;
            Audience = audience;
            AllowedDataActions = allowedDataActions;
        }

        /// <summary> The application client id defined in the identity provider. This value will be used to validate bearer tokens against the given authority. </summary>
        public string ClientId { get; set; }
        /// <summary> The audience that will be used to validate bearer tokens against the given authority. </summary>
        public string Audience { get; set; }
        /// <summary> The actions that are permitted to be performed on FHIR resources for the application. </summary>
        public IList<SmartDataAction> AllowedDataActions { get; }
    }
}
