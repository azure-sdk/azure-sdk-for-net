// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.HealthcareApis.Models
{
    public partial class ValidateMedtechMappingsResult
    {
        internal static ValidateMedtechMappingsResult DeserializeValidateMedtechMappingsResult(JsonElement element)
        {
            Optional<ValidateMedtechMappingsResultTemplateResult> templateResult = default;
            Optional<IReadOnlyList<ValidateMedtechMappingsDeviceResult>> deviceResults = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("templateResult"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    templateResult = ValidateMedtechMappingsResultTemplateResult.DeserializeValidateMedtechMappingsResultTemplateResult(property.Value);
                    continue;
                }
                if (property.NameEquals("deviceResults"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ValidateMedtechMappingsDeviceResult> array = new List<ValidateMedtechMappingsDeviceResult>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ValidateMedtechMappingsDeviceResult.DeserializeValidateMedtechMappingsDeviceResult(item));
                    }
                    deviceResults = array;
                    continue;
                }
            }
            return new ValidateMedtechMappingsResult(templateResult.Value, Optional.ToList(deviceResults));
        }
    }
}
