// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.HealthcareApis.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The FHIR service data source for Analytics Connector.
    /// </summary>
    [Newtonsoft.Json.JsonObject("fhirservice")]
    public partial class AnalyticsConnectorFhirServiceDataSource : AnalyticsConnectorDataSource
    {
        /// <summary>
        /// Initializes a new instance of the
        /// AnalyticsConnectorFhirServiceDataSource class.
        /// </summary>
        public AnalyticsConnectorFhirServiceDataSource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// AnalyticsConnectorFhirServiceDataSource class.
        /// </summary>
        /// <param name="url">The URL of FHIR service.</param>
        /// <param name="kind">The kind of FHIR Service. Possible values
        /// include: 'STU3', 'R4'</param>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        public AnalyticsConnectorFhirServiceDataSource(string url, string kind, IDictionary<string, object> additionalProperties = default(IDictionary<string, object>))
            : base(additionalProperties)
        {
            Url = url;
            Kind = kind;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the URL of FHIR service.
        /// </summary>
        [JsonProperty(PropertyName = "url")]
        public string Url { get; set; }

        /// <summary>
        /// Gets or sets the kind of FHIR Service. Possible values include:
        /// 'STU3', 'R4'
        /// </summary>
        [JsonProperty(PropertyName = "kind")]
        public string Kind { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Url == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Url");
            }
            if (Kind == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Kind");
            }
        }
    }
}
