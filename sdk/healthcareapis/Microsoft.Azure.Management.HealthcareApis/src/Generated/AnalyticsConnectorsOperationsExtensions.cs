// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.HealthcareApis
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for AnalyticsConnectorsOperations.
    /// </summary>
    public static partial class AnalyticsConnectorsOperationsExtensions
    {
            /// <summary>
            /// Lists all Analytics Connectors for the given workspace.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the service instance.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of workspace resource.
            /// </param>
            public static IPage<AnalyticsConnector> ListByWorkspace(this IAnalyticsConnectorsOperations operations, string resourceGroupName, string workspaceName)
            {
                return operations.ListByWorkspaceAsync(resourceGroupName, workspaceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists all Analytics Connectors for the given workspace.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the service instance.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of workspace resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<AnalyticsConnector>> ListByWorkspaceAsync(this IAnalyticsConnectorsOperations operations, string resourceGroupName, string workspaceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByWorkspaceWithHttpMessagesAsync(resourceGroupName, workspaceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets the properties of the specified Analytics Connector.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the service instance.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of workspace resource.
            /// </param>
            /// <param name='analyticsConnectorName'>
            /// The name of Analytics Connector resource.
            /// </param>
            public static AnalyticsConnector Get(this IAnalyticsConnectorsOperations operations, string resourceGroupName, string workspaceName, string analyticsConnectorName)
            {
                return operations.GetAsync(resourceGroupName, workspaceName, analyticsConnectorName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the properties of the specified Analytics Connector.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the service instance.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of workspace resource.
            /// </param>
            /// <param name='analyticsConnectorName'>
            /// The name of Analytics Connector resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<AnalyticsConnector> GetAsync(this IAnalyticsConnectorsOperations operations, string resourceGroupName, string workspaceName, string analyticsConnectorName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, workspaceName, analyticsConnectorName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates or updates a Analytics Connector resource with the specified
            /// parameters.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the service instance.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of workspace resource.
            /// </param>
            /// <param name='analyticsConnectorName'>
            /// The name of Analytics Connector resource.
            /// </param>
            /// <param name='analyticsConnector'>
            /// The parameters for creating or updating a Analytics Connector resource.
            /// </param>
            public static AnalyticsConnector CreateOrUpdate(this IAnalyticsConnectorsOperations operations, string resourceGroupName, string workspaceName, string analyticsConnectorName, AnalyticsConnector analyticsConnector)
            {
                return operations.CreateOrUpdateAsync(resourceGroupName, workspaceName, analyticsConnectorName, analyticsConnector).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or updates a Analytics Connector resource with the specified
            /// parameters.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the service instance.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of workspace resource.
            /// </param>
            /// <param name='analyticsConnectorName'>
            /// The name of Analytics Connector resource.
            /// </param>
            /// <param name='analyticsConnector'>
            /// The parameters for creating or updating a Analytics Connector resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<AnalyticsConnector> CreateOrUpdateAsync(this IAnalyticsConnectorsOperations operations, string resourceGroupName, string workspaceName, string analyticsConnectorName, AnalyticsConnector analyticsConnector, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, workspaceName, analyticsConnectorName, analyticsConnector, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes a Analytics Connector.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the service instance.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of workspace resource.
            /// </param>
            /// <param name='analyticsConnectorName'>
            /// The name of Analytics Connector resource.
            /// </param>
            public static void Delete(this IAnalyticsConnectorsOperations operations, string resourceGroupName, string workspaceName, string analyticsConnectorName)
            {
                operations.DeleteAsync(resourceGroupName, workspaceName, analyticsConnectorName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes a Analytics Connector.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the service instance.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of workspace resource.
            /// </param>
            /// <param name='analyticsConnectorName'>
            /// The name of Analytics Connector resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IAnalyticsConnectorsOperations operations, string resourceGroupName, string workspaceName, string analyticsConnectorName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, workspaceName, analyticsConnectorName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Creates or updates a Analytics Connector resource with the specified
            /// parameters.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the service instance.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of workspace resource.
            /// </param>
            /// <param name='analyticsConnectorName'>
            /// The name of Analytics Connector resource.
            /// </param>
            /// <param name='analyticsConnector'>
            /// The parameters for creating or updating a Analytics Connector resource.
            /// </param>
            public static AnalyticsConnector BeginCreateOrUpdate(this IAnalyticsConnectorsOperations operations, string resourceGroupName, string workspaceName, string analyticsConnectorName, AnalyticsConnector analyticsConnector)
            {
                return operations.BeginCreateOrUpdateAsync(resourceGroupName, workspaceName, analyticsConnectorName, analyticsConnector).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or updates a Analytics Connector resource with the specified
            /// parameters.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the service instance.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of workspace resource.
            /// </param>
            /// <param name='analyticsConnectorName'>
            /// The name of Analytics Connector resource.
            /// </param>
            /// <param name='analyticsConnector'>
            /// The parameters for creating or updating a Analytics Connector resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<AnalyticsConnector> BeginCreateOrUpdateAsync(this IAnalyticsConnectorsOperations operations, string resourceGroupName, string workspaceName, string analyticsConnectorName, AnalyticsConnector analyticsConnector, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateOrUpdateWithHttpMessagesAsync(resourceGroupName, workspaceName, analyticsConnectorName, analyticsConnector, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes a Analytics Connector.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the service instance.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of workspace resource.
            /// </param>
            /// <param name='analyticsConnectorName'>
            /// The name of Analytics Connector resource.
            /// </param>
            public static void BeginDelete(this IAnalyticsConnectorsOperations operations, string resourceGroupName, string workspaceName, string analyticsConnectorName)
            {
                operations.BeginDeleteAsync(resourceGroupName, workspaceName, analyticsConnectorName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes a Analytics Connector.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the service instance.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of workspace resource.
            /// </param>
            /// <param name='analyticsConnectorName'>
            /// The name of Analytics Connector resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginDeleteAsync(this IAnalyticsConnectorsOperations operations, string resourceGroupName, string workspaceName, string analyticsConnectorName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, workspaceName, analyticsConnectorName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Lists all Analytics Connectors for the given workspace.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<AnalyticsConnector> ListByWorkspaceNext(this IAnalyticsConnectorsOperations operations, string nextPageLink)
            {
                return operations.ListByWorkspaceNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists all Analytics Connectors for the given workspace.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<AnalyticsConnector>> ListByWorkspaceNextAsync(this IAnalyticsConnectorsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByWorkspaceNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
