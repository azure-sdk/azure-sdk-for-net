// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.Analytics.Defender.Easm
{
    /// <summary> Enum for state in AssetUpdateData. </summary>
    public readonly partial struct AssetUpdateDataState : IEquatable<AssetUpdateDataState>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="AssetUpdateDataState"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public AssetUpdateDataState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string CandidateValue = "candidate";
        private const string ConfirmedValue = "confirmed";
        private const string DismissedValue = "dismissed";
        private const string CandidateInvestigateValue = "candidateInvestigate";
        private const string AssociatedPartnerValue = "associatedPartner";
        private const string AssociatedThirdpartyValue = "associatedThirdparty";

        /// <summary> candidate. </summary>
        public static AssetUpdateDataState Candidate { get; } = new AssetUpdateDataState(CandidateValue);
        /// <summary> confirmed. </summary>
        public static AssetUpdateDataState Confirmed { get; } = new AssetUpdateDataState(ConfirmedValue);
        /// <summary> dismissed. </summary>
        public static AssetUpdateDataState Dismissed { get; } = new AssetUpdateDataState(DismissedValue);
        /// <summary> candidateInvestigate. </summary>
        public static AssetUpdateDataState CandidateInvestigate { get; } = new AssetUpdateDataState(CandidateInvestigateValue);
        /// <summary> associatedPartner. </summary>
        public static AssetUpdateDataState AssociatedPartner { get; } = new AssetUpdateDataState(AssociatedPartnerValue);
        /// <summary> associatedThirdparty. </summary>
        public static AssetUpdateDataState AssociatedThirdparty { get; } = new AssetUpdateDataState(AssociatedThirdpartyValue);
        /// <summary> Determines if two <see cref="AssetUpdateDataState"/> values are the same. </summary>
        public static bool operator ==(AssetUpdateDataState left, AssetUpdateDataState right) => left.Equals(right);
        /// <summary> Determines if two <see cref="AssetUpdateDataState"/> values are not the same. </summary>
        public static bool operator !=(AssetUpdateDataState left, AssetUpdateDataState right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="AssetUpdateDataState"/>. </summary>
        public static implicit operator AssetUpdateDataState(string value) => new AssetUpdateDataState(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is AssetUpdateDataState other && Equals(other);
        /// <inheritdoc />
        public bool Equals(AssetUpdateDataState other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
