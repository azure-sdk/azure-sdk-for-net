// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.AppConfiguration.Models
{
    /// <summary> The snapshot resource scope that the SAS token is authorized to access. </summary>
    public partial class SnapshotSasTokenScope : SasTokenScope
    {
        /// <summary> Initializes a new instance of <see cref="SnapshotSasTokenScope"/>. </summary>
        /// <param name="name"> The name of the snapshot. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> is null. </exception>
        public SnapshotSasTokenScope(string name)
        {
            Argument.AssertNotNull(name, nameof(name));

            Name = name;
            ResourceType = ResourceType.Snapshot;
        }

        /// <summary> Initializes a new instance of <see cref="SnapshotSasTokenScope"/>. </summary>
        /// <param name="resourceType"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="name"> The name of the snapshot. </param>
        internal SnapshotSasTokenScope(ResourceType resourceType, IDictionary<string, BinaryData> serializedAdditionalRawData, string name) : base(resourceType, serializedAdditionalRawData)
        {
            Name = name;
            ResourceType = resourceType;
        }

        /// <summary> Initializes a new instance of <see cref="SnapshotSasTokenScope"/> for deserialization. </summary>
        internal SnapshotSasTokenScope()
        {
        }

        /// <summary> The name of the snapshot. </summary>
        [WirePath("name")]
        public string Name { get; set; }
    }
}
