// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.AppConfiguration.Models
{
    /// <summary> Parameters used for generating SAS token. </summary>
    public partial class SasTokenGenerationContent
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="SasTokenGenerationContent"/>. </summary>
        /// <param name="sasTokenScope">
        /// The data plane resource scope that the SAS token is authorized to access.
        /// Please note <see cref="Models.SasTokenScope"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="KvSasTokenScope"/> and <see cref="SnapshotSasTokenScope"/>.
        /// </param>
        /// <param name="expires"> The time that the SAS token expires in the Universal ISO 8601 DateTime format. Max allowed expiration is 1 year from the time of token creation. </param>
        /// <param name="kind"> The kind of the SAS token. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="sasTokenScope"/> is null. </exception>
        public SasTokenGenerationContent(SasTokenScope sasTokenScope, DateTimeOffset expires, SasKind kind)
        {
            Argument.AssertNotNull(sasTokenScope, nameof(sasTokenScope));

            SasTokenScope = sasTokenScope;
            Expires = expires;
            Kind = kind;
        }

        /// <summary> Initializes a new instance of <see cref="SasTokenGenerationContent"/>. </summary>
        /// <param name="sasTokenScope">
        /// The data plane resource scope that the SAS token is authorized to access.
        /// Please note <see cref="Models.SasTokenScope"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="KvSasTokenScope"/> and <see cref="SnapshotSasTokenScope"/>.
        /// </param>
        /// <param name="expires"> The time that the SAS token expires in the Universal ISO 8601 DateTime format. Max allowed expiration is 1 year from the time of token creation. </param>
        /// <param name="cacheControlMaxAge"> Time (in seconds) for which the data plane response may be cached by clients. App Configuration sets the Cache-Control response header `max-age` to the value that's specified on the SAS token. See [rfc9111](https://www.rfc-editor.org/rfc/rfc9111#name-max-age-2) for more details. </param>
        /// <param name="kind"> The kind of the SAS token. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal SasTokenGenerationContent(SasTokenScope sasTokenScope, DateTimeOffset expires, float? cacheControlMaxAge, SasKind kind, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            SasTokenScope = sasTokenScope;
            Expires = expires;
            CacheControlMaxAge = cacheControlMaxAge;
            Kind = kind;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="SasTokenGenerationContent"/> for deserialization. </summary>
        internal SasTokenGenerationContent()
        {
        }

        /// <summary>
        /// The data plane resource scope that the SAS token is authorized to access.
        /// Please note <see cref="Models.SasTokenScope"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="KvSasTokenScope"/> and <see cref="SnapshotSasTokenScope"/>.
        /// </summary>
        [WirePath("sasTokenScope")]
        public SasTokenScope SasTokenScope { get; }
        /// <summary> The time that the SAS token expires in the Universal ISO 8601 DateTime format. Max allowed expiration is 1 year from the time of token creation. </summary>
        [WirePath("expires")]
        public DateTimeOffset Expires { get; }
        /// <summary> Time (in seconds) for which the data plane response may be cached by clients. App Configuration sets the Cache-Control response header `max-age` to the value that's specified on the SAS token. See [rfc9111](https://www.rfc-editor.org/rfc/rfc9111#name-max-age-2) for more details. </summary>
        [WirePath("cacheControlMaxAge")]
        public float? CacheControlMaxAge { get; set; }
        /// <summary> The kind of the SAS token. </summary>
        [WirePath("kind")]
        public SasKind Kind { get; }
    }
}
