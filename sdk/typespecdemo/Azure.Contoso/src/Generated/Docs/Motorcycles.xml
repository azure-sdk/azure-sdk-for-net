<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetMotorcycleAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call GetMotorcycleAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Motorcycles client = new ServiceClient(credential).GetMotorcyclesClient(apiVersion: "2022-11-01-preview");

Response<Motorcycle> response = await client.GetMotorcycleAsync("<workspaceName>", "<motorcycleId>");
]]></code>
This sample shows how to call GetMotorcycleAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Motorcycles client = new ServiceClient(credential).GetMotorcyclesClient(apiVersion: "2022-11-01-preview");

Response<Motorcycle> response = await client.GetMotorcycleAsync("<workspaceName>", "<motorcycleId>");
]]></code></example>
    </member>
    <member name="GetMotorcycle(string,string,CancellationToken)">
      <example>
This sample shows how to call GetMotorcycle.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Motorcycles client = new ServiceClient(credential).GetMotorcyclesClient(apiVersion: "2022-11-01-preview");

Response<Motorcycle> response = client.GetMotorcycle("<workspaceName>", "<motorcycleId>");
]]></code>
This sample shows how to call GetMotorcycle with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Motorcycles client = new ServiceClient(credential).GetMotorcyclesClient(apiVersion: "2022-11-01-preview");

Response<Motorcycle> response = client.GetMotorcycle("<workspaceName>", "<motorcycleId>");
]]></code></example>
    </member>
    <member name="GetMotorcycleAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetMotorcycleAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Motorcycles client = new ServiceClient(credential).GetMotorcyclesClient(apiVersion: "2022-11-01-preview");

Response response = await client.GetMotorcycleAsync("<workspaceName>", "<motorcycleId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("vehicleKind").ToString());
Console.WriteLine(result.GetProperty("hasEngineBars").ToString());
]]></code>
This sample shows how to call GetMotorcycleAsync with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Motorcycles client = new ServiceClient(credential).GetMotorcyclesClient(apiVersion: "2022-11-01-preview");

Response response = await client.GetMotorcycleAsync("<workspaceName>", "<motorcycleId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("vehicleKind").ToString());
Console.WriteLine(result.GetProperty("hasEngineBars").ToString());
]]></code></example>
    </member>
    <member name="GetMotorcycle(string,string,RequestContext)">
      <example>
This sample shows how to call GetMotorcycle and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Motorcycles client = new ServiceClient(credential).GetMotorcyclesClient(apiVersion: "2022-11-01-preview");

Response response = client.GetMotorcycle("<workspaceName>", "<motorcycleId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("vehicleKind").ToString());
Console.WriteLine(result.GetProperty("hasEngineBars").ToString());
]]></code>
This sample shows how to call GetMotorcycle with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Motorcycles client = new ServiceClient(credential).GetMotorcyclesClient(apiVersion: "2022-11-01-preview");

Response response = client.GetMotorcycle("<workspaceName>", "<motorcycleId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("vehicleKind").ToString());
Console.WriteLine(result.GetProperty("hasEngineBars").ToString());
]]></code></example>
    </member>
    <member name="CreateOrUpdateAsync(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrUpdateAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Motorcycles client = new ServiceClient(credential).GetMotorcyclesClient(apiVersion: "2022-11-01-preview");

using RequestContent content = RequestContent.Create(new
{
    vehicleKind = "Car",
    hasEngineBars = true,
});
Response response = await client.CreateOrUpdateAsync("<workspaceName>", "<motorcycleId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("vehicleKind").ToString());
Console.WriteLine(result.GetProperty("hasEngineBars").ToString());
]]></code>
This sample shows how to call CreateOrUpdateAsync with all parameters and request content and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Motorcycles client = new ServiceClient(credential).GetMotorcyclesClient(apiVersion: "2022-11-01-preview");

using RequestContent content = RequestContent.Create(new
{
    vehicleKind = "Car",
    hasEngineBars = true,
});
Response response = await client.CreateOrUpdateAsync("<workspaceName>", "<motorcycleId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("vehicleKind").ToString());
Console.WriteLine(result.GetProperty("hasEngineBars").ToString());
]]></code></example>
    </member>
    <member name="CreateOrUpdate(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrUpdate and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Motorcycles client = new ServiceClient(credential).GetMotorcyclesClient(apiVersion: "2022-11-01-preview");

using RequestContent content = RequestContent.Create(new
{
    vehicleKind = "Car",
    hasEngineBars = true,
});
Response response = client.CreateOrUpdate("<workspaceName>", "<motorcycleId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("vehicleKind").ToString());
Console.WriteLine(result.GetProperty("hasEngineBars").ToString());
]]></code>
This sample shows how to call CreateOrUpdate with all parameters and request content and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Motorcycles client = new ServiceClient(credential).GetMotorcyclesClient(apiVersion: "2022-11-01-preview");

using RequestContent content = RequestContent.Create(new
{
    vehicleKind = "Car",
    hasEngineBars = true,
});
Response response = client.CreateOrUpdate("<workspaceName>", "<motorcycleId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("vehicleKind").ToString());
Console.WriteLine(result.GetProperty("hasEngineBars").ToString());
]]></code></example>
    </member>
    <member name="GetMotorcyclesAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetMotorcyclesAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Motorcycles client = new ServiceClient(credential).GetMotorcyclesClient(apiVersion: "2022-11-01-preview");

await foreach (Motorcycle item in client.GetMotorcyclesAsync("<workspaceName>"))
{
}
]]></code>
This sample shows how to call GetMotorcyclesAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Motorcycles client = new ServiceClient(credential).GetMotorcyclesClient(apiVersion: "2022-11-01-preview");

await foreach (Motorcycle item in client.GetMotorcyclesAsync("<workspaceName>"))
{
}
]]></code></example>
    </member>
    <member name="GetMotorcycles(string,CancellationToken)">
      <example>
This sample shows how to call GetMotorcycles.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Motorcycles client = new ServiceClient(credential).GetMotorcyclesClient(apiVersion: "2022-11-01-preview");

foreach (Motorcycle item in client.GetMotorcycles("<workspaceName>"))
{
}
]]></code>
This sample shows how to call GetMotorcycles with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Motorcycles client = new ServiceClient(credential).GetMotorcyclesClient(apiVersion: "2022-11-01-preview");

foreach (Motorcycle item in client.GetMotorcycles("<workspaceName>"))
{
}
]]></code></example>
    </member>
    <member name="GetMotorcyclesAsync(string,RequestContext)">
      <example>
This sample shows how to call GetMotorcyclesAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Motorcycles client = new ServiceClient(credential).GetMotorcyclesClient(apiVersion: "2022-11-01-preview");

await foreach (BinaryData item in client.GetMotorcyclesAsync("<workspaceName>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("vehicleKind").ToString());
    Console.WriteLine(result.GetProperty("hasEngineBars").ToString());
}
]]></code>
This sample shows how to call GetMotorcyclesAsync with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Motorcycles client = new ServiceClient(credential).GetMotorcyclesClient(apiVersion: "2022-11-01-preview");

await foreach (BinaryData item in client.GetMotorcyclesAsync("<workspaceName>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("vehicleKind").ToString());
    Console.WriteLine(result.GetProperty("hasEngineBars").ToString());
}
]]></code></example>
    </member>
    <member name="GetMotorcycles(string,RequestContext)">
      <example>
This sample shows how to call GetMotorcycles and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Motorcycles client = new ServiceClient(credential).GetMotorcyclesClient(apiVersion: "2022-11-01-preview");

foreach (BinaryData item in client.GetMotorcycles("<workspaceName>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("vehicleKind").ToString());
    Console.WriteLine(result.GetProperty("hasEngineBars").ToString());
}
]]></code>
This sample shows how to call GetMotorcycles with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Motorcycles client = new ServiceClient(credential).GetMotorcyclesClient(apiVersion: "2022-11-01-preview");

foreach (BinaryData item in client.GetMotorcycles("<workspaceName>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("vehicleKind").ToString());
    Console.WriteLine(result.GetProperty("hasEngineBars").ToString());
}
]]></code></example>
    </member>
  </members>
</doc>