// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.Contoso
{
    /// <summary> Model factory for models. </summary>
    public static partial class ContosoModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="Contoso.Vehicle"/>. </summary>
        /// <param name="id"> The id of the vehicle. </param>
        /// <param name="vehicleKind"> The kind of vehicle. </param>
        /// <param name="manufacturerName"> The name of the vehicle manufacturer. </param>
        /// <param name="modelName"> The model of the vehicle. </param>
        /// <param name="plateNumber"> The model of the vehicle. </param>
        /// <returns> A new <see cref="Contoso.Vehicle"/> instance for mocking. </returns>
        public static Vehicle Vehicle(string id = null, string vehicleKind = "Unknown", string manufacturerName = null, string modelName = null, string plateNumber = null)
        {
            return new UnknownVehicle(
                id,
                vehicleKind,
                manufacturerName,
                modelName,
                plateNumber,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Contoso.Car"/>. </summary>
        /// <param name="id"> The id of the vehicle. </param>
        /// <param name="vehicleKind"> The kind of vehicle, which is a Car. </param>
        /// <param name="numberOfDoors"> The number of doors in the vehicle. </param>
        /// <returns> A new <see cref="Contoso.Car"/> instance for mocking. </returns>
        public static Car Car(string id = null, VehicleKind vehicleKind = default, sbyte numberOfDoors = default)
        {
            return new Car(id, vehicleKind, numberOfDoors, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Contoso.Motorcycle"/>. </summary>
        /// <param name="id"> The id of the motorcycle. </param>
        /// <param name="vehicleKind"> The kind of vehicle, which is a Motorcycle. </param>
        /// <param name="hasEngineBars"> If the motorcycle has a engine bars installed. </param>
        /// <returns> A new <see cref="Contoso.Motorcycle"/> instance for mocking. </returns>
        public static Motorcycle Motorcycle(string id = null, VehicleKind vehicleKind = default, bool hasEngineBars = default)
        {
            return new Motorcycle(id, vehicleKind, hasEngineBars, serializedAdditionalRawData: null);
        }
    }
}
