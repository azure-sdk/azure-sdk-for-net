// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Contoso;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.Contoso.Samples
{
    public partial class Samples_Vehicles
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Vehicle_GetVehicles_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Vehicles client = new ServiceClient(credential).GetVehiclesClient(apiVersion: "2022-11-01-preview");

            foreach (BinaryData item in client.GetVehicles("<workspaceName>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("vehicleKind").ToString());
                Console.WriteLine(result.GetProperty("manufacturerName").ToString());
                Console.WriteLine(result.GetProperty("modelName").ToString());
                Console.WriteLine(result.GetProperty("plateNumber").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Vehicle_GetVehicles_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Vehicles client = new ServiceClient(credential).GetVehiclesClient(apiVersion: "2022-11-01-preview");

            await foreach (BinaryData item in client.GetVehiclesAsync("<workspaceName>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("vehicleKind").ToString());
                Console.WriteLine(result.GetProperty("manufacturerName").ToString());
                Console.WriteLine(result.GetProperty("modelName").ToString());
                Console.WriteLine(result.GetProperty("plateNumber").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Vehicle_GetVehicles_ShortVersion_Convenience()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Vehicles client = new ServiceClient(credential).GetVehiclesClient(apiVersion: "2022-11-01-preview");

            foreach (Vehicle item in client.GetVehicles("<workspaceName>"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Vehicle_GetVehicles_ShortVersion_Convenience_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Vehicles client = new ServiceClient(credential).GetVehiclesClient(apiVersion: "2022-11-01-preview");

            await foreach (Vehicle item in client.GetVehiclesAsync("<workspaceName>"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Vehicle_GetVehicles_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Vehicles client = new ServiceClient(credential).GetVehiclesClient(apiVersion: "2022-11-01-preview");

            foreach (BinaryData item in client.GetVehicles("<workspaceName>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("vehicleKind").ToString());
                Console.WriteLine(result.GetProperty("manufacturerName").ToString());
                Console.WriteLine(result.GetProperty("modelName").ToString());
                Console.WriteLine(result.GetProperty("plateNumber").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Vehicle_GetVehicles_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Vehicles client = new ServiceClient(credential).GetVehiclesClient(apiVersion: "2022-11-01-preview");

            await foreach (BinaryData item in client.GetVehiclesAsync("<workspaceName>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("vehicleKind").ToString());
                Console.WriteLine(result.GetProperty("manufacturerName").ToString());
                Console.WriteLine(result.GetProperty("modelName").ToString());
                Console.WriteLine(result.GetProperty("plateNumber").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Vehicle_GetVehicles_AllParameters_Convenience()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Vehicles client = new ServiceClient(credential).GetVehiclesClient(apiVersion: "2022-11-01-preview");

            foreach (Vehicle item in client.GetVehicles("<workspaceName>"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Vehicle_GetVehicles_AllParameters_Convenience_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Vehicles client = new ServiceClient(credential).GetVehiclesClient(apiVersion: "2022-11-01-preview");

            await foreach (Vehicle item in client.GetVehiclesAsync("<workspaceName>"))
            {
            }
        }
    }
}
