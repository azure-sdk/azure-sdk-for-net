// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Storage.Models
{
    public partial class DualStackEndpointPreference : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(DefaultDualStackEndpoints))
            {
                writer.WritePropertyName("defaultDualStackEndpoints"u8);
                writer.WriteBooleanValue(DefaultDualStackEndpoints.Value);
            }
            if (Optional.IsDefined(PublishIPv4Endpoint))
            {
                writer.WritePropertyName("publishIpv4Endpoint"u8);
                writer.WriteBooleanValue(PublishIPv4Endpoint.Value);
            }
            if (Optional.IsDefined(PublishIPv6Endpoint))
            {
                writer.WritePropertyName("publishIpv6Endpoint"u8);
                writer.WriteBooleanValue(PublishIPv6Endpoint.Value);
            }
            writer.WriteEndObject();
        }

        internal static DualStackEndpointPreference DeserializeDualStackEndpointPreference(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<bool> defaultDualStackEndpoints = default;
            Optional<bool> publishIPv4Endpoint = default;
            Optional<bool> publishIPv6Endpoint = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("defaultDualStackEndpoints"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    defaultDualStackEndpoints = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("publishIpv4Endpoint"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    publishIPv4Endpoint = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("publishIpv6Endpoint"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    publishIPv6Endpoint = property.Value.GetBoolean();
                    continue;
                }
            }
            return new DualStackEndpointPreference(Optional.ToNullable(defaultDualStackEndpoints), Optional.ToNullable(publishIPv4Endpoint), Optional.ToNullable(publishIPv6Endpoint));
        }
    }
}
