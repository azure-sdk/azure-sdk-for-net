// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.RecoveryServicesBackup.Models
{
    /// <summary> Type of workload this item represents. </summary>
    public readonly partial struct DataSourceTypeAutoGenerated3 : IEquatable<DataSourceTypeAutoGenerated3>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="DataSourceTypeAutoGenerated3"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public DataSourceTypeAutoGenerated3(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string InvalidValue = "Invalid";
        private const string VmValue = "VM";
        private const string FileFolderValue = "FileFolder";
        private const string AzureSqlDBValue = "AzureSqlDb";
        private const string SqlDBValue = "SQLDB";
        private const string ExchangeValue = "Exchange";
        private const string SharepointValue = "Sharepoint";
        private const string VMwareVmValue = "VMwareVM";
        private const string SystemStateValue = "SystemState";
        private const string ClientValue = "Client";
        private const string GenericDataSourceValue = "GenericDataSource";
        private const string SqlDataBaseValue = "SQLDataBase";
        private const string AzureFileShareValue = "AzureFileShare";
        private const string SapHanaDatabaseValue = "SAPHanaDatabase";
        private const string SapAseDatabaseValue = "SAPAseDatabase";
        private const string SapHanaDBInstanceValue = "SAPHanaDBInstance";
        private const string OracleDatabaseValue = "OracleDatabase";
        private const string AnyDatabaseValue = "AnyDatabase";

        /// <summary> Invalid. </summary>
        public static DataSourceTypeAutoGenerated3 Invalid { get; } = new DataSourceTypeAutoGenerated3(InvalidValue);
        /// <summary> VM. </summary>
        public static DataSourceTypeAutoGenerated3 Vm { get; } = new DataSourceTypeAutoGenerated3(VmValue);
        /// <summary> FileFolder. </summary>
        public static DataSourceTypeAutoGenerated3 FileFolder { get; } = new DataSourceTypeAutoGenerated3(FileFolderValue);
        /// <summary> AzureSqlDb. </summary>
        public static DataSourceTypeAutoGenerated3 AzureSqlDB { get; } = new DataSourceTypeAutoGenerated3(AzureSqlDBValue);
        /// <summary> SQLDB. </summary>
        public static DataSourceTypeAutoGenerated3 SqlDB { get; } = new DataSourceTypeAutoGenerated3(SqlDBValue);
        /// <summary> Exchange. </summary>
        public static DataSourceTypeAutoGenerated3 Exchange { get; } = new DataSourceTypeAutoGenerated3(ExchangeValue);
        /// <summary> Sharepoint. </summary>
        public static DataSourceTypeAutoGenerated3 Sharepoint { get; } = new DataSourceTypeAutoGenerated3(SharepointValue);
        /// <summary> VMwareVM. </summary>
        public static DataSourceTypeAutoGenerated3 VMwareVm { get; } = new DataSourceTypeAutoGenerated3(VMwareVmValue);
        /// <summary> SystemState. </summary>
        public static DataSourceTypeAutoGenerated3 SystemState { get; } = new DataSourceTypeAutoGenerated3(SystemStateValue);
        /// <summary> Client. </summary>
        public static DataSourceTypeAutoGenerated3 Client { get; } = new DataSourceTypeAutoGenerated3(ClientValue);
        /// <summary> GenericDataSource. </summary>
        public static DataSourceTypeAutoGenerated3 GenericDataSource { get; } = new DataSourceTypeAutoGenerated3(GenericDataSourceValue);
        /// <summary> SQLDataBase. </summary>
        public static DataSourceTypeAutoGenerated3 SqlDataBase { get; } = new DataSourceTypeAutoGenerated3(SqlDataBaseValue);
        /// <summary> AzureFileShare. </summary>
        public static DataSourceTypeAutoGenerated3 AzureFileShare { get; } = new DataSourceTypeAutoGenerated3(AzureFileShareValue);
        /// <summary> SAPHanaDatabase. </summary>
        public static DataSourceTypeAutoGenerated3 SapHanaDatabase { get; } = new DataSourceTypeAutoGenerated3(SapHanaDatabaseValue);
        /// <summary> SAPAseDatabase. </summary>
        public static DataSourceTypeAutoGenerated3 SapAseDatabase { get; } = new DataSourceTypeAutoGenerated3(SapAseDatabaseValue);
        /// <summary> SAPHanaDBInstance. </summary>
        public static DataSourceTypeAutoGenerated3 SapHanaDBInstance { get; } = new DataSourceTypeAutoGenerated3(SapHanaDBInstanceValue);
        /// <summary> OracleDatabase. </summary>
        public static DataSourceTypeAutoGenerated3 OracleDatabase { get; } = new DataSourceTypeAutoGenerated3(OracleDatabaseValue);
        /// <summary> AnyDatabase. </summary>
        public static DataSourceTypeAutoGenerated3 AnyDatabase { get; } = new DataSourceTypeAutoGenerated3(AnyDatabaseValue);
        /// <summary> Determines if two <see cref="DataSourceTypeAutoGenerated3"/> values are the same. </summary>
        public static bool operator ==(DataSourceTypeAutoGenerated3 left, DataSourceTypeAutoGenerated3 right) => left.Equals(right);
        /// <summary> Determines if two <see cref="DataSourceTypeAutoGenerated3"/> values are not the same. </summary>
        public static bool operator !=(DataSourceTypeAutoGenerated3 left, DataSourceTypeAutoGenerated3 right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="DataSourceTypeAutoGenerated3"/>. </summary>
        public static implicit operator DataSourceTypeAutoGenerated3(string value) => new DataSourceTypeAutoGenerated3(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is DataSourceTypeAutoGenerated3 other && Equals(other);
        /// <inheritdoc />
        public bool Equals(DataSourceTypeAutoGenerated3 other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
