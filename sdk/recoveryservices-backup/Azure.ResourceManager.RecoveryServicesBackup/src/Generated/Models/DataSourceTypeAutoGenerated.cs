// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.RecoveryServicesBackup.Models
{
    /// <summary> ProtectedItem Type- VM, SqlDataBase, AzureFileShare etc. </summary>
    public readonly partial struct DataSourceTypeAutoGenerated : IEquatable<DataSourceTypeAutoGenerated>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="DataSourceTypeAutoGenerated"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public DataSourceTypeAutoGenerated(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string InvalidValue = "Invalid";
        private const string VmValue = "VM";
        private const string FileFolderValue = "FileFolder";
        private const string AzureSqlDBValue = "AzureSqlDb";
        private const string SqlDBValue = "SQLDB";
        private const string ExchangeValue = "Exchange";
        private const string SharepointValue = "Sharepoint";
        private const string VMwareVmValue = "VMwareVM";
        private const string SystemStateValue = "SystemState";
        private const string ClientValue = "Client";
        private const string GenericDataSourceValue = "GenericDataSource";
        private const string SqlDataBaseValue = "SQLDataBase";
        private const string AzureFileShareValue = "AzureFileShare";
        private const string SapHanaDatabaseValue = "SAPHanaDatabase";
        private const string SapAseDatabaseValue = "SAPAseDatabase";
        private const string SapHanaDBInstanceValue = "SAPHanaDBInstance";
        private const string OracleDatabaseValue = "OracleDatabase";
        private const string AnyDatabaseValue = "AnyDatabase";

        /// <summary> Invalid. </summary>
        public static DataSourceTypeAutoGenerated Invalid { get; } = new DataSourceTypeAutoGenerated(InvalidValue);
        /// <summary> VM. </summary>
        public static DataSourceTypeAutoGenerated Vm { get; } = new DataSourceTypeAutoGenerated(VmValue);
        /// <summary> FileFolder. </summary>
        public static DataSourceTypeAutoGenerated FileFolder { get; } = new DataSourceTypeAutoGenerated(FileFolderValue);
        /// <summary> AzureSqlDb. </summary>
        public static DataSourceTypeAutoGenerated AzureSqlDB { get; } = new DataSourceTypeAutoGenerated(AzureSqlDBValue);
        /// <summary> SQLDB. </summary>
        public static DataSourceTypeAutoGenerated SqlDB { get; } = new DataSourceTypeAutoGenerated(SqlDBValue);
        /// <summary> Exchange. </summary>
        public static DataSourceTypeAutoGenerated Exchange { get; } = new DataSourceTypeAutoGenerated(ExchangeValue);
        /// <summary> Sharepoint. </summary>
        public static DataSourceTypeAutoGenerated Sharepoint { get; } = new DataSourceTypeAutoGenerated(SharepointValue);
        /// <summary> VMwareVM. </summary>
        public static DataSourceTypeAutoGenerated VMwareVm { get; } = new DataSourceTypeAutoGenerated(VMwareVmValue);
        /// <summary> SystemState. </summary>
        public static DataSourceTypeAutoGenerated SystemState { get; } = new DataSourceTypeAutoGenerated(SystemStateValue);
        /// <summary> Client. </summary>
        public static DataSourceTypeAutoGenerated Client { get; } = new DataSourceTypeAutoGenerated(ClientValue);
        /// <summary> GenericDataSource. </summary>
        public static DataSourceTypeAutoGenerated GenericDataSource { get; } = new DataSourceTypeAutoGenerated(GenericDataSourceValue);
        /// <summary> SQLDataBase. </summary>
        public static DataSourceTypeAutoGenerated SqlDataBase { get; } = new DataSourceTypeAutoGenerated(SqlDataBaseValue);
        /// <summary> AzureFileShare. </summary>
        public static DataSourceTypeAutoGenerated AzureFileShare { get; } = new DataSourceTypeAutoGenerated(AzureFileShareValue);
        /// <summary> SAPHanaDatabase. </summary>
        public static DataSourceTypeAutoGenerated SapHanaDatabase { get; } = new DataSourceTypeAutoGenerated(SapHanaDatabaseValue);
        /// <summary> SAPAseDatabase. </summary>
        public static DataSourceTypeAutoGenerated SapAseDatabase { get; } = new DataSourceTypeAutoGenerated(SapAseDatabaseValue);
        /// <summary> SAPHanaDBInstance. </summary>
        public static DataSourceTypeAutoGenerated SapHanaDBInstance { get; } = new DataSourceTypeAutoGenerated(SapHanaDBInstanceValue);
        /// <summary> OracleDatabase. </summary>
        public static DataSourceTypeAutoGenerated OracleDatabase { get; } = new DataSourceTypeAutoGenerated(OracleDatabaseValue);
        /// <summary> AnyDatabase. </summary>
        public static DataSourceTypeAutoGenerated AnyDatabase { get; } = new DataSourceTypeAutoGenerated(AnyDatabaseValue);
        /// <summary> Determines if two <see cref="DataSourceTypeAutoGenerated"/> values are the same. </summary>
        public static bool operator ==(DataSourceTypeAutoGenerated left, DataSourceTypeAutoGenerated right) => left.Equals(right);
        /// <summary> Determines if two <see cref="DataSourceTypeAutoGenerated"/> values are not the same. </summary>
        public static bool operator !=(DataSourceTypeAutoGenerated left, DataSourceTypeAutoGenerated right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="DataSourceTypeAutoGenerated"/>. </summary>
        public static implicit operator DataSourceTypeAutoGenerated(string value) => new DataSourceTypeAutoGenerated(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is DataSourceTypeAutoGenerated other && Equals(other);
        /// <inheritdoc />
        public bool Equals(DataSourceTypeAutoGenerated other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
