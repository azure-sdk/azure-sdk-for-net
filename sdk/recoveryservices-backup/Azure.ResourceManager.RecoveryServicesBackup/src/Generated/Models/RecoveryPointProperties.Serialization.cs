// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesBackup.Models
{
    public partial class RecoveryPointProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(ExpiryOn))
            {
                writer.WritePropertyName("expiryTime");
                writer.WriteStringValue(ExpiryOn.Value, "O");
            }
            if (Optional.IsDefined(RuleName))
            {
                writer.WritePropertyName("ruleName");
                writer.WriteStringValue(RuleName);
            }
            if (Optional.IsDefined(IsSoftDeleted))
            {
                writer.WritePropertyName("isSoftDeleted");
                writer.WriteBooleanValue(IsSoftDeleted.Value);
            }
            writer.WriteEndObject();
        }

        internal static RecoveryPointProperties DeserializeRecoveryPointProperties(JsonElement element)
        {
            Optional<DateTimeOffset> expiryTime = default;
            Optional<string> ruleName = default;
            Optional<bool> isSoftDeleted = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("expiryTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    expiryTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("ruleName"))
                {
                    ruleName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("isSoftDeleted"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    isSoftDeleted = property.Value.GetBoolean();
                    continue;
                }
            }
            return new RecoveryPointProperties(Optional.ToNullable(expiryTime), ruleName.Value, Optional.ToNullable(isSoftDeleted));
        }
    }
}
