// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.RecoveryServicesBackup.Models
{
    /// <summary> Container Type - VM, SQLPaaS, DPM, AzureFileShare... </summary>
    public readonly partial struct DataSourceTypeAutoGenerated2 : IEquatable<DataSourceTypeAutoGenerated2>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="DataSourceTypeAutoGenerated2"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public DataSourceTypeAutoGenerated2(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string InvalidValue = "Invalid";
        private const string VmValue = "VM";
        private const string FileFolderValue = "FileFolder";
        private const string AzureSqlDBValue = "AzureSqlDb";
        private const string SqlDBValue = "SQLDB";
        private const string ExchangeValue = "Exchange";
        private const string SharepointValue = "Sharepoint";
        private const string VMwareVmValue = "VMwareVM";
        private const string SystemStateValue = "SystemState";
        private const string ClientValue = "Client";
        private const string GenericDataSourceValue = "GenericDataSource";
        private const string SqlDataBaseValue = "SQLDataBase";
        private const string AzureFileShareValue = "AzureFileShare";
        private const string SapHanaDatabaseValue = "SAPHanaDatabase";
        private const string SapAseDatabaseValue = "SAPAseDatabase";
        private const string SapHanaDBInstanceValue = "SAPHanaDBInstance";
        private const string OracleDatabaseValue = "OracleDatabase";
        private const string AnyDatabaseValue = "AnyDatabase";

        /// <summary> Invalid. </summary>
        public static DataSourceTypeAutoGenerated2 Invalid { get; } = new DataSourceTypeAutoGenerated2(InvalidValue);
        /// <summary> VM. </summary>
        public static DataSourceTypeAutoGenerated2 Vm { get; } = new DataSourceTypeAutoGenerated2(VmValue);
        /// <summary> FileFolder. </summary>
        public static DataSourceTypeAutoGenerated2 FileFolder { get; } = new DataSourceTypeAutoGenerated2(FileFolderValue);
        /// <summary> AzureSqlDb. </summary>
        public static DataSourceTypeAutoGenerated2 AzureSqlDB { get; } = new DataSourceTypeAutoGenerated2(AzureSqlDBValue);
        /// <summary> SQLDB. </summary>
        public static DataSourceTypeAutoGenerated2 SqlDB { get; } = new DataSourceTypeAutoGenerated2(SqlDBValue);
        /// <summary> Exchange. </summary>
        public static DataSourceTypeAutoGenerated2 Exchange { get; } = new DataSourceTypeAutoGenerated2(ExchangeValue);
        /// <summary> Sharepoint. </summary>
        public static DataSourceTypeAutoGenerated2 Sharepoint { get; } = new DataSourceTypeAutoGenerated2(SharepointValue);
        /// <summary> VMwareVM. </summary>
        public static DataSourceTypeAutoGenerated2 VMwareVm { get; } = new DataSourceTypeAutoGenerated2(VMwareVmValue);
        /// <summary> SystemState. </summary>
        public static DataSourceTypeAutoGenerated2 SystemState { get; } = new DataSourceTypeAutoGenerated2(SystemStateValue);
        /// <summary> Client. </summary>
        public static DataSourceTypeAutoGenerated2 Client { get; } = new DataSourceTypeAutoGenerated2(ClientValue);
        /// <summary> GenericDataSource. </summary>
        public static DataSourceTypeAutoGenerated2 GenericDataSource { get; } = new DataSourceTypeAutoGenerated2(GenericDataSourceValue);
        /// <summary> SQLDataBase. </summary>
        public static DataSourceTypeAutoGenerated2 SqlDataBase { get; } = new DataSourceTypeAutoGenerated2(SqlDataBaseValue);
        /// <summary> AzureFileShare. </summary>
        public static DataSourceTypeAutoGenerated2 AzureFileShare { get; } = new DataSourceTypeAutoGenerated2(AzureFileShareValue);
        /// <summary> SAPHanaDatabase. </summary>
        public static DataSourceTypeAutoGenerated2 SapHanaDatabase { get; } = new DataSourceTypeAutoGenerated2(SapHanaDatabaseValue);
        /// <summary> SAPAseDatabase. </summary>
        public static DataSourceTypeAutoGenerated2 SapAseDatabase { get; } = new DataSourceTypeAutoGenerated2(SapAseDatabaseValue);
        /// <summary> SAPHanaDBInstance. </summary>
        public static DataSourceTypeAutoGenerated2 SapHanaDBInstance { get; } = new DataSourceTypeAutoGenerated2(SapHanaDBInstanceValue);
        /// <summary> OracleDatabase. </summary>
        public static DataSourceTypeAutoGenerated2 OracleDatabase { get; } = new DataSourceTypeAutoGenerated2(OracleDatabaseValue);
        /// <summary> AnyDatabase. </summary>
        public static DataSourceTypeAutoGenerated2 AnyDatabase { get; } = new DataSourceTypeAutoGenerated2(AnyDatabaseValue);
        /// <summary> Determines if two <see cref="DataSourceTypeAutoGenerated2"/> values are the same. </summary>
        public static bool operator ==(DataSourceTypeAutoGenerated2 left, DataSourceTypeAutoGenerated2 right) => left.Equals(right);
        /// <summary> Determines if two <see cref="DataSourceTypeAutoGenerated2"/> values are not the same. </summary>
        public static bool operator !=(DataSourceTypeAutoGenerated2 left, DataSourceTypeAutoGenerated2 right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="DataSourceTypeAutoGenerated2"/>. </summary>
        public static implicit operator DataSourceTypeAutoGenerated2(string value) => new DataSourceTypeAutoGenerated2(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is DataSourceTypeAutoGenerated2 other && Equals(other);
        /// <inheritdoc />
        public bool Equals(DataSourceTypeAutoGenerated2 other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
