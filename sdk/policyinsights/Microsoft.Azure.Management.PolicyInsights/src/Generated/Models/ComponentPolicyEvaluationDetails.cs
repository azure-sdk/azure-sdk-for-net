// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.PolicyInsights.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Policy evaluation details.
    /// </summary>
    public partial class ComponentPolicyEvaluationDetails
    {
        /// <summary>
        /// Initializes a new instance of the ComponentPolicyEvaluationDetails
        /// class.
        /// </summary>
        public ComponentPolicyEvaluationDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ComponentPolicyEvaluationDetails
        /// class.
        /// </summary>
        /// <param name="evaluatedExpressions">Details of the evaluated
        /// expressions.</param>
        /// <param name="reason">Additional textual reason for the evaluation
        /// outcome.</param>
        public ComponentPolicyEvaluationDetails(IList<ComponentExpressionEvaluationDetails> evaluatedExpressions = default(IList<ComponentExpressionEvaluationDetails>), string reason = default(string))
        {
            EvaluatedExpressions = evaluatedExpressions;
            Reason = reason;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets details of the evaluated expressions.
        /// </summary>
        [JsonProperty(PropertyName = "evaluatedExpressions")]
        public IList<ComponentExpressionEvaluationDetails> EvaluatedExpressions { get; private set; }

        /// <summary>
        /// Gets or sets additional textual reason for the evaluation outcome.
        /// </summary>
        [JsonProperty(PropertyName = "reason")]
        public string Reason { get; set; }

    }
}
