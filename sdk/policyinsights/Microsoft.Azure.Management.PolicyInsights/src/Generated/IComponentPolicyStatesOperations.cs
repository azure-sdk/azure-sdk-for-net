// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.PolicyInsights
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// ComponentPolicyStatesOperations operations.
    /// </summary>
    public partial interface IComponentPolicyStatesOperations
    {
        /// <summary>
        /// Queries component policy states under subscription scope.
        /// </summary>
        /// <param name='subscriptionId'>
        /// Microsoft Azure subscription ID.
        /// </param>
        /// <param name='top'>
        /// Maximum number of records to return.
        /// </param>
        /// <param name='orderBy'>
        /// Ordering expression using OData notation. One or more
        /// comma-separated column names with an optional "desc" (the default)
        /// or "asc", e.g. "$orderby=PolicyAssignmentId, ResourceId asc".
        /// </param>
        /// <param name='select'>
        /// Select expression using OData notation. Limits the columns on each
        /// record to just those requested, e.g. "$select=PolicyAssignmentId,
        /// ResourceId".
        /// </param>
        /// <param name='fromParameter'>
        /// ISO 8601 formatted timestamp specifying the start time of the
        /// interval to query. When not specified, the service uses ($to -
        /// 1-day).
        /// </param>
        /// <param name='to'>
        /// ISO 8601 formatted timestamp specifying the end time of the
        /// interval to query. When not specified, the service uses request
        /// time.
        /// </param>
        /// <param name='filter'>
        /// OData filter expression.
        /// </param>
        /// <param name='apply'>
        /// OData apply expression for aggregations.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<ComponentPolicyStatesQueryResults>> ListQueryResultsForSubscriptionWithHttpMessagesAsync(string subscriptionId, int? top = default(int?), string orderBy = default(string), string select = default(string), System.DateTime? fromParameter = default(System.DateTime?), System.DateTime? to = default(System.DateTime?), string filter = default(string), string apply = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Queries component policy states under resource group scope.
        /// </summary>
        /// <param name='subscriptionId'>
        /// Microsoft Azure subscription ID.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Resource group name.
        /// </param>
        /// <param name='top'>
        /// Maximum number of records to return.
        /// </param>
        /// <param name='orderBy'>
        /// Ordering expression using OData notation. One or more
        /// comma-separated column names with an optional "desc" (the default)
        /// or "asc", e.g. "$orderby=PolicyAssignmentId, ResourceId asc".
        /// </param>
        /// <param name='select'>
        /// Select expression using OData notation. Limits the columns on each
        /// record to just those requested, e.g. "$select=PolicyAssignmentId,
        /// ResourceId".
        /// </param>
        /// <param name='fromParameter'>
        /// ISO 8601 formatted timestamp specifying the start time of the
        /// interval to query. When not specified, the service uses ($to -
        /// 1-day).
        /// </param>
        /// <param name='to'>
        /// ISO 8601 formatted timestamp specifying the end time of the
        /// interval to query. When not specified, the service uses request
        /// time.
        /// </param>
        /// <param name='filter'>
        /// OData filter expression.
        /// </param>
        /// <param name='apply'>
        /// OData apply expression for aggregations.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<ComponentPolicyStatesQueryResults>> ListQueryResultsForResourceGroupWithHttpMessagesAsync(string subscriptionId, string resourceGroupName, int? top = default(int?), string orderBy = default(string), string select = default(string), System.DateTime? fromParameter = default(System.DateTime?), System.DateTime? to = default(System.DateTime?), string filter = default(string), string apply = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Queries component policy states for the resource.
        /// </summary>
        /// <param name='resourceId'>
        /// Resource ID.
        /// </param>
        /// <param name='top'>
        /// Maximum number of records to return.
        /// </param>
        /// <param name='orderBy'>
        /// Ordering expression using OData notation. One or more
        /// comma-separated column names with an optional "desc" (the default)
        /// or "asc", e.g. "$orderby=PolicyAssignmentId, ResourceId asc".
        /// </param>
        /// <param name='select'>
        /// Select expression using OData notation. Limits the columns on each
        /// record to just those requested, e.g. "$select=PolicyAssignmentId,
        /// ResourceId".
        /// </param>
        /// <param name='fromParameter'>
        /// ISO 8601 formatted timestamp specifying the start time of the
        /// interval to query. When not specified, the service uses ($to -
        /// 1-day).
        /// </param>
        /// <param name='to'>
        /// ISO 8601 formatted timestamp specifying the end time of the
        /// interval to query. When not specified, the service uses request
        /// time.
        /// </param>
        /// <param name='filter'>
        /// OData filter expression.
        /// </param>
        /// <param name='apply'>
        /// OData apply expression for aggregations.
        /// </param>
        /// <param name='expand'>
        /// The $expand query parameter.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<ComponentPolicyStatesQueryResults>> ListQueryResultsForResourceWithHttpMessagesAsync(string resourceId, int? top = default(int?), string orderBy = default(string), string select = default(string), System.DateTime? fromParameter = default(System.DateTime?), System.DateTime? to = default(System.DateTime?), string filter = default(string), string apply = default(string), string expand = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Queries component policy states for the subscription level policy
        /// definition.
        /// </summary>
        /// <param name='subscriptionId'>
        /// Microsoft Azure subscription ID.
        /// </param>
        /// <param name='policyDefinitionName'>
        /// Policy definition name.
        /// </param>
        /// <param name='top'>
        /// Maximum number of records to return.
        /// </param>
        /// <param name='orderBy'>
        /// Ordering expression using OData notation. One or more
        /// comma-separated column names with an optional "desc" (the default)
        /// or "asc", e.g. "$orderby=PolicyAssignmentId, ResourceId asc".
        /// </param>
        /// <param name='select'>
        /// Select expression using OData notation. Limits the columns on each
        /// record to just those requested, e.g. "$select=PolicyAssignmentId,
        /// ResourceId".
        /// </param>
        /// <param name='fromParameter'>
        /// ISO 8601 formatted timestamp specifying the start time of the
        /// interval to query. When not specified, the service uses ($to -
        /// 1-day).
        /// </param>
        /// <param name='to'>
        /// ISO 8601 formatted timestamp specifying the end time of the
        /// interval to query. When not specified, the service uses request
        /// time.
        /// </param>
        /// <param name='filter'>
        /// OData filter expression.
        /// </param>
        /// <param name='apply'>
        /// OData apply expression for aggregations.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<ComponentPolicyStatesQueryResults>> ListQueryResultsForPolicyDefinitionWithHttpMessagesAsync(string subscriptionId, string policyDefinitionName, int? top = default(int?), string orderBy = default(string), string select = default(string), System.DateTime? fromParameter = default(System.DateTime?), System.DateTime? to = default(System.DateTime?), string filter = default(string), string apply = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Queries component policy states for the subscription level policy
        /// assignment.
        /// </summary>
        /// <param name='subscriptionId'>
        /// Microsoft Azure subscription ID.
        /// </param>
        /// <param name='policyAssignmentName'>
        /// Policy assignment name.
        /// </param>
        /// <param name='top'>
        /// Maximum number of records to return.
        /// </param>
        /// <param name='orderBy'>
        /// Ordering expression using OData notation. One or more
        /// comma-separated column names with an optional "desc" (the default)
        /// or "asc", e.g. "$orderby=PolicyAssignmentId, ResourceId asc".
        /// </param>
        /// <param name='select'>
        /// Select expression using OData notation. Limits the columns on each
        /// record to just those requested, e.g. "$select=PolicyAssignmentId,
        /// ResourceId".
        /// </param>
        /// <param name='fromParameter'>
        /// ISO 8601 formatted timestamp specifying the start time of the
        /// interval to query. When not specified, the service uses ($to -
        /// 1-day).
        /// </param>
        /// <param name='to'>
        /// ISO 8601 formatted timestamp specifying the end time of the
        /// interval to query. When not specified, the service uses request
        /// time.
        /// </param>
        /// <param name='filter'>
        /// OData filter expression.
        /// </param>
        /// <param name='apply'>
        /// OData apply expression for aggregations.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<ComponentPolicyStatesQueryResults>> ListQueryResultsForSubscriptionLevelPolicyAssignmentWithHttpMessagesAsync(string subscriptionId, string policyAssignmentName, int? top = default(int?), string orderBy = default(string), string select = default(string), System.DateTime? fromParameter = default(System.DateTime?), System.DateTime? to = default(System.DateTime?), string filter = default(string), string apply = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Queries component policy states for the resource group level policy
        /// assignment.
        /// </summary>
        /// <param name='subscriptionId'>
        /// Microsoft Azure subscription ID.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Resource group name.
        /// </param>
        /// <param name='policyAssignmentName'>
        /// Policy assignment name.
        /// </param>
        /// <param name='top'>
        /// Maximum number of records to return.
        /// </param>
        /// <param name='orderBy'>
        /// Ordering expression using OData notation. One or more
        /// comma-separated column names with an optional "desc" (the default)
        /// or "asc", e.g. "$orderby=PolicyAssignmentId, ResourceId asc".
        /// </param>
        /// <param name='select'>
        /// Select expression using OData notation. Limits the columns on each
        /// record to just those requested, e.g. "$select=PolicyAssignmentId,
        /// ResourceId".
        /// </param>
        /// <param name='fromParameter'>
        /// ISO 8601 formatted timestamp specifying the start time of the
        /// interval to query. When not specified, the service uses ($to -
        /// 1-day).
        /// </param>
        /// <param name='to'>
        /// ISO 8601 formatted timestamp specifying the end time of the
        /// interval to query. When not specified, the service uses request
        /// time.
        /// </param>
        /// <param name='filter'>
        /// OData filter expression.
        /// </param>
        /// <param name='apply'>
        /// OData apply expression for aggregations.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<ComponentPolicyStatesQueryResults>> ListQueryResultsForResourceGroupLevelPolicyAssignmentWithHttpMessagesAsync(string subscriptionId, string resourceGroupName, string policyAssignmentName, int? top = default(int?), string orderBy = default(string), string select = default(string), System.DateTime? fromParameter = default(System.DateTime?), System.DateTime? to = default(System.DateTime?), string filter = default(string), string apply = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
