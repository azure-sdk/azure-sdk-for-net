// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.VoiceServices;

namespace Azure.ResourceManager.VoiceServices.Models
{
    /// <summary> Model factory for models. </summary>
    public static partial class ArmVoiceServicesModelFactory
    {
        /// <summary> Initializes a new instance of VoiceServicesCommunicationsGatewayData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="identity"> The managed service identities assigned to this resource. </param>
        /// <param name="sku"> The SKU (Stock Keeping Unit) assigned to this resource. </param>
        /// <param name="provisioningState"> Resource provisioning state. </param>
        /// <param name="status"> The current status of the deployment. </param>
        /// <param name="serviceLocations"> The regions in which to deploy the resources needed for Teams Calling. </param>
        /// <param name="connectivity"> How to connect back to the operator network, e.g. MAPS. </param>
        /// <param name="codecs"> Voice codecs to support. </param>
        /// <param name="e911Type"> How to handle 911 calls. </param>
        /// <param name="platforms"> What platforms to support. </param>
        /// <param name="apiBridge"> Details of API bridge functionality, if required. </param>
        /// <param name="autoGeneratedDomainNameLabelScope"> The scope at which the auto-generated domain name can be re-used. </param>
        /// <param name="autoGeneratedDomainNameLabel"> The autogenerated label used as part of the FQDNs for accessing the Communications Gateway. </param>
        /// <param name="teamsVoicemailPilotNumber"> This number is used in Teams Phone Mobile scenarios for access to the voicemail IVR from the native dialer. </param>
        /// <param name="isOnPremMcpEnabled"> Whether an on-premises Mobile Control Point is in use. </param>
        /// <param name="integratedMcpEnabled"> Whether an integrated Mobile Control Point is in use. </param>
        /// <param name="emergencyDialStrings"> A list of dial strings used for emergency calling. </param>
        /// <param name="dnsDelegations"> Details of DNS Domains to delegate to the Communications Gateway. </param>
        /// <param name="customSipHeaders"> Custom SIP Header to add to any subscriber with a custom_header value, if required. </param>
        /// <param name="allocatedSignalingAddressPrefixes"> A list of IP allocated prefixes which may be used to receive signaling data from this Communications Gateway. </param>
        /// <param name="allocatedMediaAddressPrefixes"> A list of allocated IP prefixes which may be used to receive media data from this Communications Gateway. </param>
        /// <returns> A new <see cref="VoiceServices.VoiceServicesCommunicationsGatewayData"/> instance for mocking. </returns>
        public static VoiceServicesCommunicationsGatewayData VoiceServicesCommunicationsGatewayData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IDictionary<string, string> tags = null, AzureLocation location = default, ManagedServiceIdentity identity = null, VoiceServicesSku sku = null, VoiceServicesProvisioningState? provisioningState = null, VoiceServicesCommunicationsGatewayStatus? status = null, IEnumerable<VoiceServicesServiceRegionProperties> serviceLocations = null, VoiceServicesCommunicationsGatewayConnectivity? connectivity = null, IEnumerable<VoiceServicesTeamsCodec> codecs = null, VoiceServicesEmergencyCallType? e911Type = null, IEnumerable<VoiceServicesCommunicationsPlatform> platforms = null, ApiBridgeProperties apiBridge = null, VoiceServicesAutoGeneratedDomainNameLabelScope? autoGeneratedDomainNameLabelScope = null, string autoGeneratedDomainNameLabel = null, string teamsVoicemailPilotNumber = null, bool? isOnPremMcpEnabled = null, bool? integratedMcpEnabled = null, IEnumerable<string> emergencyDialStrings = null, IEnumerable<DnsDelegationProperties> dnsDelegations = null, IEnumerable<CustomSipHeader> customSipHeaders = null, IEnumerable<string> allocatedSignalingAddressPrefixes = null, IEnumerable<string> allocatedMediaAddressPrefixes = null)
        {
            tags ??= new Dictionary<string, string>();
            serviceLocations ??= new List<VoiceServicesServiceRegionProperties>();
            codecs ??= new List<VoiceServicesTeamsCodec>();
            platforms ??= new List<VoiceServicesCommunicationsPlatform>();
            emergencyDialStrings ??= new List<string>();
            dnsDelegations ??= new List<DnsDelegationProperties>();
            customSipHeaders ??= new List<CustomSipHeader>();
            allocatedSignalingAddressPrefixes ??= new List<string>();
            allocatedMediaAddressPrefixes ??= new List<string>();

            return new VoiceServicesCommunicationsGatewayData(id, name, resourceType, systemData, tags, location, identity, sku, provisioningState, status, serviceLocations?.ToList(), connectivity, codecs?.ToList(), e911Type, platforms?.ToList(), apiBridge, autoGeneratedDomainNameLabelScope, autoGeneratedDomainNameLabel, teamsVoicemailPilotNumber, isOnPremMcpEnabled, integratedMcpEnabled, emergencyDialStrings?.ToList(), dnsDelegations != null ? new DnsDelegationsProperties(dnsDelegations?.ToList()) : null, customSipHeaders != null ? new CustomSipHeadersProperties(customSipHeaders?.ToList()) : null, allocatedSignalingAddressPrefixes?.ToList(), allocatedMediaAddressPrefixes?.ToList());
        }

        /// <summary> Initializes a new instance of ApiBridgeProperties. </summary>
        /// <param name="configureApiBridge"> The activation state of the API Bridge for this Communications Gateway. </param>
        /// <param name="endpointFqdns"> FQDNs for sending requests to the API Bridge endpoint. </param>
        /// <param name="allowedAddressPrefixes"> The allowed source IP addresses or CIDR ranges for accessing the API Bridge. </param>
        /// <returns> A new <see cref="Models.ApiBridgeProperties"/> instance for mocking. </returns>
        public static ApiBridgeProperties ApiBridgeProperties(ApiBridgeActivationState? configureApiBridge = null, IEnumerable<string> endpointFqdns = null, IEnumerable<string> allowedAddressPrefixes = null)
        {
            endpointFqdns ??= new List<string>();
            allowedAddressPrefixes ??= new List<string>();

            return new ApiBridgeProperties(configureApiBridge, endpointFqdns?.ToList(), allowedAddressPrefixes?.ToList());
        }

        /// <summary> Initializes a new instance of DnsDelegationProperties. </summary>
        /// <param name="domain"> Domain name to delegate. </param>
        /// <param name="nameServers"> The Azure-hosted DNS Name Servers for the delegated DNS Zones. </param>
        /// <returns> A new <see cref="Models.DnsDelegationProperties"/> instance for mocking. </returns>
        public static DnsDelegationProperties DnsDelegationProperties(string domain = null, IEnumerable<string> nameServers = null)
        {
            nameServers ??= new List<string>();

            return new DnsDelegationProperties(domain, nameServers?.ToList());
        }

        /// <summary> Initializes a new instance of VoiceServicesCheckNameAvailabilityResult. </summary>
        /// <param name="nameAvailable"> Indicates if the resource name is available. </param>
        /// <param name="reason"> The reason why the given name is not available. </param>
        /// <param name="message"> Detailed reason why the given name is not available. </param>
        /// <returns> A new <see cref="Models.VoiceServicesCheckNameAvailabilityResult"/> instance for mocking. </returns>
        public static VoiceServicesCheckNameAvailabilityResult VoiceServicesCheckNameAvailabilityResult(bool? nameAvailable = null, VoiceServicesNameUnavailableReason? reason = null, string message = null)
        {
            return new VoiceServicesCheckNameAvailabilityResult(nameAvailable, reason, message);
        }

        /// <summary> Initializes a new instance of VoiceServicesTestLineData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="provisioningState"> Resource provisioning state. </param>
        /// <param name="phoneNumber"> The phone number. </param>
        /// <param name="purpose"> Purpose of this test line, e.g. automated or manual testing. </param>
        /// <returns> A new <see cref="VoiceServices.VoiceServicesTestLineData"/> instance for mocking. </returns>
        public static VoiceServicesTestLineData VoiceServicesTestLineData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IDictionary<string, string> tags = null, AzureLocation location = default, VoiceServicesProvisioningState? provisioningState = null, string phoneNumber = null, VoiceServicesTestLinePurpose? purpose = null)
        {
            tags ??= new Dictionary<string, string>();

            return new VoiceServicesTestLineData(id, name, resourceType, systemData, tags, location, provisioningState, phoneNumber, purpose);
        }
    }
}
