// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.CosmosDBForPostgreSql.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Represents server role group configuration value.
    /// </summary>
    public partial class ServerRoleGroupConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the ServerRoleGroupConfiguration
        /// class.
        /// </summary>
        public ServerRoleGroupConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ServerRoleGroupConfiguration
        /// class.
        /// </summary>
        /// <param name="role">The role of servers in the server role group.
        /// Possible values include: 'Coordinator', 'Worker'</param>
        /// <param name="value">Value of the configuration.</param>
        /// <param name="defaultValue">Default value of the
        /// configuration.</param>
        /// <param name="source">Source of the configuration.</param>
        public ServerRoleGroupConfiguration(string role, string value, string defaultValue = default(string), string source = default(string))
        {
            Role = role;
            Value = value;
            DefaultValue = defaultValue;
            Source = source;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the role of servers in the server role group. Possible
        /// values include: 'Coordinator', 'Worker'
        /// </summary>
        [JsonProperty(PropertyName = "role")]
        public string Role { get; set; }

        /// <summary>
        /// Gets or sets value of the configuration.
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public string Value { get; set; }

        /// <summary>
        /// Gets default value of the configuration.
        /// </summary>
        [JsonProperty(PropertyName = "defaultValue")]
        public string DefaultValue { get; private set; }

        /// <summary>
        /// Gets source of the configuration.
        /// </summary>
        [JsonProperty(PropertyName = "source")]
        public string Source { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Role == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Role");
            }
            if (Value == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Value");
            }
        }
    }
}
