// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.Edge;
using Azure.ResourceManager.Edge.Models;

namespace Azure.ResourceManager.Edge.Samples
{
    public partial class Sample_UpdateResource
    {
        // Updates_Get_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_UpdatesGetMaximumSetGen()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/updates/preview/2023-07-01-preview/examples/Updates_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "Updates_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this UpdateResource created on azure
            // for more information of creating UpdateResource, please refer to the document of UpdateResource
            string resourceUri = "string";
            string updateName = "string";
            ResourceIdentifier updateResourceId = UpdateResource.CreateResourceIdentifier(resourceUri, updateName);
            UpdateResource update = client.GetUpdateResource(updateResourceId);

            // invoke the operation
            UpdateResource result = await update.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            UpdateData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Updates_Get_MinimumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_UpdatesGetMinimumSetGen()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/updates/preview/2023-07-01-preview/examples/Updates_Get_MinimumSet_Gen.json
            // this example is just showing the usage of "Updates_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this UpdateResource created on azure
            // for more information of creating UpdateResource, please refer to the document of UpdateResource
            string resourceUri = "string";
            string updateName = "string";
            ResourceIdentifier updateResourceId = UpdateResource.CreateResourceIdentifier(resourceUri, updateName);
            UpdateResource update = client.GetUpdateResource(updateResourceId);

            // invoke the operation
            UpdateResource result = await update.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            UpdateData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Updates_Modify_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_UpdatesModifyMaximumSetGen()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/updates/preview/2023-07-01-preview/examples/Updates_Modify_MaximumSet_Gen.json
            // this example is just showing the usage of "Updates_Modify" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this UpdateResource created on azure
            // for more information of creating UpdateResource, please refer to the document of UpdateResource
            string resourceUri = "string";
            string updateName = "string";
            ResourceIdentifier updateResourceId = UpdateResource.CreateResourceIdentifier(resourceUri, updateName);
            UpdateResource update = client.GetUpdateResource(updateResourceId);

            // invoke the operation
            UpdatePatch patch = new UpdatePatch()
            {
                Status = "UptoDate",
            };
            UpdateResource result = await update.UpdateAsync(patch);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            UpdateData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Updates_Update_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_UpdatesUpdateMaximumSetGen()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/updates/preview/2023-07-01-preview/examples/Updates_Update_MaximumSet_Gen.json
            // this example is just showing the usage of "Updates_Modify" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this UpdateResource created on azure
            // for more information of creating UpdateResource, please refer to the document of UpdateResource
            string resourceUri = "string";
            string updateName = "string";
            ResourceIdentifier updateResourceId = UpdateResource.CreateResourceIdentifier(resourceUri, updateName);
            UpdateResource update = client.GetUpdateResource(updateResourceId);

            // invoke the operation
            UpdatePatch patch = new UpdatePatch()
            {
                Status = "UptoDate",
            };
            UpdateResource result = await update.UpdateAsync(patch);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            UpdateData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Updates_Update_MinimumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_UpdatesUpdateMinimumSetGen()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/updates/preview/2023-07-01-preview/examples/Updates_Update_MinimumSet_Gen.json
            // this example is just showing the usage of "Updates_Modify" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this UpdateResource created on azure
            // for more information of creating UpdateResource, please refer to the document of UpdateResource
            string resourceUri = "string";
            string updateName = "string";
            ResourceIdentifier updateResourceId = UpdateResource.CreateResourceIdentifier(resourceUri, updateName);
            UpdateResource update = client.GetUpdateResource(updateResourceId);

            // invoke the operation
            UpdatePatch patch = new UpdatePatch()
            {
                Status = "UptoDate",
            };
            UpdateResource result = await update.UpdateAsync(patch);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            UpdateData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Updates_Delete_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_UpdatesDeleteMaximumSetGen()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/updates/preview/2023-07-01-preview/examples/Updates_Delete_MaximumSet_Gen.json
            // this example is just showing the usage of "Updates_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this UpdateResource created on azure
            // for more information of creating UpdateResource, please refer to the document of UpdateResource
            string resourceUri = "string";
            string updateName = "string";
            ResourceIdentifier updateResourceId = UpdateResource.CreateResourceIdentifier(resourceUri, updateName);
            UpdateResource update = client.GetUpdateResource(updateResourceId);

            // invoke the operation
            await update.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }

        // Updates_Delete_MinimumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_UpdatesDeleteMinimumSetGen()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/updates/preview/2023-07-01-preview/examples/Updates_Delete_MinimumSet_Gen.json
            // this example is just showing the usage of "Updates_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this UpdateResource created on azure
            // for more information of creating UpdateResource, please refer to the document of UpdateResource
            string resourceUri = "string";
            string updateName = "string";
            ResourceIdentifier updateResourceId = UpdateResource.CreateResourceIdentifier(resourceUri, updateName);
            UpdateResource update = client.GetUpdateResource(updateResourceId);

            // invoke the operation
            await update.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }
    }
}
