// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.StorageCache.Models
{
    /// <summary> The status of the import. </summary>
    public partial class AmlFileSystemImportStatus
    {
        /// <summary> Initializes a new instance of <see cref="AmlFileSystemImportStatus"/>. </summary>
        internal AmlFileSystemImportStatus()
        {
        }

        /// <summary> Initializes a new instance of <see cref="AmlFileSystemImportStatus"/>. </summary>
        /// <param name="state"> The state of the import operation. InProgress indicates the import is still running. Canceled indicates it has been canceled by the user. Completed indicates import finished, successfully importing all discovered blobs into the Lustre namespace. CompletedPartial indicates the import finished but some blobs either were found to be conflicting and could not be imported or other errors were encountered. Failed means the import was unable to complete due to a fatal error. </param>
        /// <param name="totalBlobsWalked"> The total blob objects walked. </param>
        /// <param name="blobsWalkedPerSecond"> A recent and frequently updated rate of blobs walked per second. </param>
        /// <param name="totalBlobsImported"> The total blobs that have been imported since import began. </param>
        /// <param name="blobsImportedPerSecond"> A recent and frequently updated rate of total files, directories, and symlinks imported per second. </param>
        /// <param name="totalErrors"> Number of errors in the import job. </param>
        /// <param name="totalConflicts"> Number of conflicts in the import job. </param>
        internal AmlFileSystemImportStatus(ImportStatusType? state, int? totalBlobsWalked, int? blobsWalkedPerSecond, int? totalBlobsImported, int? blobsImportedPerSecond, int? totalErrors, int? totalConflicts)
        {
            State = state;
            TotalBlobsWalked = totalBlobsWalked;
            BlobsWalkedPerSecond = blobsWalkedPerSecond;
            TotalBlobsImported = totalBlobsImported;
            BlobsImportedPerSecond = blobsImportedPerSecond;
            TotalErrors = totalErrors;
            TotalConflicts = totalConflicts;
        }

        /// <summary> The state of the import operation. InProgress indicates the import is still running. Canceled indicates it has been canceled by the user. Completed indicates import finished, successfully importing all discovered blobs into the Lustre namespace. CompletedPartial indicates the import finished but some blobs either were found to be conflicting and could not be imported or other errors were encountered. Failed means the import was unable to complete due to a fatal error. </summary>
        public ImportStatusType? State { get; }
        /// <summary> The total blob objects walked. </summary>
        public int? TotalBlobsWalked { get; }
        /// <summary> A recent and frequently updated rate of blobs walked per second. </summary>
        public int? BlobsWalkedPerSecond { get; }
        /// <summary> The total blobs that have been imported since import began. </summary>
        public int? TotalBlobsImported { get; }
        /// <summary> A recent and frequently updated rate of total files, directories, and symlinks imported per second. </summary>
        public int? BlobsImportedPerSecond { get; }
        /// <summary> Number of errors in the import job. </summary>
        public int? TotalErrors { get; }
        /// <summary> Number of conflicts in the import job. </summary>
        public int? TotalConflicts { get; }
    }
}
