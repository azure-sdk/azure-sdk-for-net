// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.StorageCache.Models
{
    /// <summary> Information about the AML file system import. </summary>
    public partial class AmlFileSystemImport
    {
        /// <summary> Initializes a new instance of <see cref="AmlFileSystemImport"/>. </summary>
        internal AmlFileSystemImport()
        {
        }

        /// <summary> Initializes a new instance of <see cref="AmlFileSystemImport"/>. </summary>
        /// <param name="filesystemPath"> Lustre file system path to import into relative to the file system root. Specify '/' to import all data. </param>
        /// <param name="conflictResolutionMode"> How the import job will handle conflicts. For example, if the import job is trying to bring in a directory, but a file is at that path, how it handles it. Fail indicates that the import job should stop immediately and not do anything with the conflict. Skip indicates that it should pass over the conflict. OverwriteIfDirty causes the import job to delete and re-import the file or directory if it is a conflicting type, is dirty, or was not previously imported. OverwriteAlways extends OverwriteIfDirty to include releasing files that had been restored but were not dirty. Please reference https://learn.microsoft.com/en-us/azure/azure-managed-lustre/ for a thorough explanation of these resolution modes. </param>
        /// <param name="status"> The status of the import. </param>
        internal AmlFileSystemImport(string filesystemPath, ConflictResolutionMode? conflictResolutionMode, AmlFileSystemImportStatus status)
        {
            FilesystemPath = filesystemPath;
            ConflictResolutionMode = conflictResolutionMode;
            Status = status;
        }

        /// <summary> Lustre file system path to import into relative to the file system root. Specify '/' to import all data. </summary>
        public string FilesystemPath { get; }
        /// <summary> How the import job will handle conflicts. For example, if the import job is trying to bring in a directory, but a file is at that path, how it handles it. Fail indicates that the import job should stop immediately and not do anything with the conflict. Skip indicates that it should pass over the conflict. OverwriteIfDirty causes the import job to delete and re-import the file or directory if it is a conflicting type, is dirty, or was not previously imported. OverwriteAlways extends OverwriteIfDirty to include releasing files that had been restored but were not dirty. Please reference https://learn.microsoft.com/en-us/azure/azure-managed-lustre/ for a thorough explanation of these resolution modes. </summary>
        public ConflictResolutionMode? ConflictResolutionMode { get; }
        /// <summary> The status of the import. </summary>
        public AmlFileSystemImportStatus Status { get; }
    }
}
