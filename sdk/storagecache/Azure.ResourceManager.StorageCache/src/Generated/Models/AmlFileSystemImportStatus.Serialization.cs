// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.StorageCache.Models
{
    public partial class AmlFileSystemImportStatus
    {
        internal static AmlFileSystemImportStatus DeserializeAmlFileSystemImportStatus(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<ImportStatusType> state = default;
            Optional<int> totalBlobsWalked = default;
            Optional<int> blobsWalkedPerSecond = default;
            Optional<int> totalBlobsImported = default;
            Optional<int> blobsImportedPerSecond = default;
            Optional<int> totalErrors = default;
            Optional<int> totalConflicts = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("state"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    state = new ImportStatusType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("totalBlobsWalked"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    totalBlobsWalked = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("blobsWalkedPerSecond"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    blobsWalkedPerSecond = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("totalBlobsImported"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    totalBlobsImported = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("blobsImportedPerSecond"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    blobsImportedPerSecond = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("totalErrors"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    totalErrors = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("totalConflicts"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    totalConflicts = property.Value.GetInt32();
                    continue;
                }
            }
            return new AmlFileSystemImportStatus(Optional.ToNullable(state), Optional.ToNullable(totalBlobsWalked), Optional.ToNullable(blobsWalkedPerSecond), Optional.ToNullable(totalBlobsImported), Optional.ToNullable(blobsImportedPerSecond), Optional.ToNullable(totalErrors), Optional.ToNullable(totalConflicts));
        }
    }
}
