<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetAssessmentJobStatusAsync(String,String,Guid,RequestContext)">
<example>
This sample shows how to call GetAssessmentJobStatusAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new AssessmentJobStatusClient(endpoint, credential);

Response response = await client.GetAssessmentJobStatusAsync("<accountId>", "<assetId>", Guid.NewGuid());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobRunId").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("runStart").ToString());
Console.WriteLine(result.GetProperty("runEnd").ToString());
Console.WriteLine(result.GetProperty("durationInMs").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>JobStatusEntityDTO</c>:
<code>{
  jobRunId: string, # Optional. The JobStatusEntityDTO JobRunId
  status: string, # Optional.
  message: string, # Optional. The JobStatusEntityDTO Message
  runStart: string (ISO 8601 Format), # Optional.
  runEnd: string (ISO 8601 Format), # Optional.
  durationInMs: string, # Optional.
}
</code>

</remarks>
    </member>
    <member name="GetAssessmentJobStatus(String,String,Guid,RequestContext)">
<example>
This sample shows how to call GetAssessmentJobStatus with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new AssessmentJobStatusClient(endpoint, credential);

Response response = client.GetAssessmentJobStatus("<accountId>", "<assetId>", Guid.NewGuid());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobRunId").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("runStart").ToString());
Console.WriteLine(result.GetProperty("runEnd").ToString());
Console.WriteLine(result.GetProperty("durationInMs").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>JobStatusEntityDTO</c>:
<code>{
  jobRunId: string, # Optional. The JobStatusEntityDTO JobRunId
  status: string, # Optional.
  message: string, # Optional. The JobStatusEntityDTO Message
  runStart: string (ISO 8601 Format), # Optional.
  runEnd: string (ISO 8601 Format), # Optional.
  durationInMs: string, # Optional.
}
</code>

</remarks>
    </member>
  </members>
</doc>