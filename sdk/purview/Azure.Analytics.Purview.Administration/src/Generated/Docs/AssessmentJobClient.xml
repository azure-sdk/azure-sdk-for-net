<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="SubmitAsync(String,String,RequestContent,RequestContext)">
<example>
This sample shows how to call SubmitAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new AssessmentJobClient(endpoint, credential);

var data = new {};

Response response = await client.SubmitAsync("<accountId>", "<assetId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call SubmitAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new AssessmentJobClient(endpoint, credential);

var data = new {
    jobId = "<jobId>",
};

Response response = await client.SubmitAsync("<accountId>", "<assetId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the request payload.

Request Body:

Schema for <c>AssessmentJobDTO</c>:
<code>{
  jobId: string, # Optional. The Job Id
}
</code>

</remarks>
    </member>
    <member name="Submit(String,String,RequestContent,RequestContext)">
<example>
This sample shows how to call Submit with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new AssessmentJobClient(endpoint, credential);

var data = new {};

Response response = client.Submit("<accountId>", "<assetId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call Submit with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new AssessmentJobClient(endpoint, credential);

var data = new {
    jobId = "<jobId>",
};

Response response = client.Submit("<accountId>", "<assetId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the request payload.

Request Body:

Schema for <c>AssessmentJobDTO</c>:
<code>{
  jobId: string, # Optional. The Job Id
}
</code>

</remarks>
    </member>
    <member name="CancelAsync(String,String,Guid,RequestContext)">
<example>
This sample shows how to call CancelAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new AssessmentJobClient(endpoint, credential);

Response response = await client.CancelAsync("<accountId>", "<assetId>", Guid.NewGuid());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="Cancel(String,String,Guid,RequestContext)">
<example>
This sample shows how to call Cancel with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new AssessmentJobClient(endpoint, credential);

Response response = client.Cancel("<accountId>", "<assetId>", Guid.NewGuid());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
  </members>
</doc>