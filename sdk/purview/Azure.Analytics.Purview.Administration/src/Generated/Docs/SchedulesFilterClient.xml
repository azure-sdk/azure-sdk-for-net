<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetSchedulesFilterAsync(String,RequestContent,RequestContext)">
<example>
This sample shows how to call GetSchedulesFilterAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new SchedulesFilterClient(endpoint, credential);

var data = new {};

Response response = await client.GetSchedulesFilterAsync("<accountId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
This sample shows how to call GetSchedulesFilterAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new SchedulesFilterClient(endpoint, credential);

var data = new {
    filters = new[] {
        new {
            operand = "<operand>",
            operator = "<operator>",
            values = new[] {
                "<String>"
            },
        }
    },
    lastUpdatedAfter = "2022-05-10T18:57:31.2311892Z",
    lastUpdatedBefore = "2022-05-10T18:57:31.2311892Z",
};

Response response = await client.GetSchedulesFilterAsync("<accountId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("scheduleId").ToString());
Console.WriteLine(result[0].GetProperty("scheduleName").ToString());
Console.WriteLine(result[0].GetProperty("triggerRunId").ToString());
Console.WriteLine(result[0].GetProperty("triggerStatus").ToString());
Console.WriteLine(result[0].GetProperty("triggerStartTime").ToString());
Console.WriteLine(result[0].GetProperty("triggerLastUpdateTime").ToString());
Console.WriteLine(result[0].GetProperty("assessmentType").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the request and response payloads.

Request Body:

Schema for <c>TableRepositoryQueryPayloadModel</c>:
<code>{
  filters: [
    {
      operand: string, # Optional. The FilterPayloadModel Operand
      operator: string, # Optional. The FilterPayloadModel Operator
      values: [string], # Optional. The FilterPayloadModel Values
    }
  ], # Optional. The TableRepositoryQueryPayloadModel Filters
  lastUpdatedAfter: string (ISO 8601 Format), # Optional. The TableRepositoryQueryPayloadModel LastUpdatedAfter
  lastUpdatedBefore: string (ISO 8601 Format), # Optional. The TableRepositoryQueryPayloadModel LastUpdatedBefore
}
</code>

Response Body:

Schema for <c>ScheduleTriggerRunEntity</c>:
<code>{
  scheduleId: string, # Optional. The ScheduleTriggerRunEntity ScheduleId
  scheduleName: string, # Optional. The ScheduleTriggerRunEntity ScheduleName
  triggerRunId: string, # Optional. The ScheduleTriggerRunEntity TriggerRunId
  triggerStatus: string, # Optional. The ScheduleTriggerRunEntity TriggerStatus
  triggerStartTime: string (ISO 8601 Format), # Optional. The ScheduleTriggerRunEntity TriggerStartTime
  triggerLastUpdateTime: string (ISO 8601 Format), # Optional. The ScheduleTriggerRunEntity TriggerLastUpdateTime
  assessmentType: string, # Optional. The ScheduleTriggerRunEntity AssessmentType
}
</code>

</remarks>
    </member>
    <member name="GetSchedulesFilter(String,RequestContent,RequestContext)">
<example>
This sample shows how to call GetSchedulesFilter with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new SchedulesFilterClient(endpoint, credential);

var data = new {};

Response response = client.GetSchedulesFilter("<accountId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
This sample shows how to call GetSchedulesFilter with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new SchedulesFilterClient(endpoint, credential);

var data = new {
    filters = new[] {
        new {
            operand = "<operand>",
            operator = "<operator>",
            values = new[] {
                "<String>"
            },
        }
    },
    lastUpdatedAfter = "2022-05-10T18:57:31.2311892Z",
    lastUpdatedBefore = "2022-05-10T18:57:31.2311892Z",
};

Response response = client.GetSchedulesFilter("<accountId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("scheduleId").ToString());
Console.WriteLine(result[0].GetProperty("scheduleName").ToString());
Console.WriteLine(result[0].GetProperty("triggerRunId").ToString());
Console.WriteLine(result[0].GetProperty("triggerStatus").ToString());
Console.WriteLine(result[0].GetProperty("triggerStartTime").ToString());
Console.WriteLine(result[0].GetProperty("triggerLastUpdateTime").ToString());
Console.WriteLine(result[0].GetProperty("assessmentType").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the request and response payloads.

Request Body:

Schema for <c>TableRepositoryQueryPayloadModel</c>:
<code>{
  filters: [
    {
      operand: string, # Optional. The FilterPayloadModel Operand
      operator: string, # Optional. The FilterPayloadModel Operator
      values: [string], # Optional. The FilterPayloadModel Values
    }
  ], # Optional. The TableRepositoryQueryPayloadModel Filters
  lastUpdatedAfter: string (ISO 8601 Format), # Optional. The TableRepositoryQueryPayloadModel LastUpdatedAfter
  lastUpdatedBefore: string (ISO 8601 Format), # Optional. The TableRepositoryQueryPayloadModel LastUpdatedBefore
}
</code>

Response Body:

Schema for <c>ScheduleTriggerRunEntity</c>:
<code>{
  scheduleId: string, # Optional. The ScheduleTriggerRunEntity ScheduleId
  scheduleName: string, # Optional. The ScheduleTriggerRunEntity ScheduleName
  triggerRunId: string, # Optional. The ScheduleTriggerRunEntity TriggerRunId
  triggerStatus: string, # Optional. The ScheduleTriggerRunEntity TriggerStatus
  triggerStartTime: string (ISO 8601 Format), # Optional. The ScheduleTriggerRunEntity TriggerStartTime
  triggerLastUpdateTime: string (ISO 8601 Format), # Optional. The ScheduleTriggerRunEntity TriggerLastUpdateTime
  assessmentType: string, # Optional. The ScheduleTriggerRunEntity AssessmentType
}
</code>

</remarks>
    </member>
  </members>
</doc>