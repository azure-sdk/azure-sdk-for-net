// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Avs.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// NSX DNS Service update
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class WorkloadNetworkDnsServiceUpdate
    {
        /// <summary>
        /// Initializes a new instance of the WorkloadNetworkDnsServiceUpdate
        /// class.
        /// </summary>
        public WorkloadNetworkDnsServiceUpdate()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WorkloadNetworkDnsServiceUpdate
        /// class.
        /// </summary>
        /// <param name="displayName">Display name of the DNS Service.</param>
        /// <param name="dnsServiceIp">DNS service IP of the DNS
        /// Service.</param>
        /// <param name="defaultDnsZone">Default DNS zone of the DNS
        /// Service.</param>
        /// <param name="fqdnZones">FQDN zones of the DNS Service.</param>
        /// <param name="logLevel">DNS Service log level. Possible values
        /// include: 'DEBUG', 'INFO', 'WARNING', 'ERROR', 'FATAL'</param>
        /// <param name="status">DNS Service status. Possible values include:
        /// 'SUCCESS', 'FAILURE'</param>
        /// <param name="provisioningState">The provisioning state. Possible
        /// values include: 'Succeeded', 'Failed', 'Canceled', 'Building',
        /// 'Deleting', 'Updating'</param>
        /// <param name="revision">NSX revision number.</param>
        public WorkloadNetworkDnsServiceUpdate(string displayName = default(string), string dnsServiceIp = default(string), string defaultDnsZone = default(string), IList<string> fqdnZones = default(IList<string>), string logLevel = default(string), string status = default(string), string provisioningState = default(string), long? revision = default(long?))
        {
            DisplayName = displayName;
            DnsServiceIp = dnsServiceIp;
            DefaultDnsZone = defaultDnsZone;
            FqdnZones = fqdnZones;
            LogLevel = logLevel;
            Status = status;
            ProvisioningState = provisioningState;
            Revision = revision;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets display name of the DNS Service.
        /// </summary>
        [JsonProperty(PropertyName = "properties.displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets DNS service IP of the DNS Service.
        /// </summary>
        [JsonProperty(PropertyName = "properties.dnsServiceIp")]
        public string DnsServiceIp { get; set; }

        /// <summary>
        /// Gets or sets default DNS zone of the DNS Service.
        /// </summary>
        [JsonProperty(PropertyName = "properties.defaultDnsZone")]
        public string DefaultDnsZone { get; set; }

        /// <summary>
        /// Gets or sets FQDN zones of the DNS Service.
        /// </summary>
        [JsonProperty(PropertyName = "properties.fqdnZones")]
        public IList<string> FqdnZones { get; set; }

        /// <summary>
        /// Gets or sets DNS Service log level. Possible values include:
        /// 'DEBUG', 'INFO', 'WARNING', 'ERROR', 'FATAL'
        /// </summary>
        [JsonProperty(PropertyName = "properties.logLevel")]
        public string LogLevel { get; set; }

        /// <summary>
        /// Gets DNS Service status. Possible values include: 'SUCCESS',
        /// 'FAILURE'
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public string Status { get; private set; }

        /// <summary>
        /// Gets the provisioning state. Possible values include: 'Succeeded',
        /// 'Failed', 'Canceled', 'Building', 'Deleting', 'Updating'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets or sets NSX revision number.
        /// </summary>
        [JsonProperty(PropertyName = "properties.revision")]
        public long? Revision { get; set; }

    }
}
