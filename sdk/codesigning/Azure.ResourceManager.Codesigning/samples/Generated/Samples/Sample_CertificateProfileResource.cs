// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.Codesigning;
using Azure.ResourceManager.Codesigning.Models;

namespace Azure.ResourceManager.Codesigning.Samples
{
    public partial class Sample_CertificateProfileResource
    {
        // Get Certificate Profile
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetCertificateProfile()
        {
            // Generated from example definition: specification/codesigning/resource-manager/Microsoft.CodeSigning/preview/2023-04-30-preview/examples/getCertificateProfile.json
            // this example is just showing the usage of "CertificateProfile_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this CertificateProfileResource created on azure
            // for more information of creating CertificateProfileResource, please refer to the document of CertificateProfileResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "MyResourceGroup";
            string accountName = "MyAccount";
            string profileName = "profileA";
            ResourceIdentifier certificateProfileResourceId = CertificateProfileResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, accountName, profileName);
            CertificateProfileResource certificateProfile = client.GetCertificateProfileResource(certificateProfileResourceId);

            // invoke the operation
            CertificateProfileResource result = await certificateProfile.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            CertificateProfileData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Update Certificate Profile
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_UpdateCertificateProfile()
        {
            // Generated from example definition: specification/codesigning/resource-manager/Microsoft.CodeSigning/preview/2023-04-30-preview/examples/updateCertificateProfile.json
            // this example is just showing the usage of "CertificateProfile_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this CertificateProfileResource created on azure
            // for more information of creating CertificateProfileResource, please refer to the document of CertificateProfileResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "MyResourceGroup";
            string accountName = "MyAccount";
            string profileName = "profileA";
            ResourceIdentifier certificateProfileResourceId = CertificateProfileResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, accountName, profileName);
            CertificateProfileResource certificateProfile = client.GetCertificateProfileResource(certificateProfileResourceId);

            // invoke the operation
            CertificateProfilePatch patch = new CertificateProfilePatch()
            {
                Certificates =
{
new Certificate()
{
SerialNumber = "xxxxxxxxxxxxxxxxxx",
SubjectName = "CN=Contoso Inc, O=Contoso Inc, L=New York, S=New York, C=US",
Thumbprint = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
CreatedDate = "3/14/2023 5:27:49 PM",
ExpiryDate = "3/17/2023 5:27:49 PM",
Status = CertificateStatus.Active,
Revocations =
{
new Revocation()
{
RequestedAt = "3/19/2023 5:27:49 PM",
RevokedAt = "3/19/2023 5:27:49 PM",
Reason = "KeyCompromised",
Remarks = "test",
}
},
}
},
            };
            CertificateProfileResource result = await certificateProfile.UpdateAsync(patch);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            CertificateProfileData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Delete Certificate Profile
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_DeleteCertificateProfile()
        {
            // Generated from example definition: specification/codesigning/resource-manager/Microsoft.CodeSigning/preview/2023-04-30-preview/examples/deleteCertificateProfile.json
            // this example is just showing the usage of "CertificateProfile_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this CertificateProfileResource created on azure
            // for more information of creating CertificateProfileResource, please refer to the document of CertificateProfileResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "MyResourceGroup";
            string accountName = "MyAccount";
            string profileName = "profileA";
            ResourceIdentifier certificateProfileResourceId = CertificateProfileResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, accountName, profileName);
            CertificateProfileResource certificateProfile = client.GetCertificateProfileResource(certificateProfileResourceId);

            // invoke the operation
            await certificateProfile.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }
    }
}
