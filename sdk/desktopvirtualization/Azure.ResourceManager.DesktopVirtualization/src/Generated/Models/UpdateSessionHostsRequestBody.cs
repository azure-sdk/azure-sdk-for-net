// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DesktopVirtualization.Models
{
    /// <summary> Object containing the definition for properties to be used for a sessionHostUpdate operation. </summary>
    public partial class UpdateSessionHostsRequestBody
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="UpdateSessionHostsRequestBody"/>. </summary>
        public UpdateSessionHostsRequestBody()
        {
        }

        /// <summary> Initializes a new instance of <see cref="UpdateSessionHostsRequestBody"/>. </summary>
        /// <param name="scheduledOn"> The timestamp that the update validation is scheduled for. If none is provided, the update will be executed immediately. </param>
        /// <param name="scheduledDateTimeZone"> The timeZone as defined in https://docs.microsoft.com/dotnet/api/system.timezoneinfo.findsystemtimezonebyid. </param>
        /// <param name="update"> settings for management information for the hostpool update operation. If none is provided the update will use the settings saved in the sessionHostManagement object. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal UpdateSessionHostsRequestBody(DateTimeOffset? scheduledOn, string scheduledDateTimeZone, HostPoolUpdateConfigurationPatchProperties update, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            ScheduledOn = scheduledOn;
            ScheduledDateTimeZone = scheduledDateTimeZone;
            Update = update;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The timestamp that the update validation is scheduled for. If none is provided, the update will be executed immediately. </summary>
        [WirePath("scheduledDateTime")]
        public DateTimeOffset? ScheduledOn { get; set; }
        /// <summary> The timeZone as defined in https://docs.microsoft.com/dotnet/api/system.timezoneinfo.findsystemtimezonebyid. </summary>
        [WirePath("scheduledDateTimeZone")]
        public string ScheduledDateTimeZone { get; set; }
        /// <summary> settings for management information for the hostpool update operation. If none is provided the update will use the settings saved in the sessionHostManagement object. </summary>
        [WirePath("update")]
        public HostPoolUpdateConfigurationPatchProperties Update { get; set; }
    }
}
