// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.DesktopVirtualization.Models
{
    /// <summary> The policy that should be applied when the Session Host provisioning operation fails. </summary>
    public readonly partial struct FailedSessionHostCleanupPolicySHC : IEquatable<FailedSessionHostCleanupPolicySHC>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="FailedSessionHostCleanupPolicySHC"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public FailedSessionHostCleanupPolicySHC(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string KeepAllValue = "KeepAll";
        private const string KeepOneValue = "KeepOne";
        private const string KeepNoneValue = "KeepNone";

        /// <summary> KeepAll. </summary>
        public static FailedSessionHostCleanupPolicySHC KeepAll { get; } = new FailedSessionHostCleanupPolicySHC(KeepAllValue);
        /// <summary> KeepOne. </summary>
        public static FailedSessionHostCleanupPolicySHC KeepOne { get; } = new FailedSessionHostCleanupPolicySHC(KeepOneValue);
        /// <summary> KeepNone. </summary>
        public static FailedSessionHostCleanupPolicySHC KeepNone { get; } = new FailedSessionHostCleanupPolicySHC(KeepNoneValue);
        /// <summary> Determines if two <see cref="FailedSessionHostCleanupPolicySHC"/> values are the same. </summary>
        public static bool operator ==(FailedSessionHostCleanupPolicySHC left, FailedSessionHostCleanupPolicySHC right) => left.Equals(right);
        /// <summary> Determines if two <see cref="FailedSessionHostCleanupPolicySHC"/> values are not the same. </summary>
        public static bool operator !=(FailedSessionHostCleanupPolicySHC left, FailedSessionHostCleanupPolicySHC right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="FailedSessionHostCleanupPolicySHC"/>. </summary>
        public static implicit operator FailedSessionHostCleanupPolicySHC(string value) => new FailedSessionHostCleanupPolicySHC(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is FailedSessionHostCleanupPolicySHC other && Equals(other);
        /// <inheritdoc />
        public bool Equals(FailedSessionHostCleanupPolicySHC other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
