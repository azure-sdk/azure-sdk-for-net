// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DesktopVirtualization.Models
{
    /// <summary> Schema for SessionHostManagementUpdateStatus properties. </summary>
    public partial class SessionHostManagementUpdateStatus
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="SessionHostManagementUpdateStatus"/>. </summary>
        /// <param name="status"> Operation status. Current defined values are &lt; Error | Scheduled | UpdatingSessionHosts | ValidatingSessionHostUpdate | Paused | Pausing | Cancelling &gt; | Succeeded | Failed | Canceled. </param>
        internal SessionHostManagementUpdateStatus(SessionHostManagementUpdateOperationStatus status)
        {
            Status = status;
        }

        /// <summary> Initializes a new instance of <see cref="SessionHostManagementUpdateStatus"/>. </summary>
        /// <param name="id"> Fully qualified ID for the async operation. </param>
        /// <param name="name"> Name of the async operation. </param>
        /// <param name="percentComplete"> Percent of the operation that is complete. </param>
        /// <param name="startOn"> The start time of the operation. </param>
        /// <param name="endOn"> The end time of the operation. </param>
        /// <param name="error"> If present, details of the operation error. </param>
        /// <param name="status"> Operation status. Current defined values are &lt; Error | Scheduled | UpdatingSessionHosts | ValidatingSessionHostUpdate | Paused | Pausing | Cancelling &gt; | Succeeded | Failed | Canceled. </param>
        /// <param name="properties"> Properties bag to hold custom RP properties for sessionHostManagement Update Statuses. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal SessionHostManagementUpdateStatus(ResourceIdentifier id, string name, double? percentComplete, DateTimeOffset? startOn, DateTimeOffset? endOn, ResponseError error, SessionHostManagementUpdateOperationStatus status, SessionHostManagementUpdateStatusProperties properties, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Id = id;
            Name = name;
            PercentComplete = percentComplete;
            StartOn = startOn;
            EndOn = endOn;
            Error = error;
            Status = status;
            Properties = properties;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="SessionHostManagementUpdateStatus"/> for deserialization. </summary>
        internal SessionHostManagementUpdateStatus()
        {
        }

        /// <summary> Fully qualified ID for the async operation. </summary>
        [WirePath("id")]
        public ResourceIdentifier Id { get; }
        /// <summary> Name of the async operation. </summary>
        [WirePath("name")]
        public string Name { get; }
        /// <summary> Percent of the operation that is complete. </summary>
        [WirePath("percentComplete")]
        public double? PercentComplete { get; }
        /// <summary> The start time of the operation. </summary>
        [WirePath("startTime")]
        public DateTimeOffset? StartOn { get; }
        /// <summary> The end time of the operation. </summary>
        [WirePath("endTime")]
        public DateTimeOffset? EndOn { get; }
        /// <summary> If present, details of the operation error. </summary>
        [WirePath("error")]
        public ResponseError Error { get; }
        /// <summary> Operation status. Current defined values are &lt; Error | Scheduled | UpdatingSessionHosts | ValidatingSessionHostUpdate | Paused | Pausing | Cancelling &gt; | Succeeded | Failed | Canceled. </summary>
        [WirePath("status")]
        public SessionHostManagementUpdateOperationStatus Status { get; }
        /// <summary> Properties bag to hold custom RP properties for sessionHostManagement Update Statuses. </summary>
        [WirePath("properties")]
        public SessionHostManagementUpdateStatusProperties Properties { get; }
    }
}
