// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DesktopVirtualization.Models
{
    /// <summary> The properties that control how Scaling will manage the size of the hostpool by creating and deleting hosts. </summary>
    public partial class CreateDeleteProperties
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="CreateDeleteProperties"/>. </summary>
        public CreateDeleteProperties()
        {
        }

        /// <summary> Initializes a new instance of <see cref="CreateDeleteProperties"/>. </summary>
        /// <param name="rampUpMaximumHostPoolSize"> Maximum number of session hosts that may be created by the Scaling Service. This requires the assigned hostpool to have a session host config property. </param>
        /// <param name="rampUpMinimumHostPoolSize"> Minimum number of session hosts that will be be created by the Scaling Service. Scaling will not delete any hosts when this limit is met. This requires the assigned hostpool to have a session host config property. </param>
        /// <param name="rampDownMaximumHostPoolSize"> Maximum number of session hosts that may be created by the Scaling Service. This requires the assigned hostpool to have a session host config property. </param>
        /// <param name="rampDownMinimumHostPoolSize"> Minimum number of session hosts that will be be created by the Scaling Service. Scaling will not delete any hosts when this limit is met. This requires the assigned hostpool to have a session host config property. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal CreateDeleteProperties(int? rampUpMaximumHostPoolSize, int? rampUpMinimumHostPoolSize, int? rampDownMaximumHostPoolSize, int? rampDownMinimumHostPoolSize, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            RampUpMaximumHostPoolSize = rampUpMaximumHostPoolSize;
            RampUpMinimumHostPoolSize = rampUpMinimumHostPoolSize;
            RampDownMaximumHostPoolSize = rampDownMaximumHostPoolSize;
            RampDownMinimumHostPoolSize = rampDownMinimumHostPoolSize;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Maximum number of session hosts that may be created by the Scaling Service. This requires the assigned hostpool to have a session host config property. </summary>
        [WirePath("rampUpMaximumHostPoolSize")]
        public int? RampUpMaximumHostPoolSize { get; set; }
        /// <summary> Minimum number of session hosts that will be be created by the Scaling Service. Scaling will not delete any hosts when this limit is met. This requires the assigned hostpool to have a session host config property. </summary>
        [WirePath("rampUpMinimumHostPoolSize")]
        public int? RampUpMinimumHostPoolSize { get; set; }
        /// <summary> Maximum number of session hosts that may be created by the Scaling Service. This requires the assigned hostpool to have a session host config property. </summary>
        [WirePath("rampDownMaximumHostPoolSize")]
        public int? RampDownMaximumHostPoolSize { get; set; }
        /// <summary> Minimum number of session hosts that will be be created by the Scaling Service. Scaling will not delete any hosts when this limit is met. This requires the assigned hostpool to have a session host config property. </summary>
        [WirePath("rampDownMinimumHostPoolSize")]
        public int? RampDownMinimumHostPoolSize { get; set; }
    }
}
