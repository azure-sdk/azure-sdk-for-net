// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.DesktopVirtualization.Models
{
    /// <summary> The disk type used by virtual machine in hostpool session host. </summary>
    public readonly partial struct VirtualMachineDiskType : IEquatable<VirtualMachineDiskType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="VirtualMachineDiskType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public VirtualMachineDiskType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string StandardLRSValue = "Standard_LRS";
        private const string PremiumLRSValue = "Premium_LRS";
        private const string StandardSSDLRSValue = "StandardSSD_LRS";

        /// <summary> Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access. </summary>
        public static VirtualMachineDiskType StandardLRS { get; } = new VirtualMachineDiskType(StandardLRSValue);
        /// <summary> Premium SSD locally redundant storage. Best for production and performance sensitive workloads. </summary>
        public static VirtualMachineDiskType PremiumLRS { get; } = new VirtualMachineDiskType(PremiumLRSValue);
        /// <summary> Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test. </summary>
        public static VirtualMachineDiskType StandardSSDLRS { get; } = new VirtualMachineDiskType(StandardSSDLRSValue);
        /// <summary> Determines if two <see cref="VirtualMachineDiskType"/> values are the same. </summary>
        public static bool operator ==(VirtualMachineDiskType left, VirtualMachineDiskType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="VirtualMachineDiskType"/> values are not the same. </summary>
        public static bool operator !=(VirtualMachineDiskType left, VirtualMachineDiskType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="VirtualMachineDiskType"/>. </summary>
        public static implicit operator VirtualMachineDiskType(string value) => new VirtualMachineDiskType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is VirtualMachineDiskType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(VirtualMachineDiskType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
