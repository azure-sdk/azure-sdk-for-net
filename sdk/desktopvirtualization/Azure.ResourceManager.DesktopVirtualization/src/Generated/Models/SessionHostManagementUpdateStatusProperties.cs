// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DesktopVirtualization.Models
{
    /// <summary> The current status of the session host update async operation. </summary>
    public partial class SessionHostManagementUpdateStatusProperties
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="SessionHostManagementUpdateStatusProperties"/>. </summary>
        internal SessionHostManagementUpdateStatusProperties()
        {
        }

        /// <summary> Initializes a new instance of <see cref="SessionHostManagementUpdateStatusProperties"/>. </summary>
        /// <param name="correlationId"> The Log Analytics. </param>
        /// <param name="progress"> Progress information on the sessionHostManagement operation. </param>
        /// <param name="scheduledOn"> The timestamp that the update is scheduled for. </param>
        /// <param name="sessionHostManagement"> SessionHostManagement properties used for the operation. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal SessionHostManagementUpdateStatusProperties(string correlationId, SessionHostManagementOperationProgress progress, DateTimeOffset? scheduledOn, SessionHostManagementData sessionHostManagement, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            CorrelationId = correlationId;
            Progress = progress;
            ScheduledOn = scheduledOn;
            SessionHostManagement = sessionHostManagement;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The Log Analytics. </summary>
        [WirePath("correlationId")]
        public string CorrelationId { get; }
        /// <summary> Progress information on the sessionHostManagement operation. </summary>
        [WirePath("progress")]
        public SessionHostManagementOperationProgress Progress { get; }
        /// <summary> The timestamp that the update is scheduled for. </summary>
        [WirePath("scheduledDateTime")]
        public DateTimeOffset? ScheduledOn { get; }
        /// <summary> SessionHostManagement properties used for the operation. </summary>
        [WirePath("sessionHostManagement")]
        public SessionHostManagementData SessionHostManagement { get; }
    }
}
