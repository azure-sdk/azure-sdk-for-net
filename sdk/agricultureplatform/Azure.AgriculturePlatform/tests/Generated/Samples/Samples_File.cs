// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.AgriculturePlatform.Samples
{
    public partial class Samples_File
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FileOperations_Delete_FileDelete()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            File client = new AgriculturePlatformClient(endpoint, credential).GetFileClient(apiVersion: "2024-11-01-preview");

            using RequestContent content = RequestContent.Create(new
            {
                filePath = "string",
            });
            Response response = client.Delete(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FileOperations_Delete_FileDelete_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            File client = new AgriculturePlatformClient(endpoint, credential).GetFileClient(apiVersion: "2024-11-01-preview");

            using RequestContent content = RequestContent.Create(new
            {
                filePath = "string",
            });
            Response response = await client.DeleteAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FileOperations_Delete_FileDelete_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            File client = new AgriculturePlatformClient(endpoint, credential).GetFileClient(apiVersion: "2024-11-01-preview");

            Response response = client.Delete("string");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FileOperations_Delete_FileDelete_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            File client = new AgriculturePlatformClient(endpoint, credential).GetFileClient(apiVersion: "2024-11-01-preview");

            Response response = await client.DeleteAsync("string");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FileOperations_Download_FileDownload()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            File client = new AgriculturePlatformClient(endpoint, credential).GetFileClient(apiVersion: "2024-11-01-preview");

            using RequestContent content = RequestContent.Create(new
            {
                filePath = "string",
            });
            Response response = client.Download("application/json", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FileOperations_Download_FileDownload_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            File client = new AgriculturePlatformClient(endpoint, credential).GetFileClient(apiVersion: "2024-11-01-preview");

            using RequestContent content = RequestContent.Create(new
            {
                filePath = "string",
            });
            Response response = await client.DownloadAsync("application/json", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FileOperations_Download_FileDownload_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            File client = new AgriculturePlatformClient(endpoint, credential).GetFileClient(apiVersion: "2024-11-01-preview");

            Response<BinaryData> response = client.Download(AcceptHeaderEnum.Json, "string");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FileOperations_Download_FileDownload_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            File client = new AgriculturePlatformClient(endpoint, credential).GetFileClient(apiVersion: "2024-11-01-preview");

            Response<BinaryData> response = await client.DownloadAsync(AcceptHeaderEnum.Json, "string");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FileOperations_Upload_FileUpload()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            File client = new AgriculturePlatformClient(endpoint, credential).GetFileClient(apiVersion: "2024-11-01-preview");

            Response response = client.Upload(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("filePath").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FileOperations_Upload_FileUpload_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            File client = new AgriculturePlatformClient(endpoint, credential).GetFileClient(apiVersion: "2024-11-01-preview");

            Response response = await client.UploadAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("filePath").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FileOperations_Upload_FileUpload_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            File client = new AgriculturePlatformClient(endpoint, credential).GetFileClient(apiVersion: "2024-11-01-preview");

            Response<FileModel> response = client.Upload();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FileOperations_Upload_FileUpload_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            File client = new AgriculturePlatformClient(endpoint, credential).GetFileClient(apiVersion: "2024-11-01-preview");

            Response<FileModel> response = await client.UploadAsync();
        }
    }
}
