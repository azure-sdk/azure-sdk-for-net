// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Microsoft.AgriculturePlatform
{
    /// <summary> MultiPolygon geometry. </summary>
    public partial class MultiPolygon : GeoJsonObject
    {
        /// <summary> Initializes a new instance of <see cref="MultiPolygon"/>. </summary>
        /// <param name="coordinates">
        /// Gets or sets Coordinates of GeoJSON Object.
        /// It must be an array of polygons, each polygon contains list of linear rings.
        /// For Polygons with more than one of these rings, the first MUST be the exterior
        /// ring,
        /// and any others MUST be interior rings.
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="coordinates"/> is null. </exception>
        public MultiPolygon(IEnumerable<IList<IList<IList<double>>>> coordinates)
        {
            Argument.AssertNotNull(coordinates, nameof(coordinates));

            Type = GeoJsonObjectType.MultiPolygon;
            Coordinates = coordinates.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="MultiPolygon"/>. </summary>
        /// <param name="type"> Type of GeoJSON object. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="coordinates">
        /// Gets or sets Coordinates of GeoJSON Object.
        /// It must be an array of polygons, each polygon contains list of linear rings.
        /// For Polygons with more than one of these rings, the first MUST be the exterior
        /// ring,
        /// and any others MUST be interior rings.
        /// </param>
        internal MultiPolygon(GeoJsonObjectType type, IDictionary<string, BinaryData> serializedAdditionalRawData, IList<IList<IList<IList<double>>>> coordinates) : base(type, serializedAdditionalRawData)
        {
            Coordinates = coordinates;
        }

        /// <summary> Initializes a new instance of <see cref="MultiPolygon"/> for deserialization. </summary>
        internal MultiPolygon()
        {
        }

        /// <summary>
        /// Gets or sets Coordinates of GeoJSON Object.
        /// It must be an array of polygons, each polygon contains list of linear rings.
        /// For Polygons with more than one of these rings, the first MUST be the exterior
        /// ring,
        /// and any others MUST be interior rings.
        /// </summary>
        public IList<IList<IList<IList<double>>>> Coordinates { get; }
    }
}
