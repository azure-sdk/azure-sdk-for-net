<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetCollectionAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call GetCollectionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Collections client = new AgriculturePlatformClient(endpoint, credential).GetCollectionsClient(apiVersion: "2024-11-01-preview");

Response<Collection> response = await client.GetCollectionAsync("CATALOG123", "COLLECTION123");
]]></code></example>
    </member>
    <member name="GetCollection(string,string,CancellationToken)">
      <example>
This sample shows how to call GetCollection.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Collections client = new AgriculturePlatformClient(endpoint, credential).GetCollectionsClient(apiVersion: "2024-11-01-preview");

Response<Collection> response = client.GetCollection("CATALOG123", "COLLECTION123");
]]></code></example>
    </member>
    <member name="GetCollectionAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetCollectionAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Collections client = new AgriculturePlatformClient(endpoint, credential).GetCollectionsClient(apiVersion: "2024-11-01-preview");

Response response = await client.GetCollectionAsync("CATALOG123", "COLLECTION123", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("schemaId").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="GetCollection(string,string,RequestContext)">
      <example>
This sample shows how to call GetCollection and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Collections client = new AgriculturePlatformClient(endpoint, credential).GetCollectionsClient(apiVersion: "2024-11-01-preview");

Response response = client.GetCollection("CATALOG123", "COLLECTION123", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("schemaId").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="CreateOrUpdateAsync(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrUpdateAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Collections client = new AgriculturePlatformClient(endpoint, credential).GetCollectionsClient(apiVersion: "2024-11-01-preview");

using RequestContent content = RequestContent.Create(new
{
    schemaId = "SCHEMA123",
    links = new object[]
    {
        new
        {
            rel = "DerivedFrom",
            href = "string",
            type = "Catalog",
        }
    },
    status = "string",
    source = "string",
    name = "string",
    description = "string",
    properties = new
    {
        key1 = "value1",
        key2 = 123.45F,
    },
});
Response response = await client.CreateOrUpdateAsync("CATALOG123", "COLLECTION123", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("schemaId").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="CreateOrUpdate(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrUpdate and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Collections client = new AgriculturePlatformClient(endpoint, credential).GetCollectionsClient(apiVersion: "2024-11-01-preview");

using RequestContent content = RequestContent.Create(new
{
    schemaId = "SCHEMA123",
    links = new object[]
    {
        new
        {
            rel = "DerivedFrom",
            href = "string",
            type = "Catalog",
        }
    },
    status = "string",
    source = "string",
    name = "string",
    description = "string",
    properties = new
    {
        key1 = "value1",
        key2 = 123.45F,
    },
});
Response response = client.CreateOrUpdate("CATALOG123", "COLLECTION123", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("schemaId").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="DeleteAsync(string,string,RequestContext)">
      <example>
This sample shows how to call DeleteAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Collections client = new AgriculturePlatformClient(endpoint, credential).GetCollectionsClient(apiVersion: "2024-11-01-preview");

Response response = await client.DeleteAsync("CATALOG123", "COLLECTION123");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Delete(string,string,RequestContext)">
      <example>
This sample shows how to call Delete.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Collections client = new AgriculturePlatformClient(endpoint, credential).GetCollectionsClient(apiVersion: "2024-11-01-preview");

Response response = client.Delete("CATALOG123", "COLLECTION123");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetCollectionsAsync(string,IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,int?,string,CancellationToken)">
      <example>
This sample shows how to call GetCollectionsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Collections client = new AgriculturePlatformClient(endpoint, credential).GetCollectionsClient(apiVersion: "2024-11-01-preview");

await foreach (Collection item in client.GetCollectionsAsync("CATALOG123"))
{
}
]]></code></example>
    </member>
    <member name="GetCollections(string,IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,int?,string,CancellationToken)">
      <example>
This sample shows how to call GetCollections.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Collections client = new AgriculturePlatformClient(endpoint, credential).GetCollectionsClient(apiVersion: "2024-11-01-preview");

foreach (Collection item in client.GetCollections("CATALOG123"))
{
}
]]></code></example>
    </member>
    <member name="GetCollectionsAsync(string,IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,int?,string,RequestContext)">
      <example>
This sample shows how to call GetCollectionsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Collections client = new AgriculturePlatformClient(endpoint, credential).GetCollectionsClient(apiVersion: "2024-11-01-preview");

await foreach (BinaryData item in client.GetCollectionsAsync("CATALOG123", null, null, null, null, null, null, null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("schemaId").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code></example>
    </member>
    <member name="GetCollections(string,IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,int?,string,RequestContext)">
      <example>
This sample shows how to call GetCollections and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Collections client = new AgriculturePlatformClient(endpoint, credential).GetCollectionsClient(apiVersion: "2024-11-01-preview");

foreach (BinaryData item in client.GetCollections("CATALOG123", null, null, null, null, null, null, null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("schemaId").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code></example>
    </member>
  </members>
</doc>