// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Microsoft.AgriculturePlatform.Samples
{
    public partial class Samples_Satellite
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SatelliteOperations_FetchItems_SatelliteFetchItems()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Satellite client = new AgriculturePlatformClient(endpoint, credential).GetSatelliteClient(apiVersion: "2024-11-01-preview");

            using RequestContent content = RequestContent.Create(new
            {
                startDateTime = "2024-06-05T12:42:29.217Z",
                credentials = new
                {
                    kind = "OAuthClientCredentials",
                    clientId = "ed16ee3f-9742-42cc-a71b-dcd90c3b6c03",
                    clientSecret = new
                    {
                        keyVaultUri = "https://bhkankv.vault.azure.net",
                        keyName = "SentinelHubClientSecret",
                        keyVersion = "8fa2ce7e42df4b65991f818298eb9435",
                    },
                },
                endDateTime = "2024-06-14T12:42:29.217Z",
                provider = "SentinelHub",
                itemUri = "/catalogs/CATALOG123/collections/utka-collection/items/utka-item",
                data = new
                {
                    imageNames = new object[]
            {
"NDVI",
"B04",
"B08",
"dataMask",
"CLM"
            },
                    imageFormats = new object[]
            {
"TIF"
            },
                    imageResolutions = new object[]
            {
10
            },
                },
                providerCollectionId = "sentinel-2-l2a",
            });
            Response response = client.FetchItems(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SatelliteOperations_FetchItems_SatelliteFetchItems_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Satellite client = new AgriculturePlatformClient(endpoint, credential).GetSatelliteClient(apiVersion: "2024-11-01-preview");

            using RequestContent content = RequestContent.Create(new
            {
                startDateTime = "2024-06-05T12:42:29.217Z",
                credentials = new
                {
                    kind = "OAuthClientCredentials",
                    clientId = "ed16ee3f-9742-42cc-a71b-dcd90c3b6c03",
                    clientSecret = new
                    {
                        keyVaultUri = "https://bhkankv.vault.azure.net",
                        keyName = "SentinelHubClientSecret",
                        keyVersion = "8fa2ce7e42df4b65991f818298eb9435",
                    },
                },
                endDateTime = "2024-06-14T12:42:29.217Z",
                provider = "SentinelHub",
                itemUri = "/catalogs/CATALOG123/collections/utka-collection/items/utka-item",
                data = new
                {
                    imageNames = new object[]
            {
"NDVI",
"B04",
"B08",
"dataMask",
"CLM"
            },
                    imageFormats = new object[]
            {
"TIF"
            },
                    imageResolutions = new object[]
            {
10
            },
                },
                providerCollectionId = "sentinel-2-l2a",
            });
            Response response = await client.FetchItemsAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SatelliteOperations_FetchItems_SatelliteFetchItems_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Satellite client = new AgriculturePlatformClient(endpoint, credential).GetSatelliteClient(apiVersion: "2024-11-01-preview");

            OauthClientCredentials credentials = new OauthClientCredentials("ed16ee3f-9742-42cc-a71b-dcd90c3b6c03", new KeyVaultProperties("https://bhkankv.vault.azure.net", "SentinelHubClientSecret", "8fa2ce7e42df4b65991f818298eb9435"));
            SatelliteData data = new SatelliteData
            {
                ImageNames = { "NDVI", "B04", "B08", "dataMask", "CLM" },
                ImageFormats = { "TIF" },
                ImageResolutions = { 10 },
            };
            Response<SatelliteFetchResponse> response = client.FetchItems(credentials, "SentinelHub", "/catalogs/CATALOG123/collections/utka-collection/items/utka-item", data, "sentinel-2-l2a");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SatelliteOperations_FetchItems_SatelliteFetchItems_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Satellite client = new AgriculturePlatformClient(endpoint, credential).GetSatelliteClient(apiVersion: "2024-11-01-preview");

            OauthClientCredentials credentials = new OauthClientCredentials("ed16ee3f-9742-42cc-a71b-dcd90c3b6c03", new KeyVaultProperties("https://bhkankv.vault.azure.net", "SentinelHubClientSecret", "8fa2ce7e42df4b65991f818298eb9435"));
            SatelliteData data = new SatelliteData
            {
                ImageNames = { "NDVI", "B04", "B08", "dataMask", "CLM" },
                ImageFormats = { "TIF" },
                ImageResolutions = { 10 },
            };
            Response<SatelliteFetchResponse> response = await client.FetchItemsAsync(credentials, "SentinelHub", "/catalogs/CATALOG123/collections/utka-collection/items/utka-item", data, "sentinel-2-l2a");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SatelliteOperations_SearchItems_SatelliteSearchItems()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Satellite client = new AgriculturePlatformClient(endpoint, credential).GetSatelliteClient(apiVersion: "2024-11-01-preview");

            using RequestContent content = RequestContent.Create(new
            {
                startDateTime = "2024-06-15T12:42:29.217Z",
                credentials = new
                {
                    kind = "OAuthClientCredentials",
                    clientId = "ed16ee3f-9742-42cc-a71b-dcd90c3b6c03",
                    clientSecret = new
                    {
                        keyVaultUri = "https://bhkankv.vault.azure.net",
                        keyName = "SentinelHubClientSecret",
                        keyVersion = "8fa2ce7e42df4b65991f818298eb9435",
                    },
                },
                endDateTime = "2024-06-22T12:42:29.217Z",
                intersects = new
                {
                    type = "Polygon",
                    coordinates = new object[]
            {
new object[]
{
new object[]
{
73.70457172393799,
20.545385304358106
},
new object[]
{
73.70457172393799,
20.545385304358106
},
new object[]
{
73.70448589324951,
20.542411534243367
},
new object[]
{
73.70877742767334,
20.541688176010233
},
new object[]
{
73.71023654937744,
20.545083911372505
},
new object[]
{
73.70663166046143,
20.546992723579137
},
new object[]
{
73.70457172393799,
20.545385304358106
}
}
            },
                },
                providerCollectionId = "sentinel-2-l2a",
                provider = "SentinelHub",
            });
            Response response = client.SearchItems(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("features")[0].GetProperty("stacVersion").ToString());
            Console.WriteLine(result.GetProperty("features")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("features")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("features")[0].GetProperty("properties").ToString());
            Console.WriteLine(result.GetProperty("features")[0].GetProperty("links")[0].ToString());
            Console.WriteLine(result.GetProperty("features")[0].GetProperty("assets").GetProperty("<key>").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SatelliteOperations_SearchItems_SatelliteSearchItems_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Satellite client = new AgriculturePlatformClient(endpoint, credential).GetSatelliteClient(apiVersion: "2024-11-01-preview");

            using RequestContent content = RequestContent.Create(new
            {
                startDateTime = "2024-06-15T12:42:29.217Z",
                credentials = new
                {
                    kind = "OAuthClientCredentials",
                    clientId = "ed16ee3f-9742-42cc-a71b-dcd90c3b6c03",
                    clientSecret = new
                    {
                        keyVaultUri = "https://bhkankv.vault.azure.net",
                        keyName = "SentinelHubClientSecret",
                        keyVersion = "8fa2ce7e42df4b65991f818298eb9435",
                    },
                },
                endDateTime = "2024-06-22T12:42:29.217Z",
                intersects = new
                {
                    type = "Polygon",
                    coordinates = new object[]
            {
new object[]
{
new object[]
{
73.70457172393799,
20.545385304358106
},
new object[]
{
73.70457172393799,
20.545385304358106
},
new object[]
{
73.70448589324951,
20.542411534243367
},
new object[]
{
73.70877742767334,
20.541688176010233
},
new object[]
{
73.71023654937744,
20.545083911372505
},
new object[]
{
73.70663166046143,
20.546992723579137
},
new object[]
{
73.70457172393799,
20.545385304358106
}
}
            },
                },
                providerCollectionId = "sentinel-2-l2a",
                provider = "SentinelHub",
            });
            Response response = await client.SearchItemsAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("features")[0].GetProperty("stacVersion").ToString());
            Console.WriteLine(result.GetProperty("features")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("features")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("features")[0].GetProperty("properties").ToString());
            Console.WriteLine(result.GetProperty("features")[0].GetProperty("links")[0].ToString());
            Console.WriteLine(result.GetProperty("features")[0].GetProperty("assets").GetProperty("<key>").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SatelliteOperations_SearchItems_SatelliteSearchItems_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Satellite client = new AgriculturePlatformClient(endpoint, credential).GetSatelliteClient(apiVersion: "2024-11-01-preview");

            OauthClientCredentials credentials = new OauthClientCredentials("ed16ee3f-9742-42cc-a71b-dcd90c3b6c03", new KeyVaultProperties("https://bhkankv.vault.azure.net", "SentinelHubClientSecret", "8fa2ce7e42df4b65991f818298eb9435"));
            Response<SearchFeaturesResponse> response = client.SearchItems(credentials, "SentinelHub", "sentinel-2-l2a");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SatelliteOperations_SearchItems_SatelliteSearchItems_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Satellite client = new AgriculturePlatformClient(endpoint, credential).GetSatelliteClient(apiVersion: "2024-11-01-preview");

            OauthClientCredentials credentials = new OauthClientCredentials("ed16ee3f-9742-42cc-a71b-dcd90c3b6c03", new KeyVaultProperties("https://bhkankv.vault.azure.net", "SentinelHubClientSecret", "8fa2ce7e42df4b65991f818298eb9435"));
            Response<SearchFeaturesResponse> response = await client.SearchItemsAsync(credentials, "SentinelHub", "sentinel-2-l2a");
        }
    }
}
