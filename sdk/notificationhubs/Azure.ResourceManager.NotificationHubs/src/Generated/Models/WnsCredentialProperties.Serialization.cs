// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.NotificationHubs.Models
{
    public partial class WnsCredentialProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(PackageSid))
            {
                writer.WritePropertyName("packageSid"u8);
                writer.WriteStringValue(PackageSid);
            }
            if (Optional.IsDefined(SecretKey))
            {
                writer.WritePropertyName("secretKey"u8);
                writer.WriteStringValue(SecretKey);
            }
            if (Optional.IsDefined(WindowsLiveEndpoint))
            {
                writer.WritePropertyName("windowsLiveEndpoint"u8);
                writer.WriteStringValue(WindowsLiveEndpoint);
            }
            if (Optional.IsDefined(CertificateKey))
            {
                writer.WritePropertyName("certificateKey"u8);
                writer.WriteStringValue(CertificateKey);
            }
            if (Optional.IsDefined(WnsCertificate))
            {
                writer.WritePropertyName("wnsCertificate"u8);
                writer.WriteStringValue(WnsCertificate);
            }
            writer.WriteEndObject();
        }

        internal static WnsCredentialProperties DeserializeWnsCredentialProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> packageSid = default;
            Optional<string> secretKey = default;
            Optional<string> windowsLiveEndpoint = default;
            Optional<string> certificateKey = default;
            Optional<string> wnsCertificate = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("packageSid"u8))
                {
                    packageSid = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("secretKey"u8))
                {
                    secretKey = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("windowsLiveEndpoint"u8))
                {
                    windowsLiveEndpoint = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("certificateKey"u8))
                {
                    certificateKey = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("wnsCertificate"u8))
                {
                    wnsCertificate = property.Value.GetString();
                    continue;
                }
            }
            return new WnsCredentialProperties(packageSid.Value, secretKey.Value, windowsLiveEndpoint.Value, certificateKey.Value, wnsCertificate.Value);
        }
    }
}
