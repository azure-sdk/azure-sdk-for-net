// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.ResourceManager.NotificationHubs.Models
{
    /// <summary> SharedAccessAuthorizationRule properties. </summary>
    public partial class SharedAccessAuthorizationRuleProperties
    {
        /// <summary> Initializes a new instance of <see cref="SharedAccessAuthorizationRuleProperties"/>. </summary>
        /// <param name="rights"> Gets or sets the rights associated with the rule. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="rights"/> is null. </exception>
        public SharedAccessAuthorizationRuleProperties(IEnumerable<AuthorizationRuleAccessRight> rights)
        {
            Argument.AssertNotNull(rights, nameof(rights));

            Rights = rights.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="SharedAccessAuthorizationRuleProperties"/>. </summary>
        /// <param name="rights"> Gets or sets the rights associated with the rule. </param>
        /// <param name="primaryKey">
        /// Gets a base64-encoded 256-bit primary key for signing and
        /// validating the SAS token.
        /// </param>
        /// <param name="secondaryKey">
        /// Gets a base64-encoded 256-bit primary key for signing and
        /// validating the SAS token.
        /// </param>
        /// <param name="keyName"> Gets a string that describes the authorization rule. </param>
        /// <param name="modifiedOn"> Gets the last modified time for this rule. </param>
        /// <param name="createdOn"> Gets the created time for this rule. </param>
        /// <param name="claimType"> Gets a string that describes the claim type. </param>
        /// <param name="claimValue"> Gets a string that describes the claim value. </param>
        /// <param name="revision"> Gets the revision number for the rule. </param>
        internal SharedAccessAuthorizationRuleProperties(IList<AuthorizationRuleAccessRight> rights, string primaryKey, string secondaryKey, string keyName, DateTimeOffset? modifiedOn, DateTimeOffset? createdOn, string claimType, string claimValue, int? revision)
        {
            Rights = rights;
            PrimaryKey = primaryKey;
            SecondaryKey = secondaryKey;
            KeyName = keyName;
            ModifiedOn = modifiedOn;
            CreatedOn = createdOn;
            ClaimType = claimType;
            ClaimValue = claimValue;
            Revision = revision;
        }

        /// <summary> Gets or sets the rights associated with the rule. </summary>
        public IList<AuthorizationRuleAccessRight> Rights { get; }
        /// <summary>
        /// Gets a base64-encoded 256-bit primary key for signing and
        /// validating the SAS token.
        /// </summary>
        public string PrimaryKey { get; set; }
        /// <summary>
        /// Gets a base64-encoded 256-bit primary key for signing and
        /// validating the SAS token.
        /// </summary>
        public string SecondaryKey { get; set; }
        /// <summary> Gets a string that describes the authorization rule. </summary>
        public string KeyName { get; }
        /// <summary> Gets the last modified time for this rule. </summary>
        public DateTimeOffset? ModifiedOn { get; }
        /// <summary> Gets the created time for this rule. </summary>
        public DateTimeOffset? CreatedOn { get; }
        /// <summary> Gets a string that describes the claim type. </summary>
        public string ClaimType { get; }
        /// <summary> Gets a string that describes the claim value. </summary>
        public string ClaimValue { get; }
        /// <summary> Gets the revision number for the rule. </summary>
        public int? Revision { get; }
    }
}
