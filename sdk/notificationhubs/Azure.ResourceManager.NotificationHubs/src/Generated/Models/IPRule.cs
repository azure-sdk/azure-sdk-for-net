// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.ResourceManager.NotificationHubs.Models
{
    /// <summary> A network authorization rule that filters traffic based on IP address. </summary>
    public partial class IPRule
    {
        /// <summary> Initializes a new instance of <see cref="IPRule"/>. </summary>
        /// <param name="ipMask"> IP mask. </param>
        /// <param name="rights"> List of access rights. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="ipMask"/> or <paramref name="rights"/> is null. </exception>
        public IPRule(string ipMask, IEnumerable<AuthorizationRuleAccessRight> rights)
        {
            Argument.AssertNotNull(ipMask, nameof(ipMask));
            Argument.AssertNotNull(rights, nameof(rights));

            IPMask = ipMask;
            Rights = rights.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="IPRule"/>. </summary>
        /// <param name="ipMask"> IP mask. </param>
        /// <param name="rights"> List of access rights. </param>
        internal IPRule(string ipMask, IList<AuthorizationRuleAccessRight> rights)
        {
            IPMask = ipMask;
            Rights = rights;
        }

        /// <summary> IP mask. </summary>
        public string IPMask { get; set; }
        /// <summary> List of access rights. </summary>
        public IList<AuthorizationRuleAccessRight> Rights { get; }
    }
}
