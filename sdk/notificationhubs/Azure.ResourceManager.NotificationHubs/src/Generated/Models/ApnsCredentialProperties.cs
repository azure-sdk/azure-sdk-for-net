// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.ResourceManager.NotificationHubs.Models
{
    /// <summary> Description of a NotificationHub ApnsCredential. </summary>
    public partial class ApnsCredentialProperties
    {
        /// <summary> Initializes a new instance of <see cref="ApnsCredentialProperties"/>. </summary>
        /// <param name="endpoint"> Gets or sets the endpoint of this credential. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> is null. </exception>
        public ApnsCredentialProperties(string endpoint)
        {
            Argument.AssertNotNull(endpoint, nameof(endpoint));

            Endpoint = endpoint;
        }

        /// <summary> Initializes a new instance of <see cref="ApnsCredentialProperties"/>. </summary>
        /// <param name="apnsCertificate"> Gets or sets the APNS certificate. </param>
        /// <param name="certificateKey"> Gets or sets the certificate key. </param>
        /// <param name="endpoint"> Gets or sets the endpoint of this credential. </param>
        /// <param name="thumbprint"> Gets or sets the APNS certificate Thumbprint. </param>
        /// <param name="keyId">
        /// Gets or sets a 10-character key identifier (kid) key, obtained from
        /// your developer account
        /// </param>
        /// <param name="appName"> Gets or sets the name of the application. </param>
        /// <param name="appId">
        /// Gets or sets the issuer (iss) registered claim key, whose value is
        /// your 10-character Team ID, obtained from your developer account
        /// </param>
        /// <param name="token">
        /// Gets or sets provider Authentication Token, obtained through your
        /// developer account
        /// </param>
        internal ApnsCredentialProperties(string apnsCertificate, string certificateKey, string endpoint, string thumbprint, string keyId, string appName, string appId, string token)
        {
            ApnsCertificate = apnsCertificate;
            CertificateKey = certificateKey;
            Endpoint = endpoint;
            Thumbprint = thumbprint;
            KeyId = keyId;
            AppName = appName;
            AppId = appId;
            Token = token;
        }

        /// <summary> Gets or sets the APNS certificate. </summary>
        public string ApnsCertificate { get; set; }
        /// <summary> Gets or sets the certificate key. </summary>
        public string CertificateKey { get; set; }
        /// <summary> Gets or sets the endpoint of this credential. </summary>
        public string Endpoint { get; set; }
        /// <summary> Gets or sets the APNS certificate Thumbprint. </summary>
        public string Thumbprint { get; set; }
        /// <summary>
        /// Gets or sets a 10-character key identifier (kid) key, obtained from
        /// your developer account
        /// </summary>
        public string KeyId { get; set; }
        /// <summary> Gets or sets the name of the application. </summary>
        public string AppName { get; set; }
        /// <summary>
        /// Gets or sets the issuer (iss) registered claim key, whose value is
        /// your 10-character Team ID, obtained from your developer account
        /// </summary>
        public string AppId { get; set; }
        /// <summary>
        /// Gets or sets provider Authentication Token, obtained through your
        /// developer account
        /// </summary>
        public string Token { get; set; }
    }
}
