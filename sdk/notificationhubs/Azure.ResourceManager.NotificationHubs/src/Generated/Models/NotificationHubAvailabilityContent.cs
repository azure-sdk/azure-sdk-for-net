// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.NotificationHubs.Models
{
    /// <summary>
    /// Parameters supplied to the Check Name Availability for Namespace and
    /// NotificationHubs.
    /// </summary>
    public partial class NotificationHubAvailabilityContent : TrackedResourceData
    {
        /// <summary> Initializes a new instance of <see cref="NotificationHubAvailabilityContent"/>. </summary>
        /// <param name="location"> The location. </param>
        public NotificationHubAvailabilityContent(AzureLocation location) : base(location)
        {
        }

        /// <summary> Initializes a new instance of <see cref="NotificationHubAvailabilityContent"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="isAvailiable"> Not used and deprecated since API version 2023-01-01-preview. </param>
        /// <param name="sku"> The Sku description for a namespace. </param>
        internal NotificationHubAvailabilityContent(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, string> tags, AzureLocation location, bool? isAvailiable, NotificationHubSku sku) : base(id, name, resourceType, systemData, tags, location)
        {
            IsAvailiable = isAvailiable;
            Sku = sku;
        }

        /// <summary> Not used and deprecated since API version 2023-01-01-preview. </summary>
        public bool? IsAvailiable { get; set; }
        /// <summary> The Sku description for a namespace. </summary>
        public NotificationHubSku Sku { get; set; }
    }
}
