// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;

namespace Azure.ResourceManager.Notificationhubs.Mocking
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public partial class MockableNotificationhubsArmClient : ArmResource
    {
        /// <summary> Initializes a new instance of the <see cref="MockableNotificationhubsArmClient"/> class for mocking. </summary>
        protected MockableNotificationhubsArmClient()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="MockableNotificationhubsArmClient"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableNotificationhubsArmClient(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        internal MockableNotificationhubsArmClient(ArmClient client) : this(client, ResourceIdentifier.Root)
        {
        }

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary>
        /// Gets an object representing a <see cref="NotificationHubResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="NotificationHubResource.CreateResourceIdentifier" /> to create a <see cref="NotificationHubResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="NotificationHubResource"/> object. </returns>
        public virtual NotificationHubResource GetNotificationHubResource(ResourceIdentifier id)
        {
            NotificationHubResource.ValidateResourceId(id);
            return new NotificationHubResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="NamespaceResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="NamespaceResource.CreateResourceIdentifier" /> to create a <see cref="NamespaceResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="NamespaceResource"/> object. </returns>
        public virtual NamespaceResource GetNamespaceResource(ResourceIdentifier id)
        {
            NamespaceResource.ValidateResourceId(id);
            return new NamespaceResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="NamespaceNotificationHubAuthorizationRuleResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="NamespaceNotificationHubAuthorizationRuleResource.CreateResourceIdentifier" /> to create a <see cref="NamespaceNotificationHubAuthorizationRuleResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="NamespaceNotificationHubAuthorizationRuleResource"/> object. </returns>
        public virtual NamespaceNotificationHubAuthorizationRuleResource GetNamespaceNotificationHubAuthorizationRuleResource(ResourceIdentifier id)
        {
            NamespaceNotificationHubAuthorizationRuleResource.ValidateResourceId(id);
            return new NamespaceNotificationHubAuthorizationRuleResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="NamespaceAuthorizationRuleResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="NamespaceAuthorizationRuleResource.CreateResourceIdentifier" /> to create a <see cref="NamespaceAuthorizationRuleResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="NamespaceAuthorizationRuleResource"/> object. </returns>
        public virtual NamespaceAuthorizationRuleResource GetNamespaceAuthorizationRuleResource(ResourceIdentifier id)
        {
            NamespaceAuthorizationRuleResource.ValidateResourceId(id);
            return new NamespaceAuthorizationRuleResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="PrivateEndpointConnectionResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="PrivateEndpointConnectionResource.CreateResourceIdentifier" /> to create a <see cref="PrivateEndpointConnectionResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PrivateEndpointConnectionResource"/> object. </returns>
        public virtual PrivateEndpointConnectionResource GetPrivateEndpointConnectionResource(ResourceIdentifier id)
        {
            PrivateEndpointConnectionResource.ValidateResourceId(id);
            return new PrivateEndpointConnectionResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="NotificationhubsPrivateLinkResourceDataResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="NotificationhubsPrivateLinkResourceDataResource.CreateResourceIdentifier" /> to create a <see cref="NotificationhubsPrivateLinkResourceDataResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="NotificationhubsPrivateLinkResourceDataResource"/> object. </returns>
        public virtual NotificationhubsPrivateLinkResourceDataResource GetNotificationhubsPrivateLinkResourceDataResource(ResourceIdentifier id)
        {
            NotificationhubsPrivateLinkResourceDataResource.ValidateResourceId(id);
            return new NotificationhubsPrivateLinkResourceDataResource(Client, id);
        }
    }
}
