// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.SqlVirtualMachine.Models
{
    /// <summary> Status of last troubleshooting operation on this SQL VM. </summary>
    public partial class TroubleshootStatus
    {
        /// <summary> Initializes a new instance of TroubleshootStatus. </summary>
        internal TroubleshootStatus()
        {
        }

        /// <summary> Initializes a new instance of TroubleshootStatus. </summary>
        /// <param name="rootCause"> Root cause of the issue. </param>
        /// <param name="lastTriggerTimeUtc"> Last troubleshooting trigger time in UTC. </param>
        /// <param name="startTimeUtc"> Start time in UTC format. </param>
        /// <param name="endTimeUtc"> End time in UTC format. </param>
        /// <param name="troubleShootingScenario"> SQL VM troubleshooting scenario. </param>
        /// <param name="properties"> Troubleshooting properties. </param>
        internal TroubleshootStatus(string rootCause, DateTimeOffset? lastTriggerTimeUtc, DateTimeOffset? startTimeUtc, DateTimeOffset? endTimeUtc, TroubleShootingScenario? troubleShootingScenario, TroubleshootAdditionalProperties properties)
        {
            RootCause = rootCause;
            LastTriggerTimeUtc = lastTriggerTimeUtc;
            StartTimeUtc = startTimeUtc;
            EndTimeUtc = endTimeUtc;
            TroubleShootingScenario = troubleShootingScenario;
            Properties = properties;
        }

        /// <summary> Root cause of the issue. </summary>
        public string RootCause { get; }
        /// <summary> Last troubleshooting trigger time in UTC. </summary>
        public DateTimeOffset? LastTriggerTimeUtc { get; }
        /// <summary> Start time in UTC format. </summary>
        public DateTimeOffset? StartTimeUtc { get; }
        /// <summary> End time in UTC format. </summary>
        public DateTimeOffset? EndTimeUtc { get; }
        /// <summary> SQL VM troubleshooting scenario. </summary>
        public TroubleShootingScenario? TroubleShootingScenario { get; }
        /// <summary> Troubleshooting properties. </summary>
        internal TroubleshootAdditionalProperties Properties { get; }
        /// <summary> The name of the availability group. </summary>
        public string UnHealthyReplicaAvailabilityGroupName
        {
            get => Properties?.UnHealthyReplicaAvailabilityGroupName;
        }
    }
}
