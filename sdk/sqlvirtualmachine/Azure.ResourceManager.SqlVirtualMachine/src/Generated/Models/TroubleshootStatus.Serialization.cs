// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.SqlVirtualMachine.Models
{
    public partial class TroubleshootStatus
    {
        internal static TroubleshootStatus DeserializeTroubleshootStatus(JsonElement element)
        {
            Optional<string> rootCause = default;
            Optional<DateTimeOffset> lastTriggerTimeUtc = default;
            Optional<DateTimeOffset> startTimeUtc = default;
            Optional<DateTimeOffset> endTimeUtc = default;
            Optional<TroubleShootingScenario> troubleShootingScenario = default;
            Optional<TroubleshootAdditionalProperties> properties = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("rootCause"))
                {
                    rootCause = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("lastTriggerTimeUtc"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    lastTriggerTimeUtc = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("startTimeUtc"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    startTimeUtc = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("endTimeUtc"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    endTimeUtc = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("troubleShootingScenario"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    troubleShootingScenario = new TroubleShootingScenario(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    properties = TroubleshootAdditionalProperties.DeserializeTroubleshootAdditionalProperties(property.Value);
                    continue;
                }
            }
            return new TroubleshootStatus(rootCause.Value, Optional.ToNullable(lastTriggerTimeUtc), Optional.ToNullable(startTimeUtc), Optional.ToNullable(endTimeUtc), Optional.ToNullable(troubleShootingScenario), properties.Value);
        }
    }
}
