// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.ResourceManager.SqlVirtualMachine.Samples
{
    public partial class Sample_AvailabilityGroupListenerCollection
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_CreatesOrUpdatesAnAvailabilityGroupListenerUsingLoadBalancerThisIsUsedForVMsPresentInSingleSubnet()
        {
            // Generated from example definition: 2023-10-01/CreateOrUpdateAvailabilityGroupListener.json
            // this example is just showing the usage of "AvailabilityGroupListener_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SqlVirtualMachineGroupResource created on azure
            // for more information of creating SqlVirtualMachineGroupResource, please refer to the document of SqlVirtualMachineGroupResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "testrg";
            string sqlVirtualMachineGroupName = "testvmgroup";
            ResourceIdentifier sqlVirtualMachineGroupResourceId = SqlVirtualMachineGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, sqlVirtualMachineGroupName);
            SqlVirtualMachineGroupResource sqlVirtualMachineGroup = client.GetSqlVirtualMachineGroupResource(sqlVirtualMachineGroupResourceId);

            // get the collection of this AvailabilityGroupListenerResource
            AvailabilityGroupListenerCollection collection = sqlVirtualMachineGroup.GetAvailabilityGroupListeners();

            // invoke the operation
            string availabilityGroupListenerName = "agl-test";
            AvailabilityGroupListenerData data = new AvailabilityGroupListenerData();
            ArmOperation<AvailabilityGroupListenerResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, availabilityGroupListenerName, data);
            AvailabilityGroupListenerResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AvailabilityGroupListenerData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_CreatesOrUpdatesAnAvailabilityGroupListenerThisIsUsedForVMsPresentInMultiSubnet()
        {
            // Generated from example definition: 2023-10-01/CreateOrUpdateAvailabilityGroupListenerWithMultiSubnet.json
            // this example is just showing the usage of "AvailabilityGroupListener_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SqlVirtualMachineGroupResource created on azure
            // for more information of creating SqlVirtualMachineGroupResource, please refer to the document of SqlVirtualMachineGroupResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "testrg";
            string sqlVirtualMachineGroupName = "testvmgroup";
            ResourceIdentifier sqlVirtualMachineGroupResourceId = SqlVirtualMachineGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, sqlVirtualMachineGroupName);
            SqlVirtualMachineGroupResource sqlVirtualMachineGroup = client.GetSqlVirtualMachineGroupResource(sqlVirtualMachineGroupResourceId);

            // get the collection of this AvailabilityGroupListenerResource
            AvailabilityGroupListenerCollection collection = sqlVirtualMachineGroup.GetAvailabilityGroupListeners();

            // invoke the operation
            string availabilityGroupListenerName = "agl-test";
            AvailabilityGroupListenerData data = new AvailabilityGroupListenerData();
            ArmOperation<AvailabilityGroupListenerResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, availabilityGroupListenerName, data);
            AvailabilityGroupListenerResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AvailabilityGroupListenerData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_GetsAnAvailabilityGroupListener()
        {
            // Generated from example definition: 2023-10-01/GetAvailabilityGroupListener.json
            // this example is just showing the usage of "AvailabilityGroupListener_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SqlVirtualMachineGroupResource created on azure
            // for more information of creating SqlVirtualMachineGroupResource, please refer to the document of SqlVirtualMachineGroupResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "testrg";
            string sqlVirtualMachineGroupName = "testvmgroup";
            ResourceIdentifier sqlVirtualMachineGroupResourceId = SqlVirtualMachineGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, sqlVirtualMachineGroupName);
            SqlVirtualMachineGroupResource sqlVirtualMachineGroup = client.GetSqlVirtualMachineGroupResource(sqlVirtualMachineGroupResourceId);

            // get the collection of this AvailabilityGroupListenerResource
            AvailabilityGroupListenerCollection collection = sqlVirtualMachineGroup.GetAvailabilityGroupListeners();

            // invoke the operation
            string availabilityGroupListenerName = "agl-test";
            AvailabilityGroupListenerResource result = await collection.GetAsync(availabilityGroupListenerName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AvailabilityGroupListenerData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetAll_ListsAllAvailabilityGroupListenersInASQLVirtualMachineGroup()
        {
            // Generated from example definition: 2023-10-01/ListByGroupAvailabilityGroupListener.json
            // this example is just showing the usage of "AvailabilityGroupListener_ListByGroup" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SqlVirtualMachineGroupResource created on azure
            // for more information of creating SqlVirtualMachineGroupResource, please refer to the document of SqlVirtualMachineGroupResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "testrg";
            string sqlVirtualMachineGroupName = "testvmgroup";
            ResourceIdentifier sqlVirtualMachineGroupResourceId = SqlVirtualMachineGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, sqlVirtualMachineGroupName);
            SqlVirtualMachineGroupResource sqlVirtualMachineGroup = client.GetSqlVirtualMachineGroupResource(sqlVirtualMachineGroupResourceId);

            // get the collection of this AvailabilityGroupListenerResource
            AvailabilityGroupListenerCollection collection = sqlVirtualMachineGroup.GetAvailabilityGroupListeners();

            // invoke the operation and iterate over the result
            await foreach (AvailabilityGroupListenerResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                AvailabilityGroupListenerData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Exists_GetsAnAvailabilityGroupListener()
        {
            // Generated from example definition: 2023-10-01/GetAvailabilityGroupListener.json
            // this example is just showing the usage of "AvailabilityGroupListener_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SqlVirtualMachineGroupResource created on azure
            // for more information of creating SqlVirtualMachineGroupResource, please refer to the document of SqlVirtualMachineGroupResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "testrg";
            string sqlVirtualMachineGroupName = "testvmgroup";
            ResourceIdentifier sqlVirtualMachineGroupResourceId = SqlVirtualMachineGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, sqlVirtualMachineGroupName);
            SqlVirtualMachineGroupResource sqlVirtualMachineGroup = client.GetSqlVirtualMachineGroupResource(sqlVirtualMachineGroupResourceId);

            // get the collection of this AvailabilityGroupListenerResource
            AvailabilityGroupListenerCollection collection = sqlVirtualMachineGroup.GetAvailabilityGroupListeners();

            // invoke the operation
            string availabilityGroupListenerName = "agl-test";
            bool result = await collection.ExistsAsync(availabilityGroupListenerName);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetIfExists_GetsAnAvailabilityGroupListener()
        {
            // Generated from example definition: 2023-10-01/GetAvailabilityGroupListener.json
            // this example is just showing the usage of "AvailabilityGroupListener_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SqlVirtualMachineGroupResource created on azure
            // for more information of creating SqlVirtualMachineGroupResource, please refer to the document of SqlVirtualMachineGroupResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "testrg";
            string sqlVirtualMachineGroupName = "testvmgroup";
            ResourceIdentifier sqlVirtualMachineGroupResourceId = SqlVirtualMachineGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, sqlVirtualMachineGroupName);
            SqlVirtualMachineGroupResource sqlVirtualMachineGroup = client.GetSqlVirtualMachineGroupResource(sqlVirtualMachineGroupResourceId);

            // get the collection of this AvailabilityGroupListenerResource
            AvailabilityGroupListenerCollection collection = sqlVirtualMachineGroup.GetAvailabilityGroupListeners();

            // invoke the operation
            string availabilityGroupListenerName = "agl-test";
            NullableResponse<AvailabilityGroupListenerResource> response = await collection.GetIfExistsAsync(availabilityGroupListenerName);
            AvailabilityGroupListenerResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine("Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                AvailabilityGroupListenerData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }
    }
}
