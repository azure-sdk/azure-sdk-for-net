// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.SqlVirtualMachine.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.SqlVirtualMachine.Samples
{
    public partial class Sample_SqlVirtualMachineGroupResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_GetsASQLVirtualMachineGroup()
        {
            // Generated from example definition: 2023-10-01/GetSqlVirtualMachineGroup.json
            // this example is just showing the usage of "SqlVirtualMachineGroup_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SqlVirtualMachineGroupResource created on azure
            // for more information of creating SqlVirtualMachineGroupResource, please refer to the document of SqlVirtualMachineGroupResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "testrg";
            string sqlVirtualMachineGroupName = "testvmgroup";
            ResourceIdentifier sqlVirtualMachineGroupResourceId = SqlVirtualMachineGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, sqlVirtualMachineGroupName);
            SqlVirtualMachineGroupResource sqlVirtualMachineGroup = client.GetSqlVirtualMachineGroupResource(sqlVirtualMachineGroupResourceId);

            // invoke the operation
            SqlVirtualMachineGroupResource result = await sqlVirtualMachineGroup.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            SqlVirtualMachineGroupData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_DeletesASQLVirtualMachineGroup()
        {
            // Generated from example definition: 2023-10-01/DeleteSqlVirtualMachineGroup.json
            // this example is just showing the usage of "SqlVirtualMachineGroup_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SqlVirtualMachineGroupResource created on azure
            // for more information of creating SqlVirtualMachineGroupResource, please refer to the document of SqlVirtualMachineGroupResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "testrg";
            string sqlVirtualMachineGroupName = "testvmgroup";
            ResourceIdentifier sqlVirtualMachineGroupResourceId = SqlVirtualMachineGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, sqlVirtualMachineGroupName);
            SqlVirtualMachineGroupResource sqlVirtualMachineGroup = client.GetSqlVirtualMachineGroupResource(sqlVirtualMachineGroupResourceId);

            // invoke the operation
            await sqlVirtualMachineGroup.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_UpdatesASQLVirtualMachineGroupTags()
        {
            // Generated from example definition: 2023-10-01/UpdateSqlVirtualMachineGroup.json
            // this example is just showing the usage of "SqlVirtualMachineGroup_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SqlVirtualMachineGroupResource created on azure
            // for more information of creating SqlVirtualMachineGroupResource, please refer to the document of SqlVirtualMachineGroupResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "testrg";
            string sqlVirtualMachineGroupName = "testvmgroup";
            ResourceIdentifier sqlVirtualMachineGroupResourceId = SqlVirtualMachineGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, sqlVirtualMachineGroupName);
            SqlVirtualMachineGroupResource sqlVirtualMachineGroup = client.GetSqlVirtualMachineGroupResource(sqlVirtualMachineGroupResourceId);

            // invoke the operation
            SqlVirtualMachineGroupPatch patch = new SqlVirtualMachineGroupPatch();
            ArmOperation<SqlVirtualMachineGroupResource> lro = await sqlVirtualMachineGroup.UpdateAsync(WaitUntil.Completed, patch);
            SqlVirtualMachineGroupResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            SqlVirtualMachineGroupData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetBySqlVmGroup_GetsTheListOfSqlVirtualMachinesInASQLVirtualMachineGroup()
        {
            // Generated from example definition: 2023-10-01/ListBySqlVirtualMachineGroupSqlVirtualMachine.json
            // this example is just showing the usage of "SqlVirtualMachineGroups_ListBySqlVmGroup" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SqlVirtualMachineGroupResource created on azure
            // for more information of creating SqlVirtualMachineGroupResource, please refer to the document of SqlVirtualMachineGroupResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "testrg";
            string sqlVirtualMachineGroupName = "testvm";
            ResourceIdentifier sqlVirtualMachineGroupResourceId = SqlVirtualMachineGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, sqlVirtualMachineGroupName);
            SqlVirtualMachineGroupResource sqlVirtualMachineGroup = client.GetSqlVirtualMachineGroupResource(sqlVirtualMachineGroupResourceId);

            // invoke the operation and iterate over the result
            await foreach (SqlVirtualMachineResource item in sqlVirtualMachineGroup.GetBySqlVmGroupAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                SqlVirtualMachineData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine("Succeeded");
        }
    }
}
