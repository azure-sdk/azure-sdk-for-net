// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Automation.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Automation
{
    /// <summary>
    /// A class representing the Package data model.
    /// Definition of the Package type.
    /// </summary>
    public partial class PackageData : TrackedResourceData
    {
        /// <summary> Initializes a new instance of PackageData. </summary>
        /// <param name="location"> The location. </param>
        public PackageData(AzureLocation location) : base(location)
        {
        }

        /// <summary> Initializes a new instance of PackageData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="default"> Gets or sets the isGlobal flag of the package. </param>
        /// <param name="version"> Gets or sets the version of the Package. </param>
        /// <param name="sizeInBytes"> Gets or sets the size in bytes of the Package. </param>
        /// <param name="provisioningState"> Gets or sets the provisioning state of the Package. </param>
        /// <param name="contentLink"> Gets or sets the contentLink of the Package. </param>
        /// <param name="error"> Gets or sets the error info of the Package. </param>
        /// <param name="allOf"> Metadata pertaining to creation and last modification of the resource. </param>
        internal PackageData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, string> tags, AzureLocation location, bool? @default, string version, long? sizeInBytes, PackageProvisioningState? provisioningState, AutomationContentLink contentLink, PackageErrorInfo error, SystemData allOf) : base(id, name, resourceType, systemData, tags, location)
        {
            Default = @default;
            Version = version;
            SizeInBytes = sizeInBytes;
            ProvisioningState = provisioningState;
            ContentLink = contentLink;
            Error = error;
            AllOf = allOf;
        }

        /// <summary> Gets or sets the isGlobal flag of the package. </summary>
        public bool? Default { get; set; }
        /// <summary> Gets or sets the version of the Package. </summary>
        public string Version { get; set; }
        /// <summary> Gets or sets the size in bytes of the Package. </summary>
        public long? SizeInBytes { get; set; }
        /// <summary> Gets or sets the provisioning state of the Package. </summary>
        public PackageProvisioningState? ProvisioningState { get; }
        /// <summary> Gets or sets the contentLink of the Package. </summary>
        public AutomationContentLink ContentLink { get; set; }
        /// <summary> Gets or sets the error info of the Package. </summary>
        public PackageErrorInfo Error { get; set; }
        /// <summary> Metadata pertaining to creation and last modification of the resource. </summary>
        public SystemData AllOf { get; }
    }
}
