// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Automation
{
    /// <summary>
    /// A class representing the RuntimeEnvironment data model.
    /// Definition of the Runtime Environment type.
    /// </summary>
    public partial class RuntimeEnvironmentData : TrackedResourceData
    {
        /// <summary> Initializes a new instance of RuntimeEnvironmentData. </summary>
        /// <param name="location"> The location. </param>
        public RuntimeEnvironmentData(AzureLocation location) : base(location)
        {
            DefaultPackages = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of RuntimeEnvironmentData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="defaultPackages"> List of Default packages for Environment. </param>
        /// <param name="description"> Gets or sets the description. </param>
        /// <param name="language"> Language of Runtime Environment. </param>
        /// <param name="version"> Version of Language. </param>
        internal RuntimeEnvironmentData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, string> tags, AzureLocation location, IDictionary<string, string> defaultPackages, string description, string language, string version) : base(id, name, resourceType, systemData, tags, location)
        {
            DefaultPackages = defaultPackages;
            Description = description;
            Language = language;
            Version = version;
        }

        /// <summary> List of Default packages for Environment. </summary>
        public IDictionary<string, string> DefaultPackages { get; }
        /// <summary> Gets or sets the description. </summary>
        public string Description { get; set; }
        /// <summary> Language of Runtime Environment. </summary>
        public string Language { get; set; }
        /// <summary> Version of Language. </summary>
        public string Version { get; set; }
    }
}
