// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.ManagementGroups;
using Azure.ResourceManager.Quota;
using Azure.ResourceManager.Quota.Models;

namespace Azure.ResourceManager.Quota.Samples
{
    public partial class Sample_ManagementGroupResourceExtensions
    {
        // GroupQuotaLimitsRequests_List
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetGroupQuotaLimitsRequests_GroupQuotaLimitsRequestsList()
        {
            // Generated from example definition: specification/quota/resource-manager/Microsoft.Quota/preview/2023-06-01-preview/examples/GroupQuotaLimitsRequests/GroupQuotaLimitsRequests_List.json
            // this example is just showing the usage of "GroupQuotaLimitsRequests_List" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ManagementGroupResource created on azure
            // for more information of creating ManagementGroupResource, please refer to the document of ManagementGroupResource
            string mgId = "E7EC67B3-7657-4966-BFFC-41EFD36BAA09";
            ResourceIdentifier managementGroupResourceId = ManagementGroupResource.CreateResourceIdentifier(mgId);
            ManagementGroupResource managementGroupResource = client.GetManagementGroupResource(managementGroupResourceId);

            // invoke the operation and iterate over the result
            string resourceProviderScope = "providers/Microsoft.Compute/locations/westus";
            string groupQuotaName = "groupquota1";
            await foreach (SubmittedResourceRequestStatus item in managementGroupResource.GetGroupQuotaLimitsRequestsAsync(resourceProviderScope, groupQuotaName))
            {
                Console.WriteLine($"Succeeded: {item}");
            }

            Console.WriteLine($"Succeeded");
        }

        // GroupQuotaLimitsRequests_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetGroupQuotaLimitsRequest_GroupQuotaLimitsRequestsGet()
        {
            // Generated from example definition: specification/quota/resource-manager/Microsoft.Quota/preview/2023-06-01-preview/examples/GroupQuotaLimitsRequests/GroupQuotaLimitsRequests_Get.json
            // this example is just showing the usage of "GroupQuotaLimitsRequests_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ManagementGroupResource created on azure
            // for more information of creating ManagementGroupResource, please refer to the document of ManagementGroupResource
            string mgId = "E7EC67B3-7657-4966-BFFC-41EFD36BAA09";
            ResourceIdentifier managementGroupResourceId = ManagementGroupResource.CreateResourceIdentifier(mgId);
            ManagementGroupResource managementGroupResource = client.GetManagementGroupResource(managementGroupResourceId);

            // invoke the operation
            string resourceProviderScope = "providers/Microsoft.Compute/locations/westus";
            string groupQuotaName = "groupquota1";
            string requestId = "someId";
            SubmittedResourceRequestStatus result = await managementGroupResource.GetGroupQuotaLimitsRequestAsync(resourceProviderScope, groupQuotaName, requestId);

            Console.WriteLine($"Succeeded: {result}");
        }

        // SubscriptionQuotaAllocationRequests_Get_Request_ForCompute
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetGroupQuotaSubscriptionQuotaAllocationRequest_SubscriptionQuotaAllocationRequestsGetRequestForCompute()
        {
            // Generated from example definition: specification/quota/resource-manager/Microsoft.Quota/preview/2023-06-01-preview/examples/SubscriptionQuotaAllocationRequests/SubscriptionQuotaAllocationRequests_Get_Request-Compute.json
            // this example is just showing the usage of "GroupQuotaSubscriptionQuotaAllocationRequests_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ManagementGroupResource created on azure
            // for more information of creating ManagementGroupResource, please refer to the document of ManagementGroupResource
            string mgId = "E7EC67B3-7657-4966-BFFC-41EFD36BAA09";
            ResourceIdentifier managementGroupResourceId = ManagementGroupResource.CreateResourceIdentifier(mgId);
            ManagementGroupResource managementGroupResource = client.GetManagementGroupResource(managementGroupResourceId);

            // invoke the operation
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceProviderScope = "providers/Microsoft.Compute/locations/westus";
            string groupQuotaName = "groupquota1";
            string allocationId = "11111111-1111-1111-1111-111111111111";
            SubscriptionQuotaAllocationRequest result = await managementGroupResource.GetGroupQuotaSubscriptionQuotaAllocationRequestAsync(subscriptionId, resourceProviderScope, groupQuotaName, allocationId);

            Console.WriteLine($"Succeeded: {result}");
        }

        // SubscriptionQuotaAllocationRequests_List_Request_ForCompute
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetGroupQuotaSubscriptionQuotaAllocationRequests_SubscriptionQuotaAllocationRequestsListRequestForCompute()
        {
            // Generated from example definition: specification/quota/resource-manager/Microsoft.Quota/preview/2023-06-01-preview/examples/SubscriptionQuotaAllocationRequests/SubscriptionQuotaAllocationRequests_List_Request-Compute.json
            // this example is just showing the usage of "GroupQuotaSubscriptionQuotaAllocationRequests_List" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ManagementGroupResource created on azure
            // for more information of creating ManagementGroupResource, please refer to the document of ManagementGroupResource
            string mgId = "E7EC67B3-7657-4966-BFFC-41EFD36BAA09";
            ResourceIdentifier managementGroupResourceId = ManagementGroupResource.CreateResourceIdentifier(mgId);
            ManagementGroupResource managementGroupResource = client.GetManagementGroupResource(managementGroupResourceId);

            // invoke the operation and iterate over the result
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceProviderScope = "providers/Microsoft.Compute/locations/westus";
            string groupQuotaName = "groupquota1";
            await foreach (SubscriptionQuotaAllocationRequest item in managementGroupResource.GetGroupQuotaSubscriptionQuotaAllocationRequestsAsync(subscriptionId, resourceProviderScope, groupQuotaName))
            {
                Console.WriteLine($"Succeeded: {item}");
            }

            Console.WriteLine($"Succeeded");
        }
    }
}
