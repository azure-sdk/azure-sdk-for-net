// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Quota.Models
{
    public partial class SubscriptionQuotaDetails : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(QuotaSources))
            {
                writer.WritePropertyName("quotaSources"u8);
                writer.WriteStartArray();
                foreach (var item in QuotaSources)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static SubscriptionQuotaDetails DeserializeSubscriptionQuotaDetails(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<long> limit = default;
            Optional<long> nonShareableQuota = default;
            Optional<RequestState> provisioningState = default;
            Optional<IList<SubscriptionGroupQuotaAssignment>> quotaSources = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("limit"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    limit = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("nonShareableQuota"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    nonShareableQuota = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("provisioningState"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    provisioningState = new RequestState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("quotaSources"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<SubscriptionGroupQuotaAssignment> array = new List<SubscriptionGroupQuotaAssignment>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SubscriptionGroupQuotaAssignment.DeserializeSubscriptionGroupQuotaAssignment(item));
                    }
                    quotaSources = array;
                    continue;
                }
            }
            return new SubscriptionQuotaDetails(Optional.ToNullable(limit), Optional.ToNullable(nonShareableQuota), Optional.ToNullable(provisioningState), Optional.ToList(quotaSources));
        }
    }
}
