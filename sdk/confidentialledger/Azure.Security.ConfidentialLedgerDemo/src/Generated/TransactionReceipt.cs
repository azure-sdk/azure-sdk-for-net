// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.Security.ConfidentialLedger
{
    /// <summary> A receipt certifying the transaction at the specified id. </summary>
    public partial class TransactionReceipt
    {
        /// <summary> Initializes a new instance of TransactionReceipt. </summary>
        /// <param name="receipt"></param>
        /// <param name="state"></param>
        /// <param name="transactionId"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="receipt"/> or <paramref name="transactionId"/> is null. </exception>
        public TransactionReceipt(ReceiptContents receipt, LedgerQueryState state, string transactionId)
        {
            Argument.AssertNotNull(receipt, nameof(receipt));
            Argument.AssertNotNull(transactionId, nameof(transactionId));

            Receipt = receipt;
            State = state;
            TransactionId = transactionId;
        }

        /// <summary> Gets or sets the receipt. </summary>
        public ReceiptContents Receipt { get; set; }
        /// <summary> Gets or sets the state. </summary>
        public LedgerQueryState State { get; set; }
        /// <summary> Gets or sets the transaction id. </summary>
        public string TransactionId { get; set; }
    }
}
