// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.Security.ConfidentialLedger
{
    /// <summary> Paginated ledger entries returned in response to a query. </summary>
    public partial class PagedLedgerEntries
    {
        /// <summary> Initializes a new instance of PagedLedgerEntries. </summary>
        /// <param name="entries"></param>
        /// <param name="state"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="entries"/> is null. </exception>
        public PagedLedgerEntries(IEnumerable<LedgerEntry> entries, LedgerQueryState state)
        {
            Argument.AssertNotNull(entries, nameof(entries));

            Entries = entries.ToList();
            State = state;
        }

        /// <summary> Initializes a new instance of PagedLedgerEntries. </summary>
        /// <param name="entries"></param>
        /// <param name="state"></param>
        /// <param name="nextLink"></param>
        internal PagedLedgerEntries(IList<LedgerEntry> entries, LedgerQueryState state, string nextLink)
        {
            Entries = entries.ToList();
            State = state;
            NextLink = nextLink;
        }

        /// <summary> Gets the entries. </summary>
        public IList<LedgerEntry> Entries { get; }
        /// <summary> Gets or sets the state. </summary>
        public LedgerQueryState State { get; set; }
        /// <summary> Gets or sets the next link. </summary>
        public string NextLink { get; set; }
    }
}
