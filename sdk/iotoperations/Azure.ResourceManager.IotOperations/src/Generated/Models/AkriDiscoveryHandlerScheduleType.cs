// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.IotOperations.Models
{
    /// <summary> AkriDiscoveryHandlerScheduleType properties. </summary>
    internal readonly partial struct AkriDiscoveryHandlerScheduleType : IEquatable<AkriDiscoveryHandlerScheduleType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="AkriDiscoveryHandlerScheduleType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public AkriDiscoveryHandlerScheduleType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string CronValue = "Cron";
        private const string RunOnceValue = "RunOnce";
        private const string ContinuousValue = "Continuous";

        /// <summary> The schedule is a cron expression. </summary>
        public static AkriDiscoveryHandlerScheduleType Cron { get; } = new AkriDiscoveryHandlerScheduleType(CronValue);
        /// <summary> The discovery handler should run once. </summary>
        public static AkriDiscoveryHandlerScheduleType RunOnce { get; } = new AkriDiscoveryHandlerScheduleType(RunOnceValue);
        /// <summary> The discovery handler should run continuously. </summary>
        public static AkriDiscoveryHandlerScheduleType Continuous { get; } = new AkriDiscoveryHandlerScheduleType(ContinuousValue);
        /// <summary> Determines if two <see cref="AkriDiscoveryHandlerScheduleType"/> values are the same. </summary>
        public static bool operator ==(AkriDiscoveryHandlerScheduleType left, AkriDiscoveryHandlerScheduleType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="AkriDiscoveryHandlerScheduleType"/> values are not the same. </summary>
        public static bool operator !=(AkriDiscoveryHandlerScheduleType left, AkriDiscoveryHandlerScheduleType right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="AkriDiscoveryHandlerScheduleType"/>. </summary>
        public static implicit operator AkriDiscoveryHandlerScheduleType(string value) => new AkriDiscoveryHandlerScheduleType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is AkriDiscoveryHandlerScheduleType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(AkriDiscoveryHandlerScheduleType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
