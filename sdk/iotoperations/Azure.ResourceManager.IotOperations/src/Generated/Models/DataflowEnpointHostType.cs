// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.IotOperations.Models
{
    /// <summary> DataflowEndpoint Host Type properties. </summary>
    public readonly partial struct DataflowEnpointHostType : IEquatable<DataflowEnpointHostType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="DataflowEnpointHostType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public DataflowEnpointHostType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string FabricRTValue = "FabricRT";
        private const string EventGridValue = "EventGrid";
        private const string LocalBrokerValue = "LocalBroker";
        private const string EventhubValue = "Eventhub";
        private const string CustomMqttValue = "CustomMqtt";
        private const string CustomKafkaValue = "CustomKafka";

        /// <summary> Fabric Real-Time Type. </summary>
        public static DataflowEnpointHostType FabricRT { get; } = new DataflowEnpointHostType(FabricRTValue);
        /// <summary> EventGrid Type. </summary>
        public static DataflowEnpointHostType EventGrid { get; } = new DataflowEnpointHostType(EventGridValue);
        /// <summary> Local MQTT Type. </summary>
        public static DataflowEnpointHostType LocalBroker { get; } = new DataflowEnpointHostType(LocalBrokerValue);
        /// <summary> EventHub Type. </summary>
        public static DataflowEnpointHostType Eventhub { get; } = new DataflowEnpointHostType(EventhubValue);
        /// <summary> Custom MQTT Type. </summary>
        public static DataflowEnpointHostType CustomMqtt { get; } = new DataflowEnpointHostType(CustomMqttValue);
        /// <summary> Custom Kafka Type. </summary>
        public static DataflowEnpointHostType CustomKafka { get; } = new DataflowEnpointHostType(CustomKafkaValue);
        /// <summary> Determines if two <see cref="DataflowEnpointHostType"/> values are the same. </summary>
        public static bool operator ==(DataflowEnpointHostType left, DataflowEnpointHostType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="DataflowEnpointHostType"/> values are not the same. </summary>
        public static bool operator !=(DataflowEnpointHostType left, DataflowEnpointHostType right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="DataflowEnpointHostType"/>. </summary>
        public static implicit operator DataflowEnpointHostType(string value) => new DataflowEnpointHostType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is DataflowEnpointHostType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(DataflowEnpointHostType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
