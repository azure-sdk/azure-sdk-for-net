// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.IotOperations.Models
{
    /// <summary> AkriDiscoveryHandlerScheduleCron properties. </summary>
    public partial class AkriDiscoveryHandlerScheduleCron : AkriDiscoveryHandlerSchedule
    {
        /// <summary> Initializes a new instance of <see cref="AkriDiscoveryHandlerScheduleCron"/>. </summary>
        /// <param name="cron"> The cron expression for the schedule. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="cron"/> is null. </exception>
        public AkriDiscoveryHandlerScheduleCron(string cron)
        {
            Argument.AssertNotNull(cron, nameof(cron));

            Cron = cron;
            ScheduleType = AkriDiscoveryHandlerScheduleType.Cron;
        }

        /// <summary> Initializes a new instance of <see cref="AkriDiscoveryHandlerScheduleCron"/>. </summary>
        /// <param name="scheduleType"> Schedule type. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="cron"> The cron expression for the schedule. </param>
        internal AkriDiscoveryHandlerScheduleCron(AkriDiscoveryHandlerScheduleType scheduleType, IDictionary<string, BinaryData> serializedAdditionalRawData, string cron) : base(scheduleType, serializedAdditionalRawData)
        {
            Cron = cron;
            ScheduleType = scheduleType;
        }

        /// <summary> Initializes a new instance of <see cref="AkriDiscoveryHandlerScheduleCron"/> for deserialization. </summary>
        internal AkriDiscoveryHandlerScheduleCron()
        {
        }

        /// <summary> The cron expression for the schedule. </summary>
        public string Cron { get; set; }
    }
}
