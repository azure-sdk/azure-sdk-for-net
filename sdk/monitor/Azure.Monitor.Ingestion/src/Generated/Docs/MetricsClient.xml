<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="BatchAsync(string,string,string,IEnumerable{string},RequestContent,string,string,TimeSpan?,string,int?,string,string,RequestContext)">
<example>
This sample shows how to call BatchAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new MetricsClient(credential);

var data = new {};

Response response = await client.BatchAsync("<baseUrl>", "<subscriptionId>", "<metricnamespace>", new String[]{"<metricnames>"}, RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call BatchAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new MetricsClient(credential);

var data = new {
    resourceids = new[] {
        new {}
    },
};

Response response = await client.BatchAsync("<baseUrl>", "<subscriptionId>", "<metricnamespace>", new String[]{"<metricnames>"}, RequestContent.Create(data), "<starttime>", "<endtime>", new TimeSpan(1, 2, 3), "<aggregation>", 1234, "<orderby>", "<filter>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("values")[0].GetProperty("starttime").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("endtime").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("interval").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("namespace").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("resourceregion").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("resourceid").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("name").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("name").GetProperty("localizedValue").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("displayDescription").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("timeseries")[0].GetProperty("metadatavalues")[0].GetProperty("name").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("timeseries")[0].GetProperty("metadatavalues")[0].GetProperty("name").GetProperty("localizedValue").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("timeseries")[0].GetProperty("metadatavalues")[0].GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("timeseries")[0].GetProperty("data")[0].GetProperty("timeStamp").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("timeseries")[0].GetProperty("data")[0].GetProperty("average").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("timeseries")[0].GetProperty("data")[0].GetProperty("minimum").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("timeseries")[0].GetProperty("data")[0].GetProperty("maximum").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("timeseries")[0].GetProperty("data")[0].GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("timeseries")[0].GetProperty("data")[0].GetProperty("count").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("errorMessage").ToString());
]]></code>
</example>
    </member>
    <member name="Batch(string,string,string,IEnumerable{string},RequestContent,string,string,TimeSpan?,string,int?,string,string,RequestContext)">
<example>
This sample shows how to call Batch with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new MetricsClient(credential);

var data = new {};

Response response = client.Batch("<baseUrl>", "<subscriptionId>", "<metricnamespace>", new String[]{"<metricnames>"}, RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call Batch with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new MetricsClient(credential);

var data = new {
    resourceids = new[] {
        new {}
    },
};

Response response = client.Batch("<baseUrl>", "<subscriptionId>", "<metricnamespace>", new String[]{"<metricnames>"}, RequestContent.Create(data), "<starttime>", "<endtime>", new TimeSpan(1, 2, 3), "<aggregation>", 1234, "<orderby>", "<filter>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("values")[0].GetProperty("starttime").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("endtime").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("interval").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("namespace").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("resourceregion").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("resourceid").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("name").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("name").GetProperty("localizedValue").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("displayDescription").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("timeseries")[0].GetProperty("metadatavalues")[0].GetProperty("name").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("timeseries")[0].GetProperty("metadatavalues")[0].GetProperty("name").GetProperty("localizedValue").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("timeseries")[0].GetProperty("metadatavalues")[0].GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("timeseries")[0].GetProperty("data")[0].GetProperty("timeStamp").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("timeseries")[0].GetProperty("data")[0].GetProperty("average").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("timeseries")[0].GetProperty("data")[0].GetProperty("minimum").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("timeseries")[0].GetProperty("data")[0].GetProperty("maximum").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("timeseries")[0].GetProperty("data")[0].GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("timeseries")[0].GetProperty("data")[0].GetProperty("count").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("values")[0].GetProperty("value")[0].GetProperty("errorMessage").ToString());
]]></code>
</example>
    </member>
  </members>
</doc>