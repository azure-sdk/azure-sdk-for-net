// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.IO;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.Monitor.Ingestion.Samples
{
    public class Samples_MonitorClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetBatch()
        {
            var credential = new DefaultAzureCredential();
            var client = new MonitorClient(credential);

            var data = new
            {
                resourceIds = new[] {
        new {}
    },
            };

            Response response = client.GetBatch("<subscriptionId>", new string[] { "<metricnames>" }, RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("values")[0].GetProperty("starttime").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetBatch_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new MonitorClient(credential);

            var data = new
            {
                resourceIds = new[] {
        new {}
    },
            };

            Response response = client.GetBatch("<subscriptionId>", new string[] { "<metricnames>" }, RequestContent.Create(data), "<startTime>", new TimeSpan(1, 2, 3), 1234);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("values")[0].GetProperty("starttime").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetBatch_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new MonitorClient(credential);

            var data = new
            {
                resourceIds = new[] {
        new {}
    },
            };

            Response response = await client.GetBatchAsync("<subscriptionId>", new string[] { "<metricnames>" }, RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("values")[0].GetProperty("starttime").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetBatch_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new MonitorClient(credential);

            var data = new
            {
                resourceIds = new[] {
        new {}
    },
            };

            Response response = await client.GetBatchAsync("<subscriptionId>", new string[] { "<metricnames>" }, RequestContent.Create(data), "<startTime>", new TimeSpan(1, 2, 3), 1234);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("values")[0].GetProperty("starttime").ToString());
        }
    }
}
