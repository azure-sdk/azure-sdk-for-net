// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Maps.Models
{
    /// <summary> The type of identity to use. Values can be systemAssignedIdentity, userAssignedIdentity, or delegatedResourceIdentity. </summary>
    public readonly partial struct EncryptionCustomerManagedKeyEncryptionKeyIdentityType : IEquatable<EncryptionCustomerManagedKeyEncryptionKeyIdentityType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="EncryptionCustomerManagedKeyEncryptionKeyIdentityType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public EncryptionCustomerManagedKeyEncryptionKeyIdentityType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string SystemAssignedIdentityValue = "systemAssignedIdentity";
        private const string UserAssignedIdentityValue = "userAssignedIdentity";
        private const string DelegatedResourceIdentityValue = "delegatedResourceIdentity";

        /// <summary> systemAssignedIdentity. </summary>
        public static EncryptionCustomerManagedKeyEncryptionKeyIdentityType SystemAssignedIdentity { get; } = new EncryptionCustomerManagedKeyEncryptionKeyIdentityType(SystemAssignedIdentityValue);
        /// <summary> userAssignedIdentity. </summary>
        public static EncryptionCustomerManagedKeyEncryptionKeyIdentityType UserAssignedIdentity { get; } = new EncryptionCustomerManagedKeyEncryptionKeyIdentityType(UserAssignedIdentityValue);
        /// <summary> delegatedResourceIdentity. </summary>
        public static EncryptionCustomerManagedKeyEncryptionKeyIdentityType DelegatedResourceIdentity { get; } = new EncryptionCustomerManagedKeyEncryptionKeyIdentityType(DelegatedResourceIdentityValue);
        /// <summary> Determines if two <see cref="EncryptionCustomerManagedKeyEncryptionKeyIdentityType"/> values are the same. </summary>
        public static bool operator ==(EncryptionCustomerManagedKeyEncryptionKeyIdentityType left, EncryptionCustomerManagedKeyEncryptionKeyIdentityType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="EncryptionCustomerManagedKeyEncryptionKeyIdentityType"/> values are not the same. </summary>
        public static bool operator !=(EncryptionCustomerManagedKeyEncryptionKeyIdentityType left, EncryptionCustomerManagedKeyEncryptionKeyIdentityType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="EncryptionCustomerManagedKeyEncryptionKeyIdentityType"/>. </summary>
        public static implicit operator EncryptionCustomerManagedKeyEncryptionKeyIdentityType(string value) => new EncryptionCustomerManagedKeyEncryptionKeyIdentityType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is EncryptionCustomerManagedKeyEncryptionKeyIdentityType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(EncryptionCustomerManagedKeyEncryptionKeyIdentityType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
