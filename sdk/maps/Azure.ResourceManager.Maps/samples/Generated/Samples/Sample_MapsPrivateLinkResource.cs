// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.Maps;

namespace Azure.ResourceManager.Maps.Samples
{
    public partial class Sample_MapsPrivateLinkResource
    {
        // Get a private link resource.
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetAPrivateLinkResource()
        {
            // Generated from example definition: specification/maps/resource-manager/Microsoft.Maps/preview/2024-01-01-preview/examples/PrivateLinkResources_Get.json
            // this example is just showing the usage of "PrivateLinkResources_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MapsPrivateLinkResource created on azure
            // for more information of creating MapsPrivateLinkResource, please refer to the document of MapsPrivateLinkResource
            string subscriptionId = "21a9967a-e8a9-4656-a70b-96ff1c4d05a0";
            string resourceGroupName = "myResourceGroup";
            string accountName = "myMapsAccount";
            string privateLinkResourceName = "mapsAccount";
            ResourceIdentifier mapsPrivateLinkResourceId = MapsPrivateLinkResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, accountName, privateLinkResourceName);
            MapsPrivateLinkResource mapsPrivateLinkResource = client.GetMapsPrivateLinkResource(mapsPrivateLinkResourceId);

            // invoke the operation
            MapsPrivateLinkResource result = await mapsPrivateLinkResource.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            MapsPrivateLinkResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
