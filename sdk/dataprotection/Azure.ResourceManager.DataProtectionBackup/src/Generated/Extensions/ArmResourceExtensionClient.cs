// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Threading;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;
using Azure.ResourceManager;

namespace Azure.ResourceManager.DataProtectionBackup
{
    /// <summary> A class to add extension methods to ArmResource. </summary>
    internal partial class ArmResourceExtensionClient : ArmResource
    {
        private ClientDiagnostics _backupInstancesExtensionRoutingClientDiagnostics;
        private BackupInstancesExtensionRoutingRestOperations _backupInstancesExtensionRoutingRestClient;

        /// <summary> Initializes a new instance of the <see cref="ArmResourceExtensionClient"/> class for mocking. </summary>
        protected ArmResourceExtensionClient()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="ArmResourceExtensionClient"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal ArmResourceExtensionClient(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        private ClientDiagnostics BackupInstancesExtensionRoutingClientDiagnostics => _backupInstancesExtensionRoutingClientDiagnostics ??= new ClientDiagnostics("Azure.ResourceManager.DataProtectionBackup", ProviderConstants.DefaultProviderNamespace, Diagnostics);
        private BackupInstancesExtensionRoutingRestOperations BackupInstancesExtensionRoutingRestClient => _backupInstancesExtensionRoutingRestClient ??= new BackupInstancesExtensionRoutingRestOperations(Pipeline, Diagnostics.ApplicationId, Endpoint);

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary>
        /// Gets a list of backup instances associated with a tracked resource
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/{resourceId}/providers/Microsoft.DataProtection/backupInstances</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>BackupInstancesExtensionRouting_List</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="DataProtectionBackupInstanceResource" /> that may take multiple service requests to iterate over. </returns>
        public virtual AsyncPageable<DataProtectionBackupInstanceResource> GetDataProtectionBackupInstancesAsync(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => BackupInstancesExtensionRoutingRestClient.CreateListRequest(Id);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => BackupInstancesExtensionRoutingRestClient.CreateListNextPageRequest(nextLink, Id);
            return PageableHelpers.CreateAsyncPageable(FirstPageRequest, NextPageRequest, e => new DataProtectionBackupInstanceResource(Client, DataProtectionBackupInstanceData.DeserializeDataProtectionBackupInstanceData(e)), BackupInstancesExtensionRoutingClientDiagnostics, Pipeline, "ArmResourceExtensionClient.GetDataProtectionBackupInstances", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// Gets a list of backup instances associated with a tracked resource
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/{resourceId}/providers/Microsoft.DataProtection/backupInstances</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>BackupInstancesExtensionRouting_List</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="DataProtectionBackupInstanceResource" /> that may take multiple service requests to iterate over. </returns>
        public virtual Pageable<DataProtectionBackupInstanceResource> GetDataProtectionBackupInstances(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => BackupInstancesExtensionRoutingRestClient.CreateListRequest(Id);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => BackupInstancesExtensionRoutingRestClient.CreateListNextPageRequest(nextLink, Id);
            return PageableHelpers.CreatePageable(FirstPageRequest, NextPageRequest, e => new DataProtectionBackupInstanceResource(Client, DataProtectionBackupInstanceData.DeserializeDataProtectionBackupInstanceData(e)), BackupInstancesExtensionRoutingClientDiagnostics, Pipeline, "ArmResourceExtensionClient.GetDataProtectionBackupInstances", "value", "nextLink", cancellationToken);
        }
    }
}
