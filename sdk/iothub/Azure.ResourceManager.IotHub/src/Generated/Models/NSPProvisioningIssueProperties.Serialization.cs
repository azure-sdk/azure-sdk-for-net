// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.IotHub.Models
{
    public partial class NSPProvisioningIssueProperties
    {
        internal static NSPProvisioningIssueProperties DeserializeNSPProvisioningIssueProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> issueType = default;
            Optional<string> severity = default;
            Optional<string> description = default;
            Optional<IReadOnlyList<string>> suggestedResourceIds = default;
            Optional<IReadOnlyList<string>> suggestedAccessRules = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("issueType"u8))
                {
                    issueType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("severity"u8))
                {
                    severity = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("description"u8))
                {
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("suggestedResourceIds"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    suggestedResourceIds = array;
                    continue;
                }
                if (property.NameEquals("suggestedAccessRules"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    suggestedAccessRules = array;
                    continue;
                }
            }
            return new NSPProvisioningIssueProperties(issueType.Value, severity.Value, description.Value, Optional.ToList(suggestedResourceIds), Optional.ToList(suggestedAccessRules));
        }
    }
}
