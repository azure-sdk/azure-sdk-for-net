// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure;
using Azure.Core;

namespace Microsoft.Security.Copilot.SkillsetAuthoring.Models
{
    public partial class SkillContextResponse
    {
        internal static SkillContextResponse DeserializeSkillContextResponse(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            SkillDescriptor descriptor = default;
            string id = default;
            IReadOnlyList<string> featureFlags = default;
            IReadOnlyDictionary<string, SkillVariable> inputs = default;
            IReadOnlyDictionary<string, string> properties = default;
            DateTimeOffset startTime = default;
            string tenantId = default;
            string userId = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("descriptor"u8))
                {
                    descriptor = SkillDescriptor.DeserializeSkillDescriptor(property.Value);
                    continue;
                }
                if (property.NameEquals("id"u8))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("featureFlags"u8))
                {
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    featureFlags = array;
                    continue;
                }
                if (property.NameEquals("inputs"u8))
                {
                    Dictionary<string, SkillVariable> dictionary = new Dictionary<string, SkillVariable>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, SkillVariable.DeserializeSkillVariable(property0.Value));
                    }
                    inputs = dictionary;
                    continue;
                }
                if (property.NameEquals("properties"u8))
                {
                    Dictionary<string, string> dictionary = new Dictionary<string, string>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, property0.Value.GetString());
                    }
                    properties = dictionary;
                    continue;
                }
                if (property.NameEquals("startTime"u8))
                {
                    startTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("tenantId"u8))
                {
                    tenantId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("userId"u8))
                {
                    userId = property.Value.GetString();
                    continue;
                }
            }
            return new SkillContextResponse(descriptor, id, featureFlags, inputs, properties, startTime, tenantId, userId);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static SkillContextResponse FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeSkillContextResponse(document.RootElement);
        }
    }
}
