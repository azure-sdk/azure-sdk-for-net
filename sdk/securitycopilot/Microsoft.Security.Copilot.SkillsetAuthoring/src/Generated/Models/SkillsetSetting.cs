// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Microsoft.Security.Copilot.SkillsetAuthoring.Models
{
    /// <summary> Defines the settings of a skillset. </summary>
    public partial class SkillsetSetting
    {
        /// <summary> Initializes a new instance of <see cref="SkillsetSetting"/>. </summary>
        /// <param name="name"> The name of the skillset setting. </param>
        /// <param name="label"> The label of the skillset setting. </param>
        /// <param name="description"> The description of the skillset setting used to describe the setting to the user in an info text box. </param>
        /// <param name="hintText"> The hint text used to fill in the setting box. </param>
        /// <param name="settingType"> The type of the skillset setting. </param>
        /// <param name="required"> Whether the skillset setting is required. </param>
        /// <param name="defaultValue"> The default value of the skillset setting. </param>
        /// <param name="value"> The value of the skillset setting. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/>, <paramref name="label"/>, <paramref name="description"/>, <paramref name="hintText"/>, <paramref name="defaultValue"/> or <paramref name="value"/> is null. </exception>
        internal SkillsetSetting(string name, string label, string description, string hintText, SkillsetSettingType settingType, bool required, string defaultValue, string value)
        {
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(label, nameof(label));
            Argument.AssertNotNull(description, nameof(description));
            Argument.AssertNotNull(hintText, nameof(hintText));
            Argument.AssertNotNull(defaultValue, nameof(defaultValue));
            Argument.AssertNotNull(value, nameof(value));

            Name = name;
            Label = label;
            Description = description;
            HintText = hintText;
            SettingType = settingType;
            Required = required;
            DefaultValue = defaultValue;
            Value = value;
        }

        /// <summary> The name of the skillset setting. </summary>
        public string Name { get; }
        /// <summary> The label of the skillset setting. </summary>
        public string Label { get; }
        /// <summary> The description of the skillset setting used to describe the setting to the user in an info text box. </summary>
        public string Description { get; }
        /// <summary> The hint text used to fill in the setting box. </summary>
        public string HintText { get; }
        /// <summary> The type of the skillset setting. </summary>
        public SkillsetSettingType SettingType { get; }
        /// <summary> Whether the skillset setting is required. </summary>
        public bool Required { get; }
        /// <summary> The default value of the skillset setting. </summary>
        public string DefaultValue { get; }
        /// <summary> The value of the skillset setting. </summary>
        public string Value { get; }
    }
}
