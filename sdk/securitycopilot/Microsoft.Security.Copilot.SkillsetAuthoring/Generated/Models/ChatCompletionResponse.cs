// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Microsoft.Security.Copilot.SkillsetAuthoring.Models
{
    /// <summary> The ChatCompletionResponse. </summary>
    public partial class ChatCompletionResponse : BaseCompletionResponse
    {
        /// <summary> Initializes a new instance of ChatCompletionResponse. </summary>
        /// <param name="id"> The unique identifier for the response. </param>
        /// <param name="object"> The object type. </param>
        /// <param name="created"> The creation timestamp. </param>
        /// <param name="model"> The model used for completion. </param>
        /// <param name="usage"> The usage statistics for the response. </param>
        /// <param name="promptFilterResults"> The results of prompt filtering. </param>
        /// <param name="choices"> List of choices in the chat completion response. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/>, <paramref name="object"/>, <paramref name="model"/>, <paramref name="usage"/>, <paramref name="promptFilterResults"/> or <paramref name="choices"/> is null. </exception>
        internal ChatCompletionResponse(string id, string @object, DateTimeOffset created, string model, BinaryData usage, IEnumerable<BinaryData> promptFilterResults, IEnumerable<ChatChoice> choices) : base(id, @object, created, model, usage, promptFilterResults)
        {
            Argument.AssertNotNull(id, nameof(id));
            Argument.AssertNotNull(@object, nameof(@object));
            Argument.AssertNotNull(model, nameof(model));
            Argument.AssertNotNull(usage, nameof(usage));
            Argument.AssertNotNull(promptFilterResults, nameof(promptFilterResults));
            Argument.AssertNotNull(choices, nameof(choices));

            Choices = choices.ToList();
        }

        /// <summary> Initializes a new instance of ChatCompletionResponse. </summary>
        /// <param name="id"> The unique identifier for the response. </param>
        /// <param name="object"> The object type. </param>
        /// <param name="created"> The creation timestamp. </param>
        /// <param name="model"> The model used for completion. </param>
        /// <param name="usage"> The usage statistics for the response. </param>
        /// <param name="promptFilterResults"> The results of prompt filtering. </param>
        /// <param name="choices"> List of choices in the chat completion response. </param>
        internal ChatCompletionResponse(string id, string @object, DateTimeOffset created, string model, BinaryData usage, IReadOnlyList<BinaryData> promptFilterResults, IReadOnlyList<ChatChoice> choices) : base(id, @object, created, model, usage, promptFilterResults)
        {
            Choices = choices;
        }

        /// <summary> List of choices in the chat completion response. </summary>
        public IReadOnlyList<ChatChoice> Choices { get; }
    }
}
