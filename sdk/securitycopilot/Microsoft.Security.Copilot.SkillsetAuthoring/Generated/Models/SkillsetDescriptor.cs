// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Microsoft.Security.Copilot.SkillsetAuthoring.Models
{
    /// <summary> Entity representing a Skillset. </summary>
    public partial class SkillsetDescriptor
    {
        /// <summary> Initializes a new instance of SkillsetDescriptor. </summary>
        /// <param name="namespace"> Namespace for the skillset. </param>
        /// <param name="name"> The name of the Skillset. </param>
        /// <param name="description"> The description of the Skillset. </param>
        /// <param name="descriptionDisplay"> The description of the skillset that's displayed TODO postman/dev figure out where this is displayed. </param>
        /// <param name="disaplyName"> The Skillset name that's displayed in the portal. </param>
        /// <param name="icon"> The icon displayed for the skillset in the console. </param>
        /// <param name="category"> The category of the Skillset. </param>
        /// <param name="catalogScope"> CatalogScope of the Skillset. </param>
        /// <param name="enabled"> Whether the skillset is enabled TODO how is this different than Hidden. </param>
        /// <param name="hidden"> Whether the skillset is hidden TODO how is this different than enabled. </param>
        /// <param name="prerequisites"> The prerequisites of a skillset TODO what does this mean. </param>
        /// <param name="settings"> The settings of a skillset. </param>
        /// <param name="authorization"> The settings of a skillset. </param>
        /// <param name="supportedAuthTypes"> The types of authentication supported by the skillset. </param>
        /// <param name="userVisibilityFeatureFlags"> A list of feature flags. At least one of the feature flags is required to enabled in the prompt context in order for the skillset to be available. </param>
        /// <param name="userVisibility"> Controls the conditions under which the users can see or use this skillset. </param>
        /// <param name="plannerVisibilityFeatureFlags"> Visibility flags required for the planner to user the skillset TODO confirm what this does. </param>
        /// <param name="plannerVisibility"> Controls the conditions under a prompt can use this skillset. </param>
        /// <param name="creatorUserId"> The user ID of the user who created this skillset. </param>
        /// <param name="ownersGroupId"> The ID of an Entra group that contains the owners for this Skillset. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="namespace"/>, <paramref name="name"/>, <paramref name="description"/>, <paramref name="descriptionDisplay"/>, <paramref name="disaplyName"/>, <paramref name="icon"/>, <paramref name="settings"/>, <paramref name="authorization"/>, <paramref name="supportedAuthTypes"/>, <paramref name="userVisibilityFeatureFlags"/>, <paramref name="plannerVisibilityFeatureFlags"/>, <paramref name="creatorUserId"/> or <paramref name="ownersGroupId"/> is null. </exception>
        internal SkillsetDescriptor(string @namespace, string name, string description, string descriptionDisplay, string disaplyName, string icon, SkillsetCategory category, SkillsetCatalogScope catalogScope, bool enabled, bool hidden, IEnumerable<string> prerequisites, IEnumerable<SkillsetSetting> settings, SkillsetAuth authorization, IEnumerable<SkillsetAuthType> supportedAuthTypes, IEnumerable<string> userVisibilityFeatureFlags, SkillVisibility userVisibility, IEnumerable<string> plannerVisibilityFeatureFlags, SkillVisibility plannerVisibility, string creatorUserId, string ownersGroupId)
        {
            Argument.AssertNotNull(@namespace, nameof(@namespace));
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(description, nameof(description));
            Argument.AssertNotNull(descriptionDisplay, nameof(descriptionDisplay));
            Argument.AssertNotNull(disaplyName, nameof(disaplyName));
            Argument.AssertNotNull(icon, nameof(icon));
            Argument.AssertNotNull(settings, nameof(settings));
            Argument.AssertNotNull(authorization, nameof(authorization));
            Argument.AssertNotNull(supportedAuthTypes, nameof(supportedAuthTypes));
            Argument.AssertNotNull(userVisibilityFeatureFlags, nameof(userVisibilityFeatureFlags));
            Argument.AssertNotNull(plannerVisibilityFeatureFlags, nameof(plannerVisibilityFeatureFlags));
            Argument.AssertNotNull(creatorUserId, nameof(creatorUserId));
            Argument.AssertNotNull(ownersGroupId, nameof(ownersGroupId));

            Namespace = @namespace;
            Name = name;
            Description = description;
            DescriptionDisplay = descriptionDisplay;
            DisaplyName = disaplyName;
            Icon = icon;
            Category = category;
            CatalogScope = catalogScope;
            Enabled = enabled;
            Hidden = hidden;
            Prerequisites = prerequisites?.ToList();
            Settings = settings.ToList();
            Authorization = authorization;
            SupportedAuthTypes = supportedAuthTypes.ToList();
            UserVisibilityFeatureFlags = userVisibilityFeatureFlags.ToList();
            UserVisibility = userVisibility;
            PlannerVisibilityFeatureFlags = plannerVisibilityFeatureFlags.ToList();
            PlannerVisibility = plannerVisibility;
            CreatorUserId = creatorUserId;
            OwnersGroupId = ownersGroupId;
        }

        /// <summary> Initializes a new instance of SkillsetDescriptor. </summary>
        /// <param name="namespace"> Namespace for the skillset. </param>
        /// <param name="name"> The name of the Skillset. </param>
        /// <param name="description"> The description of the Skillset. </param>
        /// <param name="descriptionDisplay"> The description of the skillset that's displayed TODO postman/dev figure out where this is displayed. </param>
        /// <param name="disaplyName"> The Skillset name that's displayed in the portal. </param>
        /// <param name="icon"> The icon displayed for the skillset in the console. </param>
        /// <param name="category"> The category of the Skillset. </param>
        /// <param name="catalogScope"> CatalogScope of the Skillset. </param>
        /// <param name="enabled"> Whether the skillset is enabled TODO how is this different than Hidden. </param>
        /// <param name="hidden"> Whether the skillset is hidden TODO how is this different than enabled. </param>
        /// <param name="prerequisites"> The prerequisites of a skillset TODO what does this mean. </param>
        /// <param name="settings"> The settings of a skillset. </param>
        /// <param name="authorization"> The settings of a skillset. </param>
        /// <param name="supportedAuthTypes"> The types of authentication supported by the skillset. </param>
        /// <param name="userVisibilityFeatureFlags"> A list of feature flags. At least one of the feature flags is required to enabled in the prompt context in order for the skillset to be available. </param>
        /// <param name="userVisibility"> Controls the conditions under which the users can see or use this skillset. </param>
        /// <param name="plannerVisibilityFeatureFlags"> Visibility flags required for the planner to user the skillset TODO confirm what this does. </param>
        /// <param name="plannerVisibility"> Controls the conditions under a prompt can use this skillset. </param>
        /// <param name="creatorUserId"> The user ID of the user who created this skillset. </param>
        /// <param name="ownersGroupId"> The ID of an Entra group that contains the owners for this Skillset. </param>
        internal SkillsetDescriptor(string @namespace, string name, string description, string descriptionDisplay, string disaplyName, string icon, SkillsetCategory category, SkillsetCatalogScope catalogScope, bool enabled, bool hidden, IReadOnlyList<string> prerequisites, IReadOnlyList<SkillsetSetting> settings, SkillsetAuth authorization, IReadOnlyList<SkillsetAuthType> supportedAuthTypes, IReadOnlyList<string> userVisibilityFeatureFlags, SkillVisibility userVisibility, IReadOnlyList<string> plannerVisibilityFeatureFlags, SkillVisibility plannerVisibility, string creatorUserId, string ownersGroupId)
        {
            Namespace = @namespace;
            Name = name;
            Description = description;
            DescriptionDisplay = descriptionDisplay;
            DisaplyName = disaplyName;
            Icon = icon;
            Category = category;
            CatalogScope = catalogScope;
            Enabled = enabled;
            Hidden = hidden;
            Prerequisites = prerequisites;
            Settings = settings;
            Authorization = authorization;
            SupportedAuthTypes = supportedAuthTypes;
            UserVisibilityFeatureFlags = userVisibilityFeatureFlags;
            UserVisibility = userVisibility;
            PlannerVisibilityFeatureFlags = plannerVisibilityFeatureFlags;
            PlannerVisibility = plannerVisibility;
            CreatorUserId = creatorUserId;
            OwnersGroupId = ownersGroupId;
        }

        /// <summary> Namespace for the skillset. </summary>
        public string Namespace { get; }
        /// <summary> The name of the Skillset. </summary>
        public string Name { get; }
        /// <summary> The description of the Skillset. </summary>
        public string Description { get; }
        /// <summary> The description of the skillset that's displayed TODO postman/dev figure out where this is displayed. </summary>
        public string DescriptionDisplay { get; }
        /// <summary> The Skillset name that's displayed in the portal. </summary>
        public string DisaplyName { get; }
        /// <summary> The icon displayed for the skillset in the console. </summary>
        public string Icon { get; }
        /// <summary> The category of the Skillset. </summary>
        public SkillsetCategory Category { get; }
        /// <summary> CatalogScope of the Skillset. </summary>
        public SkillsetCatalogScope CatalogScope { get; }
        /// <summary> Whether the skillset is enabled TODO how is this different than Hidden. </summary>
        public bool Enabled { get; }
        /// <summary> Whether the skillset is hidden TODO how is this different than enabled. </summary>
        public bool Hidden { get; }
        /// <summary> The prerequisites of a skillset TODO what does this mean. </summary>
        public IReadOnlyList<string> Prerequisites { get; }
        /// <summary> The settings of a skillset. </summary>
        public IReadOnlyList<SkillsetSetting> Settings { get; }
        /// <summary> The settings of a skillset. </summary>
        public SkillsetAuth Authorization { get; }
        /// <summary> The types of authentication supported by the skillset. </summary>
        public IReadOnlyList<SkillsetAuthType> SupportedAuthTypes { get; }
        /// <summary> A list of feature flags. At least one of the feature flags is required to enabled in the prompt context in order for the skillset to be available. </summary>
        public IReadOnlyList<string> UserVisibilityFeatureFlags { get; }
        /// <summary> Controls the conditions under which the users can see or use this skillset. </summary>
        public SkillVisibility UserVisibility { get; }
        /// <summary> Visibility flags required for the planner to user the skillset TODO confirm what this does. </summary>
        public IReadOnlyList<string> PlannerVisibilityFeatureFlags { get; }
        /// <summary> Controls the conditions under a prompt can use this skillset. </summary>
        public SkillVisibility PlannerVisibility { get; }
        /// <summary> The user ID of the user who created this skillset. </summary>
        public string CreatorUserId { get; }
        /// <summary> The ID of an Entra group that contains the owners for this Skillset. </summary>
        public string OwnersGroupId { get; }
    }
}
