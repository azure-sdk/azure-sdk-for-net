// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Linq;

namespace Microsoft.Security.Copilot.SkillsetAuthoring.Models
{
    /// <summary> Skill variable parent entity adding additional attribute 'skillsource' to provide visibility to users as to what data/information was used in generating the output of a skill. </summary>
    public partial class OutputSkillVariable : SkillVariable
    {
        /// <summary> Initializes a new instance of OutputSkillVariable. </summary>
        /// <param name="valueStoredAsJson"> Skill variable value is stored as json document. </param>
        /// <param name="sources"> Array of cited sources that were fetched by a skill and that impacted the output of the skill evaluation. </param>
        /// <param name="suggestedPrompts"> Suggested prompts providing assistance to users in understanding what prompts work well with CFS. </param>
        /// <param name="skillName"> Skill name. </param>
        /// <param name="skillInputs"> Skill inputs that were used in generating the output of the skill evaluation. </param>
        /// <param name="outputLanguage"> Skill output language. </param>
        /// <param name="outputType"> Enum indicating the output type of the skill. Supports StructuredOutput and Primitive. </param>
        public OutputSkillVariable(bool valueStoredAsJson, IEnumerable<SkillSource> sources, IEnumerable<SuggestedPrompt> suggestedPrompts, string skillName, IDictionary<string, string> skillInputs, string outputLanguage, SkillOutputType outputType) : base(valueStoredAsJson)
        {
            Sources = sources?.ToList();
            SuggestedPrompts = suggestedPrompts?.ToList();
            SkillName = skillName;
            SkillInputs = skillInputs;
            OutputLanguage = outputLanguage;
            OutputType = outputType;
        }

        /// <summary> Initializes a new instance of OutputSkillVariable. </summary>
        /// <param name="type"> Skill variable type. </param>
        /// <param name="value"> Skill variable value. </param>
        /// <param name="valueStoredAsJson"> Skill variable value is stored as json document. </param>
        /// <param name="sources"> Array of cited sources that were fetched by a skill and that impacted the output of the skill evaluation. </param>
        /// <param name="suggestedPrompts"> Suggested prompts providing assistance to users in understanding what prompts work well with CFS. </param>
        /// <param name="skillName"> Skill name. </param>
        /// <param name="skillInputs"> Skill inputs that were used in generating the output of the skill evaluation. </param>
        /// <param name="outputLanguage"> Skill output language. </param>
        /// <param name="outputType"> Enum indicating the output type of the skill. Supports StructuredOutput and Primitive. </param>
        internal OutputSkillVariable(string type, string value, bool valueStoredAsJson, IList<SkillSource> sources, IList<SuggestedPrompt> suggestedPrompts, string skillName, IDictionary<string, string> skillInputs, string outputLanguage, SkillOutputType outputType) : base(type, value, valueStoredAsJson)
        {
            Sources = sources;
            SuggestedPrompts = suggestedPrompts;
            SkillName = skillName;
            SkillInputs = skillInputs;
            OutputLanguage = outputLanguage;
            OutputType = outputType;
        }

        /// <summary> Array of cited sources that were fetched by a skill and that impacted the output of the skill evaluation. </summary>
        public IList<SkillSource> Sources { get; set; }
        /// <summary> Suggested prompts providing assistance to users in understanding what prompts work well with CFS. </summary>
        public IList<SuggestedPrompt> SuggestedPrompts { get; set; }
        /// <summary> Skill name. </summary>
        public string SkillName { get; set; }
        /// <summary> Skill inputs that were used in generating the output of the skill evaluation. </summary>
        public IDictionary<string, string> SkillInputs { get; set; }
        /// <summary> Skill output language. </summary>
        public string OutputLanguage { get; set; }
        /// <summary> Enum indicating the output type of the skill. Supports StructuredOutput and Primitive. </summary>
        public SkillOutputType OutputType { get; set; }
    }
}
