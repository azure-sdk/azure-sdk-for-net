// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Microsoft.Security.Copilot.SkillsetAuthoring.Models
{
    /// <summary> The prompt history of the current session. </summary>
    public partial class PromptHistoryResponse
    {
        /// <summary> Initializes a new instance of PromptHistoryResponse. </summary>
        /// <param name="prompts"> List of prompts that have been evaluated in the current session. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="prompts"/> is null. </exception>
        internal PromptHistoryResponse(IEnumerable<SessionPrompt> prompts)
        {
            Argument.AssertNotNull(prompts, nameof(prompts));

            Prompts = prompts.ToList();
        }

        /// <summary> Initializes a new instance of PromptHistoryResponse. </summary>
        /// <param name="prompts"> List of prompts that have been evaluated in the current session. </param>
        internal PromptHistoryResponse(IReadOnlyList<SessionPrompt> prompts)
        {
            Prompts = prompts;
        }

        /// <summary> List of prompts that have been evaluated in the current session. </summary>
        public IReadOnlyList<SessionPrompt> Prompts { get; }
    }
}
