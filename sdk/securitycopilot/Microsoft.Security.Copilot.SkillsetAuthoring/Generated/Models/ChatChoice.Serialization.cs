// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure;
using Azure.Core;

namespace Microsoft.Security.Copilot.SkillsetAuthoring.Models
{
    public partial class ChatChoice
    {
        internal static ChatChoice DeserializeChatChoice(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Message message = default;
            int index = default;
            BinaryData logProbs = default;
            string finishReason = default;
            Optional<BinaryData> contentFilterResults = default;
            Optional<BinaryData> contentFilterError = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("Message"u8))
                {
                    message = Message.DeserializeMessage(property.Value);
                    continue;
                }
                if (property.NameEquals("Index"u8))
                {
                    index = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("LogProbs"u8))
                {
                    logProbs = BinaryData.FromString(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("FinishReason"u8))
                {
                    finishReason = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("ContentFilterResults"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    contentFilterResults = BinaryData.FromString(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("ContentFilterError"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    contentFilterError = BinaryData.FromString(property.Value.GetRawText());
                    continue;
                }
            }
            return new ChatChoice(index, logProbs, finishReason, contentFilterResults.Value, contentFilterError.Value, message);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static ChatChoice FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeChatChoice(document.RootElement);
        }
    }
}
