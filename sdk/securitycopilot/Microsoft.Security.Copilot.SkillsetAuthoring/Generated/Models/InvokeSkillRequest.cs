// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Microsoft.Security.Copilot.SkillsetAuthoring.Models
{
    /// <summary> Invoke skill request including necessary inputs for invoking a skill. </summary>
    public partial class InvokeSkillRequest
    {
        /// <summary> Initializes a new instance of InvokeSkillRequest. </summary>
        /// <param name="skillName"> Name of skill to be invoked. </param>
        /// <param name="inputs"> Skill inputs. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="skillName"/> is null. </exception>
        public InvokeSkillRequest(string skillName, IDictionary<string, SkillVariable> inputs)
        {
            Argument.AssertNotNull(skillName, nameof(skillName));

            SkillName = skillName;
            Inputs = inputs;
        }

        /// <summary> Initializes a new instance of InvokeSkillRequest. </summary>
        /// <param name="skillsetName"> Name of skillset in which desired skill to invoke resides. </param>
        /// <param name="skillName"> Name of skill to be invoked. </param>
        /// <param name="inputs"> Skill inputs. </param>
        internal InvokeSkillRequest(string skillsetName, string skillName, IDictionary<string, SkillVariable> inputs)
        {
            SkillsetName = skillsetName;
            SkillName = skillName;
            Inputs = inputs;
        }

        /// <summary> Name of skillset in which desired skill to invoke resides. </summary>
        public string SkillsetName { get; set; }
        /// <summary> Name of skill to be invoked. </summary>
        public string SkillName { get; }
        /// <summary> Skill inputs. </summary>
        public IDictionary<string, SkillVariable> Inputs { get; set; }
    }
}
