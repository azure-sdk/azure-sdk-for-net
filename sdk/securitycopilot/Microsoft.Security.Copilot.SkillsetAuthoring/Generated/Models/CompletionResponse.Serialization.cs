// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure;
using Azure.Core;

namespace Microsoft.Security.Copilot.SkillsetAuthoring.Models
{
    public partial class CompletionResponse
    {
        internal static CompletionResponse DeserializeCompletionResponse(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            IReadOnlyList<Choice> choices = default;
            string id = default;
            string @object = default;
            DateTimeOffset created = default;
            string model = default;
            BinaryData usage = default;
            IReadOnlyList<BinaryData> promptFilterResults = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("Choices"u8))
                {
                    List<Choice> array = new List<Choice>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(Choice.DeserializeChoice(item));
                    }
                    choices = array;
                    continue;
                }
                if (property.NameEquals("Id"u8))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("Object"u8))
                {
                    @object = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("Created"u8))
                {
                    created = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("Model"u8))
                {
                    model = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("Usage"u8))
                {
                    usage = BinaryData.FromString(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("PromptFilterResults"u8))
                {
                    List<BinaryData> array = new List<BinaryData>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(BinaryData.FromString(item.GetRawText()));
                        }
                    }
                    promptFilterResults = array;
                    continue;
                }
            }
            return new CompletionResponse(id, @object, created, model, usage, promptFilterResults, choices);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static CompletionResponse FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeCompletionResponse(document.RootElement);
        }
    }
}
