// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Microsoft.Security.Copilot.SkillsetAuthoring.Models
{
    /// <summary> The Choice. </summary>
    public partial class Choice : BaseChoice
    {
        /// <summary> Initializes a new instance of Choice. </summary>
        /// <param name="index"></param>
        /// <param name="logProbs"> Log probabilities for this choice. </param>
        /// <param name="finishReason"> The reason why the operation finished. </param>
        /// <param name="text"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="logProbs"/>, <paramref name="finishReason"/> or <paramref name="text"/> is null. </exception>
        internal Choice(int index, BinaryData logProbs, string finishReason, string text) : base(index, logProbs, finishReason)
        {
            Argument.AssertNotNull(logProbs, nameof(logProbs));
            Argument.AssertNotNull(finishReason, nameof(finishReason));
            Argument.AssertNotNull(text, nameof(text));

            Text = text;
        }

        /// <summary> Initializes a new instance of Choice. </summary>
        /// <param name="index"></param>
        /// <param name="logProbs"> Log probabilities for this choice. </param>
        /// <param name="finishReason"> The reason why the operation finished. </param>
        /// <param name="contentFilterResults"> This object contains the list of content filter annotations. </param>
        /// <param name="contentFilterError"> This indicates when the content filtering system does not run on the chat completion. </param>
        /// <param name="text"></param>
        internal Choice(int index, BinaryData logProbs, string finishReason, BinaryData contentFilterResults, BinaryData contentFilterError, string text) : base(index, logProbs, finishReason, contentFilterResults, contentFilterError)
        {
            Text = text;
        }

        /// <summary> Gets the text. </summary>
        public string Text { get; }
    }
}
