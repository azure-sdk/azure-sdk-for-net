// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Microsoft.Security.Copilot.SkillsetAuthoring.Models
{
    /// <summary> Represents a message in the chat. </summary>
    public partial class Message
    {
        /// <summary> Initializes a new instance of Message. </summary>
        /// <param name="role"> The role of the message sender. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="role"/> is null. </exception>
        public Message(string role)
        {
            Argument.AssertNotNull(role, nameof(role));

            Role = role;
            ToolCalls = new ChangeTrackingList<ToolCall>();
        }

        /// <summary> Initializes a new instance of Message. </summary>
        /// <param name="content"> The content of the message. </param>
        /// <param name="role"> The role of the message sender. </param>
        /// <param name="name"> The name of the message sender. </param>
        /// <param name="functionCall"> The function call information. </param>
        /// <param name="toolCalls"> The tool calls associated with the message. </param>
        /// <param name="toolCallId"> The identifier for the tool call. </param>
        internal Message(string content, string role, string name, FunctionCall functionCall, IList<ToolCall> toolCalls, string toolCallId)
        {
            Content = content;
            Role = role;
            Name = name;
            FunctionCall = functionCall;
            ToolCalls = toolCalls;
            ToolCallId = toolCallId;
        }

        /// <summary> The content of the message. </summary>
        public string Content { get; set; }
        /// <summary> The role of the message sender. </summary>
        public string Role { get; set; }
        /// <summary> The name of the message sender. </summary>
        public string Name { get; set; }
        /// <summary> The function call information. </summary>
        public FunctionCall FunctionCall { get; set; }
        /// <summary> The tool calls associated with the message. </summary>
        public IList<ToolCall> ToolCalls { get; }
        /// <summary> The identifier for the tool call. </summary>
        public string ToolCallId { get; set; }
    }
}
