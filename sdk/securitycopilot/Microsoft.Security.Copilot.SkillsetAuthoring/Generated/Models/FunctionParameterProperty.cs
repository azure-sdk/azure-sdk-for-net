// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Microsoft.Security.Copilot.SkillsetAuthoring.Models
{
    /// <summary> Represents parameters properties for a function. </summary>
    public partial class FunctionParameterProperty
    {
        /// <summary> Initializes a new instance of FunctionParameterProperty. </summary>
        /// <param name="type"> The type of the parameter property. </param>
        /// <param name="description"> The description of property of the parameter. </param>
        /// <param name="enum"> The list of enums. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="type"/>, <paramref name="description"/> or <paramref name="enum"/> is null. </exception>
        public FunctionParameterProperty(string type, string description, IEnumerable<string> @enum)
        {
            Argument.AssertNotNull(type, nameof(type));
            Argument.AssertNotNull(description, nameof(description));
            Argument.AssertNotNull(@enum, nameof(@enum));

            Type = type;
            Description = description;
            Enum = @enum.ToList();
        }

        /// <summary> Initializes a new instance of FunctionParameterProperty. </summary>
        /// <param name="type"> The type of the parameter property. </param>
        /// <param name="description"> The description of property of the parameter. </param>
        /// <param name="enum"> The list of enums. </param>
        internal FunctionParameterProperty(string type, string description, IList<string> @enum)
        {
            Type = type;
            Description = description;
            Enum = @enum;
        }

        /// <summary> The type of the parameter property. </summary>
        public string Type { get; }
        /// <summary> The description of property of the parameter. </summary>
        public string Description { get; }
        /// <summary> The list of enums. </summary>
        public IList<string> Enum { get; }
    }
}
