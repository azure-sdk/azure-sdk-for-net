// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure;
using Azure.Core;

namespace Microsoft.Security.Copilot.SkillsetAuthoring.Models
{
    public partial class EmbeddingData
    {
        internal static EmbeddingData DeserializeEmbeddingData(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            IReadOnlyList<float> embedding = default;
            int index = default;
            string @object = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("Embedding"u8))
                {
                    List<float> array = new List<float>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetSingle());
                    }
                    embedding = array;
                    continue;
                }
                if (property.NameEquals("Index"u8))
                {
                    index = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("Object"u8))
                {
                    @object = property.Value.GetString();
                    continue;
                }
            }
            return new EmbeddingData(embedding, index, @object);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static EmbeddingData FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeEmbeddingData(document.RootElement);
        }
    }
}
