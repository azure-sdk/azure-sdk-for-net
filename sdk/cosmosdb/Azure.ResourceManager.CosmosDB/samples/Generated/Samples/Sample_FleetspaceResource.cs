// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.CosmosDB.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.CosmosDB.Samples
{
    public partial class Sample_FleetspaceResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_CosmosDBFleetspaceGet()
        {
            // Generated from example definition: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/preview/2025-05-01-preview/examples/fleet/CosmosDBFleetspaceGet.json
            // this example is just showing the usage of "Fleetspace_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this FleetspaceResource created on azure
            // for more information of creating FleetspaceResource, please refer to the document of FleetspaceResource
            string subscriptionId = "ffffffff-ffff-ffff-ffff-ffffffffffff";
            string resourceGroupName = "rg1";
            string fleetName = "fleet1";
            string fleetspaceName = "fleetspace1";
            ResourceIdentifier fleetspaceResourceId = FleetspaceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, fleetName, fleetspaceName);
            FleetspaceResource fleetspaceResource = client.GetFleetspaceResource(fleetspaceResourceId);

            // invoke the operation
            FleetspaceResource result = await fleetspaceResource.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            FleetspaceResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_CosmosDBFleetspaceDelete()
        {
            // Generated from example definition: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/preview/2025-05-01-preview/examples/fleet/CosmosDBFleetspaceDelete.json
            // this example is just showing the usage of "Fleetspace_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this FleetspaceResource created on azure
            // for more information of creating FleetspaceResource, please refer to the document of FleetspaceResource
            string subscriptionId = "ffffffff-ffff-ffff-ffff-ffffffffffff";
            string resourceGroupName = "rg1";
            string fleetName = "fleet1";
            string fleetspaceName = "fleetspace1";
            ResourceIdentifier fleetspaceResourceId = FleetspaceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, fleetName, fleetspaceName);
            FleetspaceResource fleetspaceResource = client.GetFleetspaceResource(fleetspaceResourceId);

            // invoke the operation
            await fleetspaceResource.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_CosmosDBFleetspaceUpdate()
        {
            // Generated from example definition: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/preview/2025-05-01-preview/examples/fleet/CosmosDBFleetspaceUpdate.json
            // this example is just showing the usage of "Fleetspace_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this FleetspaceResource created on azure
            // for more information of creating FleetspaceResource, please refer to the document of FleetspaceResource
            string subscriptionId = "ffffffff-ffff-ffff-ffff-ffffffffffff";
            string resourceGroupName = "rg1";
            string fleetName = "fleet1";
            string fleetspaceName = "fleetspace1";
            ResourceIdentifier fleetspaceResourceId = FleetspaceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, fleetName, fleetspaceName);
            FleetspaceResource fleetspaceResource = client.GetFleetspaceResource(fleetspaceResourceId);

            // invoke the operation
            FleetspaceResourcePatch patch = new FleetspaceResourcePatch
            {
                FleetspaceApiKind = FleetspacePropertiesFleetspaceApiKind.NoSQL,
                ThroughputPoolConfiguration = new FleetspacePropertiesThroughputPoolConfiguration
                {
                    MinThroughput = 3000,
                    MaxThroughput = 4000,
                    DataRegions = { "westus2" },
                },
            };
            ArmOperation<FleetspaceResource> lro = await fleetspaceResource.UpdateAsync(WaitUntil.Completed, patch);
            FleetspaceResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            FleetspaceResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
