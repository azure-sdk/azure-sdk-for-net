// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.CosmosDB.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.CosmosDB.Samples
{
    public partial class Sample_CopyJobGetResultResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_CosmosDBCopyJobGet()
        {
            // Generated from example definition: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/preview/2025-05-01-preview/examples/copy-jobs/CosmosDBCopyJobGet.json
            // this example is just showing the usage of "CopyJobs_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this CopyJobGetResultResource created on azure
            // for more information of creating CopyJobGetResultResource, please refer to the document of CopyJobGetResultResource
            string subscriptionId = "subid";
            string resourceGroupName = "rg1";
            string accountName = "ddb1";
            string jobName = "j1";
            ResourceIdentifier copyJobGetResultResourceId = CopyJobGetResultResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, accountName, jobName);
            CopyJobGetResultResource copyJobGetResult = client.GetCopyJobGetResultResource(copyJobGetResultResourceId);

            // invoke the operation
            CopyJobGetResultResource result = await copyJobGetResult.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            CopyJobGetResultData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_CosmosDBCopyJobCreate()
        {
            // Generated from example definition: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/preview/2025-05-01-preview/examples/copy-jobs/CosmosDBCopyJobCreate.json
            // this example is just showing the usage of "CopyJobs_Create" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this CopyJobGetResultResource created on azure
            // for more information of creating CopyJobGetResultResource, please refer to the document of CopyJobGetResultResource
            string subscriptionId = "subid";
            string resourceGroupName = "rg1";
            string accountName = "ddb1";
            string jobName = "j1";
            ResourceIdentifier copyJobGetResultResourceId = CopyJobGetResultResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, accountName, jobName);
            CopyJobGetResultResource copyJobGetResult = client.GetCopyJobGetResultResource(copyJobGetResultResourceId);

            // invoke the operation
            CopyJobGetResultData data = new CopyJobGetResultData(new CopyJobProperties(new NoSqlRUToNoSqlRUCopyJobProperties(new NoSqlRUToNoSqlRUCopyJobTask[]
            {
new NoSqlRUToNoSqlRUCopyJobTask(new CosmosDBNoSqlContainer("sourceDb1", "sourceTable1"), new CosmosDBNoSqlContainer("destDB1", "destTable1")),
new NoSqlRUToNoSqlRUCopyJobTask(new CosmosDBNoSqlContainer("sourceDb2", "sourceTable2"), new CosmosDBNoSqlContainer("destDB2", "destTable2"))
            }))
            {
                Mode = CopyJobMode.Offline,
            });
            ArmOperation<CopyJobGetResultResource> lro = await copyJobGetResult.UpdateAsync(WaitUntil.Completed, data);
            CopyJobGetResultResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            CopyJobGetResultData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Pause_CosmosDBCopyJobPause()
        {
            // Generated from example definition: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/preview/2025-05-01-preview/examples/copy-jobs/CosmosDBCopyJobPause.json
            // this example is just showing the usage of "CopyJobs_Pause" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this CopyJobGetResultResource created on azure
            // for more information of creating CopyJobGetResultResource, please refer to the document of CopyJobGetResultResource
            string subscriptionId = "subid";
            string resourceGroupName = "rg1";
            string accountName = "ddb1";
            string jobName = "j1";
            ResourceIdentifier copyJobGetResultResourceId = CopyJobGetResultResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, accountName, jobName);
            CopyJobGetResultResource copyJobGetResult = client.GetCopyJobGetResultResource(copyJobGetResultResourceId);

            // invoke the operation
            CopyJobGetResultResource result = await copyJobGetResult.PauseAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            CopyJobGetResultData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Resume_CosmosDBCopyJobResume()
        {
            // Generated from example definition: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/preview/2025-05-01-preview/examples/copy-jobs/CosmosDBCopyJobResume.json
            // this example is just showing the usage of "CopyJobs_Resume" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this CopyJobGetResultResource created on azure
            // for more information of creating CopyJobGetResultResource, please refer to the document of CopyJobGetResultResource
            string subscriptionId = "subid";
            string resourceGroupName = "rg1";
            string accountName = "ddb1";
            string jobName = "j1";
            ResourceIdentifier copyJobGetResultResourceId = CopyJobGetResultResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, accountName, jobName);
            CopyJobGetResultResource copyJobGetResult = client.GetCopyJobGetResultResource(copyJobGetResultResourceId);

            // invoke the operation
            CopyJobGetResultResource result = await copyJobGetResult.ResumeAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            CopyJobGetResultData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Cancel_CosmosDBCopyJobCancel()
        {
            // Generated from example definition: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/preview/2025-05-01-preview/examples/copy-jobs/CosmosDBCopyJobCancel.json
            // this example is just showing the usage of "CopyJobs_Cancel" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this CopyJobGetResultResource created on azure
            // for more information of creating CopyJobGetResultResource, please refer to the document of CopyJobGetResultResource
            string subscriptionId = "subid";
            string resourceGroupName = "rg1";
            string accountName = "ddb1";
            string jobName = "j1";
            ResourceIdentifier copyJobGetResultResourceId = CopyJobGetResultResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, accountName, jobName);
            CopyJobGetResultResource copyJobGetResult = client.GetCopyJobGetResultResource(copyJobGetResultResourceId);

            // invoke the operation
            CopyJobGetResultResource result = await copyJobGetResult.CancelAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            CopyJobGetResultData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Complete_CosmosDBCopyJobComplete()
        {
            // Generated from example definition: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/preview/2025-05-01-preview/examples/copy-jobs/CosmosDBCopyJobComplete.json
            // this example is just showing the usage of "CopyJobs_Complete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this CopyJobGetResultResource created on azure
            // for more information of creating CopyJobGetResultResource, please refer to the document of CopyJobGetResultResource
            string subscriptionId = "e35cc6eb-c8e3-447b-8de6-b83328cd0098";
            string resourceGroupName = "rg1";
            string accountName = "ddb1";
            string jobName = "j1";
            ResourceIdentifier copyJobGetResultResourceId = CopyJobGetResultResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, accountName, jobName);
            CopyJobGetResultResource copyJobGetResult = client.GetCopyJobGetResultResource(copyJobGetResultResourceId);

            // invoke the operation
            CopyJobGetResultResource result = await copyJobGetResult.CompleteAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            CopyJobGetResultData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
