// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.ResourceManager.CosmosDB.Samples
{
    public partial class Sample_GremlinRoleAssignmentResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_CosmosDBGremlinRoleAssignmentGet()
        {
            // Generated from example definition: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/preview/2025-05-01-preview/examples/gremlinrbac/CosmosDBGremlinRoleAssignmentGet.json
            // this example is just showing the usage of "GremlinResources_GetGremlinRoleAssignment" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this GremlinRoleAssignmentResource created on azure
            // for more information of creating GremlinRoleAssignmentResource, please refer to the document of GremlinRoleAssignmentResource
            string subscriptionId = "ffffffff-ffff-ffff-ffff-ffffffffffff";
            string resourceGroupName = "myResourceGroupName";
            string accountName = "myAccountName";
            string roleAssignmentId = "myRoleAssignmentId";
            ResourceIdentifier gremlinRoleAssignmentResourceId = GremlinRoleAssignmentResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, accountName, roleAssignmentId);
            GremlinRoleAssignmentResource gremlinRoleAssignmentResource = client.GetGremlinRoleAssignmentResource(gremlinRoleAssignmentResourceId);

            // invoke the operation
            GremlinRoleAssignmentResource result = await gremlinRoleAssignmentResource.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            GremlinRoleAssignmentResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_CosmosDBGremlinRoleAssignmentDelete()
        {
            // Generated from example definition: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/preview/2025-05-01-preview/examples/gremlinrbac/CosmosDBGremlinRoleAssignmentDelete.json
            // this example is just showing the usage of "GremlinResources_DeleteGremlinRoleAssignment" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this GremlinRoleAssignmentResource created on azure
            // for more information of creating GremlinRoleAssignmentResource, please refer to the document of GremlinRoleAssignmentResource
            string subscriptionId = "ffffffff-ffff-ffff-ffff-ffffffffffff";
            string resourceGroupName = "myResourceGroupName";
            string accountName = "myAccountName";
            string roleAssignmentId = "myRoleAssignmentId";
            ResourceIdentifier gremlinRoleAssignmentResourceId = GremlinRoleAssignmentResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, accountName, roleAssignmentId);
            GremlinRoleAssignmentResource gremlinRoleAssignmentResource = client.GetGremlinRoleAssignmentResource(gremlinRoleAssignmentResourceId);

            // invoke the operation
            await gremlinRoleAssignmentResource.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_CosmosDBGremlinRoleAssignmentCreateUpdate()
        {
            // Generated from example definition: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/preview/2025-05-01-preview/examples/gremlinrbac/CosmosDBGremlinRoleAssignmentCreateUpdate.json
            // this example is just showing the usage of "GremlinResources_CreateUpdateGremlinRoleAssignment" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this GremlinRoleAssignmentResource created on azure
            // for more information of creating GremlinRoleAssignmentResource, please refer to the document of GremlinRoleAssignmentResource
            string subscriptionId = "ffffffff-ffff-ffff-ffff-ffffffffffff";
            string resourceGroupName = "myResourceGroupName";
            string accountName = "myAccountName";
            string roleAssignmentId = "myRoleAssignmentId";
            ResourceIdentifier gremlinRoleAssignmentResourceId = GremlinRoleAssignmentResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, accountName, roleAssignmentId);
            GremlinRoleAssignmentResource gremlinRoleAssignmentResource = client.GetGremlinRoleAssignmentResource(gremlinRoleAssignmentResourceId);

            // invoke the operation
            GremlinRoleAssignmentResourceData data = new GremlinRoleAssignmentResourceData
            {
                RoleDefinitionId = "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/myResourceGroupName/providers/Microsoft.DocumentDB/databaseAccounts/myAccountName/gremlinRoleDefinitions/myRoleDefinitionId",
                Scope = "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/myResourceGroupName/providers/Microsoft.DocumentDB/databaseAccounts/myAccountName/dbs/purchases/colls/redmond-purchases",
                PrincipalId = Guid.Parse("myPrincipalId"),
            };
            ArmOperation<GremlinRoleAssignmentResource> lro = await gremlinRoleAssignmentResource.UpdateAsync(WaitUntil.Completed, data);
            GremlinRoleAssignmentResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            GremlinRoleAssignmentResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
