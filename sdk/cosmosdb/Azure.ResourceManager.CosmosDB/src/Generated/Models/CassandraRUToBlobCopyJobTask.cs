// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.CosmosDB.Models
{
    /// <summary> The CassandraRUToBlobCopyJobTask. </summary>
    public partial class CassandraRUToBlobCopyJobTask : BaseCopyJobTask
    {
        /// <summary> Initializes a new instance of <see cref="CassandraRUToBlobCopyJobTask"/>. </summary>
        /// <param name="source"> Source Cassandra table. </param>
        /// <param name="destination"> Destination Azure Blob container. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="source"/> or <paramref name="destination"/> is null. </exception>
        public CassandraRUToBlobCopyJobTask(CosmosDBCassandraTable source, AzureBlobContainer destination)
        {
            Argument.AssertNotNull(source, nameof(source));
            Argument.AssertNotNull(destination, nameof(destination));

            Source = source;
            Destination = destination;
        }

        /// <summary> Initializes a new instance of <see cref="CassandraRUToBlobCopyJobTask"/>. </summary>
        /// <param name="totalCount"> Task level Total Count. </param>
        /// <param name="processedCount"> Task level Processed Count. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="source"> Source Cassandra table. </param>
        /// <param name="destination"> Destination Azure Blob container. </param>
        internal CassandraRUToBlobCopyJobTask(long? totalCount, long? processedCount, IDictionary<string, BinaryData> serializedAdditionalRawData, CosmosDBCassandraTable source, AzureBlobContainer destination) : base(totalCount, processedCount, serializedAdditionalRawData)
        {
            Source = source;
            Destination = destination;
        }

        /// <summary> Initializes a new instance of <see cref="CassandraRUToBlobCopyJobTask"/> for deserialization. </summary>
        internal CassandraRUToBlobCopyJobTask()
        {
        }

        /// <summary> Source Cassandra table. </summary>
        [WirePath("source")]
        public CosmosDBCassandraTable Source { get; set; }
        /// <summary> Destination Azure Blob container. </summary>
        internal AzureBlobContainer Destination { get; set; }
        /// <summary> Azure Blob container. </summary>
        [WirePath("destination.containerName")]
        public string DestinationContainerName
        {
            get => Destination is null ? default : Destination.ContainerName;
            set => Destination = new AzureBlobContainer(value);
        }
    }
}
