// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.CosmosDB.Models
{
    /// <summary> The MongoRUToMongoRUCopyJobTask. </summary>
    public partial class MongoRUToMongoRUCopyJobTask : BaseCopyJobTask
    {
        /// <summary> Initializes a new instance of <see cref="MongoRUToMongoRUCopyJobTask"/>. </summary>
        /// <param name="source"> Source Mongo (RU) collection. </param>
        /// <param name="destination"> Destination Mongo (RU) collection. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="source"/> or <paramref name="destination"/> is null. </exception>
        public MongoRUToMongoRUCopyJobTask(CosmosDBMongoCollection source, CosmosDBMongoCollection destination)
        {
            Argument.AssertNotNull(source, nameof(source));
            Argument.AssertNotNull(destination, nameof(destination));

            Source = source;
            Destination = destination;
        }

        /// <summary> Initializes a new instance of <see cref="MongoRUToMongoRUCopyJobTask"/>. </summary>
        /// <param name="totalCount"> Task level Total Count. </param>
        /// <param name="processedCount"> Task level Processed Count. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="source"> Source Mongo (RU) collection. </param>
        /// <param name="destination"> Destination Mongo (RU) collection. </param>
        internal MongoRUToMongoRUCopyJobTask(long? totalCount, long? processedCount, IDictionary<string, BinaryData> serializedAdditionalRawData, CosmosDBMongoCollection source, CosmosDBMongoCollection destination) : base(totalCount, processedCount, serializedAdditionalRawData)
        {
            Source = source;
            Destination = destination;
        }

        /// <summary> Initializes a new instance of <see cref="MongoRUToMongoRUCopyJobTask"/> for deserialization. </summary>
        internal MongoRUToMongoRUCopyJobTask()
        {
        }

        /// <summary> Source Mongo (RU) collection. </summary>
        [WirePath("source")]
        public CosmosDBMongoCollection Source { get; set; }
        /// <summary> Destination Mongo (RU) collection. </summary>
        [WirePath("destination")]
        public CosmosDBMongoCollection Destination { get; set; }
    }
}
