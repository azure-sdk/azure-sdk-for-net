// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.CosmosDB.Models
{
    /// <summary> The NoSqlRUToNoSqlRUCopyJobTask. </summary>
    public partial class NoSqlRUToNoSqlRUCopyJobTask : BaseCopyJobTask
    {
        /// <summary> Initializes a new instance of <see cref="NoSqlRUToNoSqlRUCopyJobTask"/>. </summary>
        /// <param name="source"> Source SQL container. </param>
        /// <param name="destination"> Destination SQL container. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="source"/> or <paramref name="destination"/> is null. </exception>
        public NoSqlRUToNoSqlRUCopyJobTask(CosmosDBNoSqlContainer source, CosmosDBNoSqlContainer destination)
        {
            Argument.AssertNotNull(source, nameof(source));
            Argument.AssertNotNull(destination, nameof(destination));

            Source = source;
            Destination = destination;
        }

        /// <summary> Initializes a new instance of <see cref="NoSqlRUToNoSqlRUCopyJobTask"/>. </summary>
        /// <param name="totalCount"> Task level Total Count. </param>
        /// <param name="processedCount"> Task level Processed Count. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="source"> Source SQL container. </param>
        /// <param name="destination"> Destination SQL container. </param>
        internal NoSqlRUToNoSqlRUCopyJobTask(long? totalCount, long? processedCount, IDictionary<string, BinaryData> serializedAdditionalRawData, CosmosDBNoSqlContainer source, CosmosDBNoSqlContainer destination) : base(totalCount, processedCount, serializedAdditionalRawData)
        {
            Source = source;
            Destination = destination;
        }

        /// <summary> Initializes a new instance of <see cref="NoSqlRUToNoSqlRUCopyJobTask"/> for deserialization. </summary>
        internal NoSqlRUToNoSqlRUCopyJobTask()
        {
        }

        /// <summary> Source SQL container. </summary>
        [WirePath("source")]
        public CosmosDBNoSqlContainer Source { get; set; }
        /// <summary> Destination SQL container. </summary>
        [WirePath("destination")]
        public CosmosDBNoSqlContainer Destination { get; set; }
    }
}
