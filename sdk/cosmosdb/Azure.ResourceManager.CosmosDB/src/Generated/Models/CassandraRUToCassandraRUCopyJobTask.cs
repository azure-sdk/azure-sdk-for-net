// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.CosmosDB.Models
{
    /// <summary> The CassandraRUToCassandraRUCopyJobTask. </summary>
    public partial class CassandraRUToCassandraRUCopyJobTask : BaseCopyJobTask
    {
        /// <summary> Initializes a new instance of <see cref="CassandraRUToCassandraRUCopyJobTask"/>. </summary>
        /// <param name="source"> Source Cassandra table. </param>
        /// <param name="destination"> Destination Cassandra table. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="source"/> or <paramref name="destination"/> is null. </exception>
        public CassandraRUToCassandraRUCopyJobTask(CosmosDBCassandraTable source, CosmosDBCassandraTable destination)
        {
            Argument.AssertNotNull(source, nameof(source));
            Argument.AssertNotNull(destination, nameof(destination));

            Source = source;
            Destination = destination;
        }

        /// <summary> Initializes a new instance of <see cref="CassandraRUToCassandraRUCopyJobTask"/>. </summary>
        /// <param name="totalCount"> Task level Total Count. </param>
        /// <param name="processedCount"> Task level Processed Count. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="source"> Source Cassandra table. </param>
        /// <param name="destination"> Destination Cassandra table. </param>
        internal CassandraRUToCassandraRUCopyJobTask(long? totalCount, long? processedCount, IDictionary<string, BinaryData> serializedAdditionalRawData, CosmosDBCassandraTable source, CosmosDBCassandraTable destination) : base(totalCount, processedCount, serializedAdditionalRawData)
        {
            Source = source;
            Destination = destination;
        }

        /// <summary> Initializes a new instance of <see cref="CassandraRUToCassandraRUCopyJobTask"/> for deserialization. </summary>
        internal CassandraRUToCassandraRUCopyJobTask()
        {
        }

        /// <summary> Source Cassandra table. </summary>
        [WirePath("source")]
        public CosmosDBCassandraTable Source { get; set; }
        /// <summary> Destination Cassandra table. </summary>
        [WirePath("destination")]
        public CosmosDBCassandraTable Destination { get; set; }
    }
}
