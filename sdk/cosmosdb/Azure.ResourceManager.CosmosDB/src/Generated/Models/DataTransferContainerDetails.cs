// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.CosmosDB.Models
{
    /// <summary> Data transfer entity. </summary>
    public partial class DataTransferContainerDetails
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="DataTransferContainerDetails"/>. </summary>
        /// <param name="source">
        /// Please note <see cref="ContainerEntity"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AzureBlobStorageContainerEntity"/>, <see cref="CosmosCassandraContainerEntity"/>, <see cref="CosmosMongoVCoreContainerEntity"/> and <see cref="CosmosSqlContainerEntity"/>.
        /// </param>
        /// <param name="destination">
        /// Please note <see cref="ContainerEntity"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AzureBlobStorageContainerEntity"/>, <see cref="CosmosCassandraContainerEntity"/>, <see cref="CosmosMongoVCoreContainerEntity"/> and <see cref="CosmosSqlContainerEntity"/>.
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="source"/> or <paramref name="destination"/> is null. </exception>
        public DataTransferContainerDetails(ContainerEntity source, ContainerEntity destination)
        {
            Argument.AssertNotNull(source, nameof(source));
            Argument.AssertNotNull(destination, nameof(destination));

            Source = source;
            Destination = destination;
        }

        /// <summary> Initializes a new instance of <see cref="DataTransferContainerDetails"/>. </summary>
        /// <param name="totalCount"></param>
        /// <param name="processedCount"></param>
        /// <param name="source">
        /// Please note <see cref="ContainerEntity"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AzureBlobStorageContainerEntity"/>, <see cref="CosmosCassandraContainerEntity"/>, <see cref="CosmosMongoVCoreContainerEntity"/> and <see cref="CosmosSqlContainerEntity"/>.
        /// </param>
        /// <param name="destination">
        /// Please note <see cref="ContainerEntity"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AzureBlobStorageContainerEntity"/>, <see cref="CosmosCassandraContainerEntity"/>, <see cref="CosmosMongoVCoreContainerEntity"/> and <see cref="CosmosSqlContainerEntity"/>.
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal DataTransferContainerDetails(int? totalCount, int? processedCount, ContainerEntity source, ContainerEntity destination, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            TotalCount = totalCount;
            ProcessedCount = processedCount;
            Source = source;
            Destination = destination;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="DataTransferContainerDetails"/> for deserialization. </summary>
        internal DataTransferContainerDetails()
        {
        }

        /// <summary> Gets the total count. </summary>
        [WirePath("totalCount")]
        public int? TotalCount { get; }
        /// <summary> Gets the processed count. </summary>
        [WirePath("processedCount")]
        public int? ProcessedCount { get; }
        /// <summary>
        /// Gets or sets the source
        /// Please note <see cref="ContainerEntity"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AzureBlobStorageContainerEntity"/>, <see cref="CosmosCassandraContainerEntity"/>, <see cref="CosmosMongoVCoreContainerEntity"/> and <see cref="CosmosSqlContainerEntity"/>.
        /// </summary>
        [WirePath("source")]
        public ContainerEntity Source { get; set; }
        /// <summary>
        /// Gets or sets the destination
        /// Please note <see cref="ContainerEntity"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AzureBlobStorageContainerEntity"/>, <see cref="CosmosCassandraContainerEntity"/>, <see cref="CosmosMongoVCoreContainerEntity"/> and <see cref="CosmosSqlContainerEntity"/>.
        /// </summary>
        [WirePath("destination")]
        public ContainerEntity Destination { get; set; }
    }
}
