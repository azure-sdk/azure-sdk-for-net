// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Confluent.Models
{
    public partial class ConfluentListMetadata
    {
        internal static ConfluentListMetadata DeserializeConfluentListMetadata(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> first = default;
            Optional<string> last = default;
            Optional<string> prev = default;
            Optional<string> next = default;
            Optional<int> totalSize = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("first"u8))
                {
                    first = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("last"u8))
                {
                    last = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("prev"u8))
                {
                    prev = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("next"u8))
                {
                    next = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("total_size"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    totalSize = property.Value.GetInt32();
                    continue;
                }
            }
            return new ConfluentListMetadata(first.Value, last.Value, prev.Value, next.Value, Optional.ToNullable(totalSize));
        }
    }
}
