// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.Health.Insights.PatientTimeline
{
    /// <summary> An inference made by the Patient Timeline model regarding a patient. </summary>
    public partial class PatientTimelineInference
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="PatientTimelineInference"/>. </summary>
        /// <param name="type"> The type of the Patient Timeline inference. </param>
        internal PatientTimelineInference(PatientTimelineInferenceType type)
        {
            Extension = new ChangeTrackingList<Extension>();
            Type = type;
        }

        /// <summary> Initializes a new instance of <see cref="PatientTimelineInference"/>. </summary>
        /// <param name="extension"> Additional Content defined by implementations. </param>
        /// <param name="type"> The type of the Patient Timeline inference. </param>
        /// <param name="resource">
        /// FHIR 4.0 representation of the piece of clinical info.
        /// additional dependent resources maybe contained (e.g. MedicationStatement may contain Medication)
        /// -- In the SDK we will have custom mapping to map this type to JsonObject
        /// </param>
        /// <param name="period"> Time range relevant to this Timeline inference. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal PatientTimelineInference(IReadOnlyList<Extension> extension, PatientTimelineInferenceType type, DomainResource resource, TimePeriod period, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Extension = extension;
            Type = type;
            Resource = resource;
            Period = period;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="PatientTimelineInference"/> for deserialization. </summary>
        internal PatientTimelineInference()
        {
        }

        /// <summary> Additional Content defined by implementations. </summary>
        public IReadOnlyList<Extension> Extension { get; }
        /// <summary> The type of the Patient Timeline inference. </summary>
        public PatientTimelineInferenceType Type { get; }
        /// <summary>
        /// FHIR 4.0 representation of the piece of clinical info.
        /// additional dependent resources maybe contained (e.g. MedicationStatement may contain Medication)
        /// -- In the SDK we will have custom mapping to map this type to JsonObject
        /// </summary>
        public DomainResource Resource { get; }
        /// <summary> Time range relevant to this Timeline inference. </summary>
        public TimePeriod Period { get; }
    }
}
