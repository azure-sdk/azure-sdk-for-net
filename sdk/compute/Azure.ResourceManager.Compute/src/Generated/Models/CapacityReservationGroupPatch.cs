// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.Compute.Models
{
    /// <summary> Specifies information about the capacity reservation group. Only tags can be updated. </summary>
    public partial class CapacityReservationGroupPatch : ComputeResourcePatch
    {
        /// <summary> Initializes a new instance of CapacityReservationGroupPatch. </summary>
        public CapacityReservationGroupPatch()
        {
            CapacityReservations = new ChangeTrackingList<SubResource>();
            VirtualMachinesAssociated = new ChangeTrackingList<SubResource>();
        }

        /// <summary> A list of all capacity reservation resource ids that belong to capacity reservation group. </summary>
        public IReadOnlyList<SubResource> CapacityReservations { get; }
        /// <summary> A list of references to all virtual machines associated to the capacity reservation group. </summary>
        public IReadOnlyList<SubResource> VirtualMachinesAssociated { get; }
        /// <summary> The capacity reservation group instance view which has the list of instance views for all the capacity reservations that belong to the capacity reservation group. </summary>
        public CapacityReservationGroupInstanceView InstanceView { get; }
        /// <summary> A list of all subscriptions that the capacity reservation group is shared with. Minimum api-version: 2023-09-01. Please refer to https://aka.ms/computereservationsharing for more details. </summary>
        internal ResourceSharingProfile SharingProfile { get; set; }
        /// <summary> Specifies an array of references to subscriptionIds. Minimum api-version: 2023-09-01. Please refer to https://aka.ms/computereservationsharing for more details. </summary>
        public IList<WritableSubResource> SharingSubscriptionIds
        {
            get
            {
                if (SharingProfile is null)
                    SharingProfile = new ResourceSharingProfile();
                return SharingProfile.SubscriptionIds;
            }
        }
    }
}
