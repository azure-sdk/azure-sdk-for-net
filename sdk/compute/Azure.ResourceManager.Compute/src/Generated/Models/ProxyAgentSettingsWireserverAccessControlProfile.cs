// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Compute.Models
{
    /// <summary> Specify access control profile for wireserver endpoint. </summary>
    public partial class ProxyAgentSettingsWireserverAccessControlProfile
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ProxyAgentSettingsWireserverAccessControlProfile"/>. </summary>
        public ProxyAgentSettingsWireserverAccessControlProfile()
        {
            Rules = new ChangeTrackingDictionary<string, IList<RuleDefinition>>();
        }

        /// <summary> Initializes a new instance of <see cref="ProxyAgentSettingsWireserverAccessControlProfile"/>. </summary>
        /// <param name="mode"> Specifies the mode that ProxyAgent will execute on. ProxyAgent will start to simulate and log access control over requests to wireserver endpoints in Audit mode, while in Enforce mode it will enforce access control. Default is Audit mode. </param>
        /// <param name="rules"> Specify a dictionary, key is URL path, value is an array of allowed list. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ProxyAgentSettingsWireserverAccessControlProfile(Mode? mode, IDictionary<string, IList<RuleDefinition>> rules, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Mode = mode;
            Rules = rules;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Specifies the mode that ProxyAgent will execute on. ProxyAgent will start to simulate and log access control over requests to wireserver endpoints in Audit mode, while in Enforce mode it will enforce access control. Default is Audit mode. </summary>
        public Mode? Mode { get; set; }
        /// <summary> Specify a dictionary, key is URL path, value is an array of allowed list. </summary>
        public IDictionary<string, IList<RuleDefinition>> Rules { get; }
    }
}
