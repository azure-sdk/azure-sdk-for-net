<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="VerifyAsync(NumberVerificationEnum,string,NumberVerificationContent,CancellationToken)">
      <example>
This sample shows how to call VerifyAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "v2024_01_09_preview");

NumberVerificationContent numberVerificationContent = new NumberVerificationContent(new NetworkIdentifier("<identifierType>", "<identifier>"));
Response<NumberVerificationResult> response = await client.VerifyAsync(NumberVerificationEnum.Number, "<apcGatewayId>", numberVerificationContent);
]]></code>
This sample shows how to call VerifyAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "v2024_01_09_preview");

NumberVerificationContent numberVerificationContent = new NumberVerificationContent(new NetworkIdentifier("<identifierType>", "<identifier>"))
{
    PhoneNumber = "<phoneNumber>",
    HashedPhoneNumber = "<hashedPhoneNumber>",
};
Response<NumberVerificationResult> response = await client.VerifyAsync(NumberVerificationEnum.Number, "<apcGatewayId>", numberVerificationContent);
]]></code></example>
    </member>
    <member name="Verify(NumberVerificationEnum,string,NumberVerificationContent,CancellationToken)">
      <example>
This sample shows how to call Verify.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "v2024_01_09_preview");

NumberVerificationContent numberVerificationContent = new NumberVerificationContent(new NetworkIdentifier("<identifierType>", "<identifier>"));
Response<NumberVerificationResult> response = client.Verify(NumberVerificationEnum.Number, "<apcGatewayId>", numberVerificationContent);
]]></code>
This sample shows how to call Verify with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "v2024_01_09_preview");

NumberVerificationContent numberVerificationContent = new NumberVerificationContent(new NetworkIdentifier("<identifierType>", "<identifier>"))
{
    PhoneNumber = "<phoneNumber>",
    HashedPhoneNumber = "<hashedPhoneNumber>",
};
Response<NumberVerificationResult> response = client.Verify(NumberVerificationEnum.Number, "<apcGatewayId>", numberVerificationContent);
]]></code></example>
    </member>
    <member name="VerifyAsync(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call VerifyAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "v2024_01_09_preview");

using RequestContent content = RequestContent.Create(new
{
    networkIdentifier = new
    {
        identifierType = "<identifierType>",
        identifier = "<identifier>",
    },
});
Response response = await client.VerifyAsync("number", "<apcGatewayId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("verificationResult").ToString());
]]></code>
This sample shows how to call VerifyAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "v2024_01_09_preview");

using RequestContent content = RequestContent.Create(new
{
    networkIdentifier = new
    {
        identifierType = "<identifierType>",
        identifier = "<identifier>",
    },
    phoneNumber = "<phoneNumber>",
    hashedPhoneNumber = "<hashedPhoneNumber>",
});
Response response = await client.VerifyAsync("number", "<apcGatewayId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("verificationResult").ToString());
]]></code></example>
    </member>
    <member name="Verify(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call Verify and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "v2024_01_09_preview");

using RequestContent content = RequestContent.Create(new
{
    networkIdentifier = new
    {
        identifierType = "<identifierType>",
        identifier = "<identifier>",
    },
});
Response response = client.Verify("number", "<apcGatewayId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("verificationResult").ToString());
]]></code>
This sample shows how to call Verify with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "v2024_01_09_preview");

using RequestContent content = RequestContent.Create(new
{
    networkIdentifier = new
    {
        identifierType = "<identifierType>",
        identifier = "<identifier>",
    },
    phoneNumber = "<phoneNumber>",
    hashedPhoneNumber = "<hashedPhoneNumber>",
});
Response response = client.Verify("number", "<apcGatewayId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("verificationResult").ToString());
]]></code></example>
    </member>
    <member name="RetrieveAsync(NumberVerificationEnum,string,NetworkIdentifier,CancellationToken)">
      <example>
This sample shows how to call RetrieveAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "v2024_01_09_preview");

NetworkIdentifier networkIdentifier = new NetworkIdentifier("<identifierType>", "<identifier>");
Response<NumberRetrievalResult> response = await client.RetrieveAsync(NumberVerificationEnum.Number, "<apcGatewayId>", networkIdentifier);
]]></code>
This sample shows how to call RetrieveAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "v2024_01_09_preview");

NetworkIdentifier networkIdentifier = new NetworkIdentifier("<identifierType>", "<identifier>");
Response<NumberRetrievalResult> response = await client.RetrieveAsync(NumberVerificationEnum.Number, "<apcGatewayId>", networkIdentifier);
]]></code></example>
    </member>
    <member name="Retrieve(NumberVerificationEnum,string,NetworkIdentifier,CancellationToken)">
      <example>
This sample shows how to call Retrieve.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "v2024_01_09_preview");

NetworkIdentifier networkIdentifier = new NetworkIdentifier("<identifierType>", "<identifier>");
Response<NumberRetrievalResult> response = client.Retrieve(NumberVerificationEnum.Number, "<apcGatewayId>", networkIdentifier);
]]></code>
This sample shows how to call Retrieve with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "v2024_01_09_preview");

NetworkIdentifier networkIdentifier = new NetworkIdentifier("<identifierType>", "<identifier>");
Response<NumberRetrievalResult> response = client.Retrieve(NumberVerificationEnum.Number, "<apcGatewayId>", networkIdentifier);
]]></code></example>
    </member>
    <member name="RetrieveAsync(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call RetrieveAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "v2024_01_09_preview");

using RequestContent content = RequestContent.Create(new
{
    identifierType = "<identifierType>",
    identifier = "<identifier>",
});
Response response = await client.RetrieveAsync("number", "<apcGatewayId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("phoneNumber").ToString());
]]></code>
This sample shows how to call RetrieveAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "v2024_01_09_preview");

using RequestContent content = RequestContent.Create(new
{
    identifierType = "<identifierType>",
    identifier = "<identifier>",
});
Response response = await client.RetrieveAsync("number", "<apcGatewayId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("phoneNumber").ToString());
]]></code></example>
    </member>
    <member name="Retrieve(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call Retrieve and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "v2024_01_09_preview");

using RequestContent content = RequestContent.Create(new
{
    identifierType = "<identifierType>",
    identifier = "<identifier>",
});
Response response = client.Retrieve("number", "<apcGatewayId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("phoneNumber").ToString());
]]></code>
This sample shows how to call Retrieve with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "v2024_01_09_preview");

using RequestContent content = RequestContent.Create(new
{
    identifierType = "<identifierType>",
    identifier = "<identifier>",
});
Response response = client.Retrieve("number", "<apcGatewayId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("phoneNumber").ToString());
]]></code></example>
    </member>
  </members>
</doc>