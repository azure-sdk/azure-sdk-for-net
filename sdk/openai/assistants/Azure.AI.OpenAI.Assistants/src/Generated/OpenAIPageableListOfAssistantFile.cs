// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.AI.OpenAI.Assistants
{
    /// <summary> The response data for a requested list of items. </summary>
    public partial class OpenAIPageableListOfAssistantFile
    {
        /// <summary> Initializes a new instance of <see cref="OpenAIPageableListOfAssistantFile"/>. </summary>
        /// <param name="data"> The requested list of items. </param>
        /// <param name="firstId"> The first ID represented in this list. </param>
        /// <param name="lastId"> The last ID represented in this list. </param>
        /// <param name="hasMore"> A value indicating whether there are additional values available not captured in this list. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="data"/>, <paramref name="firstId"/> or <paramref name="lastId"/> is null. </exception>
        internal OpenAIPageableListOfAssistantFile(IEnumerable<AssistantFile> data, string firstId, string lastId, bool hasMore)
        {
            Argument.AssertNotNull(data, nameof(data));
            Argument.AssertNotNull(firstId, nameof(firstId));
            Argument.AssertNotNull(lastId, nameof(lastId));

            Data = data.ToList();
            FirstId = firstId;
            LastId = lastId;
            HasMore = hasMore;
        }

        /// <summary> Initializes a new instance of <see cref="OpenAIPageableListOfAssistantFile"/>. </summary>
        /// <param name="object"> The object type, which is always list. </param>
        /// <param name="data"> The requested list of items. </param>
        /// <param name="firstId"> The first ID represented in this list. </param>
        /// <param name="lastId"> The last ID represented in this list. </param>
        /// <param name="hasMore"> A value indicating whether there are additional values available not captured in this list. </param>
        internal OpenAIPageableListOfAssistantFile(OpenAIPageableListOfAssistantFileObject @object, IReadOnlyList<AssistantFile> data, string firstId, string lastId, bool hasMore)
        {
            Object = @object;
            Data = data;
            FirstId = firstId;
            LastId = lastId;
            HasMore = hasMore;
        }

        /// <summary> The object type, which is always list. </summary>
        public OpenAIPageableListOfAssistantFileObject Object { get; } = OpenAIPageableListOfAssistantFileObject.List;

        /// <summary> The requested list of items. </summary>
        public IReadOnlyList<AssistantFile> Data { get; }
        /// <summary> The first ID represented in this list. </summary>
        public string FirstId { get; }
        /// <summary> The last ID represented in this list. </summary>
        public string LastId { get; }
        /// <summary> A value indicating whether there are additional values available not captured in this list. </summary>
        public bool HasMore { get; }
    }
}
