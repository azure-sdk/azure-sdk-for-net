// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.AI.OpenAI.Assistants
{
    /// <summary> The UploadFileRequest. </summary>
    internal partial class UploadFileRequest
    {
        /// <summary> Initializes a new instance of <see cref="UploadFileRequest"/>. </summary>
        /// <param name="data"> The file data (not filename) to upload. </param>
        /// <param name="purpose"> The intended purpose of the file. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="data"/> is null. </exception>
        public UploadFileRequest(BinaryData data, OpenAIFilePurpose purpose)
        {
            Argument.AssertNotNull(data, nameof(data));

            Data = data;
            Purpose = purpose;
        }

        /// <summary> Initializes a new instance of <see cref="UploadFileRequest"/>. </summary>
        /// <param name="data"> The file data (not filename) to upload. </param>
        /// <param name="purpose"> The intended purpose of the file. </param>
        /// <param name="filename"> A filename to associate with the uploaded data. </param>
        internal UploadFileRequest(BinaryData data, OpenAIFilePurpose purpose, string filename)
        {
            Data = data;
            Purpose = purpose;
            Filename = filename;
        }

        /// <summary>
        /// The file data (not filename) to upload.
        /// <para>
        /// To assign a byte[] to this property use <see cref="BinaryData.FromBytes(byte[])"/>.
        /// The byte[] will be serialized to a Base64 encoded string.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromBytes(new byte[] { 1, 2, 3 })</term>
        /// <description>Creates a payload of "AQID".</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public BinaryData Data { get; }
        /// <summary> The intended purpose of the file. </summary>
        public OpenAIFilePurpose Purpose { get; }
        /// <summary> A filename to associate with the uploaded data. </summary>
        public string Filename { get; set; }
    }
}
