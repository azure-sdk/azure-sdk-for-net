// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.AI.OpenAI.Assistants
{
    /// <summary> The text and associated annotations for a single item of assistant thread message content. </summary>
    internal partial class InternalMessageTextDetails
    {
        /// <summary> Initializes a new instance of <see cref="InternalMessageTextDetails"/>. </summary>
        /// <param name="text"> The text data. </param>
        /// <param name="annotations"> A list of annotations associated with this text. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="text"/> or <paramref name="annotations"/> is null. </exception>
        internal InternalMessageTextDetails(string text, IEnumerable<MessageTextAnnotation> annotations)
        {
            Argument.AssertNotNull(text, nameof(text));
            Argument.AssertNotNull(annotations, nameof(annotations));

            Text = text;
            Annotations = annotations.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="InternalMessageTextDetails"/>. </summary>
        /// <param name="text"> The text data. </param>
        /// <param name="annotations"> A list of annotations associated with this text. </param>
        internal InternalMessageTextDetails(string text, IReadOnlyList<MessageTextAnnotation> annotations)
        {
            Text = text;
            Annotations = annotations;
        }

        /// <summary> The text data. </summary>
        public string Text { get; }
        /// <summary>
        /// A list of annotations associated with this text.
        /// Please note <see cref="MessageTextAnnotation"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="MessageFileCitationTextAnnotation"/> and <see cref="MessageFilePathTextAnnotation"/>.
        /// </summary>
        public IReadOnlyList<MessageTextAnnotation> Annotations { get; }
    }
}
