// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.AI.OpenAI.Assistants
{
    /// <summary> The detailed information about a code interpreter invocation by the model. </summary>
    internal partial class InternalCodeInterpreterToolCallDetails
    {
        /// <summary> Initializes a new instance of <see cref="InternalCodeInterpreterToolCallDetails"/>. </summary>
        /// <param name="input"> The input provided by the model to the code interpreter tool. </param>
        /// <param name="outputs"> The outputs produced by the code interpreter tool back to the model in response to the tool call. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="input"/> or <paramref name="outputs"/> is null. </exception>
        internal InternalCodeInterpreterToolCallDetails(string input, IEnumerable<CodeInterpreterToolCallOutput> outputs)
        {
            Argument.AssertNotNull(input, nameof(input));
            Argument.AssertNotNull(outputs, nameof(outputs));

            Input = input;
            Outputs = outputs.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="InternalCodeInterpreterToolCallDetails"/>. </summary>
        /// <param name="input"> The input provided by the model to the code interpreter tool. </param>
        /// <param name="outputs"> The outputs produced by the code interpreter tool back to the model in response to the tool call. </param>
        internal InternalCodeInterpreterToolCallDetails(string input, IReadOnlyList<CodeInterpreterToolCallOutput> outputs)
        {
            Input = input;
            Outputs = outputs;
        }

        /// <summary> The input provided by the model to the code interpreter tool. </summary>
        public string Input { get; }
        /// <summary>
        /// The outputs produced by the code interpreter tool back to the model in response to the tool call.
        /// Please note <see cref="CodeInterpreterToolCallOutput"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="CodeInterpreterLogOutput"/> and <see cref="CodeInterpreterImageOutput"/>.
        /// </summary>
        public IReadOnlyList<CodeInterpreterToolCallOutput> Outputs { get; }
    }
}
