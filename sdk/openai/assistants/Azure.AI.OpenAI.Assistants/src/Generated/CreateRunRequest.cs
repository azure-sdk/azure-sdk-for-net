// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.AI.OpenAI.Assistants
{
    /// <summary> The CreateRunRequest. </summary>
    internal partial class CreateRunRequest
    {
        /// <summary> Initializes a new instance of <see cref="CreateRunRequest"/>. </summary>
        /// <param name="assistantId"> The ID of the assistant that should run the thread. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="assistantId"/> is null. </exception>
        public CreateRunRequest(string assistantId)
        {
            Argument.AssertNotNull(assistantId, nameof(assistantId));

            AssistantId = assistantId;
            OverrideTools = new ChangeTrackingList<ToolDefinition>();
            Metadata = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of <see cref="CreateRunRequest"/>. </summary>
        /// <param name="assistantId"> The ID of the assistant that should run the thread. </param>
        /// <param name="overrideModelName"> The overridden model name that the assistant should use to run the thread. </param>
        /// <param name="overrideInstructions"> The overridden system instructions that the assistant should use to run the thread. </param>
        /// <param name="overrideTools"> The overridden list of enabled tools that the assistant should use to run the thread. </param>
        /// <param name="metadata"> A set of up to 16 key/value pairs that can be attached to an object, used for storing additional information about that object in a structured format. Keys may be up to 64 characters in length and values may be up to 512 characters in length. </param>
        internal CreateRunRequest(string assistantId, string overrideModelName, string overrideInstructions, IList<ToolDefinition> overrideTools, IDictionary<string, string> metadata)
        {
            AssistantId = assistantId;
            OverrideModelName = overrideModelName;
            OverrideInstructions = overrideInstructions;
            OverrideTools = overrideTools;
            Metadata = metadata;
        }

        /// <summary> The ID of the assistant that should run the thread. </summary>
        public string AssistantId { get; }
        /// <summary> The overridden model name that the assistant should use to run the thread. </summary>
        public string OverrideModelName { get; set; }
        /// <summary> The overridden system instructions that the assistant should use to run the thread. </summary>
        public string OverrideInstructions { get; set; }
        /// <summary>
        /// The overridden list of enabled tools that the assistant should use to run the thread.
        /// Please note <see cref="ToolDefinition"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="CodeInterpreterToolDefinition"/>, <see cref="RetrievalToolDefinition"/> and <see cref="FunctionToolDefinition"/>.
        /// </summary>
        public IList<ToolDefinition> OverrideTools { get; }
        /// <summary> A set of up to 16 key/value pairs that can be attached to an object, used for storing additional information about that object in a structured format. Keys may be up to 64 characters in length and values may be up to 512 characters in length. </summary>
        public IDictionary<string, string> Metadata { get; set; }
    }
}
