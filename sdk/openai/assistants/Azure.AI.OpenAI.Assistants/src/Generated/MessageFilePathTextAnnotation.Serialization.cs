// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure;

namespace Azure.AI.OpenAI.Assistants
{
    public partial class MessageFilePathTextAnnotation
    {
        internal static MessageFilePathTextAnnotation DeserializeMessageFilePathTextAnnotation(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            InternalMessageFilePathDetails filePath = default;
            string type = default;
            string text = default;
            int startIndex = default;
            int endIndex = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("file_path"u8))
                {
                    filePath = InternalMessageFilePathDetails.DeserializeInternalMessageFilePathDetails(property.Value);
                    continue;
                }
                if (property.NameEquals("type"u8))
                {
                    type = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("text"u8))
                {
                    text = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("start_index"u8))
                {
                    startIndex = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("end_index"u8))
                {
                    endIndex = property.Value.GetInt32();
                    continue;
                }
            }
            return new MessageFilePathTextAnnotation(type, text, startIndex, endIndex, filePath);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static new MessageFilePathTextAnnotation FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeMessageFilePathTextAnnotation(document.RootElement);
        }
    }
}
