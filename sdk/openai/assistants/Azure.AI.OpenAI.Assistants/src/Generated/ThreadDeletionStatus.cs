// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.AI.OpenAI.Assistants
{
    /// <summary> The status of a thread deletion operation. </summary>
    public partial class ThreadDeletionStatus
    {
        /// <summary> Initializes a new instance of <see cref="ThreadDeletionStatus"/>. </summary>
        /// <param name="id"> The ID of the resource specified for deletion. </param>
        /// <param name="deleted"> A value indicating whether deletion was successful. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/> is null. </exception>
        internal ThreadDeletionStatus(string id, bool deleted)
        {
            Argument.AssertNotNull(id, nameof(id));

            Id = id;
            Deleted = deleted;
        }

        /// <summary> Initializes a new instance of <see cref="ThreadDeletionStatus"/>. </summary>
        /// <param name="id"> The ID of the resource specified for deletion. </param>
        /// <param name="deleted"> A value indicating whether deletion was successful. </param>
        /// <param name="object"> The object type, which is always 'thread.deleted'. </param>
        internal ThreadDeletionStatus(string id, bool deleted, ThreadDeletionStatusObject @object)
        {
            Id = id;
            Deleted = deleted;
            Object = @object;
        }

        /// <summary> The ID of the resource specified for deletion. </summary>
        public string Id { get; }
        /// <summary> A value indicating whether deletion was successful. </summary>
        public bool Deleted { get; }
        /// <summary> The object type, which is always 'thread.deleted'. </summary>
        public ThreadDeletionStatusObject Object { get; } = ThreadDeletionStatusObject.ThreadDeleted;
    }
}
