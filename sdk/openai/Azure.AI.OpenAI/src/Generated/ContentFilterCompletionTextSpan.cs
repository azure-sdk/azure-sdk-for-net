// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.OpenAI
{
    /// <summary> Describes a span within generated completion text. Offset 0 is the first UTF32 code point of the completion text. </summary>
    public partial class ContentFilterCompletionTextSpan
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ContentFilterCompletionTextSpan"/>. </summary>
        /// <param name="completionStartOffset"> Offset of the UTF32 code point which begins the span. </param>
        /// <param name="completionEndOffset">
        /// Offset of the first UTF32 code point which is excluded from the span.
        /// This field is always equal to completion_start_offset for empty spans.
        /// This field is always larger than completion_start_offset for non-empty spans.
        /// </param>
        internal ContentFilterCompletionTextSpan(int completionStartOffset, int completionEndOffset)
        {
            CompletionStartOffset = completionStartOffset;
            CompletionEndOffset = completionEndOffset;
        }

        /// <summary> Initializes a new instance of <see cref="ContentFilterCompletionTextSpan"/>. </summary>
        /// <param name="completionStartOffset"> Offset of the UTF32 code point which begins the span. </param>
        /// <param name="completionEndOffset">
        /// Offset of the first UTF32 code point which is excluded from the span.
        /// This field is always equal to completion_start_offset for empty spans.
        /// This field is always larger than completion_start_offset for non-empty spans.
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ContentFilterCompletionTextSpan(int completionStartOffset, int completionEndOffset, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            CompletionStartOffset = completionStartOffset;
            CompletionEndOffset = completionEndOffset;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="ContentFilterCompletionTextSpan"/> for deserialization. </summary>
        internal ContentFilterCompletionTextSpan()
        {
        }

        /// <summary> Offset of the UTF32 code point which begins the span. </summary>
        public int CompletionStartOffset { get; }
        /// <summary>
        /// Offset of the first UTF32 code point which is excluded from the span.
        /// This field is always equal to completion_start_offset for empty spans.
        /// This field is always larger than completion_start_offset for non-empty spans.
        /// </summary>
        public int CompletionEndOffset { get; }
    }
}
