// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.AI.OpenAI
{
    /// <summary> Values to specified the required modality for the model to use. </summary>
    public readonly partial struct ChatCompletionModality : IEquatable<ChatCompletionModality>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ChatCompletionModality"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ChatCompletionModality(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string TextValue = "text";
        private const string AudioValue = "audio";

        /// <summary> The model is to generate text output. </summary>
        public static ChatCompletionModality Text { get; } = new ChatCompletionModality(TextValue);
        /// <summary> The model is to generate audio output. </summary>
        public static ChatCompletionModality Audio { get; } = new ChatCompletionModality(AudioValue);
        /// <summary> Determines if two <see cref="ChatCompletionModality"/> values are the same. </summary>
        public static bool operator ==(ChatCompletionModality left, ChatCompletionModality right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ChatCompletionModality"/> values are not the same. </summary>
        public static bool operator !=(ChatCompletionModality left, ChatCompletionModality right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="ChatCompletionModality"/>. </summary>
        public static implicit operator ChatCompletionModality(string value) => new ChatCompletionModality(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ChatCompletionModality other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ChatCompletionModality other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
