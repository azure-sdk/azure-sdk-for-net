// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.OpenAI
{
    /// <summary> The authentication options for Azure OpenAI On Your Data vector search when using access token. </summary>
    public partial class OnYourDataVectorSearchAccessTokenAuthenticationOptions : OnYourDataVectorSearchAuthenticationOptions
    {
        /// <summary> Initializes a new instance of <see cref="OnYourDataVectorSearchAccessTokenAuthenticationOptions"/>. </summary>
        /// <param name="accessToken"> The access token to use for authentication. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="accessToken"/> is null. </exception>
        public OnYourDataVectorSearchAccessTokenAuthenticationOptions(string accessToken)
        {
            Argument.AssertNotNull(accessToken, nameof(accessToken));

            Type = OnYourDataVectorSearchAuthenticationType.AccessToken;
            AccessToken = accessToken;
        }

        /// <summary> Initializes a new instance of <see cref="OnYourDataVectorSearchAccessTokenAuthenticationOptions"/>. </summary>
        /// <param name="type"> The type of authentication to use. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="accessToken"> The access token to use for authentication. </param>
        internal OnYourDataVectorSearchAccessTokenAuthenticationOptions(OnYourDataVectorSearchAuthenticationType type, IDictionary<string, BinaryData> serializedAdditionalRawData, string accessToken) : base(type, serializedAdditionalRawData)
        {
            AccessToken = accessToken;
        }

        /// <summary> Initializes a new instance of <see cref="OnYourDataVectorSearchAccessTokenAuthenticationOptions"/> for deserialization. </summary>
        internal OnYourDataVectorSearchAccessTokenAuthenticationOptions()
        {
        }

        /// <summary> The access token to use for authentication. </summary>
        public string AccessToken { get; }
    }
}
