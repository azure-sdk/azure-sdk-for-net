// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.OpenAI
{
    /// <summary> A structured chat content item containing audio data. </summary>
    public partial class ChatMessageAudioContentItem : ChatMessageContentItem
    {
        /// <summary> Initializes a new instance of <see cref="ChatMessageAudioContentItem"/>. </summary>
        /// <param name="inputAudio"> The audio data. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="inputAudio"/> is null. </exception>
        public ChatMessageAudioContentItem(InputAudioContent inputAudio)
        {
            Argument.AssertNotNull(inputAudio, nameof(inputAudio));

            Type = "input_audio";
            InputAudio = inputAudio;
        }

        /// <summary> Initializes a new instance of <see cref="ChatMessageAudioContentItem"/>. </summary>
        /// <param name="type"> The discriminated object type. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="inputAudio"> The audio data. </param>
        internal ChatMessageAudioContentItem(string type, IDictionary<string, BinaryData> serializedAdditionalRawData, InputAudioContent inputAudio) : base(type, serializedAdditionalRawData)
        {
            InputAudio = inputAudio;
        }

        /// <summary> Initializes a new instance of <see cref="ChatMessageAudioContentItem"/> for deserialization. </summary>
        internal ChatMessageAudioContentItem()
        {
        }

        /// <summary> The audio data. </summary>
        public InputAudioContent InputAudio { get; }
    }
}
