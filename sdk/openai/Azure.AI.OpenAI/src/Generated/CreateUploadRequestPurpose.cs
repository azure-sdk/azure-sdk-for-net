// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.AI.OpenAI
{
    /// <summary> The CreateUploadRequestPurpose. </summary>
    public readonly partial struct CreateUploadRequestPurpose : IEquatable<CreateUploadRequestPurpose>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="CreateUploadRequestPurpose"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public CreateUploadRequestPurpose(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string AssistantsValue = "assistants";
        private const string BatchValue = "batch";
        private const string FineTuneValue = "fine-tune";
        private const string VisionValue = "vision";

        /// <summary> assistants. </summary>
        public static CreateUploadRequestPurpose Assistants { get; } = new CreateUploadRequestPurpose(AssistantsValue);
        /// <summary> batch. </summary>
        public static CreateUploadRequestPurpose Batch { get; } = new CreateUploadRequestPurpose(BatchValue);
        /// <summary> fine-tune. </summary>
        public static CreateUploadRequestPurpose FineTune { get; } = new CreateUploadRequestPurpose(FineTuneValue);
        /// <summary> vision. </summary>
        public static CreateUploadRequestPurpose Vision { get; } = new CreateUploadRequestPurpose(VisionValue);
        /// <summary> Determines if two <see cref="CreateUploadRequestPurpose"/> values are the same. </summary>
        public static bool operator ==(CreateUploadRequestPurpose left, CreateUploadRequestPurpose right) => left.Equals(right);
        /// <summary> Determines if two <see cref="CreateUploadRequestPurpose"/> values are not the same. </summary>
        public static bool operator !=(CreateUploadRequestPurpose left, CreateUploadRequestPurpose right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="CreateUploadRequestPurpose"/>. </summary>
        public static implicit operator CreateUploadRequestPurpose(string value) => new CreateUploadRequestPurpose(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is CreateUploadRequestPurpose other && Equals(other);
        /// <inheritdoc />
        public bool Equals(CreateUploadRequestPurpose other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
