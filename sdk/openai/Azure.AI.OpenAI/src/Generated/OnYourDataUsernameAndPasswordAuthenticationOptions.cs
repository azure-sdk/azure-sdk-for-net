// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.OpenAI
{
    /// <summary> The authentication options for Azure OpenAI On Your Data when using a username and password. </summary>
    public partial class OnYourDataUsernameAndPasswordAuthenticationOptions : OnYourDataAuthenticationOptions
    {
        /// <summary> Initializes a new instance of <see cref="OnYourDataUsernameAndPasswordAuthenticationOptions"/>. </summary>
        /// <param name="username"> The username. </param>
        /// <param name="password"> The password. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="username"/> or <paramref name="password"/> is null. </exception>
        public OnYourDataUsernameAndPasswordAuthenticationOptions(string username, string password)
        {
            Argument.AssertNotNull(username, nameof(username));
            Argument.AssertNotNull(password, nameof(password));

            Type = OnYourDataAuthenticationType.UsernameAndPassword;
            Username = username;
            Password = password;
        }

        /// <summary> Initializes a new instance of <see cref="OnYourDataUsernameAndPasswordAuthenticationOptions"/>. </summary>
        /// <param name="type"> The authentication type. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="username"> The username. </param>
        /// <param name="password"> The password. </param>
        internal OnYourDataUsernameAndPasswordAuthenticationOptions(OnYourDataAuthenticationType type, IDictionary<string, BinaryData> serializedAdditionalRawData, string username, string password) : base(type, serializedAdditionalRawData)
        {
            Username = username;
            Password = password;
        }

        /// <summary> Initializes a new instance of <see cref="OnYourDataUsernameAndPasswordAuthenticationOptions"/> for deserialization. </summary>
        internal OnYourDataUsernameAndPasswordAuthenticationOptions()
        {
        }

        /// <summary> The username. </summary>
        public string Username { get; }
        /// <summary> The password. </summary>
        public string Password { get; }
    }
}
