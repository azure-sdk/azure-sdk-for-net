// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Microsoft.VoiceServices.Provisioning.Samples
{
    public partial class Samples_TeamsRequestsForInformation
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RequestForInformationResource_GetRequestForInformation_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TeamsRequestsForInformation client = new VoiceServicesClient(endpoint, credential).GetTeamsRequestsForInformationClient();

            Response response = client.GetRequestForInformation("<tenantId>", null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("tenantId").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_RequestForInformationResource_GetRequestForInformation_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TeamsRequestsForInformation client = new VoiceServicesClient(endpoint, credential).GetTeamsRequestsForInformationClient();

            Response response = await client.GetRequestForInformationAsync("<tenantId>", null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("tenantId").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RequestForInformationResource_GetRequestForInformation_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TeamsRequestsForInformation client = new VoiceServicesClient(endpoint, credential).GetTeamsRequestsForInformationClient();

            Response<RequestForInformationResource> response = client.GetRequestForInformation("<tenantId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_RequestForInformationResource_GetRequestForInformation_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TeamsRequestsForInformation client = new VoiceServicesClient(endpoint, credential).GetTeamsRequestsForInformationClient();

            Response<RequestForInformationResource> response = await client.GetRequestForInformationAsync("<tenantId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RequestForInformationResource_GetRequestForInformation_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TeamsRequestsForInformation client = new VoiceServicesClient(endpoint, credential).GetTeamsRequestsForInformationClient();

            Response response = client.GetRequestForInformation("<tenantId>", null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("serviceProvisioningStatus").ToString());
            Console.WriteLine(result.GetProperty("serviceProvisioningErrors")[0].GetProperty("code").ToString());
            Console.WriteLine(result.GetProperty("serviceProvisioningErrors")[0].GetProperty("message").ToString());
            Console.WriteLine(result.GetProperty("serviceProvisioningErrors")[0].GetProperty("target").ToString());
            Console.WriteLine(result.GetProperty("serviceProvisioningErrors")[0].GetProperty("innererror").GetProperty("code").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("tenantId").ToString());
            Console.WriteLine(result.GetProperty("accountName").ToString());
            Console.WriteLine(result.GetProperty("productContext").ToString());
            Console.WriteLine(result.GetProperty("operatorId").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("consentedOn").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedOn").ToString());
            Console.WriteLine(result.GetProperty("consentedCountries")[0].ToString());
            Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("fullName").ToString());
            Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("email").ToString());
            Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("telephoneNumber").ToString());
            Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("companyName").ToString());
            Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("companySize").ToString());
            Console.WriteLine(result.GetProperty("customerRelationship").GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("customerRelationship").GetProperty("lastModifiedOn").ToString());
            Console.WriteLine(result.GetProperty("customerRelationship").GetProperty("comment").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_RequestForInformationResource_GetRequestForInformation_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TeamsRequestsForInformation client = new VoiceServicesClient(endpoint, credential).GetTeamsRequestsForInformationClient();

            Response response = await client.GetRequestForInformationAsync("<tenantId>", null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("serviceProvisioningStatus").ToString());
            Console.WriteLine(result.GetProperty("serviceProvisioningErrors")[0].GetProperty("code").ToString());
            Console.WriteLine(result.GetProperty("serviceProvisioningErrors")[0].GetProperty("message").ToString());
            Console.WriteLine(result.GetProperty("serviceProvisioningErrors")[0].GetProperty("target").ToString());
            Console.WriteLine(result.GetProperty("serviceProvisioningErrors")[0].GetProperty("innererror").GetProperty("code").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("tenantId").ToString());
            Console.WriteLine(result.GetProperty("accountName").ToString());
            Console.WriteLine(result.GetProperty("productContext").ToString());
            Console.WriteLine(result.GetProperty("operatorId").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("consentedOn").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedOn").ToString());
            Console.WriteLine(result.GetProperty("consentedCountries")[0].ToString());
            Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("fullName").ToString());
            Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("email").ToString());
            Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("telephoneNumber").ToString());
            Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("companyName").ToString());
            Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("companySize").ToString());
            Console.WriteLine(result.GetProperty("customerRelationship").GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("customerRelationship").GetProperty("lastModifiedOn").ToString());
            Console.WriteLine(result.GetProperty("customerRelationship").GetProperty("comment").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RequestForInformationResource_GetRequestForInformation_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TeamsRequestsForInformation client = new VoiceServicesClient(endpoint, credential).GetTeamsRequestsForInformationClient();

            Response<RequestForInformationResource> response = client.GetRequestForInformation("<tenantId>", requestConditions: null);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_RequestForInformationResource_GetRequestForInformation_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TeamsRequestsForInformation client = new VoiceServicesClient(endpoint, credential).GetTeamsRequestsForInformationClient();

            Response<RequestForInformationResource> response = await client.GetRequestForInformationAsync("<tenantId>", requestConditions: null);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RequestForInformationResource_CreateOrUpdateRequestForInformation_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TeamsRequestsForInformation client = new VoiceServicesClient(endpoint, credential).GetTeamsRequestsForInformationClient();

            using RequestContent content = RequestContent.Create(new object());
            Response response = client.CreateOrUpdateRequestForInformation("<tenantId>", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("tenantId").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_RequestForInformationResource_CreateOrUpdateRequestForInformation_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TeamsRequestsForInformation client = new VoiceServicesClient(endpoint, credential).GetTeamsRequestsForInformationClient();

            using RequestContent content = RequestContent.Create(new object());
            Response response = await client.CreateOrUpdateRequestForInformationAsync("<tenantId>", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("tenantId").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RequestForInformationResource_CreateOrUpdateRequestForInformation_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TeamsRequestsForInformation client = new VoiceServicesClient(endpoint, credential).GetTeamsRequestsForInformationClient();

            using RequestContent content = RequestContent.Create(new
            {
                customerRelationship = new
                {
                    status = "<status>",
                    comment = "<comment>",
                },
            });
            Response response = client.CreateOrUpdateRequestForInformation("<tenantId>", content, requestConditions: null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("serviceProvisioningStatus").ToString());
            Console.WriteLine(result.GetProperty("serviceProvisioningErrors")[0].GetProperty("code").ToString());
            Console.WriteLine(result.GetProperty("serviceProvisioningErrors")[0].GetProperty("message").ToString());
            Console.WriteLine(result.GetProperty("serviceProvisioningErrors")[0].GetProperty("target").ToString());
            Console.WriteLine(result.GetProperty("serviceProvisioningErrors")[0].GetProperty("innererror").GetProperty("code").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("tenantId").ToString());
            Console.WriteLine(result.GetProperty("accountName").ToString());
            Console.WriteLine(result.GetProperty("productContext").ToString());
            Console.WriteLine(result.GetProperty("operatorId").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("consentedOn").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedOn").ToString());
            Console.WriteLine(result.GetProperty("consentedCountries")[0].ToString());
            Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("fullName").ToString());
            Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("email").ToString());
            Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("telephoneNumber").ToString());
            Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("companyName").ToString());
            Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("companySize").ToString());
            Console.WriteLine(result.GetProperty("customerRelationship").GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("customerRelationship").GetProperty("lastModifiedOn").ToString());
            Console.WriteLine(result.GetProperty("customerRelationship").GetProperty("comment").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_RequestForInformationResource_CreateOrUpdateRequestForInformation_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TeamsRequestsForInformation client = new VoiceServicesClient(endpoint, credential).GetTeamsRequestsForInformationClient();

            using RequestContent content = RequestContent.Create(new
            {
                customerRelationship = new
                {
                    status = "<status>",
                    comment = "<comment>",
                },
            });
            Response response = await client.CreateOrUpdateRequestForInformationAsync("<tenantId>", content, requestConditions: null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("serviceProvisioningStatus").ToString());
            Console.WriteLine(result.GetProperty("serviceProvisioningErrors")[0].GetProperty("code").ToString());
            Console.WriteLine(result.GetProperty("serviceProvisioningErrors")[0].GetProperty("message").ToString());
            Console.WriteLine(result.GetProperty("serviceProvisioningErrors")[0].GetProperty("target").ToString());
            Console.WriteLine(result.GetProperty("serviceProvisioningErrors")[0].GetProperty("innererror").GetProperty("code").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("tenantId").ToString());
            Console.WriteLine(result.GetProperty("accountName").ToString());
            Console.WriteLine(result.GetProperty("productContext").ToString());
            Console.WriteLine(result.GetProperty("operatorId").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("consentedOn").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedOn").ToString());
            Console.WriteLine(result.GetProperty("consentedCountries")[0].ToString());
            Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("fullName").ToString());
            Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("email").ToString());
            Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("telephoneNumber").ToString());
            Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("companyName").ToString());
            Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("companySize").ToString());
            Console.WriteLine(result.GetProperty("customerRelationship").GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("customerRelationship").GetProperty("lastModifiedOn").ToString());
            Console.WriteLine(result.GetProperty("customerRelationship").GetProperty("comment").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RequestForInformationResource_GetRequestForInformationResources_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TeamsRequestsForInformation client = new VoiceServicesClient(endpoint, credential).GetTeamsRequestsForInformationClient();

            foreach (BinaryData item in client.GetRequestForInformationResources(null, null, null, null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("tenantId").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_RequestForInformationResource_GetRequestForInformationResources_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TeamsRequestsForInformation client = new VoiceServicesClient(endpoint, credential).GetTeamsRequestsForInformationClient();

            await foreach (BinaryData item in client.GetRequestForInformationResourcesAsync(null, null, null, null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("tenantId").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RequestForInformationResource_GetRequestForInformationResources_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TeamsRequestsForInformation client = new VoiceServicesClient(endpoint, credential).GetTeamsRequestsForInformationClient();

            foreach (RequestForInformationResource item in client.GetRequestForInformationResources())
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_RequestForInformationResource_GetRequestForInformationResources_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TeamsRequestsForInformation client = new VoiceServicesClient(endpoint, credential).GetTeamsRequestsForInformationClient();

            await foreach (RequestForInformationResource item in client.GetRequestForInformationResourcesAsync())
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RequestForInformationResource_GetRequestForInformationResources_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TeamsRequestsForInformation client = new VoiceServicesClient(endpoint, credential).GetTeamsRequestsForInformationClient();

            foreach (BinaryData item in client.GetRequestForInformationResources(1234, 1234, 1234, "<filter>", true, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("serviceProvisioningStatus").ToString());
                Console.WriteLine(result.GetProperty("serviceProvisioningErrors")[0].GetProperty("code").ToString());
                Console.WriteLine(result.GetProperty("serviceProvisioningErrors")[0].GetProperty("message").ToString());
                Console.WriteLine(result.GetProperty("serviceProvisioningErrors")[0].GetProperty("target").ToString());
                Console.WriteLine(result.GetProperty("serviceProvisioningErrors")[0].GetProperty("innererror").GetProperty("code").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("tenantId").ToString());
                Console.WriteLine(result.GetProperty("accountName").ToString());
                Console.WriteLine(result.GetProperty("productContext").ToString());
                Console.WriteLine(result.GetProperty("operatorId").ToString());
                Console.WriteLine(result.GetProperty("status").ToString());
                Console.WriteLine(result.GetProperty("consentedOn").ToString());
                Console.WriteLine(result.GetProperty("lastModifiedOn").ToString());
                Console.WriteLine(result.GetProperty("consentedCountries")[0].ToString());
                Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("fullName").ToString());
                Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("email").ToString());
                Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("telephoneNumber").ToString());
                Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("companyName").ToString());
                Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("companySize").ToString());
                Console.WriteLine(result.GetProperty("customerRelationship").GetProperty("status").ToString());
                Console.WriteLine(result.GetProperty("customerRelationship").GetProperty("lastModifiedOn").ToString());
                Console.WriteLine(result.GetProperty("customerRelationship").GetProperty("comment").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_RequestForInformationResource_GetRequestForInformationResources_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TeamsRequestsForInformation client = new VoiceServicesClient(endpoint, credential).GetTeamsRequestsForInformationClient();

            await foreach (BinaryData item in client.GetRequestForInformationResourcesAsync(1234, 1234, 1234, "<filter>", true, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("serviceProvisioningStatus").ToString());
                Console.WriteLine(result.GetProperty("serviceProvisioningErrors")[0].GetProperty("code").ToString());
                Console.WriteLine(result.GetProperty("serviceProvisioningErrors")[0].GetProperty("message").ToString());
                Console.WriteLine(result.GetProperty("serviceProvisioningErrors")[0].GetProperty("target").ToString());
                Console.WriteLine(result.GetProperty("serviceProvisioningErrors")[0].GetProperty("innererror").GetProperty("code").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("tenantId").ToString());
                Console.WriteLine(result.GetProperty("accountName").ToString());
                Console.WriteLine(result.GetProperty("productContext").ToString());
                Console.WriteLine(result.GetProperty("operatorId").ToString());
                Console.WriteLine(result.GetProperty("status").ToString());
                Console.WriteLine(result.GetProperty("consentedOn").ToString());
                Console.WriteLine(result.GetProperty("lastModifiedOn").ToString());
                Console.WriteLine(result.GetProperty("consentedCountries")[0].ToString());
                Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("fullName").ToString());
                Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("email").ToString());
                Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("telephoneNumber").ToString());
                Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("companyName").ToString());
                Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("companySize").ToString());
                Console.WriteLine(result.GetProperty("customerRelationship").GetProperty("status").ToString());
                Console.WriteLine(result.GetProperty("customerRelationship").GetProperty("lastModifiedOn").ToString());
                Console.WriteLine(result.GetProperty("customerRelationship").GetProperty("comment").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RequestForInformationResource_GetRequestForInformationResources_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TeamsRequestsForInformation client = new VoiceServicesClient(endpoint, credential).GetTeamsRequestsForInformationClient();

            foreach (RequestForInformationResource item in client.GetRequestForInformationResources(maxCount: 1234, skip: 1234, maxpagesize: 1234, filter: "<filter>", countRecords: true))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_RequestForInformationResource_GetRequestForInformationResources_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TeamsRequestsForInformation client = new VoiceServicesClient(endpoint, credential).GetTeamsRequestsForInformationClient();

            await foreach (RequestForInformationResource item in client.GetRequestForInformationResourcesAsync(maxCount: 1234, skip: 1234, maxpagesize: 1234, filter: "<filter>", countRecords: true))
            {
            }
        }
    }
}
