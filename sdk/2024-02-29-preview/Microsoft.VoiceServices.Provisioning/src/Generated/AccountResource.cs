// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure;

namespace Microsoft.VoiceServices.Provisioning
{
    /// <summary> An account represents a group of numbers, typically associated with an enterprise. </summary>
    public partial class AccountResource
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="AccountResource"/>. </summary>
        /// <param name="name"> Name of the account. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> is null. </exception>
        public AccountResource(string name)
        {
            Argument.AssertNotNull(name, nameof(name));

            ServiceProvisioningErrors = new ChangeTrackingList<ResponseError>();
            Name = name;
        }

        /// <summary> Initializes a new instance of <see cref="AccountResource"/>. </summary>
        /// <param name="serviceProvisioningStatus"> The status of the provisioning action associated with this resource. </param>
        /// <param name="serviceProvisioningErrors"> Any errors pertaining to the provisioning of this resource. </param>
        /// <param name="name"> Name of the account. </param>
        /// <param name="correlationId"> A user defined identifier used for correlating with external systems. </param>
        /// <param name="serviceDetails"> The details of the account. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal AccountResource(ServiceProvisioningStatus? serviceProvisioningStatus, IReadOnlyList<ResponseError> serviceProvisioningErrors, string name, string correlationId, AccountServiceDetails serviceDetails, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            ServiceProvisioningStatus = serviceProvisioningStatus;
            ServiceProvisioningErrors = serviceProvisioningErrors;
            Name = name;
            CorrelationId = correlationId;
            ServiceDetails = serviceDetails;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="AccountResource"/> for deserialization. </summary>
        internal AccountResource()
        {
        }

        /// <summary> The status of the provisioning action associated with this resource. </summary>
        public ServiceProvisioningStatus? ServiceProvisioningStatus { get; }
        /// <summary> Any errors pertaining to the provisioning of this resource. </summary>
        public IReadOnlyList<ResponseError> ServiceProvisioningErrors { get; }
        /// <summary> Name of the account. </summary>
        public string Name { get; set; }
        /// <summary> A user defined identifier used for correlating with external systems. </summary>
        public string CorrelationId { get; set; }
        /// <summary> The details of the account. </summary>
        public AccountServiceDetails ServiceDetails { get; set; }
    }
}
