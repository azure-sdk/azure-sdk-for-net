// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace azure.ApiCenter.Samples
{
    public partial class Samples_Environments
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Environments_GetEnvironments_ShortVersion()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Environments client = new DataApiClient("<serviceName>", credential).GetEnvironmentsClient(apiVersion: "2024-02-01-preview");

            Response response = client.GetEnvironments(null, null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("title").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("kind").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Environments_GetEnvironments_ShortVersion_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Environments client = new DataApiClient("<serviceName>", credential).GetEnvironmentsClient(apiVersion: "2024-02-01-preview");

            Response response = await client.GetEnvironmentsAsync(null, null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("title").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("kind").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Environments_GetEnvironments_ShortVersion_Convenience()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Environments client = new DataApiClient("<serviceName>", credential).GetEnvironmentsClient(apiVersion: "2024-02-01-preview");

            Response<PagedEnvironmentAll> response = client.GetEnvironments();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Environments_GetEnvironments_ShortVersion_Convenience_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Environments client = new DataApiClient("<serviceName>", credential).GetEnvironmentsClient(apiVersion: "2024-02-01-preview");

            Response<PagedEnvironmentAll> response = await client.GetEnvironmentsAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Environments_GetEnvironments_AllParameters()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Environments client = new DataApiClient("<serviceName>", credential).GetEnvironmentsClient(apiVersion: "2024-02-01-preview");

            Response response = client.GetEnvironments(1234, 1234, 1234, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("title").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("server").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("server").GetProperty("managementPortalUris")[0].ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("onboarding").GetProperty("instructions").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("onboarding").GetProperty("developerPortalUris")[0].ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("customProperties").ToString());
            Console.WriteLine(result.GetProperty("nextLink").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Environments_GetEnvironments_AllParameters_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Environments client = new DataApiClient("<serviceName>", credential).GetEnvironmentsClient(apiVersion: "2024-02-01-preview");

            Response response = await client.GetEnvironmentsAsync(1234, 1234, 1234, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("title").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("server").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("server").GetProperty("managementPortalUris")[0].ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("onboarding").GetProperty("instructions").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("onboarding").GetProperty("developerPortalUris")[0].ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("customProperties").ToString());
            Console.WriteLine(result.GetProperty("nextLink").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Environments_GetEnvironments_AllParameters_Convenience()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Environments client = new DataApiClient("<serviceName>", credential).GetEnvironmentsClient(apiVersion: "2024-02-01-preview");

            Response<PagedEnvironmentAll> response = client.GetEnvironments(top: 1234, skip: 1234, maxpagesize: 1234);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Environments_GetEnvironments_AllParameters_Convenience_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Environments client = new DataApiClient("<serviceName>", credential).GetEnvironmentsClient(apiVersion: "2024-02-01-preview");

            Response<PagedEnvironmentAll> response = await client.GetEnvironmentsAsync(top: 1234, skip: 1234, maxpagesize: 1234);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Environment_GetEnvironment_ShortVersion()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Environments client = new DataApiClient("<serviceName>", credential).GetEnvironmentsClient(apiVersion: "2024-02-01-preview");

            Response response = client.GetEnvironment("<workspaceName>", "<environmentName>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("title").ToString());
            Console.WriteLine(result.GetProperty("kind").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Environment_GetEnvironment_ShortVersion_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Environments client = new DataApiClient("<serviceName>", credential).GetEnvironmentsClient(apiVersion: "2024-02-01-preview");

            Response response = await client.GetEnvironmentAsync("<workspaceName>", "<environmentName>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("title").ToString());
            Console.WriteLine(result.GetProperty("kind").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Environment_GetEnvironment_ShortVersion_Convenience()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Environments client = new DataApiClient("<serviceName>", credential).GetEnvironmentsClient(apiVersion: "2024-02-01-preview");

            Response<GetResponse> response = client.GetEnvironment("<workspaceName>", "<environmentName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Environment_GetEnvironment_ShortVersion_Convenience_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Environments client = new DataApiClient("<serviceName>", credential).GetEnvironmentsClient(apiVersion: "2024-02-01-preview");

            Response<GetResponse> response = await client.GetEnvironmentAsync("<workspaceName>", "<environmentName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Environment_GetEnvironment_AllParameters()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Environments client = new DataApiClient("<serviceName>", credential).GetEnvironmentsClient(apiVersion: "2024-02-01-preview");

            Response response = client.GetEnvironment("<workspaceName>", "<environmentName>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("title").ToString());
            Console.WriteLine(result.GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("server").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("server").GetProperty("managementPortalUris")[0].ToString());
            Console.WriteLine(result.GetProperty("onboarding").GetProperty("instructions").ToString());
            Console.WriteLine(result.GetProperty("onboarding").GetProperty("developerPortalUris")[0].ToString());
            Console.WriteLine(result.GetProperty("customProperties").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Environment_GetEnvironment_AllParameters_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Environments client = new DataApiClient("<serviceName>", credential).GetEnvironmentsClient(apiVersion: "2024-02-01-preview");

            Response response = await client.GetEnvironmentAsync("<workspaceName>", "<environmentName>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("title").ToString());
            Console.WriteLine(result.GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("server").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("server").GetProperty("managementPortalUris")[0].ToString());
            Console.WriteLine(result.GetProperty("onboarding").GetProperty("instructions").ToString());
            Console.WriteLine(result.GetProperty("onboarding").GetProperty("developerPortalUris")[0].ToString());
            Console.WriteLine(result.GetProperty("customProperties").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Environment_GetEnvironment_AllParameters_Convenience()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Environments client = new DataApiClient("<serviceName>", credential).GetEnvironmentsClient(apiVersion: "2024-02-01-preview");

            Response<GetResponse> response = client.GetEnvironment("<workspaceName>", "<environmentName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Environment_GetEnvironment_AllParameters_Convenience_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Environments client = new DataApiClient("<serviceName>", credential).GetEnvironmentsClient(apiVersion: "2024-02-01-preview");

            Response<GetResponse> response = await client.GetEnvironmentAsync("<workspaceName>", "<environmentName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Environment_GetEnvironments_ShortVersion()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Environments client = new DataApiClient("<serviceName>", credential).GetEnvironmentsClient(apiVersion: "2024-02-01-preview");

            foreach (BinaryData item in client.GetEnvironments("<workspaceName>", null, null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("title").ToString());
                Console.WriteLine(result.GetProperty("kind").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Environment_GetEnvironments_ShortVersion_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Environments client = new DataApiClient("<serviceName>", credential).GetEnvironmentsClient(apiVersion: "2024-02-01-preview");

            await foreach (BinaryData item in client.GetEnvironmentsAsync("<workspaceName>", null, null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("title").ToString());
                Console.WriteLine(result.GetProperty("kind").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Environment_GetEnvironments_ShortVersion_Convenience()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Environments client = new DataApiClient("<serviceName>", credential).GetEnvironmentsClient(apiVersion: "2024-02-01-preview");

            foreach (Environment item in client.GetEnvironments("<workspaceName>"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Environment_GetEnvironments_ShortVersion_Convenience_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Environments client = new DataApiClient("<serviceName>", credential).GetEnvironmentsClient(apiVersion: "2024-02-01-preview");

            await foreach (Environment item in client.GetEnvironmentsAsync("<workspaceName>"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Environment_GetEnvironments_AllParameters()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Environments client = new DataApiClient("<serviceName>", credential).GetEnvironmentsClient(apiVersion: "2024-02-01-preview");

            foreach (BinaryData item in client.GetEnvironments("<workspaceName>", 1234, 1234, 1234, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("title").ToString());
                Console.WriteLine(result.GetProperty("kind").ToString());
                Console.WriteLine(result.GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("server").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("server").GetProperty("managementPortalUris")[0].ToString());
                Console.WriteLine(result.GetProperty("onboarding").GetProperty("instructions").ToString());
                Console.WriteLine(result.GetProperty("onboarding").GetProperty("developerPortalUris")[0].ToString());
                Console.WriteLine(result.GetProperty("customProperties").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Environment_GetEnvironments_AllParameters_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Environments client = new DataApiClient("<serviceName>", credential).GetEnvironmentsClient(apiVersion: "2024-02-01-preview");

            await foreach (BinaryData item in client.GetEnvironmentsAsync("<workspaceName>", 1234, 1234, 1234, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("title").ToString());
                Console.WriteLine(result.GetProperty("kind").ToString());
                Console.WriteLine(result.GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("server").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("server").GetProperty("managementPortalUris")[0].ToString());
                Console.WriteLine(result.GetProperty("onboarding").GetProperty("instructions").ToString());
                Console.WriteLine(result.GetProperty("onboarding").GetProperty("developerPortalUris")[0].ToString());
                Console.WriteLine(result.GetProperty("customProperties").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Environment_GetEnvironments_AllParameters_Convenience()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Environments client = new DataApiClient("<serviceName>", credential).GetEnvironmentsClient(apiVersion: "2024-02-01-preview");

            foreach (Environment item in client.GetEnvironments("<workspaceName>", maxCount: 1234, skip: 1234, maxpagesize: 1234))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Environment_GetEnvironments_AllParameters_Convenience_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Environments client = new DataApiClient("<serviceName>", credential).GetEnvironmentsClient(apiVersion: "2024-02-01-preview");

            await foreach (Environment item in client.GetEnvironmentsAsync("<workspaceName>", maxCount: 1234, skip: 1234, maxpagesize: 1234))
            {
            }
        }
    }
}
