// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace azure.ApiCenter.Samples
{
    public partial class Samples_ApiDeployments
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ApiDeployment_GetDeployment_ShortVersion()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiDeployments client = new DataApiClient("<serviceName>", credential).GetApiDeploymentsClient(apiVersion: "2024-02-01-preview");

            Response response = client.GetDeployment("<workspaceName>", "<apiName>", "<deploymentName>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("title").ToString());
            Console.WriteLine(result.GetProperty("environment").ToString());
            Console.WriteLine(result.GetProperty("server").GetProperty("runtimeUris")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ApiDeployment_GetDeployment_ShortVersion_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiDeployments client = new DataApiClient("<serviceName>", credential).GetApiDeploymentsClient(apiVersion: "2024-02-01-preview");

            Response response = await client.GetDeploymentAsync("<workspaceName>", "<apiName>", "<deploymentName>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("title").ToString());
            Console.WriteLine(result.GetProperty("environment").ToString());
            Console.WriteLine(result.GetProperty("server").GetProperty("runtimeUris")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ApiDeployment_GetDeployment_ShortVersion_Convenience()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiDeployments client = new DataApiClient("<serviceName>", credential).GetApiDeploymentsClient(apiVersion: "2024-02-01-preview");

            Response<GetDeploymentResponse> response = client.GetDeployment("<workspaceName>", "<apiName>", "<deploymentName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ApiDeployment_GetDeployment_ShortVersion_Convenience_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiDeployments client = new DataApiClient("<serviceName>", credential).GetApiDeploymentsClient(apiVersion: "2024-02-01-preview");

            Response<GetDeploymentResponse> response = await client.GetDeploymentAsync("<workspaceName>", "<apiName>", "<deploymentName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ApiDeployment_GetDeployment_AllParameters()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiDeployments client = new DataApiClient("<serviceName>", credential).GetApiDeploymentsClient(apiVersion: "2024-02-01-preview");

            Response response = client.GetDeployment("<workspaceName>", "<apiName>", "<deploymentName>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("title").ToString());
            Console.WriteLine(result.GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("environment").ToString());
            Console.WriteLine(result.GetProperty("server").GetProperty("runtimeUris")[0].ToString());
            Console.WriteLine(result.GetProperty("customProperties").ToString());
            Console.WriteLine(result.GetProperty("recommended").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ApiDeployment_GetDeployment_AllParameters_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiDeployments client = new DataApiClient("<serviceName>", credential).GetApiDeploymentsClient(apiVersion: "2024-02-01-preview");

            Response response = await client.GetDeploymentAsync("<workspaceName>", "<apiName>", "<deploymentName>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("title").ToString());
            Console.WriteLine(result.GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("environment").ToString());
            Console.WriteLine(result.GetProperty("server").GetProperty("runtimeUris")[0].ToString());
            Console.WriteLine(result.GetProperty("customProperties").ToString());
            Console.WriteLine(result.GetProperty("recommended").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ApiDeployment_GetDeployment_AllParameters_Convenience()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiDeployments client = new DataApiClient("<serviceName>", credential).GetApiDeploymentsClient(apiVersion: "2024-02-01-preview");

            Response<GetDeploymentResponse> response = client.GetDeployment("<workspaceName>", "<apiName>", "<deploymentName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ApiDeployment_GetDeployment_AllParameters_Convenience_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiDeployments client = new DataApiClient("<serviceName>", credential).GetApiDeploymentsClient(apiVersion: "2024-02-01-preview");

            Response<GetDeploymentResponse> response = await client.GetDeploymentAsync("<workspaceName>", "<apiName>", "<deploymentName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ApiDeployment_GetDeployments_ShortVersion()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiDeployments client = new DataApiClient("<serviceName>", credential).GetApiDeploymentsClient(apiVersion: "2024-02-01-preview");

            foreach (BinaryData item in client.GetDeployments("<workspaceName>", "<apiName>", null, null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("title").ToString());
                Console.WriteLine(result.GetProperty("environment").ToString());
                Console.WriteLine(result.GetProperty("server").GetProperty("runtimeUris")[0].ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ApiDeployment_GetDeployments_ShortVersion_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiDeployments client = new DataApiClient("<serviceName>", credential).GetApiDeploymentsClient(apiVersion: "2024-02-01-preview");

            await foreach (BinaryData item in client.GetDeploymentsAsync("<workspaceName>", "<apiName>", null, null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("title").ToString());
                Console.WriteLine(result.GetProperty("environment").ToString());
                Console.WriteLine(result.GetProperty("server").GetProperty("runtimeUris")[0].ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ApiDeployment_GetDeployments_ShortVersion_Convenience()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiDeployments client = new DataApiClient("<serviceName>", credential).GetApiDeploymentsClient(apiVersion: "2024-02-01-preview");

            foreach (ApiDeployment item in client.GetDeployments("<workspaceName>", "<apiName>"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ApiDeployment_GetDeployments_ShortVersion_Convenience_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiDeployments client = new DataApiClient("<serviceName>", credential).GetApiDeploymentsClient(apiVersion: "2024-02-01-preview");

            await foreach (ApiDeployment item in client.GetDeploymentsAsync("<workspaceName>", "<apiName>"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ApiDeployment_GetDeployments_AllParameters()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiDeployments client = new DataApiClient("<serviceName>", credential).GetApiDeploymentsClient(apiVersion: "2024-02-01-preview");

            foreach (BinaryData item in client.GetDeployments("<workspaceName>", "<apiName>", 1234, 1234, 1234, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("title").ToString());
                Console.WriteLine(result.GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("environment").ToString());
                Console.WriteLine(result.GetProperty("server").GetProperty("runtimeUris")[0].ToString());
                Console.WriteLine(result.GetProperty("customProperties").ToString());
                Console.WriteLine(result.GetProperty("recommended").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ApiDeployment_GetDeployments_AllParameters_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiDeployments client = new DataApiClient("<serviceName>", credential).GetApiDeploymentsClient(apiVersion: "2024-02-01-preview");

            await foreach (BinaryData item in client.GetDeploymentsAsync("<workspaceName>", "<apiName>", 1234, 1234, 1234, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("title").ToString());
                Console.WriteLine(result.GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("environment").ToString());
                Console.WriteLine(result.GetProperty("server").GetProperty("runtimeUris")[0].ToString());
                Console.WriteLine(result.GetProperty("customProperties").ToString());
                Console.WriteLine(result.GetProperty("recommended").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ApiDeployment_GetDeployments_AllParameters_Convenience()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiDeployments client = new DataApiClient("<serviceName>", credential).GetApiDeploymentsClient(apiVersion: "2024-02-01-preview");

            foreach (ApiDeployment item in client.GetDeployments("<workspaceName>", "<apiName>", maxCount: 1234, skip: 1234, maxpagesize: 1234))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ApiDeployment_GetDeployments_AllParameters_Convenience_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiDeployments client = new DataApiClient("<serviceName>", credential).GetApiDeploymentsClient(apiVersion: "2024-02-01-preview");

            await foreach (ApiDeployment item in client.GetDeploymentsAsync("<workspaceName>", "<apiName>", maxCount: 1234, skip: 1234, maxpagesize: 1234))
            {
            }
        }
    }
}
