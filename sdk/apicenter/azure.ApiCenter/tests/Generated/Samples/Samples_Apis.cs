// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace azure.ApiCenter.Samples
{
    public partial class Samples_Apis
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Apis_GetApis_ShortVersion()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Apis client = new DataApiClient("<serviceName>", credential).GetApisClient(apiVersion: "2024-02-01-preview");

            Response response = client.GetApis(null, null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("title").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("kind").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Apis_GetApis_ShortVersion_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Apis client = new DataApiClient("<serviceName>", credential).GetApisClient(apiVersion: "2024-02-01-preview");

            Response response = await client.GetApisAsync(null, null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("title").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("kind").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Apis_GetApis_ShortVersion_Convenience()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Apis client = new DataApiClient("<serviceName>", credential).GetApisClient(apiVersion: "2024-02-01-preview");

            Response<PagedApiAll> response = client.GetApis();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Apis_GetApis_ShortVersion_Convenience_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Apis client = new DataApiClient("<serviceName>", credential).GetApisClient(apiVersion: "2024-02-01-preview");

            Response<PagedApiAll> response = await client.GetApisAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Apis_GetApis_AllParameters()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Apis client = new DataApiClient("<serviceName>", credential).GetApisClient(apiVersion: "2024-02-01-preview");

            Response response = client.GetApis(1234, 1234, 1234, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("title").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("summary").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("lifecycleStage").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("termsOfService").GetProperty("url").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("license").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("license").GetProperty("url").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("license").GetProperty("identifier").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("externalDocumentation")[0].GetProperty("title").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("externalDocumentation")[0].GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("externalDocumentation")[0].GetProperty("url").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("contacts")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("contacts")[0].GetProperty("url").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("contacts")[0].GetProperty("email").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("customProperties").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("lastUpdated").ToString());
            Console.WriteLine(result.GetProperty("nextLink").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Apis_GetApis_AllParameters_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Apis client = new DataApiClient("<serviceName>", credential).GetApisClient(apiVersion: "2024-02-01-preview");

            Response response = await client.GetApisAsync(1234, 1234, 1234, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("title").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("summary").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("lifecycleStage").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("termsOfService").GetProperty("url").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("license").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("license").GetProperty("url").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("license").GetProperty("identifier").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("externalDocumentation")[0].GetProperty("title").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("externalDocumentation")[0].GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("externalDocumentation")[0].GetProperty("url").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("contacts")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("contacts")[0].GetProperty("url").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("contacts")[0].GetProperty("email").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("customProperties").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("lastUpdated").ToString());
            Console.WriteLine(result.GetProperty("nextLink").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Apis_GetApis_AllParameters_Convenience()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Apis client = new DataApiClient("<serviceName>", credential).GetApisClient(apiVersion: "2024-02-01-preview");

            Response<PagedApiAll> response = client.GetApis(top: 1234, skip: 1234, maxpagesize: 1234);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Apis_GetApis_AllParameters_Convenience_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Apis client = new DataApiClient("<serviceName>", credential).GetApisClient(apiVersion: "2024-02-01-preview");

            Response<PagedApiAll> response = await client.GetApisAsync(top: 1234, skip: 1234, maxpagesize: 1234);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Api_GetApi_ShortVersion()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Apis client = new DataApiClient("<serviceName>", credential).GetApisClient(apiVersion: "2024-02-01-preview");

            Response response = client.GetApi("<workspaceName>", "<apiName>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("title").ToString());
            Console.WriteLine(result.GetProperty("kind").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Api_GetApi_ShortVersion_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Apis client = new DataApiClient("<serviceName>", credential).GetApisClient(apiVersion: "2024-02-01-preview");

            Response response = await client.GetApiAsync("<workspaceName>", "<apiName>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("title").ToString());
            Console.WriteLine(result.GetProperty("kind").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Api_GetApi_ShortVersion_Convenience()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Apis client = new DataApiClient("<serviceName>", credential).GetApisClient(apiVersion: "2024-02-01-preview");

            Response<GetResponse1> response = client.GetApi("<workspaceName>", "<apiName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Api_GetApi_ShortVersion_Convenience_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Apis client = new DataApiClient("<serviceName>", credential).GetApisClient(apiVersion: "2024-02-01-preview");

            Response<GetResponse1> response = await client.GetApiAsync("<workspaceName>", "<apiName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Api_GetApi_AllParameters()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Apis client = new DataApiClient("<serviceName>", credential).GetApisClient(apiVersion: "2024-02-01-preview");

            Response response = client.GetApi("<workspaceName>", "<apiName>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("title").ToString());
            Console.WriteLine(result.GetProperty("summary").ToString());
            Console.WriteLine(result.GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("lifecycleStage").ToString());
            Console.WriteLine(result.GetProperty("termsOfService").GetProperty("url").ToString());
            Console.WriteLine(result.GetProperty("license").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("license").GetProperty("url").ToString());
            Console.WriteLine(result.GetProperty("license").GetProperty("identifier").ToString());
            Console.WriteLine(result.GetProperty("externalDocumentation")[0].GetProperty("title").ToString());
            Console.WriteLine(result.GetProperty("externalDocumentation")[0].GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("externalDocumentation")[0].GetProperty("url").ToString());
            Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("url").ToString());
            Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("email").ToString());
            Console.WriteLine(result.GetProperty("customProperties").ToString());
            Console.WriteLine(result.GetProperty("lastUpdated").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Api_GetApi_AllParameters_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Apis client = new DataApiClient("<serviceName>", credential).GetApisClient(apiVersion: "2024-02-01-preview");

            Response response = await client.GetApiAsync("<workspaceName>", "<apiName>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("title").ToString());
            Console.WriteLine(result.GetProperty("summary").ToString());
            Console.WriteLine(result.GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("lifecycleStage").ToString());
            Console.WriteLine(result.GetProperty("termsOfService").GetProperty("url").ToString());
            Console.WriteLine(result.GetProperty("license").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("license").GetProperty("url").ToString());
            Console.WriteLine(result.GetProperty("license").GetProperty("identifier").ToString());
            Console.WriteLine(result.GetProperty("externalDocumentation")[0].GetProperty("title").ToString());
            Console.WriteLine(result.GetProperty("externalDocumentation")[0].GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("externalDocumentation")[0].GetProperty("url").ToString());
            Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("url").ToString());
            Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("email").ToString());
            Console.WriteLine(result.GetProperty("customProperties").ToString());
            Console.WriteLine(result.GetProperty("lastUpdated").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Api_GetApi_AllParameters_Convenience()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Apis client = new DataApiClient("<serviceName>", credential).GetApisClient(apiVersion: "2024-02-01-preview");

            Response<GetResponse1> response = client.GetApi("<workspaceName>", "<apiName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Api_GetApi_AllParameters_Convenience_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Apis client = new DataApiClient("<serviceName>", credential).GetApisClient(apiVersion: "2024-02-01-preview");

            Response<GetResponse1> response = await client.GetApiAsync("<workspaceName>", "<apiName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Api_GetApis_ShortVersion()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Apis client = new DataApiClient("<serviceName>", credential).GetApisClient(apiVersion: "2024-02-01-preview");

            foreach (BinaryData item in client.GetApis("<workspaceName>", null, null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("title").ToString());
                Console.WriteLine(result.GetProperty("kind").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Api_GetApis_ShortVersion_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Apis client = new DataApiClient("<serviceName>", credential).GetApisClient(apiVersion: "2024-02-01-preview");

            await foreach (BinaryData item in client.GetApisAsync("<workspaceName>", null, null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("title").ToString());
                Console.WriteLine(result.GetProperty("kind").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Api_GetApis_ShortVersion_Convenience()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Apis client = new DataApiClient("<serviceName>", credential).GetApisClient(apiVersion: "2024-02-01-preview");

            foreach (Api item in client.GetApis("<workspaceName>"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Api_GetApis_ShortVersion_Convenience_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Apis client = new DataApiClient("<serviceName>", credential).GetApisClient(apiVersion: "2024-02-01-preview");

            await foreach (Api item in client.GetApisAsync("<workspaceName>"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Api_GetApis_AllParameters()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Apis client = new DataApiClient("<serviceName>", credential).GetApisClient(apiVersion: "2024-02-01-preview");

            foreach (BinaryData item in client.GetApis("<workspaceName>", 1234, 1234, 1234, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("title").ToString());
                Console.WriteLine(result.GetProperty("summary").ToString());
                Console.WriteLine(result.GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("kind").ToString());
                Console.WriteLine(result.GetProperty("lifecycleStage").ToString());
                Console.WriteLine(result.GetProperty("termsOfService").GetProperty("url").ToString());
                Console.WriteLine(result.GetProperty("license").GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("license").GetProperty("url").ToString());
                Console.WriteLine(result.GetProperty("license").GetProperty("identifier").ToString());
                Console.WriteLine(result.GetProperty("externalDocumentation")[0].GetProperty("title").ToString());
                Console.WriteLine(result.GetProperty("externalDocumentation")[0].GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("externalDocumentation")[0].GetProperty("url").ToString());
                Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("url").ToString());
                Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("email").ToString());
                Console.WriteLine(result.GetProperty("customProperties").ToString());
                Console.WriteLine(result.GetProperty("lastUpdated").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Api_GetApis_AllParameters_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Apis client = new DataApiClient("<serviceName>", credential).GetApisClient(apiVersion: "2024-02-01-preview");

            await foreach (BinaryData item in client.GetApisAsync("<workspaceName>", 1234, 1234, 1234, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("title").ToString());
                Console.WriteLine(result.GetProperty("summary").ToString());
                Console.WriteLine(result.GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("kind").ToString());
                Console.WriteLine(result.GetProperty("lifecycleStage").ToString());
                Console.WriteLine(result.GetProperty("termsOfService").GetProperty("url").ToString());
                Console.WriteLine(result.GetProperty("license").GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("license").GetProperty("url").ToString());
                Console.WriteLine(result.GetProperty("license").GetProperty("identifier").ToString());
                Console.WriteLine(result.GetProperty("externalDocumentation")[0].GetProperty("title").ToString());
                Console.WriteLine(result.GetProperty("externalDocumentation")[0].GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("externalDocumentation")[0].GetProperty("url").ToString());
                Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("url").ToString());
                Console.WriteLine(result.GetProperty("contacts")[0].GetProperty("email").ToString());
                Console.WriteLine(result.GetProperty("customProperties").ToString());
                Console.WriteLine(result.GetProperty("lastUpdated").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Api_GetApis_AllParameters_Convenience()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Apis client = new DataApiClient("<serviceName>", credential).GetApisClient(apiVersion: "2024-02-01-preview");

            foreach (Api item in client.GetApis("<workspaceName>", maxCount: 1234, skip: 1234, maxpagesize: 1234))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Api_GetApis_AllParameters_Convenience_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Apis client = new DataApiClient("<serviceName>", credential).GetApisClient(apiVersion: "2024-02-01-preview");

            await foreach (Api item in client.GetApisAsync("<workspaceName>", maxCount: 1234, skip: 1234, maxpagesize: 1234))
            {
            }
        }
    }
}
