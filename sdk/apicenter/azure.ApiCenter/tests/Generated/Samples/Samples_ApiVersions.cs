// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace azure.ApiCenter.Samples
{
    public partial class Samples_ApiVersions
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ApiVersion_GetVersion_ShortVersion()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiVersions client = new DataApiClient("<serviceName>", credential).GetApiVersionsClient(apiVersion: "2024-02-01-preview");

            Response response = client.GetVersion("<workspaceName>", "<apiName>", "<versionName>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("title").ToString());
            Console.WriteLine(result.GetProperty("lifecycleStage").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ApiVersion_GetVersion_ShortVersion_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiVersions client = new DataApiClient("<serviceName>", credential).GetApiVersionsClient(apiVersion: "2024-02-01-preview");

            Response response = await client.GetVersionAsync("<workspaceName>", "<apiName>", "<versionName>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("title").ToString());
            Console.WriteLine(result.GetProperty("lifecycleStage").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ApiVersion_GetVersion_ShortVersion_Convenience()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiVersions client = new DataApiClient("<serviceName>", credential).GetApiVersionsClient(apiVersion: "2024-02-01-preview");

            Response<GetVersionResponse> response = client.GetVersion("<workspaceName>", "<apiName>", "<versionName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ApiVersion_GetVersion_ShortVersion_Convenience_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiVersions client = new DataApiClient("<serviceName>", credential).GetApiVersionsClient(apiVersion: "2024-02-01-preview");

            Response<GetVersionResponse> response = await client.GetVersionAsync("<workspaceName>", "<apiName>", "<versionName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ApiVersion_GetVersion_AllParameters()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiVersions client = new DataApiClient("<serviceName>", credential).GetApiVersionsClient(apiVersion: "2024-02-01-preview");

            Response response = client.GetVersion("<workspaceName>", "<apiName>", "<versionName>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("title").ToString());
            Console.WriteLine(result.GetProperty("lifecycleStage").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ApiVersion_GetVersion_AllParameters_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiVersions client = new DataApiClient("<serviceName>", credential).GetApiVersionsClient(apiVersion: "2024-02-01-preview");

            Response response = await client.GetVersionAsync("<workspaceName>", "<apiName>", "<versionName>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("title").ToString());
            Console.WriteLine(result.GetProperty("lifecycleStage").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ApiVersion_GetVersion_AllParameters_Convenience()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiVersions client = new DataApiClient("<serviceName>", credential).GetApiVersionsClient(apiVersion: "2024-02-01-preview");

            Response<GetVersionResponse> response = client.GetVersion("<workspaceName>", "<apiName>", "<versionName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ApiVersion_GetVersion_AllParameters_Convenience_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiVersions client = new DataApiClient("<serviceName>", credential).GetApiVersionsClient(apiVersion: "2024-02-01-preview");

            Response<GetVersionResponse> response = await client.GetVersionAsync("<workspaceName>", "<apiName>", "<versionName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ApiVersion_GetVersions_ShortVersion()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiVersions client = new DataApiClient("<serviceName>", credential).GetApiVersionsClient(apiVersion: "2024-02-01-preview");

            foreach (BinaryData item in client.GetVersions("<workspaceName>", "<apiName>", null, null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("title").ToString());
                Console.WriteLine(result.GetProperty("lifecycleStage").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ApiVersion_GetVersions_ShortVersion_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiVersions client = new DataApiClient("<serviceName>", credential).GetApiVersionsClient(apiVersion: "2024-02-01-preview");

            await foreach (BinaryData item in client.GetVersionsAsync("<workspaceName>", "<apiName>", null, null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("title").ToString());
                Console.WriteLine(result.GetProperty("lifecycleStage").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ApiVersion_GetVersions_ShortVersion_Convenience()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiVersions client = new DataApiClient("<serviceName>", credential).GetApiVersionsClient(apiVersion: "2024-02-01-preview");

            foreach (ApiVersion item in client.GetVersions("<workspaceName>", "<apiName>"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ApiVersion_GetVersions_ShortVersion_Convenience_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiVersions client = new DataApiClient("<serviceName>", credential).GetApiVersionsClient(apiVersion: "2024-02-01-preview");

            await foreach (ApiVersion item in client.GetVersionsAsync("<workspaceName>", "<apiName>"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ApiVersion_GetVersions_AllParameters()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiVersions client = new DataApiClient("<serviceName>", credential).GetApiVersionsClient(apiVersion: "2024-02-01-preview");

            foreach (BinaryData item in client.GetVersions("<workspaceName>", "<apiName>", 1234, 1234, 1234, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("title").ToString());
                Console.WriteLine(result.GetProperty("lifecycleStage").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ApiVersion_GetVersions_AllParameters_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiVersions client = new DataApiClient("<serviceName>", credential).GetApiVersionsClient(apiVersion: "2024-02-01-preview");

            await foreach (BinaryData item in client.GetVersionsAsync("<workspaceName>", "<apiName>", 1234, 1234, 1234, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("title").ToString());
                Console.WriteLine(result.GetProperty("lifecycleStage").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ApiVersion_GetVersions_AllParameters_Convenience()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiVersions client = new DataApiClient("<serviceName>", credential).GetApiVersionsClient(apiVersion: "2024-02-01-preview");

            foreach (ApiVersion item in client.GetVersions("<workspaceName>", "<apiName>", maxCount: 1234, skip: 1234, maxpagesize: 1234))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ApiVersion_GetVersions_AllParameters_Convenience_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            ApiVersions client = new DataApiClient("<serviceName>", credential).GetApiVersionsClient(apiVersion: "2024-02-01-preview");

            await foreach (ApiVersion item in client.GetVersionsAsync("<workspaceName>", "<apiName>", maxCount: 1234, skip: 1234, maxpagesize: 1234))
            {
            }
        }
    }
}
