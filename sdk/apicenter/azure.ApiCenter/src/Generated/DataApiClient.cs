// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.Core.Pipeline;

namespace azure.ApiCenter
{
    // Data plane generated client.
    /// <summary> The DataApi service client. </summary>
    public partial class DataApiClient
    {
        private static readonly string[] AuthorizationScopes = new string[] { "https://azure-apicenter.net/user_impersonation" };
        private readonly TokenCredential _tokenCredential;
        private readonly HttpPipeline _pipeline;
        private readonly string _serviceName;

        /// <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        internal ClientDiagnostics ClientDiagnostics { get; }

        /// <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        public virtual HttpPipeline Pipeline => _pipeline;

        /// <summary> Initializes a new instance of DataApiClient for mocking. </summary>
        protected DataApiClient()
        {
        }

        /// <summary> Initializes a new instance of DataApiClient. </summary>
        /// <param name="serviceName"> Region-unique API Center service name. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="serviceName"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="serviceName"/> is an empty string, and was expected to be non-empty. </exception>
        public DataApiClient(string serviceName, TokenCredential credential) : this(serviceName, credential, new DataApiClientOptions())
        {
        }

        /// <summary> Initializes a new instance of DataApiClient. </summary>
        /// <param name="serviceName"> Region-unique API Center service name. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="serviceName"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="serviceName"/> is an empty string, and was expected to be non-empty. </exception>
        public DataApiClient(string serviceName, TokenCredential credential, DataApiClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(serviceName, nameof(serviceName));
            Argument.AssertNotNull(credential, nameof(credential));
            options ??= new DataApiClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential, AuthorizationScopes) }, new ResponseClassifier());
            _serviceName = serviceName;
        }

        /// <summary> Initializes a new instance of Apis. </summary>
        /// <param name="apiVersion"> The API version to use for this operation. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="apiVersion"/> is null. </exception>
        public virtual Apis GetApisClient(string apiVersion = "2024-02-01-preview")
        {
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new Apis(ClientDiagnostics, _pipeline, _tokenCredential, _serviceName, apiVersion);
        }

        /// <summary> Initializes a new instance of ApiDefinitions. </summary>
        /// <param name="apiVersion"> The API version to use for this operation. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="apiVersion"/> is null. </exception>
        public virtual ApiDefinitions GetApiDefinitionsClient(string apiVersion = "2024-02-01-preview")
        {
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new ApiDefinitions(ClientDiagnostics, _pipeline, _tokenCredential, _serviceName, apiVersion);
        }

        /// <summary> Initializes a new instance of ApiDeployments. </summary>
        /// <param name="apiVersion"> The API version to use for this operation. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="apiVersion"/> is null. </exception>
        public virtual ApiDeployments GetApiDeploymentsClient(string apiVersion = "2024-02-01-preview")
        {
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new ApiDeployments(ClientDiagnostics, _pipeline, _tokenCredential, _serviceName, apiVersion);
        }

        /// <summary> Initializes a new instance of Environments. </summary>
        /// <param name="apiVersion"> The API version to use for this operation. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="apiVersion"/> is null. </exception>
        public virtual Environments GetEnvironmentsClient(string apiVersion = "2024-02-01-preview")
        {
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new Environments(ClientDiagnostics, _pipeline, _tokenCredential, _serviceName, apiVersion);
        }

        /// <summary> Initializes a new instance of ApiVersions. </summary>
        /// <param name="apiVersion"> The API version to use for this operation. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="apiVersion"/> is null. </exception>
        public virtual ApiVersions GetApiVersionsClient(string apiVersion = "2024-02-01-preview")
        {
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new ApiVersions(ClientDiagnostics, _pipeline, _tokenCredential, _serviceName, apiVersion);
        }
    }
}
