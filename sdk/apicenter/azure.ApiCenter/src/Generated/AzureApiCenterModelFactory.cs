// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure;

namespace azure.ApiCenter
{
    /// <summary> Model factory for models. </summary>
    public static partial class AzureApiCenterModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="ApiCenter.Api"/>. </summary>
        /// <param name="name"> Api identifier. </param>
        /// <param name="title"> The name of the API. </param>
        /// <param name="summary"> Short description of the API. </param>
        /// <param name="description"> The description of the API. </param>
        /// <param name="kind"> Kind of API. For example, REST or GraphQL. </param>
        /// <param name="lifecycleStage"> Current lifecycle stage of the API. </param>
        /// <param name="termsOfService"> Terms of service for the API. </param>
        /// <param name="license"> The license information for the API. </param>
        /// <param name="externalDocumentation"> External documentation. </param>
        /// <param name="contacts"> Points of contact for the API. </param>
        /// <param name="customProperties"> The custom metadata defined for API entities. </param>
        /// <param name="lastUpdated"> Last updated date and time. </param>
        /// <returns> A new <see cref="ApiCenter.Api"/> instance for mocking. </returns>
        public static Api Api(string name = null, string title = null, string summary = null, string description = null, ApiKind kind = default, LifecycleStage? lifecycleStage = null, TermsOfService termsOfService = null, License license = null, IEnumerable<ExternalDocumentation> externalDocumentation = null, IEnumerable<Contact> contacts = null, ApiCustomProperties customProperties = null, DateTimeOffset? lastUpdated = null)
        {
            externalDocumentation ??= new List<ExternalDocumentation>();
            contacts ??= new List<Contact>();

            return new Api(
                name,
                title,
                summary,
                description,
                kind,
                lifecycleStage,
                termsOfService,
                license,
                externalDocumentation?.ToList(),
                contacts?.ToList(),
                customProperties,
                lastUpdated,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="ApiCenter.TermsOfService"/>. </summary>
        /// <param name="url"> URL pointing to the terms of service. </param>
        /// <returns> A new <see cref="ApiCenter.TermsOfService"/> instance for mocking. </returns>
        public static TermsOfService TermsOfService(Uri url = null)
        {
            return new TermsOfService(url, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="ApiCenter.License"/>. </summary>
        /// <param name="name"> Name of the license. </param>
        /// <param name="url"> URL pointing to the license details. The URL field is mutually exclusive of the identifier field. </param>
        /// <param name="identifier"> SPDX license information for the API. The identifier field is mutually exclusive of the URL field. </param>
        /// <returns> A new <see cref="ApiCenter.License"/> instance for mocking. </returns>
        public static License License(string name = null, Uri url = null, string identifier = null)
        {
            return new License(name, url, identifier, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="ApiCenter.ExternalDocumentation"/>. </summary>
        /// <param name="title"> Title of the documentation. </param>
        /// <param name="description"> Description of the documentation. </param>
        /// <param name="url"> URL pointing to the documentation. </param>
        /// <returns> A new <see cref="ApiCenter.ExternalDocumentation"/> instance for mocking. </returns>
        public static ExternalDocumentation ExternalDocumentation(string title = null, string description = null, Uri url = null)
        {
            return new ExternalDocumentation(title, description, url, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="ApiCenter.Contact"/>. </summary>
        /// <param name="name"> Name of the contact. </param>
        /// <param name="url"> URL for the contact. </param>
        /// <param name="email"> Email address for the contact. </param>
        /// <returns> A new <see cref="ApiCenter.Contact"/> instance for mocking. </returns>
        public static Contact Contact(string name = null, Uri url = null, string email = null)
        {
            return new Contact(name, url, email, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="ApiCenter.PagedApiAll"/>. </summary>
        /// <param name="value"> The Api items on this page. </param>
        /// <param name="nextLink"> The link to the next page of items. </param>
        /// <returns> A new <see cref="ApiCenter.PagedApiAll"/> instance for mocking. </returns>
        public static PagedApiAll PagedApiAll(IEnumerable<Api> value = null, Uri nextLink = null)
        {
            value ??= new List<Api>();

            return new PagedApiAll(value?.ToList(), nextLink, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="ApiCenter.GetResponse1"/>. </summary>
        /// <param name="title"> The name of the API. </param>
        /// <param name="summary"> Short description of the API. </param>
        /// <param name="description"> The description of the API. </param>
        /// <param name="kind"> Kind of API. For example, REST or GraphQL. </param>
        /// <param name="lifecycleStage"> Current lifecycle stage of the API. </param>
        /// <param name="termsOfService"> Terms of service for the API. </param>
        /// <param name="license"> The license information for the API. </param>
        /// <param name="externalDocumentation"> External documentation. </param>
        /// <param name="contacts"> Points of contact for the API. </param>
        /// <param name="customProperties"> The custom metadata defined for API entities. </param>
        /// <param name="lastUpdated"> Last updated date and time. </param>
        /// <returns> A new <see cref="ApiCenter.GetResponse1"/> instance for mocking. </returns>
        public static GetResponse1 GetResponse1(string title = null, string summary = null, string description = null, ApiKind kind = default, LifecycleStage? lifecycleStage = null, TermsOfService termsOfService = null, License license = null, IEnumerable<ExternalDocumentation> externalDocumentation = null, IEnumerable<Contact> contacts = null, ApiCustomProperties customProperties = null, DateTimeOffset? lastUpdated = null)
        {
            externalDocumentation ??= new List<ExternalDocumentation>();
            contacts ??= new List<Contact>();

            return new GetResponse1(
                title,
                summary,
                description,
                kind,
                lifecycleStage,
                termsOfService,
                license,
                externalDocumentation?.ToList(),
                contacts?.ToList(),
                customProperties,
                lastUpdated,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="ApiCenter.ApiDefinition"/>. </summary>
        /// <param name="name"> Definition identifier. </param>
        /// <param name="title"> The naasdasdme of the API definition. </param>
        /// <param name="description"> The deasdasdscription of the API definition. </param>
        /// <param name="specification"> The API specification details. </param>
        /// <returns> A new <see cref="ApiCenter.ApiDefinition"/> instance for mocking. </returns>
        public static ApiDefinition ApiDefinition(string name = null, string title = null, string description = null, ApiSpecification specification = null)
        {
            return new ApiDefinition(name, title, description, specification, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="ApiCenter.ApiSpecification"/>. </summary>
        /// <param name="name"> API specification name, e.g. 'swagger' or 'openapi'. </param>
        /// <param name="version"> API specification version, e.g. '3.0.1'. </param>
        /// <returns> A new <see cref="ApiCenter.ApiSpecification"/> instance for mocking. </returns>
        public static ApiSpecification ApiSpecification(string name = null, string version = null)
        {
            return new ApiSpecification(name, version, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="ApiCenter.GetDefinitionResponse"/>. </summary>
        /// <param name="title"> The naasdasdme of the API definition. </param>
        /// <param name="description"> The deasdasdscription of the API definition. </param>
        /// <param name="specification"> The API specification details. </param>
        /// <returns> A new <see cref="ApiCenter.GetDefinitionResponse"/> instance for mocking. </returns>
        public static GetDefinitionResponse GetDefinitionResponse(string title = null, string description = null, ApiSpecification specification = null)
        {
            return new GetDefinitionResponse(title, description, specification, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="ApiCenter.ResourceOperationStatusApiSpecExportResultApiSpecExportResultError"/>. </summary>
        /// <param name="id"> The unique ID of the operation. </param>
        /// <param name="status"> The status of the operation. </param>
        /// <param name="error"> Error object that describes the error when status is "Failed". </param>
        /// <param name="result"> The result of the operation. </param>
        /// <returns> A new <see cref="ApiCenter.ResourceOperationStatusApiSpecExportResultApiSpecExportResultError"/> instance for mocking. </returns>
        public static ResourceOperationStatusApiSpecExportResultApiSpecExportResultError ResourceOperationStatusApiSpecExportResultApiSpecExportResultError(string id = null, OperationState status = default, ResponseError error = null, ApiSpecExportResult result = null)
        {
            return new ResourceOperationStatusApiSpecExportResultApiSpecExportResultError(id, status, error, result, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="ApiCenter.ApiSpecExportResult"/>. </summary>
        /// <param name="definitionName"> API definition identifier. </param>
        /// <param name="value"> The rasdasdesult of the specification export. </param>
        /// <param name="format"> The forasdasdmat of the specification export result. </param>
        /// <returns> A new <see cref="ApiCenter.ApiSpecExportResult"/> instance for mocking. </returns>
        public static ApiSpecExportResult ApiSpecExportResult(string definitionName = null, string value = null, ApiSpecExportResultFormat format = default)
        {
            return new ApiSpecExportResult(definitionName, value, format, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="ApiCenter.ApiDeployment"/>. </summary>
        /// <param name="name"> Deployment identifier. </param>
        /// <param name="title"> The name of the deployment. </param>
        /// <param name="description"> The description of the deployment. </param>
        /// <param name="environment"> The name of the deployment environment. </param>
        /// <param name="server"> The server information of the API deployment. </param>
        /// <param name="customProperties"> The custom metadata defined for API deployment entities. </param>
        /// <param name="recommended"> Indicates if this is currently recommended deployment. </param>
        /// <returns> A new <see cref="ApiCenter.ApiDeployment"/> instance for mocking. </returns>
        public static ApiDeployment ApiDeployment(string name = null, string title = null, string description = null, string environment = null, ApiDeploymentServer server = null, ApiDeploymentCustomProperties customProperties = null, bool? recommended = null)
        {
            return new ApiDeployment(
                name,
                title,
                description,
                environment,
                server,
                customProperties,
                recommended,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="ApiCenter.ApiDeploymentServer"/>. </summary>
        /// <param name="runtimeUris"> Base runtime URIs for this deployment. </param>
        /// <returns> A new <see cref="ApiCenter.ApiDeploymentServer"/> instance for mocking. </returns>
        public static ApiDeploymentServer ApiDeploymentServer(IEnumerable<Uri> runtimeUris = null)
        {
            runtimeUris ??= new List<Uri>();

            return new ApiDeploymentServer(runtimeUris?.ToList(), serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="ApiCenter.GetDeploymentResponse"/>. </summary>
        /// <param name="title"> The name of the deployment. </param>
        /// <param name="description"> The description of the deployment. </param>
        /// <param name="environment"> The name of the deployment environment. </param>
        /// <param name="server"> The server information of the API deployment. </param>
        /// <param name="customProperties"> The custom metadata defined for API deployment entities. </param>
        /// <param name="recommended"> Indicates if this is currently recommended deployment. </param>
        /// <returns> A new <see cref="ApiCenter.GetDeploymentResponse"/> instance for mocking. </returns>
        public static GetDeploymentResponse GetDeploymentResponse(string title = null, string description = null, string environment = null, ApiDeploymentServer server = null, ApiDeploymentCustomProperties customProperties = null, bool? recommended = null)
        {
            return new GetDeploymentResponse(
                title,
                description,
                environment,
                server,
                customProperties,
                recommended,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="ApiCenter.Environment"/>. </summary>
        /// <param name="name"> Environment identifier. </param>
        /// <param name="title"> The name of the environment. </param>
        /// <param name="kind"> Kind of deployment environment. </param>
        /// <param name="description"> Description of the environment. </param>
        /// <param name="server"> Server information of the environment. </param>
        /// <param name="onboarding"> Onboarding information for this environment. </param>
        /// <param name="customProperties"> The custom metadata defined for environment entities. </param>
        /// <returns> A new <see cref="ApiCenter.Environment"/> instance for mocking. </returns>
        public static Environment Environment(string name = null, string title = null, EnvironmentKind kind = default, string description = null, EnvironmentServer server = null, EnvironmentOnboardingModel onboarding = null, EnvironmentCustomProperties customProperties = null)
        {
            return new Environment(
                name,
                title,
                kind,
                description,
                server,
                onboarding,
                customProperties,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="ApiCenter.EnvironmentServer"/>. </summary>
        /// <param name="type"> Type of the server that represents the environment. </param>
        /// <param name="managementPortalUris"> URIs of the server's management portal. </param>
        /// <returns> A new <see cref="ApiCenter.EnvironmentServer"/> instance for mocking. </returns>
        public static EnvironmentServer EnvironmentServer(string type = null, IEnumerable<Uri> managementPortalUris = null)
        {
            managementPortalUris ??= new List<Uri>();

            return new EnvironmentServer(type, managementPortalUris?.ToList(), serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="ApiCenter.EnvironmentOnboardingModel"/>. </summary>
        /// <param name="instructions"> Instructions how to onboard to the environment. </param>
        /// <param name="developerPortalUris"> Developer portal URIs of the environment. </param>
        /// <returns> A new <see cref="ApiCenter.EnvironmentOnboardingModel"/> instance for mocking. </returns>
        public static EnvironmentOnboardingModel EnvironmentOnboardingModel(string instructions = null, IEnumerable<Uri> developerPortalUris = null)
        {
            developerPortalUris ??= new List<Uri>();

            return new EnvironmentOnboardingModel(instructions, developerPortalUris?.ToList(), serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="ApiCenter.PagedEnvironmentAll"/>. </summary>
        /// <param name="value"> The Environment items on this page. </param>
        /// <param name="nextLink"> The link to the next page of items. </param>
        /// <returns> A new <see cref="ApiCenter.PagedEnvironmentAll"/> instance for mocking. </returns>
        public static PagedEnvironmentAll PagedEnvironmentAll(IEnumerable<Environment> value = null, Uri nextLink = null)
        {
            value ??= new List<Environment>();

            return new PagedEnvironmentAll(value?.ToList(), nextLink, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="ApiCenter.GetResponse"/>. </summary>
        /// <param name="title"> The name of the environment. </param>
        /// <param name="kind"> Kind of deployment environment. </param>
        /// <param name="description"> Description of the environment. </param>
        /// <param name="server"> Server information of the environment. </param>
        /// <param name="onboarding"> Onboarding information for this environment. </param>
        /// <param name="customProperties"> The custom metadata defined for environment entities. </param>
        /// <returns> A new <see cref="ApiCenter.GetResponse"/> instance for mocking. </returns>
        public static GetResponse GetResponse(string title = null, EnvironmentKind kind = default, string description = null, EnvironmentServer server = null, EnvironmentOnboardingModel onboarding = null, EnvironmentCustomProperties customProperties = null)
        {
            return new GetResponse(
                title,
                kind,
                description,
                server,
                onboarding,
                customProperties,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="ApiCenter.ApiVersion"/>. </summary>
        /// <param name="name"> Version identifier. </param>
        /// <param name="title"> Version title. </param>
        /// <param name="lifecycleStage"> Current lifecycle stage of the API version. </param>
        /// <returns> A new <see cref="ApiCenter.ApiVersion"/> instance for mocking. </returns>
        public static ApiVersion ApiVersion(string name = null, string title = null, LifecycleStage lifecycleStage = default)
        {
            return new ApiVersion(name, title, lifecycleStage, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="ApiCenter.GetVersionResponse"/>. </summary>
        /// <param name="title"> Version title. </param>
        /// <param name="lifecycleStage"> Current lifecycle stage of the API version. </param>
        /// <returns> A new <see cref="ApiCenter.GetVersionResponse"/> instance for mocking. </returns>
        public static GetVersionResponse GetVersionResponse(string title = null, LifecycleStage lifecycleStage = default)
        {
            return new GetVersionResponse(title, lifecycleStage, serializedAdditionalRawData: null);
        }
    }
}
