// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.KubernetesRuntime.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The properties of SMB StorageClass
    /// </summary>
    [Newtonsoft.Json.JsonObject("SMB")]
    public partial class SmbStorageClassTypeProperties : StorageClassTypeProperties
    {
        /// <summary>
        /// Initializes a new instance of the SmbStorageClassTypeProperties
        /// class.
        /// </summary>
        public SmbStorageClassTypeProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SmbStorageClassTypeProperties
        /// class.
        /// </summary>
        /// <param name="source">SMB Source</param>
        /// <param name="subDir">Sub directory under share. If the sub
        /// directory doesn't exist, driver will create it</param>
        /// <param name="username">Server username</param>
        /// <param name="password">Server password</param>
        /// <param name="domain">Server domain</param>
        public SmbStorageClassTypeProperties(string source, string subDir = default(string), string username = default(string), string password = default(string), string domain = default(string))
        {
            Source = source;
            SubDir = subDir;
            Username = username;
            Password = password;
            Domain = domain;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets SMB Source
        /// </summary>
        [JsonProperty(PropertyName = "source")]
        public string Source { get; set; }

        /// <summary>
        /// Gets or sets sub directory under share. If the sub directory
        /// doesn't exist, driver will create it
        /// </summary>
        [JsonProperty(PropertyName = "subDir")]
        public string SubDir { get; set; }

        /// <summary>
        /// Gets or sets server username
        /// </summary>
        [JsonProperty(PropertyName = "username")]
        public string Username { get; set; }

        /// <summary>
        /// Gets or sets server password
        /// </summary>
        [JsonProperty(PropertyName = "password")]
        public string Password { get; set; }

        /// <summary>
        /// Gets or sets server domain
        /// </summary>
        [JsonProperty(PropertyName = "domain")]
        public string Domain { get; set; }

    }
}
