// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.KubernetesRuntime.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The properties of NFS StorageClass
    /// </summary>
    [Newtonsoft.Json.JsonObject("NFS")]
    public partial class NfsStorageClassTypeProperties : StorageClassTypeProperties
    {
        /// <summary>
        /// Initializes a new instance of the NfsStorageClassTypeProperties
        /// class.
        /// </summary>
        public NfsStorageClassTypeProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NfsStorageClassTypeProperties
        /// class.
        /// </summary>
        /// <param name="server">NFS Server</param>
        /// <param name="share">NFS share</param>
        /// <param name="subDir">Sub directory under share. If the sub
        /// directory doesn't exist, driver will create it</param>
        /// <param name="mountPermissions">Mounted folder permissions. Default
        /// is 0. If set as non-zero, driver will perform `chmod` after
        /// mount</param>
        /// <param name="onDelete">The action to take when a NFS volume is
        /// deleted. Default is Delete. Possible values include: 'Delete',
        /// 'Retain'</param>
        public NfsStorageClassTypeProperties(string server, string share, string subDir = default(string), string mountPermissions = default(string), string onDelete = default(string))
        {
            Server = server;
            Share = share;
            SubDir = subDir;
            MountPermissions = mountPermissions;
            OnDelete = onDelete;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets NFS Server
        /// </summary>
        [JsonProperty(PropertyName = "server")]
        public string Server { get; set; }

        /// <summary>
        /// Gets or sets NFS share
        /// </summary>
        [JsonProperty(PropertyName = "share")]
        public string Share { get; set; }

        /// <summary>
        /// Gets or sets sub directory under share. If the sub directory
        /// doesn't exist, driver will create it
        /// </summary>
        [JsonProperty(PropertyName = "subDir")]
        public string SubDir { get; set; }

        /// <summary>
        /// Gets or sets mounted folder permissions. Default is 0. If set as
        /// non-zero, driver will perform `chmod` after mount
        /// </summary>
        [JsonProperty(PropertyName = "mountPermissions")]
        public string MountPermissions { get; set; }

        /// <summary>
        /// Gets or sets the action to take when a NFS volume is deleted.
        /// Default is Delete. Possible values include: 'Delete', 'Retain'
        /// </summary>
        [JsonProperty(PropertyName = "onDelete")]
        public string OnDelete { get; set; }

    }
}
