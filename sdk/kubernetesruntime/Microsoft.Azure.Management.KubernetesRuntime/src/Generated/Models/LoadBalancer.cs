// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.KubernetesRuntime.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A LoadBalancer resource for an Arc connected cluster
    /// (Microsoft.Kubernetes/connectedClusters)
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class LoadBalancer : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the LoadBalancer class.
        /// </summary>
        public LoadBalancer()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LoadBalancer class.
        /// </summary>
        /// <param name="addresses">IP Range</param>
        /// <param name="advertiseMode">Advertise Mode. Possible values
        /// include: 'ARP', 'BGP', 'Both'</param>
        /// <param name="id">Fully qualified resource ID for the resource. E.g.
        /// "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="systemData">Azure Resource Manager metadata containing
        /// createdBy and modifiedBy information.</param>
        /// <param name="serviceSelector">A dynamic label mapping to select
        /// related services. For instance, if you want to create a load
        /// balancer only for services with label "a=b", then please specify
        /// {"a": "b"} in the field.</param>
        /// <param name="bgpPeers">The list of BGP peers it should advertise
        /// to. Null or empty means to advertise to all peers.</param>
        /// <param name="provisioningState">Resource provision state. Possible
        /// values include: 'Succeeded', 'Failed', 'Canceled', 'Provisioning',
        /// 'Updating', 'Deleting', 'Accepted'</param>
        public LoadBalancer(IList<string> addresses, string advertiseMode, string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), IDictionary<string, string> serviceSelector = default(IDictionary<string, string>), IList<string> bgpPeers = default(IList<string>), string provisioningState = default(string))
            : base(id, name, type, systemData)
        {
            Addresses = addresses;
            ServiceSelector = serviceSelector;
            AdvertiseMode = advertiseMode;
            BgpPeers = bgpPeers;
            ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets IP Range
        /// </summary>
        [JsonProperty(PropertyName = "properties.addresses")]
        public IList<string> Addresses { get; set; }

        /// <summary>
        /// Gets or sets a dynamic label mapping to select related services.
        /// For instance, if you want to create a load balancer only for
        /// services with label "a=b", then please specify {"a": "b"} in the
        /// field.
        /// </summary>
        [JsonProperty(PropertyName = "properties.serviceSelector")]
        public IDictionary<string, string> ServiceSelector { get; set; }

        /// <summary>
        /// Gets or sets advertise Mode. Possible values include: 'ARP', 'BGP',
        /// 'Both'
        /// </summary>
        [JsonProperty(PropertyName = "properties.advertiseMode")]
        public string AdvertiseMode { get; set; }

        /// <summary>
        /// Gets or sets the list of BGP peers it should advertise to. Null or
        /// empty means to advertise to all peers.
        /// </summary>
        [JsonProperty(PropertyName = "properties.bgpPeers")]
        public IList<string> BgpPeers { get; set; }

        /// <summary>
        /// Gets resource provision state. Possible values include:
        /// 'Succeeded', 'Failed', 'Canceled', 'Provisioning', 'Updating',
        /// 'Deleting', 'Accepted'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

    }
}
