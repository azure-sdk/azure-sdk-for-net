// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.KubernetesRuntime
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for BgpPeersOperations.
    /// </summary>
    public static partial class BgpPeersOperationsExtensions
    {
            /// <summary>
            /// List BgpPeer resources by parent
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceUri'>
            /// The fully qualified Azure Resource manager identifier of the resource.
            /// </param>
            public static IPage<BgpPeer> List(this IBgpPeersOperations operations, string resourceUri)
            {
                return operations.ListAsync(resourceUri).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List BgpPeer resources by parent
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceUri'>
            /// The fully qualified Azure Resource manager identifier of the resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<BgpPeer>> ListAsync(this IBgpPeersOperations operations, string resourceUri, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceUri, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get a BgpPeer
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceUri'>
            /// The fully qualified Azure Resource manager identifier of the resource.
            /// </param>
            /// <param name='bgpPeerName'>
            /// The name of the BgpPeer
            /// </param>
            public static BgpPeer Get(this IBgpPeersOperations operations, string resourceUri, string bgpPeerName)
            {
                return operations.GetAsync(resourceUri, bgpPeerName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get a BgpPeer
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceUri'>
            /// The fully qualified Azure Resource manager identifier of the resource.
            /// </param>
            /// <param name='bgpPeerName'>
            /// The name of the BgpPeer
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<BgpPeer> GetAsync(this IBgpPeersOperations operations, string resourceUri, string bgpPeerName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceUri, bgpPeerName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create a BgpPeer
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceUri'>
            /// The fully qualified Azure Resource manager identifier of the resource.
            /// </param>
            /// <param name='bgpPeerName'>
            /// The name of the BgpPeer
            /// </param>
            /// <param name='resource'>
            /// Resource create parameters.
            /// </param>
            public static BgpPeer CreateOrUpdate(this IBgpPeersOperations operations, string resourceUri, string bgpPeerName, BgpPeer resource)
            {
                return operations.CreateOrUpdateAsync(resourceUri, bgpPeerName, resource).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create a BgpPeer
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceUri'>
            /// The fully qualified Azure Resource manager identifier of the resource.
            /// </param>
            /// <param name='bgpPeerName'>
            /// The name of the BgpPeer
            /// </param>
            /// <param name='resource'>
            /// Resource create parameters.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<BgpPeer> CreateOrUpdateAsync(this IBgpPeersOperations operations, string resourceUri, string bgpPeerName, BgpPeer resource, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceUri, bgpPeerName, resource, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete a BgpPeer
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceUri'>
            /// The fully qualified Azure Resource manager identifier of the resource.
            /// </param>
            /// <param name='bgpPeerName'>
            /// The name of the BgpPeer
            /// </param>
            public static void Delete(this IBgpPeersOperations operations, string resourceUri, string bgpPeerName)
            {
                operations.DeleteAsync(resourceUri, bgpPeerName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete a BgpPeer
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceUri'>
            /// The fully qualified Azure Resource manager identifier of the resource.
            /// </param>
            /// <param name='bgpPeerName'>
            /// The name of the BgpPeer
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IBgpPeersOperations operations, string resourceUri, string bgpPeerName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceUri, bgpPeerName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Create a BgpPeer
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceUri'>
            /// The fully qualified Azure Resource manager identifier of the resource.
            /// </param>
            /// <param name='bgpPeerName'>
            /// The name of the BgpPeer
            /// </param>
            /// <param name='resource'>
            /// Resource create parameters.
            /// </param>
            public static BgpPeer BeginCreateOrUpdate(this IBgpPeersOperations operations, string resourceUri, string bgpPeerName, BgpPeer resource)
            {
                return operations.BeginCreateOrUpdateAsync(resourceUri, bgpPeerName, resource).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create a BgpPeer
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceUri'>
            /// The fully qualified Azure Resource manager identifier of the resource.
            /// </param>
            /// <param name='bgpPeerName'>
            /// The name of the BgpPeer
            /// </param>
            /// <param name='resource'>
            /// Resource create parameters.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<BgpPeer> BeginCreateOrUpdateAsync(this IBgpPeersOperations operations, string resourceUri, string bgpPeerName, BgpPeer resource, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateOrUpdateWithHttpMessagesAsync(resourceUri, bgpPeerName, resource, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// List BgpPeer resources by parent
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<BgpPeer> ListNext(this IBgpPeersOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List BgpPeer resources by parent
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<BgpPeer>> ListNextAsync(this IBgpPeersOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
