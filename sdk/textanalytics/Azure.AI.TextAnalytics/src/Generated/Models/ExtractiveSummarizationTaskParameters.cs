// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.AI.TextAnalytics.Models
{
    /// <summary> Supported parameters for an Extractive Summarization task. </summary>
    internal partial class ExtractiveSummarizationTaskParameters
    {
        /// <summary> Initializes a new instance of <see cref="ExtractiveSummarizationTaskParameters"/>. </summary>
        public ExtractiveSummarizationTaskParameters()
        {
        }

        /// <summary> Initializes a new instance of <see cref="ExtractiveSummarizationTaskParameters"/>. </summary>
        /// <param name="loggingOptOut"> logging opt out. </param>
        /// <param name="modelVersion"> model version. </param>
        /// <param name="sentenceCount"> Specifies the number of sentences in the extracted summary. </param>
        /// <param name="sortBy"> Specifies how to sort the extracted summaries. </param>
        /// <param name="stringIndexType"> Specifies the method used to interpret string offsets. </param>
        internal ExtractiveSummarizationTaskParameters(bool? loggingOptOut, string modelVersion, long? sentenceCount, ExtractiveSummarySentencesOrder? sortBy, StringIndexType? stringIndexType)
        {
            LoggingOptOut = loggingOptOut;
            ModelVersion = modelVersion;
            SentenceCount = sentenceCount;
            SortBy = sortBy;
            StringIndexType = stringIndexType;
        }

        /// <summary> logging opt out. </summary>
        public bool? LoggingOptOut { get; set; }
        /// <summary> model version. </summary>
        public string ModelVersion { get; set; }
        /// <summary> Specifies the number of sentences in the extracted summary. </summary>
        public long? SentenceCount { get; set; }
        /// <summary> Specifies how to sort the extracted summaries. </summary>
        public ExtractiveSummarySentencesOrder? SortBy { get; set; }
        /// <summary> Specifies the method used to interpret string offsets. </summary>
        public StringIndexType? StringIndexType { get; set; }
    }
}
