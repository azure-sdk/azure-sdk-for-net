// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AzureArcData.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Properties of SqlAvailabilityGroup.
    /// </summary>
    public partial class SqlAvailabilityGroupProperties
    {
        /// <summary>
        /// Initializes a new instance of the SqlAvailabilityGroupProperties
        /// class.
        /// </summary>
        public SqlAvailabilityGroupProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SqlAvailabilityGroupProperties
        /// class.
        /// </summary>
        /// <param name="availabilityGroupName">The name of the availability
        /// group.</param>
        /// <param name="availabilityGroupId">Id GUID of the availability
        /// group.</param>
        /// <param name="instanceName">The name of the instance name which
        /// availability group primary is on.</param>
        /// <param name="collectionTimestamp">Timestamp for when the data was
        /// collected from the client machine.</param>
        /// <param name="version">SQL Server availability group current
        /// version.</param>
        /// <param name="basicFeatures">SQL Server basic availability
        /// group.</param>
        /// <param name="dtcSupport">SQL Server availability group DTC support
        /// enabled.</param>
        /// <param name="dbFailover">SQL Server availability group failover for
        /// database health conditions.</param>
        /// <param name="isDistributed">SQL Server distributed availability
        /// group.</param>
        /// <param name="clusterTypeDesc">SQL Server availability group cluster
        /// type description</param>
        /// <param name="requiredSynchronizedSecondariesCommit">Availability
        /// group required the number of synchronized secondary to
        /// commit.</param>
        /// <param name="isContained">SQL Server availability group contained
        /// system databases.</param>
        public SqlAvailabilityGroupProperties(string availabilityGroupName, string availabilityGroupId, string instanceName = default(string), System.DateTime? collectionTimestamp = default(System.DateTime?), int? version = default(int?), bool? basicFeatures = default(bool?), bool? dtcSupport = default(bool?), bool? dbFailover = default(bool?), bool? isDistributed = default(bool?), string clusterTypeDesc = default(string), int? requiredSynchronizedSecondariesCommit = default(int?), bool? isContained = default(bool?))
        {
            AvailabilityGroupName = availabilityGroupName;
            AvailabilityGroupId = availabilityGroupId;
            InstanceName = instanceName;
            CollectionTimestamp = collectionTimestamp;
            Version = version;
            BasicFeatures = basicFeatures;
            DtcSupport = dtcSupport;
            DbFailover = dbFailover;
            IsDistributed = isDistributed;
            ClusterTypeDesc = clusterTypeDesc;
            RequiredSynchronizedSecondariesCommit = requiredSynchronizedSecondariesCommit;
            IsContained = isContained;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the availability group.
        /// </summary>
        [JsonProperty(PropertyName = "availabilityGroupName")]
        public string AvailabilityGroupName { get; set; }

        /// <summary>
        /// Gets or sets id GUID of the availability group.
        /// </summary>
        [JsonProperty(PropertyName = "availabilityGroupId")]
        public string AvailabilityGroupId { get; set; }

        /// <summary>
        /// Gets or sets the name of the instance name which availability group
        /// primary is on.
        /// </summary>
        [JsonProperty(PropertyName = "instanceName")]
        public string InstanceName { get; set; }

        /// <summary>
        /// Gets or sets timestamp for when the data was collected from the
        /// client machine.
        /// </summary>
        [JsonProperty(PropertyName = "collectionTimestamp")]
        public System.DateTime? CollectionTimestamp { get; set; }

        /// <summary>
        /// Gets or sets SQL Server availability group current version.
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public int? Version { get; set; }

        /// <summary>
        /// Gets or sets SQL Server basic availability group.
        /// </summary>
        [JsonProperty(PropertyName = "basicFeatures")]
        public bool? BasicFeatures { get; set; }

        /// <summary>
        /// Gets or sets SQL Server availability group DTC support enabled.
        /// </summary>
        [JsonProperty(PropertyName = "dtcSupport")]
        public bool? DtcSupport { get; set; }

        /// <summary>
        /// Gets or sets SQL Server availability group failover for database
        /// health conditions.
        /// </summary>
        [JsonProperty(PropertyName = "dbFailover")]
        public bool? DbFailover { get; set; }

        /// <summary>
        /// Gets or sets SQL Server distributed availability group.
        /// </summary>
        [JsonProperty(PropertyName = "isDistributed")]
        public bool? IsDistributed { get; set; }

        /// <summary>
        /// Gets or sets SQL Server availability group cluster type description
        /// </summary>
        [JsonProperty(PropertyName = "clusterTypeDesc")]
        public string ClusterTypeDesc { get; set; }

        /// <summary>
        /// Gets or sets availability group required the number of synchronized
        /// secondary to commit.
        /// </summary>
        [JsonProperty(PropertyName = "requiredSynchronizedSecondariesCommit")]
        public int? RequiredSynchronizedSecondariesCommit { get; set; }

        /// <summary>
        /// Gets or sets SQL Server availability group contained system
        /// databases.
        /// </summary>
        [JsonProperty(PropertyName = "isContained")]
        public bool? IsContained { get; set; }

    }
}
