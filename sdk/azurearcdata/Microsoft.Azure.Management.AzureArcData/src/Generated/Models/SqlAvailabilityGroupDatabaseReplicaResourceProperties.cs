// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AzureArcData.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The properties of Arc Sql availability group database replica resource
    /// </summary>
    public partial class SqlAvailabilityGroupDatabaseReplicaResourceProperties
    {
        /// <summary>
        /// Initializes a new instance of the
        /// SqlAvailabilityGroupDatabaseReplicaResourceProperties class.
        /// </summary>
        public SqlAvailabilityGroupDatabaseReplicaResourceProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// SqlAvailabilityGroupDatabaseReplicaResourceProperties class.
        /// </summary>
        /// <param name="databaseName">the database name.</param>
        /// <param name="replicaName">the database replica name.</param>
        /// <param name="isLocal">Whether the availability database is
        /// local.</param>
        /// <param name="isPrimaryReplica">Returns 1 if the replica is primary,
        /// or 0 if it is a secondary replica.</param>
        /// <param name="synchronizationStateDescription">Description of the
        /// data-movement state.</param>
        /// <param name="isCommitParticipant">Whether this replica is
        /// transaction committer.</param>
        /// <param name="synchronizationHealthDescription">Description of the
        /// health of database.</param>
        /// <param name="databaseStateDescription">Description of the database
        /// state of the availability replica.</param>
        /// <param name="isSuspended">Whether this data movement is
        /// suspended.</param>
        /// <param name="suspendReasonDescription">Description of the database
        /// suspended state reason.</param>
        public SqlAvailabilityGroupDatabaseReplicaResourceProperties(string databaseName = default(string), string replicaName = default(string), bool? isLocal = default(bool?), bool? isPrimaryReplica = default(bool?), string synchronizationStateDescription = default(string), bool? isCommitParticipant = default(bool?), string synchronizationHealthDescription = default(string), string databaseStateDescription = default(string), bool? isSuspended = default(bool?), string suspendReasonDescription = default(string))
        {
            DatabaseName = databaseName;
            ReplicaName = replicaName;
            IsLocal = isLocal;
            IsPrimaryReplica = isPrimaryReplica;
            SynchronizationStateDescription = synchronizationStateDescription;
            IsCommitParticipant = isCommitParticipant;
            SynchronizationHealthDescription = synchronizationHealthDescription;
            DatabaseStateDescription = databaseStateDescription;
            IsSuspended = isSuspended;
            SuspendReasonDescription = suspendReasonDescription;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the database name.
        /// </summary>
        [JsonProperty(PropertyName = "databaseName")]
        public string DatabaseName { get; set; }

        /// <summary>
        /// Gets the database replica name.
        /// </summary>
        [JsonProperty(PropertyName = "replicaName")]
        public string ReplicaName { get; private set; }

        /// <summary>
        /// Gets whether the availability database is local.
        /// </summary>
        [JsonProperty(PropertyName = "isLocal")]
        public bool? IsLocal { get; private set; }

        /// <summary>
        /// Gets returns 1 if the replica is primary, or 0 if it is a secondary
        /// replica.
        /// </summary>
        [JsonProperty(PropertyName = "isPrimaryReplica")]
        public bool? IsPrimaryReplica { get; private set; }

        /// <summary>
        /// Gets description of the data-movement state.
        /// </summary>
        [JsonProperty(PropertyName = "synchronizationStateDescription")]
        public string SynchronizationStateDescription { get; private set; }

        /// <summary>
        /// Gets whether this replica is transaction committer.
        /// </summary>
        [JsonProperty(PropertyName = "isCommitParticipant")]
        public bool? IsCommitParticipant { get; private set; }

        /// <summary>
        /// Gets description of the health of database.
        /// </summary>
        [JsonProperty(PropertyName = "synchronizationHealthDescription")]
        public string SynchronizationHealthDescription { get; private set; }

        /// <summary>
        /// Gets description of the database state of the availability replica.
        /// </summary>
        [JsonProperty(PropertyName = "databaseStateDescription")]
        public string DatabaseStateDescription { get; private set; }

        /// <summary>
        /// Gets whether this data movement is suspended.
        /// </summary>
        [JsonProperty(PropertyName = "isSuspended")]
        public bool? IsSuspended { get; private set; }

        /// <summary>
        /// Gets description of the database suspended state reason.
        /// </summary>
        [JsonProperty(PropertyName = "suspendReasonDescription")]
        public string SuspendReasonDescription { get; private set; }

    }
}
