// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AzureArcData.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The kubernetes active directory information.
    /// </summary>
    public partial class K8sActiveDirectory
    {
        /// <summary>
        /// Initializes a new instance of the K8sActiveDirectory class.
        /// </summary>
        public K8sActiveDirectory()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the K8sActiveDirectory class.
        /// </summary>
        /// <param name="accountName">Account name for AAD</param>
        /// <param name="keytabSecret">Keytab secret used to authenticate with
        /// Active Directory.</param>
        /// <param name="encryptionTypes">An array of encryption types</param>
        public K8sActiveDirectory(K8sActiveDirectoryConnector connector = default(K8sActiveDirectoryConnector), string accountName = default(string), string keytabSecret = default(string), IList<string> encryptionTypes = default(IList<string>))
        {
            Connector = connector;
            AccountName = accountName;
            KeytabSecret = keytabSecret;
            EncryptionTypes = encryptionTypes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "connector")]
        public K8sActiveDirectoryConnector Connector { get; set; }

        /// <summary>
        /// Gets or sets account name for AAD
        /// </summary>
        [JsonProperty(PropertyName = "accountName")]
        public string AccountName { get; set; }

        /// <summary>
        /// Gets or sets keytab secret used to authenticate with Active
        /// Directory.
        /// </summary>
        [JsonProperty(PropertyName = "keytabSecret")]
        public string KeytabSecret { get; set; }

        /// <summary>
        /// Gets or sets an array of encryption types
        /// </summary>
        [JsonProperty(PropertyName = "encryptionTypes")]
        public IList<string> EncryptionTypes { get; set; }

    }
}
