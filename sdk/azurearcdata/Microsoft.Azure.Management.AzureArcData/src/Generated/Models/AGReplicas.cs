// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AzureArcData.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The information about each failover group replica.
    /// </summary>
    public partial class AGReplicas
    {
        /// <summary>
        /// Initializes a new instance of the AGReplicas class.
        /// </summary>
        public AGReplicas()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AGReplicas class.
        /// </summary>
        /// <param name="healthState">The health state of the replica.</param>
        /// <param name="replicaName">The replica name.</param>
        /// <param name="role">The role of the replica.</param>
        /// <param name="connectedState">The connected state of the
        /// replica.</param>
        /// <param name="synchronizationState">The synchronization state of the
        /// availability group replicas.</param>
        /// <param name="availabilityMode">The availability mode of the
        /// replica.</param>
        /// <param name="secondaryRoleAllowConnections">The secondary role
        /// allowed connections.</param>
        public AGReplicas(string healthState = default(string), string replicaName = default(string), string role = default(string), string connectedState = default(string), string synchronizationState = default(string), string availabilityMode = default(string), string secondaryRoleAllowConnections = default(string))
        {
            HealthState = healthState;
            ReplicaName = replicaName;
            Role = role;
            ConnectedState = connectedState;
            SynchronizationState = synchronizationState;
            AvailabilityMode = availabilityMode;
            SecondaryRoleAllowConnections = secondaryRoleAllowConnections;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the health state of the replica.
        /// </summary>
        [JsonProperty(PropertyName = "healthState")]
        public string HealthState { get; set; }

        /// <summary>
        /// Gets or sets the replica name.
        /// </summary>
        [JsonProperty(PropertyName = "replicaName")]
        public string ReplicaName { get; set; }

        /// <summary>
        /// Gets or sets the role of the replica.
        /// </summary>
        [JsonProperty(PropertyName = "role")]
        public string Role { get; set; }

        /// <summary>
        /// Gets or sets the connected state of the replica.
        /// </summary>
        [JsonProperty(PropertyName = "connectedState")]
        public string ConnectedState { get; set; }

        /// <summary>
        /// Gets or sets the synchronization state of the availability group
        /// replicas.
        /// </summary>
        [JsonProperty(PropertyName = "synchronizationState")]
        public string SynchronizationState { get; set; }

        /// <summary>
        /// Gets or sets the availability mode of the replica.
        /// </summary>
        [JsonProperty(PropertyName = "availabilityMode")]
        public string AvailabilityMode { get; set; }

        /// <summary>
        /// Gets or sets the secondary role allowed connections.
        /// </summary>
        [JsonProperty(PropertyName = "secondaryRoleAllowConnections")]
        public string SecondaryRoleAllowConnections { get; set; }

    }
}
