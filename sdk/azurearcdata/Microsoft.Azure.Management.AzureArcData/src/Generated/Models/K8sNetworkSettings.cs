// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AzureArcData.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The kubernetes network settings information.
    /// </summary>
    public partial class K8sNetworkSettings
    {
        /// <summary>
        /// Initializes a new instance of the K8sNetworkSettings class.
        /// </summary>
        public K8sNetworkSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the K8sNetworkSettings class.
        /// </summary>
        /// <param name="forceencryption">If 1, then SQL Server forces all
        /// connections to be encrypted. By default, this option is 0</param>
        /// <param name="tlsciphers">Specifies which ciphers are allowed by SQL
        /// Server for TLS</param>
        /// <param name="tlsprotocols">A comma-separated list of which TLS
        /// protocols are allowed by SQL Server</param>
        public K8sNetworkSettings(int? forceencryption = default(int?), string tlsciphers = default(string), string tlsprotocols = default(string))
        {
            Forceencryption = forceencryption;
            Tlsciphers = tlsciphers;
            Tlsprotocols = tlsprotocols;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets if 1, then SQL Server forces all connections to be
        /// encrypted. By default, this option is 0
        /// </summary>
        [JsonProperty(PropertyName = "forceencryption")]
        public int? Forceencryption { get; set; }

        /// <summary>
        /// Gets or sets specifies which ciphers are allowed by SQL Server for
        /// TLS
        /// </summary>
        [JsonProperty(PropertyName = "tlsciphers")]
        public string Tlsciphers { get; set; }

        /// <summary>
        /// Gets or sets a comma-separated list of which TLS protocols are
        /// allowed by SQL Server
        /// </summary>
        [JsonProperty(PropertyName = "tlsprotocols")]
        public string Tlsprotocols { get; set; }

    }
}
