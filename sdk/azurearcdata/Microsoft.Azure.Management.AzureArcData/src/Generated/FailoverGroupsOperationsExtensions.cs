// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AzureArcData
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for FailoverGroupsOperations.
    /// </summary>
    public static partial class FailoverGroupsOperationsExtensions
    {
            /// <summary>
            /// List the failover groups associated with the given sql managed instance.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='sqlManagedInstanceName'>
            /// Name of SQL Managed Instance
            /// </param>
            public static IPage<FailoverGroupResource> List(this IFailoverGroupsOperations operations, string resourceGroupName, string sqlManagedInstanceName)
            {
                return operations.ListAsync(resourceGroupName, sqlManagedInstanceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List the failover groups associated with the given sql managed instance.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='sqlManagedInstanceName'>
            /// Name of SQL Managed Instance
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<FailoverGroupResource>> ListAsync(this IFailoverGroupsOperations operations, string resourceGroupName, string sqlManagedInstanceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, sqlManagedInstanceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates or replaces a failover group resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='sqlManagedInstanceName'>
            /// Name of SQL Managed Instance
            /// </param>
            /// <param name='failoverGroupName'>
            /// The name of the Failover Group
            /// </param>
            /// <param name='properties'>
            /// null
            /// </param>
            public static FailoverGroupResource Create(this IFailoverGroupsOperations operations, string resourceGroupName, string sqlManagedInstanceName, string failoverGroupName, FailoverGroupProperties properties)
            {
                return operations.CreateAsync(resourceGroupName, sqlManagedInstanceName, failoverGroupName, properties).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or replaces a failover group resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='sqlManagedInstanceName'>
            /// Name of SQL Managed Instance
            /// </param>
            /// <param name='failoverGroupName'>
            /// The name of the Failover Group
            /// </param>
            /// <param name='properties'>
            /// null
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<FailoverGroupResource> CreateAsync(this IFailoverGroupsOperations operations, string resourceGroupName, string sqlManagedInstanceName, string failoverGroupName, FailoverGroupProperties properties, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, sqlManagedInstanceName, failoverGroupName, properties, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes a failover group resource
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='sqlManagedInstanceName'>
            /// Name of SQL Managed Instance
            /// </param>
            /// <param name='failoverGroupName'>
            /// The name of the Failover Group
            /// </param>
            public static void Delete(this IFailoverGroupsOperations operations, string resourceGroupName, string sqlManagedInstanceName, string failoverGroupName)
            {
                operations.DeleteAsync(resourceGroupName, sqlManagedInstanceName, failoverGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes a failover group resource
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='sqlManagedInstanceName'>
            /// Name of SQL Managed Instance
            /// </param>
            /// <param name='failoverGroupName'>
            /// The name of the Failover Group
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IFailoverGroupsOperations operations, string resourceGroupName, string sqlManagedInstanceName, string failoverGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, sqlManagedInstanceName, failoverGroupName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Retrieves a failover group resource
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='sqlManagedInstanceName'>
            /// Name of SQL Managed Instance
            /// </param>
            /// <param name='failoverGroupName'>
            /// The name of the Failover Group
            /// </param>
            public static FailoverGroupResource Get(this IFailoverGroupsOperations operations, string resourceGroupName, string sqlManagedInstanceName, string failoverGroupName)
            {
                return operations.GetAsync(resourceGroupName, sqlManagedInstanceName, failoverGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieves a failover group resource
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='sqlManagedInstanceName'>
            /// Name of SQL Managed Instance
            /// </param>
            /// <param name='failoverGroupName'>
            /// The name of the Failover Group
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<FailoverGroupResource> GetAsync(this IFailoverGroupsOperations operations, string resourceGroupName, string sqlManagedInstanceName, string failoverGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, sqlManagedInstanceName, failoverGroupName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates or replaces a failover group resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='sqlManagedInstanceName'>
            /// Name of SQL Managed Instance
            /// </param>
            /// <param name='failoverGroupName'>
            /// The name of the Failover Group
            /// </param>
            /// <param name='properties'>
            /// null
            /// </param>
            public static FailoverGroupResource BeginCreate(this IFailoverGroupsOperations operations, string resourceGroupName, string sqlManagedInstanceName, string failoverGroupName, FailoverGroupProperties properties)
            {
                return operations.BeginCreateAsync(resourceGroupName, sqlManagedInstanceName, failoverGroupName, properties).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or replaces a failover group resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='sqlManagedInstanceName'>
            /// Name of SQL Managed Instance
            /// </param>
            /// <param name='failoverGroupName'>
            /// The name of the Failover Group
            /// </param>
            /// <param name='properties'>
            /// null
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<FailoverGroupResource> BeginCreateAsync(this IFailoverGroupsOperations operations, string resourceGroupName, string sqlManagedInstanceName, string failoverGroupName, FailoverGroupProperties properties, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateWithHttpMessagesAsync(resourceGroupName, sqlManagedInstanceName, failoverGroupName, properties, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes a failover group resource
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='sqlManagedInstanceName'>
            /// Name of SQL Managed Instance
            /// </param>
            /// <param name='failoverGroupName'>
            /// The name of the Failover Group
            /// </param>
            public static void BeginDelete(this IFailoverGroupsOperations operations, string resourceGroupName, string sqlManagedInstanceName, string failoverGroupName)
            {
                operations.BeginDeleteAsync(resourceGroupName, sqlManagedInstanceName, failoverGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes a failover group resource
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='sqlManagedInstanceName'>
            /// Name of SQL Managed Instance
            /// </param>
            /// <param name='failoverGroupName'>
            /// The name of the Failover Group
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginDeleteAsync(this IFailoverGroupsOperations operations, string resourceGroupName, string sqlManagedInstanceName, string failoverGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, sqlManagedInstanceName, failoverGroupName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// List the failover groups associated with the given sql managed instance.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<FailoverGroupResource> ListNext(this IFailoverGroupsOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List the failover groups associated with the given sql managed instance.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<FailoverGroupResource>> ListNextAsync(this IFailoverGroupsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
