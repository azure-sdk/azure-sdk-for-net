// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AzureArcData
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for SqlAvailabilityGroupReplicasOperations.
    /// </summary>
    public static partial class SqlAvailabilityGroupReplicasOperationsExtensions
    {
            /// <summary>
            /// Creates or replaces an Arc Sql Availability Group Replica.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='sqlAvailabilityGroupReplicaResource'>
            /// The request body for availability group replica resource.
            /// </param>
            /// <param name='sqlServerInstanceName'>
            /// Name of SQL Server Instance
            /// </param>
            /// <param name='sqlAvailabilityGroupName'>
            /// Name of SQL Availability Group
            /// </param>
            public static SqlAvailabilityGroupReplicaResource Create(this ISqlAvailabilityGroupReplicasOperations operations, string resourceGroupName, SqlAvailabilityGroupReplicaResource sqlAvailabilityGroupReplicaResource, string sqlServerInstanceName, string sqlAvailabilityGroupName)
            {
                return operations.CreateAsync(resourceGroupName, sqlAvailabilityGroupReplicaResource, sqlServerInstanceName, sqlAvailabilityGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or replaces an Arc Sql Availability Group Replica.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='sqlAvailabilityGroupReplicaResource'>
            /// The request body for availability group replica resource.
            /// </param>
            /// <param name='sqlServerInstanceName'>
            /// Name of SQL Server Instance
            /// </param>
            /// <param name='sqlAvailabilityGroupName'>
            /// Name of SQL Availability Group
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SqlAvailabilityGroupReplicaResource> CreateAsync(this ISqlAvailabilityGroupReplicasOperations operations, string resourceGroupName, SqlAvailabilityGroupReplicaResource sqlAvailabilityGroupReplicaResource, string sqlServerInstanceName, string sqlAvailabilityGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, sqlAvailabilityGroupReplicaResource, sqlServerInstanceName, sqlAvailabilityGroupName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes an Arc Sql availability group replica resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='sqlServerInstanceName'>
            /// Name of SQL Server Instance
            /// </param>
            /// <param name='sqlAvailabilityGroupName'>
            /// Name of SQL Availability Group
            /// </param>
            public static void Delete(this ISqlAvailabilityGroupReplicasOperations operations, string resourceGroupName, string sqlServerInstanceName, string sqlAvailabilityGroupName)
            {
                operations.DeleteAsync(resourceGroupName, sqlServerInstanceName, sqlAvailabilityGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes an Arc Sql availability group replica resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='sqlServerInstanceName'>
            /// Name of SQL Server Instance
            /// </param>
            /// <param name='sqlAvailabilityGroupName'>
            /// Name of SQL Availability Group
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this ISqlAvailabilityGroupReplicasOperations operations, string resourceGroupName, string sqlServerInstanceName, string sqlAvailabilityGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, sqlServerInstanceName, sqlAvailabilityGroupName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Retrieves an Arc Sql availability group replica.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='sqlServerInstanceName'>
            /// Name of SQL Server Instance
            /// </param>
            /// <param name='sqlAvailabilityGroupName'>
            /// Name of SQL Availability Group
            /// </param>
            public static SqlAvailabilityGroupReplicaResource Get(this ISqlAvailabilityGroupReplicasOperations operations, string resourceGroupName, string sqlServerInstanceName, string sqlAvailabilityGroupName)
            {
                return operations.GetAsync(resourceGroupName, sqlServerInstanceName, sqlAvailabilityGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieves an Arc Sql availability group replica.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='sqlServerInstanceName'>
            /// Name of SQL Server Instance
            /// </param>
            /// <param name='sqlAvailabilityGroupName'>
            /// Name of SQL Availability Group
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SqlAvailabilityGroupReplicaResource> GetAsync(this ISqlAvailabilityGroupReplicasOperations operations, string resourceGroupName, string sqlServerInstanceName, string sqlAvailabilityGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, sqlServerInstanceName, sqlAvailabilityGroupName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Updates an existing Availability Group Replica.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='sqlServerInstanceName'>
            /// Name of SQL Server Instance
            /// </param>
            /// <param name='sqlAvailabilityGroupName'>
            /// Name of SQL Availability Group
            /// </param>
            /// <param name='sqlAvailabilityGroupReplicaUpdate'>
            /// The requested availability group replica resource state.
            /// </param>
            public static SqlAvailabilityGroupReplicaResource Update(this ISqlAvailabilityGroupReplicasOperations operations, string resourceGroupName, string sqlServerInstanceName, string sqlAvailabilityGroupName, SqlAvailabilityGroupReplicaUpdate sqlAvailabilityGroupReplicaUpdate)
            {
                return operations.UpdateAsync(resourceGroupName, sqlServerInstanceName, sqlAvailabilityGroupName, sqlAvailabilityGroupReplicaUpdate).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates an existing Availability Group Replica.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='sqlServerInstanceName'>
            /// Name of SQL Server Instance
            /// </param>
            /// <param name='sqlAvailabilityGroupName'>
            /// Name of SQL Availability Group
            /// </param>
            /// <param name='sqlAvailabilityGroupReplicaUpdate'>
            /// The requested availability group replica resource state.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SqlAvailabilityGroupReplicaResource> UpdateAsync(this ISqlAvailabilityGroupReplicasOperations operations, string resourceGroupName, string sqlServerInstanceName, string sqlAvailabilityGroupName, SqlAvailabilityGroupReplicaUpdate sqlAvailabilityGroupReplicaUpdate, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, sqlServerInstanceName, sqlAvailabilityGroupName, sqlAvailabilityGroupReplicaUpdate, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// List the Availability Group Replica associated with the given Arc Sql AG.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='sqlAvailabilityGroupName'>
            /// Name of SQL Availability Group
            /// </param>
            public static IPage<SqlAvailabilityGroupReplicaResource> List(this ISqlAvailabilityGroupReplicasOperations operations, string resourceGroupName, string sqlAvailabilityGroupName)
            {
                return operations.ListAsync(resourceGroupName, sqlAvailabilityGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List the Availability Group Replica associated with the given Arc Sql AG.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='sqlAvailabilityGroupName'>
            /// Name of SQL Availability Group
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<SqlAvailabilityGroupReplicaResource>> ListAsync(this ISqlAvailabilityGroupReplicasOperations operations, string resourceGroupName, string sqlAvailabilityGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, sqlAvailabilityGroupName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// List the Availability Group Replica associated with the given Arc Sql AG.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<SqlAvailabilityGroupReplicaResource> ListNext(this ISqlAvailabilityGroupReplicasOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List the Availability Group Replica associated with the given Arc Sql AG.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<SqlAvailabilityGroupReplicaResource>> ListNextAsync(this ISqlAvailabilityGroupReplicasOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
