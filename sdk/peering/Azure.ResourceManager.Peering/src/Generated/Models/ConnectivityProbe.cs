// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Peering.Models
{
    /// <summary>
    /// Represents a connectivity probe, a configuration peers can add to direct and exchange peerings to create ping tests. These ping
    /// tests will allow us to generate availability, jitter, and latency data for traffic (using ICMP or TCP) from Azure to an endpoint
    /// IP address given by the customer. This data will be emitted such that the peer can view these metrics in the Azure portal in the
    /// Connectivity probe blade of their peering.
    /// </summary>
    public partial class ConnectivityProbe
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ConnectivityProbe"/>. </summary>
        public ConnectivityProbe()
        {
            PrefixesToAccesslist = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="ConnectivityProbe"/>. </summary>
        /// <param name="endpoint"> The endpoint IP address where traffic will be sent to from Azure. </param>
        /// <param name="azureRegion"> The Azure region where traffic will originate from. </param>
        /// <param name="protocol"> The protocol of the traffic that will be sent. </param>
        /// <param name="prefixesToAccesslist">
        /// Set to contain the prefixes that agents in Azure will send traffic from. For peers to allow into their
        /// network the connectivity probe traffic can reach their endpoint.
        /// </param>
        /// <param name="createdTimeUtc"> Time when {Microsoft.Peering.PeeringContract.Public.Data.ConnectivityProbe} was created in UTC. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ConnectivityProbe(string endpoint, string azureRegion, Protocol? protocol, IReadOnlyList<string> prefixesToAccesslist, DateTimeOffset? createdTimeUtc, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Endpoint = endpoint;
            AzureRegion = azureRegion;
            Protocol = protocol;
            PrefixesToAccesslist = prefixesToAccesslist;
            CreatedTimeUtc = createdTimeUtc;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The endpoint IP address where traffic will be sent to from Azure. </summary>
        public string Endpoint { get; }
        /// <summary> The Azure region where traffic will originate from. </summary>
        public string AzureRegion { get; }
        /// <summary> The protocol of the traffic that will be sent. </summary>
        public Protocol? Protocol { get; }
        /// <summary>
        /// Set to contain the prefixes that agents in Azure will send traffic from. For peers to allow into their
        /// network the connectivity probe traffic can reach their endpoint.
        /// </summary>
        public IReadOnlyList<string> PrefixesToAccesslist { get; }
        /// <summary> Time when {Microsoft.Peering.PeeringContract.Public.Data.ConnectivityProbe} was created in UTC. </summary>
        public DateTimeOffset? CreatedTimeUtc { get; set; }
    }
}
