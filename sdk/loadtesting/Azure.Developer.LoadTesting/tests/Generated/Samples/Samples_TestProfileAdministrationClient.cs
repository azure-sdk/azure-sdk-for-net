// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Developer.LoadTesting.Models;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.Developer.LoadTesting.Samples
{
    public partial class Samples_TestProfileAdministrationClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_TestProfile_CreateOrUpdateTestProfile_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TestProfileAdministrationClient client = new TestProfileAdministrationClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new object());
            Response response = client.CreateOrUpdateTestProfile("<testProfileId>", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("testProfileId").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_TestProfile_CreateOrUpdateTestProfile_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TestProfileAdministrationClient client = new TestProfileAdministrationClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new object());
            Response response = await client.CreateOrUpdateTestProfileAsync("<testProfileId>", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("testProfileId").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_TestProfile_CreateOrUpdateTestProfile_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TestProfileAdministrationClient client = new TestProfileAdministrationClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                displayName = "<displayName>",
                description = "<description>",
                testId = "<testId>",
                targetResourceId = "<targetResourceId>",
                targetResourceConfigurations = new
                {
                    kind = "FunctionsFlexConsumption",
                    configurations = new
                    {
                        key = new
                        {
                            instanceMemoryMB = 1234L,
                            httpConcurrency = 1234L,
                        },
                    },
                },
            });
            Response response = client.CreateOrUpdateTestProfile("<testProfileId>", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("testProfileId").ToString());
            Console.WriteLine(result.GetProperty("displayName").ToString());
            Console.WriteLine(result.GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("testId").ToString());
            Console.WriteLine(result.GetProperty("targetResourceId").ToString());
            Console.WriteLine(result.GetProperty("targetResourceConfigurations").GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("createdDateTime").ToString());
            Console.WriteLine(result.GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedDateTime").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_TestProfile_CreateOrUpdateTestProfile_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TestProfileAdministrationClient client = new TestProfileAdministrationClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                displayName = "<displayName>",
                description = "<description>",
                testId = "<testId>",
                targetResourceId = "<targetResourceId>",
                targetResourceConfigurations = new
                {
                    kind = "FunctionsFlexConsumption",
                    configurations = new
                    {
                        key = new
                        {
                            instanceMemoryMB = 1234L,
                            httpConcurrency = 1234L,
                        },
                    },
                },
            });
            Response response = await client.CreateOrUpdateTestProfileAsync("<testProfileId>", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("testProfileId").ToString());
            Console.WriteLine(result.GetProperty("displayName").ToString());
            Console.WriteLine(result.GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("testId").ToString());
            Console.WriteLine(result.GetProperty("targetResourceId").ToString());
            Console.WriteLine(result.GetProperty("targetResourceConfigurations").GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("createdDateTime").ToString());
            Console.WriteLine(result.GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedDateTime").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_TestProfile_DeleteTestProfile_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TestProfileAdministrationClient client = new TestProfileAdministrationClient(endpoint, credential);

            Response response = client.DeleteTestProfile("<testProfileId>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_TestProfile_DeleteTestProfile_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TestProfileAdministrationClient client = new TestProfileAdministrationClient(endpoint, credential);

            Response response = await client.DeleteTestProfileAsync("<testProfileId>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_TestProfile_DeleteTestProfile_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TestProfileAdministrationClient client = new TestProfileAdministrationClient(endpoint, credential);

            Response response = client.DeleteTestProfile("<testProfileId>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_TestProfile_DeleteTestProfile_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TestProfileAdministrationClient client = new TestProfileAdministrationClient(endpoint, credential);

            Response response = await client.DeleteTestProfileAsync("<testProfileId>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_TestProfile_GetTestProfile_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TestProfileAdministrationClient client = new TestProfileAdministrationClient(endpoint, credential);

            Response response = client.GetTestProfile("<testProfileId>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("testProfileId").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_TestProfile_GetTestProfile_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TestProfileAdministrationClient client = new TestProfileAdministrationClient(endpoint, credential);

            Response response = await client.GetTestProfileAsync("<testProfileId>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("testProfileId").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_TestProfile_GetTestProfile_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TestProfileAdministrationClient client = new TestProfileAdministrationClient(endpoint, credential);

            Response<TestProfile> response = client.GetTestProfile("<testProfileId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_TestProfile_GetTestProfile_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TestProfileAdministrationClient client = new TestProfileAdministrationClient(endpoint, credential);

            Response<TestProfile> response = await client.GetTestProfileAsync("<testProfileId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_TestProfile_GetTestProfile_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TestProfileAdministrationClient client = new TestProfileAdministrationClient(endpoint, credential);

            Response response = client.GetTestProfile("<testProfileId>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("testProfileId").ToString());
            Console.WriteLine(result.GetProperty("displayName").ToString());
            Console.WriteLine(result.GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("testId").ToString());
            Console.WriteLine(result.GetProperty("targetResourceId").ToString());
            Console.WriteLine(result.GetProperty("targetResourceConfigurations").GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("createdDateTime").ToString());
            Console.WriteLine(result.GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedDateTime").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_TestProfile_GetTestProfile_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TestProfileAdministrationClient client = new TestProfileAdministrationClient(endpoint, credential);

            Response response = await client.GetTestProfileAsync("<testProfileId>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("testProfileId").ToString());
            Console.WriteLine(result.GetProperty("displayName").ToString());
            Console.WriteLine(result.GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("testId").ToString());
            Console.WriteLine(result.GetProperty("targetResourceId").ToString());
            Console.WriteLine(result.GetProperty("targetResourceConfigurations").GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("createdDateTime").ToString());
            Console.WriteLine(result.GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedDateTime").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_TestProfile_GetTestProfile_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TestProfileAdministrationClient client = new TestProfileAdministrationClient(endpoint, credential);

            Response<TestProfile> response = client.GetTestProfile("<testProfileId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_TestProfile_GetTestProfile_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TestProfileAdministrationClient client = new TestProfileAdministrationClient(endpoint, credential);

            Response<TestProfile> response = await client.GetTestProfileAsync("<testProfileId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_TestProfile_GetTestProfiles_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TestProfileAdministrationClient client = new TestProfileAdministrationClient(endpoint, credential);

            foreach (BinaryData item in client.GetTestProfiles(null, null, null, null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("testProfileId").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_TestProfile_GetTestProfiles_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TestProfileAdministrationClient client = new TestProfileAdministrationClient(endpoint, credential);

            await foreach (BinaryData item in client.GetTestProfilesAsync(null, null, null, null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("testProfileId").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_TestProfile_GetTestProfiles_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TestProfileAdministrationClient client = new TestProfileAdministrationClient(endpoint, credential);

            foreach (TestProfile item in client.GetTestProfiles())
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_TestProfile_GetTestProfiles_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TestProfileAdministrationClient client = new TestProfileAdministrationClient(endpoint, credential);

            await foreach (TestProfile item in client.GetTestProfilesAsync())
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_TestProfile_GetTestProfiles_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TestProfileAdministrationClient client = new TestProfileAdministrationClient(endpoint, credential);

            foreach (BinaryData item in client.GetTestProfiles(1234, DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), "<testProfileIds>", "<testIds>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("testProfileId").ToString());
                Console.WriteLine(result.GetProperty("displayName").ToString());
                Console.WriteLine(result.GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("testId").ToString());
                Console.WriteLine(result.GetProperty("targetResourceId").ToString());
                Console.WriteLine(result.GetProperty("targetResourceConfigurations").GetProperty("kind").ToString());
                Console.WriteLine(result.GetProperty("createdDateTime").ToString());
                Console.WriteLine(result.GetProperty("createdBy").ToString());
                Console.WriteLine(result.GetProperty("lastModifiedDateTime").ToString());
                Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_TestProfile_GetTestProfiles_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TestProfileAdministrationClient client = new TestProfileAdministrationClient(endpoint, credential);

            await foreach (BinaryData item in client.GetTestProfilesAsync(1234, DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), "<testProfileIds>", "<testIds>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("testProfileId").ToString());
                Console.WriteLine(result.GetProperty("displayName").ToString());
                Console.WriteLine(result.GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("testId").ToString());
                Console.WriteLine(result.GetProperty("targetResourceId").ToString());
                Console.WriteLine(result.GetProperty("targetResourceConfigurations").GetProperty("kind").ToString());
                Console.WriteLine(result.GetProperty("createdDateTime").ToString());
                Console.WriteLine(result.GetProperty("createdBy").ToString());
                Console.WriteLine(result.GetProperty("lastModifiedDateTime").ToString());
                Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_TestProfile_GetTestProfiles_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TestProfileAdministrationClient client = new TestProfileAdministrationClient(endpoint, credential);

            foreach (TestProfile item in client.GetTestProfiles(maxpagesize: 1234, lastModifiedStartTime: DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), lastModifiedEndTime: DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), testProfileIds: "<testProfileIds>", testIds: "<testIds>"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_TestProfile_GetTestProfiles_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TestProfileAdministrationClient client = new TestProfileAdministrationClient(endpoint, credential);

            await foreach (TestProfile item in client.GetTestProfilesAsync(maxpagesize: 1234, lastModifiedStartTime: DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), lastModifiedEndTime: DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), testProfileIds: "<testProfileIds>", testIds: "<testIds>"))
            {
            }
        }
    }
}
