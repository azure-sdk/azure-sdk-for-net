// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Globalization;
using System.Threading;
using System.Threading.Tasks;
using Autorest.CSharp.Core;
using Azure.Core;
using Azure.Core.Pipeline;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.Migrate
{
    /// <summary>
    /// A class representing a collection of <see cref="MachineGraphAssessmentOptionResource"/> and their operations.
    /// Each <see cref="MachineGraphAssessmentOptionResource"/> in the collection will belong to the same instance of <see cref="ResourceGroupResource"/>.
    /// To get a <see cref="MachineGraphAssessmentOptionCollection"/> instance call the GetMachineGraphAssessmentOptions method from an instance of <see cref="ResourceGroupResource"/>.
    /// </summary>
    public partial class MachineGraphAssessmentOptionCollection : ArmCollection, IEnumerable<MachineGraphAssessmentOptionResource>, IAsyncEnumerable<MachineGraphAssessmentOptionResource>
    {
        private readonly ClientDiagnostics _machineGraphAssessmentOptionMachineGraphAssessmentOptionsOperationsClientDiagnostics;
        private readonly MachineGraphAssessmentOptionsRestOperations _machineGraphAssessmentOptionMachineGraphAssessmentOptionsOperationsRestClient;
        private readonly string _projectName;

        /// <summary> Initializes a new instance of the <see cref="MachineGraphAssessmentOptionCollection"/> class for mocking. </summary>
        protected MachineGraphAssessmentOptionCollection()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="MachineGraphAssessmentOptionCollection"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        /// <param name="projectName"> Assessment Project Name. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="projectName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="projectName"/> is an empty string, and was expected to be non-empty. </exception>
        internal MachineGraphAssessmentOptionCollection(ArmClient client, ResourceIdentifier id, string projectName) : base(client, id)
        {
            _projectName = projectName;
            _machineGraphAssessmentOptionMachineGraphAssessmentOptionsOperationsClientDiagnostics = new ClientDiagnostics("Azure.ResourceManager.Migrate", MachineGraphAssessmentOptionResource.ResourceType.Namespace, Diagnostics);
            TryGetApiVersion(MachineGraphAssessmentOptionResource.ResourceType, out string machineGraphAssessmentOptionMachineGraphAssessmentOptionsOperationsApiVersion);
            _machineGraphAssessmentOptionMachineGraphAssessmentOptionsOperationsRestClient = new MachineGraphAssessmentOptionsRestOperations(Pipeline, Diagnostics.ApplicationId, Endpoint, machineGraphAssessmentOptionMachineGraphAssessmentOptionsOperationsApiVersion);
#if DEBUG
			ValidateResourceId(Id);
#endif
        }

        internal static void ValidateResourceId(ResourceIdentifier id)
        {
            if (id.ResourceType != ResourceGroupResource.ResourceType)
                throw new ArgumentException(string.Format(CultureInfo.CurrentCulture, "Invalid resource type {0} expected {1}", id.ResourceType, ResourceGroupResource.ResourceType), nameof(id));
        }

        /// <summary>
        /// Get a MachineGraphAssessmentOptions
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/assessmentOptions/default</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>MachineGraphAssessmentOptions_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-03-03-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="MachineGraphAssessmentOptionResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response<MachineGraphAssessmentOptionResource>> GetAsync(CancellationToken cancellationToken = default)
        {
            using var scope = _machineGraphAssessmentOptionMachineGraphAssessmentOptionsOperationsClientDiagnostics.CreateScope("MachineGraphAssessmentOptionCollection.Get");
            scope.Start();
            try
            {
                var response = await _machineGraphAssessmentOptionMachineGraphAssessmentOptionsOperationsRestClient.GetAsync(Id.SubscriptionId, Id.ResourceGroupName, _projectName, cancellationToken).ConfigureAwait(false);
                if (response.Value == null)
                    throw new RequestFailedException(response.GetRawResponse());
                return Response.FromValue(new MachineGraphAssessmentOptionResource(Client, response.Value), response.GetRawResponse());
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// Get a MachineGraphAssessmentOptions
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/assessmentOptions/default</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>MachineGraphAssessmentOptions_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-03-03-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="MachineGraphAssessmentOptionResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response<MachineGraphAssessmentOptionResource> Get(CancellationToken cancellationToken = default)
        {
            using var scope = _machineGraphAssessmentOptionMachineGraphAssessmentOptionsOperationsClientDiagnostics.CreateScope("MachineGraphAssessmentOptionCollection.Get");
            scope.Start();
            try
            {
                var response = _machineGraphAssessmentOptionMachineGraphAssessmentOptionsOperationsRestClient.Get(Id.SubscriptionId, Id.ResourceGroupName, _projectName, cancellationToken);
                if (response.Value == null)
                    throw new RequestFailedException(response.GetRawResponse());
                return Response.FromValue(new MachineGraphAssessmentOptionResource(Client, response.Value), response.GetRawResponse());
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// List MachineGraphAssessmentOptions resources by AssessmentProject
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/assessmentOptions</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>MachineGraphAssessmentOptions_ListByParent</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-03-03-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="MachineGraphAssessmentOptionResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="MachineGraphAssessmentOptionResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual AsyncPageable<MachineGraphAssessmentOptionResource> GetAllAsync(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => _machineGraphAssessmentOptionMachineGraphAssessmentOptionsOperationsRestClient.CreateListByParentRequest(Id.SubscriptionId, Id.ResourceGroupName, _projectName);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => _machineGraphAssessmentOptionMachineGraphAssessmentOptionsOperationsRestClient.CreateListByParentNextPageRequest(nextLink, Id.SubscriptionId, Id.ResourceGroupName, _projectName);
            return GeneratorPageableHelpers.CreateAsyncPageable(FirstPageRequest, NextPageRequest, e => new MachineGraphAssessmentOptionResource(Client, MachineGraphAssessmentOptionData.DeserializeMachineGraphAssessmentOptionData(e)), _machineGraphAssessmentOptionMachineGraphAssessmentOptionsOperationsClientDiagnostics, Pipeline, "MachineGraphAssessmentOptionCollection.GetAll", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// List MachineGraphAssessmentOptions resources by AssessmentProject
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/assessmentOptions</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>MachineGraphAssessmentOptions_ListByParent</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-03-03-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="MachineGraphAssessmentOptionResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="MachineGraphAssessmentOptionResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual Pageable<MachineGraphAssessmentOptionResource> GetAll(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => _machineGraphAssessmentOptionMachineGraphAssessmentOptionsOperationsRestClient.CreateListByParentRequest(Id.SubscriptionId, Id.ResourceGroupName, _projectName);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => _machineGraphAssessmentOptionMachineGraphAssessmentOptionsOperationsRestClient.CreateListByParentNextPageRequest(nextLink, Id.SubscriptionId, Id.ResourceGroupName, _projectName);
            return GeneratorPageableHelpers.CreatePageable(FirstPageRequest, NextPageRequest, e => new MachineGraphAssessmentOptionResource(Client, MachineGraphAssessmentOptionData.DeserializeMachineGraphAssessmentOptionData(e)), _machineGraphAssessmentOptionMachineGraphAssessmentOptionsOperationsClientDiagnostics, Pipeline, "MachineGraphAssessmentOptionCollection.GetAll", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// Checks to see if the resource exists in azure.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/assessmentOptions/default</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>MachineGraphAssessmentOptions_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-03-03-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="MachineGraphAssessmentOptionResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response<bool>> ExistsAsync(CancellationToken cancellationToken = default)
        {
            using var scope = _machineGraphAssessmentOptionMachineGraphAssessmentOptionsOperationsClientDiagnostics.CreateScope("MachineGraphAssessmentOptionCollection.Exists");
            scope.Start();
            try
            {
                var response = await _machineGraphAssessmentOptionMachineGraphAssessmentOptionsOperationsRestClient.GetAsync(Id.SubscriptionId, Id.ResourceGroupName, _projectName, cancellationToken: cancellationToken).ConfigureAwait(false);
                return Response.FromValue(response.Value != null, response.GetRawResponse());
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// Checks to see if the resource exists in azure.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/assessmentOptions/default</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>MachineGraphAssessmentOptions_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-03-03-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="MachineGraphAssessmentOptionResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response<bool> Exists(CancellationToken cancellationToken = default)
        {
            using var scope = _machineGraphAssessmentOptionMachineGraphAssessmentOptionsOperationsClientDiagnostics.CreateScope("MachineGraphAssessmentOptionCollection.Exists");
            scope.Start();
            try
            {
                var response = _machineGraphAssessmentOptionMachineGraphAssessmentOptionsOperationsRestClient.Get(Id.SubscriptionId, Id.ResourceGroupName, _projectName, cancellationToken: cancellationToken);
                return Response.FromValue(response.Value != null, response.GetRawResponse());
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// Tries to get details for this resource from the service.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/assessmentOptions/default</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>MachineGraphAssessmentOptions_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-03-03-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="MachineGraphAssessmentOptionResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<NullableResponse<MachineGraphAssessmentOptionResource>> GetIfExistsAsync(CancellationToken cancellationToken = default)
        {
            using var scope = _machineGraphAssessmentOptionMachineGraphAssessmentOptionsOperationsClientDiagnostics.CreateScope("MachineGraphAssessmentOptionCollection.GetIfExists");
            scope.Start();
            try
            {
                var response = await _machineGraphAssessmentOptionMachineGraphAssessmentOptionsOperationsRestClient.GetAsync(Id.SubscriptionId, Id.ResourceGroupName, _projectName, cancellationToken: cancellationToken).ConfigureAwait(false);
                if (response.Value == null)
                    return new NoValueResponse<MachineGraphAssessmentOptionResource>(response.GetRawResponse());
                return Response.FromValue(new MachineGraphAssessmentOptionResource(Client, response.Value), response.GetRawResponse());
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// Tries to get details for this resource from the service.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/assessmentOptions/default</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>MachineGraphAssessmentOptions_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-03-03-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="MachineGraphAssessmentOptionResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual NullableResponse<MachineGraphAssessmentOptionResource> GetIfExists(CancellationToken cancellationToken = default)
        {
            using var scope = _machineGraphAssessmentOptionMachineGraphAssessmentOptionsOperationsClientDiagnostics.CreateScope("MachineGraphAssessmentOptionCollection.GetIfExists");
            scope.Start();
            try
            {
                var response = _machineGraphAssessmentOptionMachineGraphAssessmentOptionsOperationsRestClient.Get(Id.SubscriptionId, Id.ResourceGroupName, _projectName, cancellationToken: cancellationToken);
                if (response.Value == null)
                    return new NoValueResponse<MachineGraphAssessmentOptionResource>(response.GetRawResponse());
                return Response.FromValue(new MachineGraphAssessmentOptionResource(Client, response.Value), response.GetRawResponse());
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        IEnumerator<MachineGraphAssessmentOptionResource> IEnumerable<MachineGraphAssessmentOptionResource>.GetEnumerator()
        {
            return GetAll().GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetAll().GetEnumerator();
        }

        IAsyncEnumerator<MachineGraphAssessmentOptionResource> IAsyncEnumerable<MachineGraphAssessmentOptionResource>.GetAsyncEnumerator(CancellationToken cancellationToken)
        {
            return GetAllAsync(cancellationToken: cancellationToken).GetAsyncEnumerator(cancellationToken);
        }
    }
}
