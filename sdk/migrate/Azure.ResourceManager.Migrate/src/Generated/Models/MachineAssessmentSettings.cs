// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Migrate.Models
{
    /// <summary> Properties of an assessment. </summary>
    public partial class MachineAssessmentSettings
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="MachineAssessmentSettings"/>. </summary>
        public MachineAssessmentSettings()
        {
            AzureDiskTypes = new ChangeTrackingList<AzureDiskType>();
            AzureVmFamilies = new ChangeTrackingList<AzureVmFamily>();
            AzureVmSecurityOptions = new ChangeTrackingList<AzureVmSecurityType>();
        }

        /// <summary> Initializes a new instance of <see cref="MachineAssessmentSettings"/>. </summary>
        /// <param name="azureLocation"> Azure Location or Azure region where to which the machines will be migrated. </param>
        /// <param name="currency"> Currency in which prices should be reported. </param>
        /// <param name="scalingFactor">
        /// Percentage of buffer that user wants on performance metrics when recommending
        /// Azure sizes.
        /// </param>
        /// <param name="discountPercentage"> Custom discount percentage. </param>
        /// <param name="sizingCriterion"> Assessment sizing criterion. </param>
        /// <param name="performanceData"> Gets or sets the performance data. </param>
        /// <param name="savingsSettings"> Gets or sets the savings settings. </param>
        /// <param name="billingSettings"> Gets or sets the billing settings. </param>
        /// <param name="environmentType"> Gets or sets user configurable setting to display the environment type. </param>
        /// <param name="azureSecurityOfferingType"> The azure security offering type. </param>
        /// <param name="azureDiskTypes"> The disk type for the assessment. </param>
        /// <param name="azurePricingTier"> Gets or sets Azure Pricing Tier - Free, Basic, etc. </param>
        /// <param name="azureStorageRedundancy"> Gets or sets the Azure Storage Redundancy. Example: Locally Redundant Storage. </param>
        /// <param name="azureHybridUseBenefit">
        /// Gets or sets the user configurable setting to display the azure hybrid use
        /// benefit.
        /// </param>
        /// <param name="linuxAzureHybridUseBenefit">
        /// Gets or sets the user configurable setting to display the linux azure hybrid use
        /// benefit.
        /// </param>
        /// <param name="azureVmFamilies"> Gets or sets the Azure VM families. </param>
        /// <param name="vmUptime">
        /// Gets or sets the duration for which the VMs are up in the on-premises
        /// environment.
        /// </param>
        /// <param name="azureVmSecurityOptions"> Gets or sets the Azure VM security options. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal MachineAssessmentSettings(string azureLocation, AzureCurrency? currency, float? scalingFactor, float? discountPercentage, AssessmentSizingCriterion? sizingCriterion, PerformanceData performanceData, SavingsSettings savingsSettings, BillingSettings billingSettings, EnvironmentType? environmentType, AzureSecurityOfferingType? azureSecurityOfferingType, IList<AzureDiskType> azureDiskTypes, AzurePricingTier? azurePricingTier, AzureStorageRedundancy? azureStorageRedundancy, AzureHybridUseBenefit? azureHybridUseBenefit, AzureHybridUseBenefit? linuxAzureHybridUseBenefit, IList<AzureVmFamily> azureVmFamilies, VmUptime vmUptime, IList<AzureVmSecurityType> azureVmSecurityOptions, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            AzureLocation = azureLocation;
            Currency = currency;
            ScalingFactor = scalingFactor;
            DiscountPercentage = discountPercentage;
            SizingCriterion = sizingCriterion;
            PerformanceData = performanceData;
            SavingsSettings = savingsSettings;
            BillingSettings = billingSettings;
            EnvironmentType = environmentType;
            AzureSecurityOfferingType = azureSecurityOfferingType;
            AzureDiskTypes = azureDiskTypes;
            AzurePricingTier = azurePricingTier;
            AzureStorageRedundancy = azureStorageRedundancy;
            AzureHybridUseBenefit = azureHybridUseBenefit;
            LinuxAzureHybridUseBenefit = linuxAzureHybridUseBenefit;
            AzureVmFamilies = azureVmFamilies;
            VmUptime = vmUptime;
            AzureVmSecurityOptions = azureVmSecurityOptions;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Azure Location or Azure region where to which the machines will be migrated. </summary>
        public string AzureLocation { get; set; }
        /// <summary> Currency in which prices should be reported. </summary>
        public AzureCurrency? Currency { get; set; }
        /// <summary>
        /// Percentage of buffer that user wants on performance metrics when recommending
        /// Azure sizes.
        /// </summary>
        public float? ScalingFactor { get; set; }
        /// <summary> Custom discount percentage. </summary>
        public float? DiscountPercentage { get; set; }
        /// <summary> Assessment sizing criterion. </summary>
        public AssessmentSizingCriterion? SizingCriterion { get; set; }
        /// <summary> Gets or sets the performance data. </summary>
        public PerformanceData PerformanceData { get; set; }
        /// <summary> Gets or sets the savings settings. </summary>
        public SavingsSettings SavingsSettings { get; set; }
        /// <summary> Gets or sets the billing settings. </summary>
        public BillingSettings BillingSettings { get; set; }
        /// <summary> Gets or sets user configurable setting to display the environment type. </summary>
        public EnvironmentType? EnvironmentType { get; set; }
        /// <summary> The azure security offering type. </summary>
        public AzureSecurityOfferingType? AzureSecurityOfferingType { get; set; }
        /// <summary> The disk type for the assessment. </summary>
        public IList<AzureDiskType> AzureDiskTypes { get; }
        /// <summary> Gets or sets Azure Pricing Tier - Free, Basic, etc. </summary>
        public AzurePricingTier? AzurePricingTier { get; set; }
        /// <summary> Gets or sets the Azure Storage Redundancy. Example: Locally Redundant Storage. </summary>
        public AzureStorageRedundancy? AzureStorageRedundancy { get; set; }
        /// <summary>
        /// Gets or sets the user configurable setting to display the azure hybrid use
        /// benefit.
        /// </summary>
        public AzureHybridUseBenefit? AzureHybridUseBenefit { get; set; }
        /// <summary>
        /// Gets or sets the user configurable setting to display the linux azure hybrid use
        /// benefit.
        /// </summary>
        public AzureHybridUseBenefit? LinuxAzureHybridUseBenefit { get; set; }
        /// <summary> Gets or sets the Azure VM families. </summary>
        public IList<AzureVmFamily> AzureVmFamilies { get; }
        /// <summary>
        /// Gets or sets the duration for which the VMs are up in the on-premises
        /// environment.
        /// </summary>
        public VmUptime VmUptime { get; set; }
        /// <summary> Gets or sets the Azure VM security options. </summary>
        public IList<AzureVmSecurityType> AzureVmSecurityOptions { get; }
    }
}
