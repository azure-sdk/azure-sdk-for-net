// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Migrate.Models
{
    /// <summary> Class for machine properties. </summary>
    public partial class VMwareMachineProperties
    {
        /// <summary> Initializes a new instance of VMwareMachineProperties. </summary>
        internal VMwareMachineProperties()
        {
            Disks = new ChangeTrackingList<VMwareDisk>();
            NetworkAdapters = new ChangeTrackingList<VMwareNetworkAdapter>();
            Errors = new ChangeTrackingList<HealthErrorDetails>();
        }

        /// <summary> Initializes a new instance of VMwareMachineProperties. </summary>
        /// <param name="dataCenterScope"> Scope of the data center. </param>
        /// <param name="firmware"> Firmware of the machine. </param>
        /// <param name="description"> User description of the machine. </param>
        /// <param name="vCenterFqdn"> VCenter FQDN/IPAddress. </param>
        /// <param name="vCenterId"> VCenter ARM ID. </param>
        /// <param name="vMwareToolsStatus"> VMware tools status. </param>
        /// <param name="changeTrackingSupported"> Value indicating whether change tracking is supported. </param>
        /// <param name="changeTrackingEnabled"> Value indicating whether change tracking is enabled. </param>
        /// <param name="maxSnapshots"> Maximum number of snapshots for the VM. Default value is -1. </param>
        /// <param name="disks"> Disks attached to the machine. </param>
        /// <param name="appsAndRoles"> Apps And Roles of the VM. </param>
        /// <param name="hostInMaintenanceMode"> Indicates whether the host is in maintenance mode. </param>
        /// <param name="hostName"> The host name. </param>
        /// <param name="hostPowerState"> The host power state. </param>
        /// <param name="hostVersion"> The host version. </param>
        /// <param name="networkAdapters"> Network adapters attached to the machine. </param>
        /// <param name="dependencyMapping"> If dependency mapping feature is enabled or not for the VM. </param>
        /// <param name="dependencyMappingStartOn"> When dependency mapping collection is last started. </param>
        /// <param name="displayName"> Display name of the machine. </param>
        /// <param name="numberOfProcessorCore"> Number of Processor Cores allocated for the machine. </param>
        /// <param name="allocatedMemoryInMB"> Allocated Memory in MB. </param>
        /// <param name="vmConfigurationFileLocation"> Root location of the VM configuration file. </param>
        /// <param name="operatingSystemDetails"> Operating System Details installed on the machine. </param>
        /// <param name="guestOSDetails"> Operating System Details extracted from the guest bu executing script inside the guest VM. </param>
        /// <param name="numberOfApplications"> Number of applications installed in the guest VM. </param>
        /// <param name="guestDetailsDiscoveryTimestamp"> The last time at which the Guest Details was discovered or the error while discovering guest details based discovery of the machine. </param>
        /// <param name="isGuestDetailsDiscoveryInProgress"> Whether Refresh Fabric Layout Guest Details has been completed once. Portal will show discovery in progress, if this value is true. </param>
        /// <param name="createdTimestamp"> Timestamp marking machine creation. </param>
        /// <param name="updatedTimestamp"> Timestamp marking last updated on the machine. </param>
        /// <param name="instanceUuid"> On-premise Instance UUID of the machine. </param>
        /// <param name="powerStatus"> Machine power status. </param>
        /// <param name="biosSerialNumber"> Machine BIOS serial number. </param>
        /// <param name="biosGuid"> BIOS GUID. </param>
        /// <param name="vmFqdn"> Machine FQDN. </param>
        /// <param name="isDeleted"> Value indicating whether VM is deleted. </param>
        /// <param name="errors"> Errors for machine. </param>
        internal VMwareMachineProperties(string dataCenterScope, string firmware, string description, string vCenterFqdn, string vCenterId, string vMwareToolsStatus, bool? changeTrackingSupported, bool? changeTrackingEnabled, int? maxSnapshots, IReadOnlyList<VMwareDisk> disks, AppsAndRoles appsAndRoles, bool? hostInMaintenanceMode, string hostName, string hostPowerState, string hostVersion, IReadOnlyList<VMwareNetworkAdapter> networkAdapters, string dependencyMapping, DateTimeOffset? dependencyMappingStartOn, string displayName, int? numberOfProcessorCore, double? allocatedMemoryInMB, string vmConfigurationFileLocation, OperatingSystem operatingSystemDetails, GuestOSDetails guestOSDetails, int? numberOfApplications, DateTimeOffset? guestDetailsDiscoveryTimestamp, bool? isGuestDetailsDiscoveryInProgress, string createdTimestamp, string updatedTimestamp, string instanceUuid, string powerStatus, string biosSerialNumber, string biosGuid, string vmFqdn, bool? isDeleted, IReadOnlyList<HealthErrorDetails> errors)
        {
            DataCenterScope = dataCenterScope;
            Firmware = firmware;
            Description = description;
            VCenterFqdn = vCenterFqdn;
            VCenterId = vCenterId;
            VMwareToolsStatus = vMwareToolsStatus;
            ChangeTrackingSupported = changeTrackingSupported;
            ChangeTrackingEnabled = changeTrackingEnabled;
            MaxSnapshots = maxSnapshots;
            Disks = disks;
            AppsAndRoles = appsAndRoles;
            HostInMaintenanceMode = hostInMaintenanceMode;
            HostName = hostName;
            HostPowerState = hostPowerState;
            HostVersion = hostVersion;
            NetworkAdapters = networkAdapters;
            DependencyMapping = dependencyMapping;
            DependencyMappingStartOn = dependencyMappingStartOn;
            DisplayName = displayName;
            NumberOfProcessorCore = numberOfProcessorCore;
            AllocatedMemoryInMB = allocatedMemoryInMB;
            VmConfigurationFileLocation = vmConfigurationFileLocation;
            OperatingSystemDetails = operatingSystemDetails;
            GuestOSDetails = guestOSDetails;
            NumberOfApplications = numberOfApplications;
            GuestDetailsDiscoveryTimestamp = guestDetailsDiscoveryTimestamp;
            IsGuestDetailsDiscoveryInProgress = isGuestDetailsDiscoveryInProgress;
            CreatedTimestamp = createdTimestamp;
            UpdatedTimestamp = updatedTimestamp;
            InstanceUuid = instanceUuid;
            PowerStatus = powerStatus;
            BiosSerialNumber = biosSerialNumber;
            BiosGuid = biosGuid;
            VmFqdn = vmFqdn;
            IsDeleted = isDeleted;
            Errors = errors;
        }

        /// <summary> Scope of the data center. </summary>
        public string DataCenterScope { get; }
        /// <summary> Firmware of the machine. </summary>
        public string Firmware { get; }
        /// <summary> User description of the machine. </summary>
        public string Description { get; }
        /// <summary> VCenter FQDN/IPAddress. </summary>
        public string VCenterFqdn { get; }
        /// <summary> VCenter ARM ID. </summary>
        public string VCenterId { get; }
        /// <summary> VMware tools status. </summary>
        public string VMwareToolsStatus { get; }
        /// <summary> Value indicating whether change tracking is supported. </summary>
        public bool? ChangeTrackingSupported { get; }
        /// <summary> Value indicating whether change tracking is enabled. </summary>
        public bool? ChangeTrackingEnabled { get; }
        /// <summary> Maximum number of snapshots for the VM. Default value is -1. </summary>
        public int? MaxSnapshots { get; }
        /// <summary> Disks attached to the machine. </summary>
        public IReadOnlyList<VMwareDisk> Disks { get; }
        /// <summary> Apps And Roles of the VM. </summary>
        public AppsAndRoles AppsAndRoles { get; }
        /// <summary> Indicates whether the host is in maintenance mode. </summary>
        public bool? HostInMaintenanceMode { get; }
        /// <summary> The host name. </summary>
        public string HostName { get; }
        /// <summary> The host power state. </summary>
        public string HostPowerState { get; }
        /// <summary> The host version. </summary>
        public string HostVersion { get; }
        /// <summary> Network adapters attached to the machine. </summary>
        public IReadOnlyList<VMwareNetworkAdapter> NetworkAdapters { get; }
        /// <summary> If dependency mapping feature is enabled or not for the VM. </summary>
        public string DependencyMapping { get; }
        /// <summary> When dependency mapping collection is last started. </summary>
        public DateTimeOffset? DependencyMappingStartOn { get; }
        /// <summary> Display name of the machine. </summary>
        public string DisplayName { get; }
        /// <summary> Number of Processor Cores allocated for the machine. </summary>
        public int? NumberOfProcessorCore { get; }
        /// <summary> Allocated Memory in MB. </summary>
        public double? AllocatedMemoryInMB { get; }
        /// <summary> Root location of the VM configuration file. </summary>
        public string VmConfigurationFileLocation { get; }
        /// <summary> Operating System Details installed on the machine. </summary>
        public OperatingSystem OperatingSystemDetails { get; }
        /// <summary> Operating System Details extracted from the guest bu executing script inside the guest VM. </summary>
        public GuestOSDetails GuestOSDetails { get; }
        /// <summary> Number of applications installed in the guest VM. </summary>
        public int? NumberOfApplications { get; }
        /// <summary> The last time at which the Guest Details was discovered or the error while discovering guest details based discovery of the machine. </summary>
        public DateTimeOffset? GuestDetailsDiscoveryTimestamp { get; }
        /// <summary> Whether Refresh Fabric Layout Guest Details has been completed once. Portal will show discovery in progress, if this value is true. </summary>
        public bool? IsGuestDetailsDiscoveryInProgress { get; }
        /// <summary> Timestamp marking machine creation. </summary>
        public string CreatedTimestamp { get; }
        /// <summary> Timestamp marking last updated on the machine. </summary>
        public string UpdatedTimestamp { get; }
        /// <summary> On-premise Instance UUID of the machine. </summary>
        public string InstanceUuid { get; }
        /// <summary> Machine power status. </summary>
        public string PowerStatus { get; }
        /// <summary> Machine BIOS serial number. </summary>
        public string BiosSerialNumber { get; }
        /// <summary> BIOS GUID. </summary>
        public string BiosGuid { get; }
        /// <summary> Machine FQDN. </summary>
        public string VmFqdn { get; }
        /// <summary> Value indicating whether VM is deleted. </summary>
        public bool? IsDeleted { get; }
        /// <summary> Errors for machine. </summary>
        public IReadOnlyList<HealthErrorDetails> Errors { get; }
    }
}
