// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.ResourceManager.Migrate.Models
{
    /// <summary> A class that represents the outbound edges from a given node. </summary>
    public partial class MachineAssessmentOptionsOutboundEdgeGroup
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="MachineAssessmentOptionsOutboundEdgeGroup"/>. </summary>
        /// <param name="targetLocations"> Gets or sets the Azure Locations. </param>
        /// <param name="currencies"> Gets or sets the Azure Currency. </param>
        /// <param name="savingsOptions"> Gets or sets the Assessment Savings Options. </param>
        /// <param name="licensingProgram"> Gets or sets the Licensing Program. </param>
        /// <param name="azureVmFamilies"> Gets or sets the Azure VM families. </param>
        /// <param name="azureVmFamilyCategories"> Gets or sets the Azure VM family categories. </param>
        /// <param name="premiumDiskSupport"> Gets or sets the premium disk support. </param>
        /// <param name="ultraDiskSupport"> Gets or sets the premium disk support. </param>
        /// <param name="azureOfferCode"> Gets or sets the Azure Offer Code. </param>
        /// <param name="azureVmSecurityOptions"> Gets or sets the Azure VM security options. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="targetLocations"/>, <paramref name="currencies"/>, <paramref name="savingsOptions"/>, <paramref name="licensingProgram"/>, <paramref name="azureVmFamilies"/>, <paramref name="azureVmFamilyCategories"/>, <paramref name="premiumDiskSupport"/>, <paramref name="ultraDiskSupport"/>, <paramref name="azureOfferCode"/> or <paramref name="azureVmSecurityOptions"/> is null. </exception>
        internal MachineAssessmentOptionsOutboundEdgeGroup(IEnumerable<AzureLocation> targetLocations, IEnumerable<AzureCurrency> currencies, IEnumerable<SavingsOption> savingsOptions, IEnumerable<LicensingProgram> licensingProgram, IEnumerable<AzureVmFamily> azureVmFamilies, IEnumerable<VmFamilyCategoryItem> azureVmFamilyCategories, IEnumerable<PremiumDiskSupport> premiumDiskSupport, IEnumerable<UltraDiskSupport> ultraDiskSupport, IEnumerable<AzureOffer> azureOfferCode, IEnumerable<AzureVmSecurityType> azureVmSecurityOptions)
        {
            Argument.AssertNotNull(targetLocations, nameof(targetLocations));
            Argument.AssertNotNull(currencies, nameof(currencies));
            Argument.AssertNotNull(savingsOptions, nameof(savingsOptions));
            Argument.AssertNotNull(licensingProgram, nameof(licensingProgram));
            Argument.AssertNotNull(azureVmFamilies, nameof(azureVmFamilies));
            Argument.AssertNotNull(azureVmFamilyCategories, nameof(azureVmFamilyCategories));
            Argument.AssertNotNull(premiumDiskSupport, nameof(premiumDiskSupport));
            Argument.AssertNotNull(ultraDiskSupport, nameof(ultraDiskSupport));
            Argument.AssertNotNull(azureOfferCode, nameof(azureOfferCode));
            Argument.AssertNotNull(azureVmSecurityOptions, nameof(azureVmSecurityOptions));

            TargetLocations = targetLocations.ToList();
            Currencies = currencies.ToList();
            SavingsOptions = savingsOptions.ToList();
            LicensingProgram = licensingProgram.ToList();
            AzureVmFamilies = azureVmFamilies.ToList();
            AzureVmFamilyCategories = azureVmFamilyCategories.ToList();
            PremiumDiskSupport = premiumDiskSupport.ToList();
            UltraDiskSupport = ultraDiskSupport.ToList();
            AzureOfferCode = azureOfferCode.ToList();
            AzureVmSecurityOptions = azureVmSecurityOptions.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="MachineAssessmentOptionsOutboundEdgeGroup"/>. </summary>
        /// <param name="targetLocations"> Gets or sets the Azure Locations. </param>
        /// <param name="currencies"> Gets or sets the Azure Currency. </param>
        /// <param name="savingsOptions"> Gets or sets the Assessment Savings Options. </param>
        /// <param name="licensingProgram"> Gets or sets the Licensing Program. </param>
        /// <param name="azureVmFamilies"> Gets or sets the Azure VM families. </param>
        /// <param name="azureVmFamilyCategories"> Gets or sets the Azure VM family categories. </param>
        /// <param name="premiumDiskSupport"> Gets or sets the premium disk support. </param>
        /// <param name="ultraDiskSupport"> Gets or sets the premium disk support. </param>
        /// <param name="azureOfferCode"> Gets or sets the Azure Offer Code. </param>
        /// <param name="azureVmSecurityOptions"> Gets or sets the Azure VM security options. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal MachineAssessmentOptionsOutboundEdgeGroup(IReadOnlyList<AzureLocation> targetLocations, IReadOnlyList<AzureCurrency> currencies, IReadOnlyList<SavingsOption> savingsOptions, IReadOnlyList<LicensingProgram> licensingProgram, IReadOnlyList<AzureVmFamily> azureVmFamilies, IReadOnlyList<VmFamilyCategoryItem> azureVmFamilyCategories, IReadOnlyList<PremiumDiskSupport> premiumDiskSupport, IReadOnlyList<UltraDiskSupport> ultraDiskSupport, IReadOnlyList<AzureOffer> azureOfferCode, IReadOnlyList<AzureVmSecurityType> azureVmSecurityOptions, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            TargetLocations = targetLocations;
            Currencies = currencies;
            SavingsOptions = savingsOptions;
            LicensingProgram = licensingProgram;
            AzureVmFamilies = azureVmFamilies;
            AzureVmFamilyCategories = azureVmFamilyCategories;
            PremiumDiskSupport = premiumDiskSupport;
            UltraDiskSupport = ultraDiskSupport;
            AzureOfferCode = azureOfferCode;
            AzureVmSecurityOptions = azureVmSecurityOptions;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="MachineAssessmentOptionsOutboundEdgeGroup"/> for deserialization. </summary>
        internal MachineAssessmentOptionsOutboundEdgeGroup()
        {
        }

        /// <summary> Gets or sets the Azure Locations. </summary>
        public IReadOnlyList<AzureLocation> TargetLocations { get; }
        /// <summary> Gets or sets the Azure Currency. </summary>
        public IReadOnlyList<AzureCurrency> Currencies { get; }
        /// <summary> Gets or sets the Assessment Savings Options. </summary>
        public IReadOnlyList<SavingsOption> SavingsOptions { get; }
        /// <summary> Gets or sets the Licensing Program. </summary>
        public IReadOnlyList<LicensingProgram> LicensingProgram { get; }
        /// <summary> Gets or sets the Azure VM families. </summary>
        public IReadOnlyList<AzureVmFamily> AzureVmFamilies { get; }
        /// <summary> Gets or sets the Azure VM family categories. </summary>
        public IReadOnlyList<VmFamilyCategoryItem> AzureVmFamilyCategories { get; }
        /// <summary> Gets or sets the premium disk support. </summary>
        public IReadOnlyList<PremiumDiskSupport> PremiumDiskSupport { get; }
        /// <summary> Gets or sets the premium disk support. </summary>
        public IReadOnlyList<UltraDiskSupport> UltraDiskSupport { get; }
        /// <summary> Gets or sets the Azure Offer Code. </summary>
        public IReadOnlyList<AzureOffer> AzureOfferCode { get; }
        /// <summary> Gets or sets the Azure VM security options. </summary>
        public IReadOnlyList<AzureVmSecurityType> AzureVmSecurityOptions { get; }
    }
}
