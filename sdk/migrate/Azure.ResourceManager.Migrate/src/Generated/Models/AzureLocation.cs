// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Migrate.Models
{
    /// <summary> Location for Azure. </summary>
    public readonly partial struct AzureLocation : IEquatable<AzureLocation>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="AzureLocation"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public AzureLocation(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string UnknownValue = "Unknown";
        private const string EastAsiaValue = "EastAsia";
        private const string SoutheastAsiaValue = "SoutheastAsia";
        private const string AustraliaEastValue = "AustraliaEast";
        private const string AustraliaSoutheastValue = "AustraliaSoutheast";
        private const string BrazilSouthValue = "BrazilSouth";
        private const string CanadaCentralValue = "CanadaCentral";
        private const string CanadaEastValue = "CanadaEast";
        private const string WestEuropeValue = "WestEurope";
        private const string NorthEuropeValue = "NorthEurope";
        private const string CentralIndiaValue = "CentralIndia";
        private const string SouthIndiaValue = "SouthIndia";
        private const string WestIndiaValue = "WestIndia";
        private const string JapanEastValue = "JapanEast";
        private const string JapanWestValue = "JapanWest";
        private const string KoreaCentralValue = "KoreaCentral";
        private const string KoreaSouthValue = "KoreaSouth";
        private const string UkWestValue = "UkWest";
        private const string UkSouthValue = "UkSouth";
        private const string NorthCentralUsValue = "NorthCentralUs";
        private const string EastUsValue = "EastUs";
        private const string WestUs2Value = "WestUs2";
        private const string SouthCentralUsValue = "SouthCentralUs";
        private const string CentralUsValue = "CentralUs";
        private const string EastUs2Value = "EastUs2";
        private const string WestUsValue = "WestUs";
        private const string WestCentralUsValue = "WestCentralUs";
        private const string GermanyCentralValue = "GermanyCentral";
        private const string GermanyNortheastValue = "GermanyNortheast";
        private const string ChinaNorthValue = "ChinaNorth";
        private const string ChinaEastValue = "ChinaEast";
        private const string USGovArizonaValue = "USGovArizona";
        private const string USGovTexasValue = "USGovTexas";
        private const string USGovIowaValue = "USGovIowa";
        private const string USGovVirginiaValue = "USGovVirginia";
        private const string USDoDCentralValue = "USDoDCentral";
        private const string USDoDEastValue = "USDoDEast";
        private const string FranceCentralValue = "FranceCentral";
        private const string AustraliaCentralValue = "AustraliaCentral";
        private const string SouthAfricaNorthValue = "SouthAfricaNorth";
        private const string FranceSouthValue = "FranceSouth";
        private const string AustraliaCentral2Value = "AustraliaCentral2";
        private const string SouthAfricaWestValue = "SouthAfricaWest";
        private const string GermanyNorthValue = "GermanyNorth";
        private const string GermanyWestCentralValue = "GermanyWestCentral";
        private const string NorwayEastValue = "NorwayEast";
        private const string NorwayWestValue = "NorwayWest";
        private const string ChinaEast2Value = "ChinaEast2";
        private const string ChinaNorth2Value = "ChinaNorth2";
        private const string SwitzerlandNorthValue = "SwitzerlandNorth";
        private const string SwitzerlandWestValue = "SwitzerlandWest";
        private const string UAENorthValue = "UAENorth";
        private const string UAECentralValue = "UAECentral";
        private const string UsNatEastValue = "UsNatEast";
        private const string UsNatWestValue = "UsNatWest";
        private const string UsSecEastValue = "UsSecEast";
        private const string UsSecCentralValue = "UsSecCentral";
        private const string UsSecWestValue = "UsSecWest";
        private const string SwedenCentralValue = "SwedenCentral";
        private const string QatarCentralValue = "QatarCentral";
        private const string JioIndiaWestValue = "JioIndiaWest";
        private const string ItalyNorthValue = "ItalyNorth";
        private const string PolandCentralValue = "PolandCentral";
        private const string IsraelCentralValue = "IsraelCentral";
        private const string MexicoCentralValue = "MexicoCentral";
        private const string NewZealandNorthValue = "NewZealandNorth";
        private const string SpainCentralValue = "SpainCentral";

        /// <summary> Unknown Location for Azure. </summary>
        public static AzureLocation Unknown { get; } = new AzureLocation(UnknownValue);
        /// <summary> EastAsia Location for Azure. </summary>
        public static AzureLocation EastAsia { get; } = new AzureLocation(EastAsiaValue);
        /// <summary> SoutheastAsia Location for Azure. </summary>
        public static AzureLocation SoutheastAsia { get; } = new AzureLocation(SoutheastAsiaValue);
        /// <summary> AustraliaEast Location for Azure. </summary>
        public static AzureLocation AustraliaEast { get; } = new AzureLocation(AustraliaEastValue);
        /// <summary> AustraliaSoutheast Location for Azure. </summary>
        public static AzureLocation AustraliaSoutheast { get; } = new AzureLocation(AustraliaSoutheastValue);
        /// <summary> BrazilSouth Location for Azure. </summary>
        public static AzureLocation BrazilSouth { get; } = new AzureLocation(BrazilSouthValue);
        /// <summary> CanadaCentral Location for Azure. </summary>
        public static AzureLocation CanadaCentral { get; } = new AzureLocation(CanadaCentralValue);
        /// <summary> CanadaEast Location for Azure. </summary>
        public static AzureLocation CanadaEast { get; } = new AzureLocation(CanadaEastValue);
        /// <summary> WestEurope Location for Azure. </summary>
        public static AzureLocation WestEurope { get; } = new AzureLocation(WestEuropeValue);
        /// <summary> NorthEurope Location for Azure. </summary>
        public static AzureLocation NorthEurope { get; } = new AzureLocation(NorthEuropeValue);
        /// <summary> CentralIndia Location for Azure. </summary>
        public static AzureLocation CentralIndia { get; } = new AzureLocation(CentralIndiaValue);
        /// <summary> SouthIndia Location for Azure. </summary>
        public static AzureLocation SouthIndia { get; } = new AzureLocation(SouthIndiaValue);
        /// <summary> WestIndia Location for Azure. </summary>
        public static AzureLocation WestIndia { get; } = new AzureLocation(WestIndiaValue);
        /// <summary> JapanEast Location for Azure. </summary>
        public static AzureLocation JapanEast { get; } = new AzureLocation(JapanEastValue);
        /// <summary> JapanWest Location for Azure. </summary>
        public static AzureLocation JapanWest { get; } = new AzureLocation(JapanWestValue);
        /// <summary> KoreaCentral Location for Azure. </summary>
        public static AzureLocation KoreaCentral { get; } = new AzureLocation(KoreaCentralValue);
        /// <summary> KoreaSouth Location for Azure. </summary>
        public static AzureLocation KoreaSouth { get; } = new AzureLocation(KoreaSouthValue);
        /// <summary> UkWest Location for Azure. </summary>
        public static AzureLocation UkWest { get; } = new AzureLocation(UkWestValue);
        /// <summary> UkSouth Location for Azure. </summary>
        public static AzureLocation UkSouth { get; } = new AzureLocation(UkSouthValue);
        /// <summary> NorthCentralUs Location for Azure. </summary>
        public static AzureLocation NorthCentralUs { get; } = new AzureLocation(NorthCentralUsValue);
        /// <summary> EastUs Location for Azure. </summary>
        public static AzureLocation EastUs { get; } = new AzureLocation(EastUsValue);
        /// <summary> WestUs2 Location for Azure. </summary>
        public static AzureLocation WestUs2 { get; } = new AzureLocation(WestUs2Value);
        /// <summary> SouthCentralUs Location for Azure. </summary>
        public static AzureLocation SouthCentralUs { get; } = new AzureLocation(SouthCentralUsValue);
        /// <summary> CentralUs Location for Azure. </summary>
        public static AzureLocation CentralUs { get; } = new AzureLocation(CentralUsValue);
        /// <summary> EastUs2 Location for Azure. </summary>
        public static AzureLocation EastUs2 { get; } = new AzureLocation(EastUs2Value);
        /// <summary> WestUs Location for Azure. </summary>
        public static AzureLocation WestUs { get; } = new AzureLocation(WestUsValue);
        /// <summary> WestCentralUs Location for Azure. </summary>
        public static AzureLocation WestCentralUs { get; } = new AzureLocation(WestCentralUsValue);
        /// <summary> GermanyCentral Location for Azure. </summary>
        public static AzureLocation GermanyCentral { get; } = new AzureLocation(GermanyCentralValue);
        /// <summary> GermanyNortheast Location for Azure. </summary>
        public static AzureLocation GermanyNortheast { get; } = new AzureLocation(GermanyNortheastValue);
        /// <summary> ChinaNorth Location for Azure. </summary>
        public static AzureLocation ChinaNorth { get; } = new AzureLocation(ChinaNorthValue);
        /// <summary> ChinaEast Location for Azure. </summary>
        public static AzureLocation ChinaEast { get; } = new AzureLocation(ChinaEastValue);
        /// <summary> USGovArizona Location for Azure. </summary>
        public static AzureLocation USGovArizona { get; } = new AzureLocation(USGovArizonaValue);
        /// <summary> USGovTexas Location for Azure. </summary>
        public static AzureLocation USGovTexas { get; } = new AzureLocation(USGovTexasValue);
        /// <summary> USGovIowa Location for Azure. </summary>
        public static AzureLocation USGovIowa { get; } = new AzureLocation(USGovIowaValue);
        /// <summary> USGovVirginia Location for Azure. </summary>
        public static AzureLocation USGovVirginia { get; } = new AzureLocation(USGovVirginiaValue);
        /// <summary> USDoDCentral Location for Azure. </summary>
        public static AzureLocation USDoDCentral { get; } = new AzureLocation(USDoDCentralValue);
        /// <summary> USDoDEast Location for Azure. </summary>
        public static AzureLocation USDoDEast { get; } = new AzureLocation(USDoDEastValue);
        /// <summary> FranceCentral Location for Azure. </summary>
        public static AzureLocation FranceCentral { get; } = new AzureLocation(FranceCentralValue);
        /// <summary> AustraliaCentral Location for Azure. </summary>
        public static AzureLocation AustraliaCentral { get; } = new AzureLocation(AustraliaCentralValue);
        /// <summary> SouthAfricaNorth Location for Azure. </summary>
        public static AzureLocation SouthAfricaNorth { get; } = new AzureLocation(SouthAfricaNorthValue);
        /// <summary> FranceSouth Location for Azure. </summary>
        public static AzureLocation FranceSouth { get; } = new AzureLocation(FranceSouthValue);
        /// <summary> AustraliaCentral2 Location for Azure. </summary>
        public static AzureLocation AustraliaCentral2 { get; } = new AzureLocation(AustraliaCentral2Value);
        /// <summary> SouthAfricaWest Location for Azure. </summary>
        public static AzureLocation SouthAfricaWest { get; } = new AzureLocation(SouthAfricaWestValue);
        /// <summary> GermanyNorth Location for Azure. </summary>
        public static AzureLocation GermanyNorth { get; } = new AzureLocation(GermanyNorthValue);
        /// <summary> GermanyWestCentral Location for Azure. </summary>
        public static AzureLocation GermanyWestCentral { get; } = new AzureLocation(GermanyWestCentralValue);
        /// <summary> NorwayEast Location for Azure. </summary>
        public static AzureLocation NorwayEast { get; } = new AzureLocation(NorwayEastValue);
        /// <summary> NorwayWest Location for Azure. </summary>
        public static AzureLocation NorwayWest { get; } = new AzureLocation(NorwayWestValue);
        /// <summary> ChinaEast2 Location for Azure. </summary>
        public static AzureLocation ChinaEast2 { get; } = new AzureLocation(ChinaEast2Value);
        /// <summary> ChinaNorth2 Location for Azure. </summary>
        public static AzureLocation ChinaNorth2 { get; } = new AzureLocation(ChinaNorth2Value);
        /// <summary> SwitzerlandNorth Location for Azure. </summary>
        public static AzureLocation SwitzerlandNorth { get; } = new AzureLocation(SwitzerlandNorthValue);
        /// <summary> SwitzerlandWest Location for Azure. </summary>
        public static AzureLocation SwitzerlandWest { get; } = new AzureLocation(SwitzerlandWestValue);
        /// <summary> UAENorth Location for Azure. </summary>
        public static AzureLocation UAENorth { get; } = new AzureLocation(UAENorthValue);
        /// <summary> UAECentral Location for Azure. </summary>
        public static AzureLocation UAECentral { get; } = new AzureLocation(UAECentralValue);
        /// <summary> UsNatEast Location for Azure. </summary>
        public static AzureLocation UsNatEast { get; } = new AzureLocation(UsNatEastValue);
        /// <summary> UsNatWest Location for Azure. </summary>
        public static AzureLocation UsNatWest { get; } = new AzureLocation(UsNatWestValue);
        /// <summary> UsSecEast Location for Azure. </summary>
        public static AzureLocation UsSecEast { get; } = new AzureLocation(UsSecEastValue);
        /// <summary> UsSecCentral Location for Azure. </summary>
        public static AzureLocation UsSecCentral { get; } = new AzureLocation(UsSecCentralValue);
        /// <summary> UsSecWest Location for Azure. </summary>
        public static AzureLocation UsSecWest { get; } = new AzureLocation(UsSecWestValue);
        /// <summary> SwedenCentral Location for Azure. </summary>
        public static AzureLocation SwedenCentral { get; } = new AzureLocation(SwedenCentralValue);
        /// <summary> QatarCentral Location for Azure. </summary>
        public static AzureLocation QatarCentral { get; } = new AzureLocation(QatarCentralValue);
        /// <summary> JioIndiaWest Location for Azure. </summary>
        public static AzureLocation JioIndiaWest { get; } = new AzureLocation(JioIndiaWestValue);
        /// <summary> ItalyNorth Location for Azure. </summary>
        public static AzureLocation ItalyNorth { get; } = new AzureLocation(ItalyNorthValue);
        /// <summary> PolandCentral Location for Azure. </summary>
        public static AzureLocation PolandCentral { get; } = new AzureLocation(PolandCentralValue);
        /// <summary> IsraelCentral Location for Azure. </summary>
        public static AzureLocation IsraelCentral { get; } = new AzureLocation(IsraelCentralValue);
        /// <summary> MexicoCentral Location for Azure. </summary>
        public static AzureLocation MexicoCentral { get; } = new AzureLocation(MexicoCentralValue);
        /// <summary> NewZealandNorth Location for Azure. </summary>
        public static AzureLocation NewZealandNorth { get; } = new AzureLocation(NewZealandNorthValue);
        /// <summary> SpainCentral Location for Azure. </summary>
        public static AzureLocation SpainCentral { get; } = new AzureLocation(SpainCentralValue);
        /// <summary> Determines if two <see cref="AzureLocation"/> values are the same. </summary>
        public static bool operator ==(AzureLocation left, AzureLocation right) => left.Equals(right);
        /// <summary> Determines if two <see cref="AzureLocation"/> values are not the same. </summary>
        public static bool operator !=(AzureLocation left, AzureLocation right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="AzureLocation"/>. </summary>
        public static implicit operator AzureLocation(string value) => new AzureLocation(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is AzureLocation other && Equals(other);
        /// <inheritdoc />
        public bool Equals(AzureLocation other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
