// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.Migrate.Models
{
    /// <summary> Second level object returned as part of Machine REST resource. </summary>
    public partial class VMwareDisk
    {
        /// <summary> Initializes a new instance of VMwareDisk. </summary>
        internal VMwareDisk()
        {
        }

        /// <summary> Initializes a new instance of VMwareDisk. </summary>
        /// <param name="uuid"> Disk UUID. </param>
        /// <param name="label"> Label of the disk. </param>
        /// <param name="diskProvisioningPolicy"> The provisioning policy of the disk. It is Thin or Thick or Unknown for the VMWare. </param>
        /// <param name="diskScrubbingPolicy"> The scrubbing policy of disks which can be eagerly zeroed or lazily zeroed. </param>
        /// <param name="diskMode"> Disk mode property used for identifying independent disks. </param>
        /// <param name="maxSizeInBytes"> Bytes allocated for the disk. </param>
        /// <param name="name"> Name of the disk. </param>
        /// <param name="diskType"> Type of the disk. </param>
        /// <param name="lun"> LUN of the disk. </param>
        /// <param name="path"> Path of the disk. </param>
        internal VMwareDisk(string uuid, string label, string diskProvisioningPolicy, string diskScrubbingPolicy, VirtualDiskMode? diskMode, long? maxSizeInBytes, string name, string diskType, int? lun, string path)
        {
            Uuid = uuid;
            Label = label;
            DiskProvisioningPolicy = diskProvisioningPolicy;
            DiskScrubbingPolicy = diskScrubbingPolicy;
            DiskMode = diskMode;
            MaxSizeInBytes = maxSizeInBytes;
            Name = name;
            DiskType = diskType;
            Lun = lun;
            Path = path;
        }

        /// <summary> Disk UUID. </summary>
        public string Uuid { get; }
        /// <summary> Label of the disk. </summary>
        public string Label { get; }
        /// <summary> The provisioning policy of the disk. It is Thin or Thick or Unknown for the VMWare. </summary>
        public string DiskProvisioningPolicy { get; }
        /// <summary> The scrubbing policy of disks which can be eagerly zeroed or lazily zeroed. </summary>
        public string DiskScrubbingPolicy { get; }
        /// <summary> Disk mode property used for identifying independent disks. </summary>
        public VirtualDiskMode? DiskMode { get; }
        /// <summary> Bytes allocated for the disk. </summary>
        public long? MaxSizeInBytes { get; }
        /// <summary> Name of the disk. </summary>
        public string Name { get; }
        /// <summary> Type of the disk. </summary>
        public string DiskType { get; }
        /// <summary> LUN of the disk. </summary>
        public int? Lun { get; }
        /// <summary> Path of the disk. </summary>
        public string Path { get; }
    }
}
