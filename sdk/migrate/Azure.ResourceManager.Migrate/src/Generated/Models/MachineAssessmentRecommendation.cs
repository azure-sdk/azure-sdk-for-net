// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Migrate.Models
{
    /// <summary> Machine Assessment Recommendation with additional properties. </summary>
    public partial class MachineAssessmentRecommendation
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="MachineAssessmentRecommendation"/>. </summary>
        internal MachineAssessmentRecommendation()
        {
            TotalCost = new ChangeTrackingList<CostDetailsCommon>();
            TotalSavings = new ChangeTrackingList<SavingsDetailsCommon>();
            MigrationIssues = new ChangeTrackingList<MigrationIssues>();
            Skus = new ChangeTrackingList<SkusMigrationSuitability>();
            VmSecuritySuitabilityResults = new ChangeTrackingList<VmSecuritySuitability>();
        }

        /// <summary> Initializes a new instance of <see cref="MachineAssessmentRecommendation"/>. </summary>
        /// <param name="configuration"> The configuration data. </param>
        /// <param name="recommendedFor"> The recommended details. </param>
        /// <param name="migrationPlatform"> The migration Platform. </param>
        /// <param name="confidenceScore"> The confidence score. </param>
        /// <param name="migrationSuitability"> The migration suitability. </param>
        /// <param name="securitySuitability"> The security suitability. </param>
        /// <param name="totalCost"> The total cost details. </param>
        /// <param name="totalSavings"> The total cost details. </param>
        /// <param name="migrationIssues"> The migration issues list. </param>
        /// <param name="skus"> The Skus list. </param>
        /// <param name="vmSecuritySuitabilityResults"> VM Security Suitability Results. </param>
        /// <param name="recommendedVmSecurityType"> Recommended security type for the VM. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal MachineAssessmentRecommendation(Configuration configuration, RecommendedFor recommendedFor, MigrationPlatform? migrationPlatform, float? confidenceScore, MigrationSuitability migrationSuitability, SecuritySuitability securitySuitability, IReadOnlyList<CostDetailsCommon> totalCost, IReadOnlyList<SavingsDetailsCommon> totalSavings, IReadOnlyList<MigrationIssues> migrationIssues, IReadOnlyList<SkusMigrationSuitability> skus, IReadOnlyList<VmSecuritySuitability> vmSecuritySuitabilityResults, AzureVmSecurityType? recommendedVmSecurityType, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Configuration = configuration;
            RecommendedFor = recommendedFor;
            MigrationPlatform = migrationPlatform;
            ConfidenceScore = confidenceScore;
            MigrationSuitability = migrationSuitability;
            SecuritySuitability = securitySuitability;
            TotalCost = totalCost;
            TotalSavings = totalSavings;
            MigrationIssues = migrationIssues;
            Skus = skus;
            VmSecuritySuitabilityResults = vmSecuritySuitabilityResults;
            RecommendedVmSecurityType = recommendedVmSecurityType;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The configuration data. </summary>
        public Configuration Configuration { get; }
        /// <summary> The recommended details. </summary>
        internal RecommendedFor RecommendedFor { get; }
        /// <summary> The list of strategy type. </summary>
        public IReadOnlyList<StrategyType> RecommendedForStrategies
        {
            get => RecommendedFor?.Strategies;
        }

        /// <summary> The migration Platform. </summary>
        public MigrationPlatform? MigrationPlatform { get; }
        /// <summary> The confidence score. </summary>
        public float? ConfidenceScore { get; }
        /// <summary> The migration suitability. </summary>
        internal MigrationSuitability MigrationSuitability { get; }
        /// <summary> The migration suitability. </summary>
        public CloudSuitabilityCommon? MigrationSuitabilityReadiness
        {
            get => MigrationSuitability?.Readiness;
        }

        /// <summary> The security suitability. </summary>
        internal SecuritySuitability SecuritySuitability { get; }
        /// <summary> The security suitability. </summary>
        public CloudSuitabilityCommon? SecuritySuitabilityReadiness
        {
            get => SecuritySuitability?.Readiness;
        }

        /// <summary> The total cost details. </summary>
        public IReadOnlyList<CostDetailsCommon> TotalCost { get; }
        /// <summary> The total cost details. </summary>
        public IReadOnlyList<SavingsDetailsCommon> TotalSavings { get; }
        /// <summary> The migration issues list. </summary>
        public IReadOnlyList<MigrationIssues> MigrationIssues { get; }
        /// <summary> The Skus list. </summary>
        public IReadOnlyList<SkusMigrationSuitability> Skus { get; }
        /// <summary> VM Security Suitability Results. </summary>
        public IReadOnlyList<VmSecuritySuitability> VmSecuritySuitabilityResults { get; }
        /// <summary> Recommended security type for the VM. </summary>
        public AzureVmSecurityType? RecommendedVmSecurityType { get; }
    }
}
