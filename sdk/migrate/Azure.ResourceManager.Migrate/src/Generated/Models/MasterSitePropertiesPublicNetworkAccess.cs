// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Migrate.Models
{
    /// <summary> Gets or sets the state of public network access. </summary>
    public readonly partial struct MasterSitePropertiesPublicNetworkAccess : IEquatable<MasterSitePropertiesPublicNetworkAccess>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="MasterSitePropertiesPublicNetworkAccess"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public MasterSitePropertiesPublicNetworkAccess(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string NotSpecifiedValue = "NotSpecified";
        private const string EnabledValue = "Enabled";
        private const string DisabledValue = "Disabled";

        /// <summary> NotSpecified. </summary>
        public static MasterSitePropertiesPublicNetworkAccess NotSpecified { get; } = new MasterSitePropertiesPublicNetworkAccess(NotSpecifiedValue);
        /// <summary> Enabled. </summary>
        public static MasterSitePropertiesPublicNetworkAccess Enabled { get; } = new MasterSitePropertiesPublicNetworkAccess(EnabledValue);
        /// <summary> Disabled. </summary>
        public static MasterSitePropertiesPublicNetworkAccess Disabled { get; } = new MasterSitePropertiesPublicNetworkAccess(DisabledValue);
        /// <summary> Determines if two <see cref="MasterSitePropertiesPublicNetworkAccess"/> values are the same. </summary>
        public static bool operator ==(MasterSitePropertiesPublicNetworkAccess left, MasterSitePropertiesPublicNetworkAccess right) => left.Equals(right);
        /// <summary> Determines if two <see cref="MasterSitePropertiesPublicNetworkAccess"/> values are not the same. </summary>
        public static bool operator !=(MasterSitePropertiesPublicNetworkAccess left, MasterSitePropertiesPublicNetworkAccess right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="MasterSitePropertiesPublicNetworkAccess"/>. </summary>
        public static implicit operator MasterSitePropertiesPublicNetworkAccess(string value) => new MasterSitePropertiesPublicNetworkAccess(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is MasterSitePropertiesPublicNetworkAccess other && Equals(other);
        /// <inheritdoc />
        public bool Equals(MasterSitePropertiesPublicNetworkAccess other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
