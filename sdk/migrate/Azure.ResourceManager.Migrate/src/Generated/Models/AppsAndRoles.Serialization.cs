// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Migrate.Models
{
    public partial class AppsAndRoles
    {
        internal static AppsAndRoles DeserializeAppsAndRoles(JsonElement element)
        {
            Optional<IReadOnlyList<Application>> applications = default;
            Optional<IReadOnlyList<WebApplication>> webApplications = default;
            Optional<IReadOnlyList<Feature>> features = default;
            Optional<IReadOnlyList<SQLServer>> sqlServers = default;
            Optional<IReadOnlyList<SharePointServer>> sharePointServers = default;
            Optional<IReadOnlyList<SystemCenter>> systemCenters = default;
            Optional<IReadOnlyList<BizTalkServer>> bizTalkServers = default;
            Optional<IReadOnlyList<ExchangeServer>> exchangeServers = default;
            Optional<IReadOnlyList<OtherDatabase>> otherDatabases = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("applications"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<Application> array = new List<Application>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(Application.DeserializeApplication(item));
                    }
                    applications = array;
                    continue;
                }
                if (property.NameEquals("webApplications"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<WebApplication> array = new List<WebApplication>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(WebApplication.DeserializeWebApplication(item));
                    }
                    webApplications = array;
                    continue;
                }
                if (property.NameEquals("features"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<Feature> array = new List<Feature>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(Feature.DeserializeFeature(item));
                    }
                    features = array;
                    continue;
                }
                if (property.NameEquals("sqlServers"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<SQLServer> array = new List<SQLServer>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SQLServer.DeserializeSQLServer(item));
                    }
                    sqlServers = array;
                    continue;
                }
                if (property.NameEquals("sharePointServers"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<SharePointServer> array = new List<SharePointServer>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SharePointServer.DeserializeSharePointServer(item));
                    }
                    sharePointServers = array;
                    continue;
                }
                if (property.NameEquals("systemCenters"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<SystemCenter> array = new List<SystemCenter>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SystemCenter.DeserializeSystemCenter(item));
                    }
                    systemCenters = array;
                    continue;
                }
                if (property.NameEquals("bizTalkServers"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<BizTalkServer> array = new List<BizTalkServer>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(BizTalkServer.DeserializeBizTalkServer(item));
                    }
                    bizTalkServers = array;
                    continue;
                }
                if (property.NameEquals("exchangeServers"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ExchangeServer> array = new List<ExchangeServer>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ExchangeServer.DeserializeExchangeServer(item));
                    }
                    exchangeServers = array;
                    continue;
                }
                if (property.NameEquals("otherDatabases"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<OtherDatabase> array = new List<OtherDatabase>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(OtherDatabase.DeserializeOtherDatabase(item));
                    }
                    otherDatabases = array;
                    continue;
                }
            }
            return new AppsAndRoles(Optional.ToList(applications), Optional.ToList(webApplications), Optional.ToList(features), Optional.ToList(sqlServers), Optional.ToList(sharePointServers), Optional.ToList(systemCenters), Optional.ToList(bizTalkServers), Optional.ToList(exchangeServers), Optional.ToList(otherDatabases));
        }
    }
}
