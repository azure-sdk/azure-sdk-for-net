// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Migrate.Models
{
    /// <summary> Azure management Offering type. </summary>
    public readonly partial struct AzureManagementOfferingType : IEquatable<AzureManagementOfferingType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="AzureManagementOfferingType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public AzureManagementOfferingType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string NoValue = "No";
        private const string SCOMMIValue = "SCOMMI";
        private const string AzMonValue = "AzMon";
        private const string AUMValue = "AUM";
        private const string AzureBackupValue = "AzureBackup";

        /// <summary> No - Azure management Offering type. </summary>
        public static AzureManagementOfferingType No { get; } = new AzureManagementOfferingType(NoValue);
        /// <summary> SCOMMI - Azure management Offering type. </summary>
        public static AzureManagementOfferingType SCOMMI { get; } = new AzureManagementOfferingType(SCOMMIValue);
        /// <summary> AzMon - Azure management Offering type. </summary>
        public static AzureManagementOfferingType AzMon { get; } = new AzureManagementOfferingType(AzMonValue);
        /// <summary> AUM - Azure management Offering type. </summary>
        public static AzureManagementOfferingType AUM { get; } = new AzureManagementOfferingType(AUMValue);
        /// <summary> AzureBackup - Azure management Offering type. </summary>
        public static AzureManagementOfferingType AzureBackup { get; } = new AzureManagementOfferingType(AzureBackupValue);
        /// <summary> Determines if two <see cref="AzureManagementOfferingType"/> values are the same. </summary>
        public static bool operator ==(AzureManagementOfferingType left, AzureManagementOfferingType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="AzureManagementOfferingType"/> values are not the same. </summary>
        public static bool operator !=(AzureManagementOfferingType left, AzureManagementOfferingType right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="AzureManagementOfferingType"/>. </summary>
        public static implicit operator AzureManagementOfferingType(string value) => new AzureManagementOfferingType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is AzureManagementOfferingType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(AzureManagementOfferingType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
