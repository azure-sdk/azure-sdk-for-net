// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.Migrate.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.Migrate.Samples
{
    public partial class Sample_ServerCollectorResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_ServerCollectorsOperationsGet()
        {
            // Generated from example definition: 2024-03-03-preview/ServerCollectorsOperations_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "ServerCollector_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ServerCollectorResource created on azure
            // for more information of creating ServerCollectorResource, please refer to the document of ServerCollectorResource
            string subscriptionId = "4bd2aa0f-2bd2-4d67-91a8-5a4533d58600";
            string resourceGroupName = "ayagrawRG";
            string projectName = "app18700project";
            string serverCollectorName = "walter389fcollector";
            ResourceIdentifier serverCollectorResourceId = ServerCollectorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, serverCollectorName);
            ServerCollectorResource serverCollector = client.GetServerCollectorResource(serverCollectorResourceId);

            // invoke the operation
            ServerCollectorResource result = await serverCollector.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ServerCollectorData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_ServerCollectorsOperationsDelete()
        {
            // Generated from example definition: 2024-03-03-preview/ServerCollectorsOperations_Delete_MaximumSet_Gen.json
            // this example is just showing the usage of "ServerCollector_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ServerCollectorResource created on azure
            // for more information of creating ServerCollectorResource, please refer to the document of ServerCollectorResource
            string subscriptionId = "4bd2aa0f-2bd2-4d67-91a8-5a4533d58600";
            string resourceGroupName = "ayagrawRG";
            string projectName = "app18700project";
            string serverCollectorName = "walter389fcollector";
            ResourceIdentifier serverCollectorResourceId = ServerCollectorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, serverCollectorName);
            ServerCollectorResource serverCollector = client.GetServerCollectorResource(serverCollectorResourceId);

            // invoke the operation
            await serverCollector.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_ServerCollectorsOperationsCreate()
        {
            // Generated from example definition: 2024-03-03-preview/ServerCollectorsOperations_Create_MaximumSet_Gen.json
            // this example is just showing the usage of "ServerCollector_Create" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ServerCollectorResource created on azure
            // for more information of creating ServerCollectorResource, please refer to the document of ServerCollectorResource
            string subscriptionId = "4bd2aa0f-2bd2-4d67-91a8-5a4533d58600";
            string resourceGroupName = "ayagrawRG";
            string projectName = "app18700project";
            string serverCollectorName = "walter389fcollector";
            ResourceIdentifier serverCollectorResourceId = ServerCollectorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, serverCollectorName);
            ServerCollectorResource serverCollector = client.GetServerCollectorResource(serverCollectorResourceId);

            // invoke the operation
            ServerCollectorData data = new ServerCollectorData
            {
                Properties = new CollectorPropertiesBaseWithAgent
                {
                    AgentProperties = new CollectorAgentPropertiesBase
                    {
                        Id = "498e4965-bbb1-47c2-8613-345baff9c509",
                        SpnDetails = new CollectorAgentSpnPropertiesBase
                        {
                            Authority = "https://login.windows.net/72f988bf-86f1-41af-91ab-2d7cd011db47",
                            ApplicationId = "65153d2f-9afb-44e8-b3ca-1369150b7354",
                            Audience = "65153d2f-9afb-44e8-b3ca-1369150b7354",
                            ObjectId = "ddde6f96-87c8-420b-9d4d-f16a5090519e",
                            TenantId = "72f988bf-86f1-41af-91ab-2d7cd011db47",
                        },
                    },
                    DiscoverySiteId = "/subscriptions/4bd2aa0f-2bd2-4d67-91a8-5a4533d58600/resourceGroups/ayagrawRG/providers/Microsoft.OffAzure/ServerSites/walter7155site",
                },
            };
            ArmOperation<ServerCollectorResource> lro = await serverCollector.UpdateAsync(WaitUntil.Completed, data);
            ServerCollectorResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ServerCollectorData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
