// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.Migrate;

namespace Azure.ResourceManager.Migrate.Samples
{
    public partial class Sample_AssessedMachineResource
    {
        // AssessedMachines_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_AssessedMachinesGet()
        {
            // Generated from example definition: specification/migrate/resource-manager/Microsoft.Migrate/AssessmentProjects/stable/2019-10-01/examples/AssessedMachines_Get.json
            // this example is just showing the usage of "AssessedMachines_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AssessedMachineResource created on azure
            // for more information of creating AssessedMachineResource, please refer to the document of AssessedMachineResource
            string subscriptionId = "6393a73f-8d55-47ef-b6dd-179b3e0c7910";
            string resourceGroupName = "abgoyal-westEurope";
            string projectName = "abgoyalWEselfhostb72bproject";
            string groupName = "Test1";
            string assessmentName = "assessment_5_9_2019_16_22_14";
            string assessedMachineName = "f57fe432-3bd2-486a-a83a-6f4d99f1a952";
            ResourceIdentifier assessedMachineResourceId = AssessedMachineResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, groupName, assessmentName, assessedMachineName);
            AssessedMachineResource assessedMachine = client.GetAssessedMachineResource(assessedMachineResourceId);

            // invoke the operation
            AssessedMachineResource result = await assessedMachine.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AssessedMachineData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
