// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.Migrate;
using Azure.ResourceManager.Migrate.Models;

namespace Azure.ResourceManager.Migrate.Samples
{
    public partial class Sample_HyperVCollectorResource
    {
        // HyperVCollectors_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_HyperVCollectorsGet()
        {
            // Generated from example definition: specification/migrate/resource-manager/Microsoft.Migrate/AssessmentProjects/stable/2019-10-01/examples/HyperVCollectors_Get.json
            // this example is just showing the usage of "HyperVCollectors_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HyperVCollectorResource created on azure
            // for more information of creating HyperVCollectorResource, please refer to the document of HyperVCollectorResource
            string subscriptionId = "8c3c936a-c09b-4de3-830b-3f5f244d72e9";
            string resourceGroupName = "contosoithyperv";
            string projectName = "migrateprojectce73project";
            string hyperVCollectorName = "migrateprojectce73collector";
            ResourceIdentifier hyperVCollectorResourceId = HyperVCollectorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, hyperVCollectorName);
            HyperVCollectorResource hyperVCollector = client.GetHyperVCollectorResource(hyperVCollectorResourceId);

            // invoke the operation
            HyperVCollectorResource result = await hyperVCollector.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            HyperVCollectorData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // HyperVCollectors_Create
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_HyperVCollectorsCreate()
        {
            // Generated from example definition: specification/migrate/resource-manager/Microsoft.Migrate/AssessmentProjects/stable/2019-10-01/examples/HyperVCollectors_Create.json
            // this example is just showing the usage of "HyperVCollectors_Create" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HyperVCollectorResource created on azure
            // for more information of creating HyperVCollectorResource, please refer to the document of HyperVCollectorResource
            string subscriptionId = "8c3c936a-c09b-4de3-830b-3f5f244d72e9";
            string resourceGroupName = "contosoithyperv";
            string projectName = "migrateprojectce73project";
            string hyperVCollectorName = "migrateprojectce73collector";
            ResourceIdentifier hyperVCollectorResourceId = HyperVCollectorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, hyperVCollectorName);
            HyperVCollectorResource hyperVCollector = client.GetHyperVCollectorResource(hyperVCollectorResourceId);

            // invoke the operation
            HyperVCollectorData data = new HyperVCollectorData()
            {
                ETag = new ETag("\"00000981-0000-0300-0000-5d74cd5f0000\""),
                Properties = new CollectorProperties()
                {
                    DiscoverySiteId = "/subscriptions/8c3c936a-c09b-4de3-830b-3f5f244d72e9/resourceGroups/ContosoITHyperV/providers/Microsoft.OffAzure/HyperVSites/migrateprojectce73site",
                    AgentProperties = new CollectorAgentProperties()
                    {
                        SpnDetails = new CollectorBodyAgentSpnProperties()
                        {
                            Authority = "https://login.windows.net/72f988bf-86f1-41af-91ab-2d7cd011db47",
                            ApplicationId = "827f1053-44dc-439f-b832-05416dcce12b",
                            Audience = "https://72f988bf-86f1-41af-91ab-2d7cd011db47/migrateprojectce73agentauthaadapp",
                            ObjectId = "be75098e-c0fc-4ac4-98c7-282ebbcf8370",
                            TenantId = Guid.Parse("72f988bf-86f1-41af-91ab-2d7cd011db47"),
                        },
                    },
                },
            };
            ArmOperation<HyperVCollectorResource> lro = await hyperVCollector.UpdateAsync(WaitUntil.Completed, data);
            HyperVCollectorResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            HyperVCollectorData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // HyperVCollectors_Delete
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_HyperVCollectorsDelete()
        {
            // Generated from example definition: specification/migrate/resource-manager/Microsoft.Migrate/AssessmentProjects/stable/2019-10-01/examples/HyperVCollectors_Delete.json
            // this example is just showing the usage of "HyperVCollectors_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HyperVCollectorResource created on azure
            // for more information of creating HyperVCollectorResource, please refer to the document of HyperVCollectorResource
            string subscriptionId = "8c3c936a-c09b-4de3-830b-3f5f244d72e9";
            string resourceGroupName = "contosoithyperv";
            string projectName = "migrateprojectce73project";
            string hyperVCollectorName = "migrateprojectce73collector";
            ResourceIdentifier hyperVCollectorResourceId = HyperVCollectorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, hyperVCollectorName);
            HyperVCollectorResource hyperVCollector = client.GetHyperVCollectorResource(hyperVCollectorResourceId);

            // invoke the operation
            await hyperVCollector.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }
    }
}
