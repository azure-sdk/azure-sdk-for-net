// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.Migrate;

namespace Azure.ResourceManager.Migrate.Samples
{
    public partial class Sample_MachineCollection
    {
        // Machines_ListByProject
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetAll_MachinesListByProject()
        {
            // Generated from example definition: specification/migrate/resource-manager/Microsoft.Migrate/AssessmentProjects/stable/2019-10-01/examples/Machines_ListByProject.json
            // this example is just showing the usage of "Machines_ListByProject" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ProjectResource created on azure
            // for more information of creating ProjectResource, please refer to the document of ProjectResource
            string subscriptionId = "6393a73f-8d55-47ef-b6dd-179b3e0c7910";
            string resourceGroupName = "abgoyal-westEurope";
            string projectName = "abgoyalWEselfhostb72bproject";
            ResourceIdentifier projectResourceId = ProjectResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName);
            ProjectResource project = client.GetProjectResource(projectResourceId);

            // get the collection of this MachineResource
            MachineCollection collection = project.GetMachines();

            // invoke the operation and iterate over the result
            await foreach (MachineResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                MachineData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }

        // Machines_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_MachinesGet()
        {
            // Generated from example definition: specification/migrate/resource-manager/Microsoft.Migrate/AssessmentProjects/stable/2019-10-01/examples/Machines_Get.json
            // this example is just showing the usage of "Machines_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ProjectResource created on azure
            // for more information of creating ProjectResource, please refer to the document of ProjectResource
            string subscriptionId = "6393a73f-8d55-47ef-b6dd-179b3e0c7910";
            string resourceGroupName = "abgoyal-westEurope";
            string projectName = "abgoyalWEselfhostb72bproject";
            ResourceIdentifier projectResourceId = ProjectResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName);
            ProjectResource project = client.GetProjectResource(projectResourceId);

            // get the collection of this MachineResource
            MachineCollection collection = project.GetMachines();

            // invoke the operation
            string machineName = "269ef295-a38d-4f8f-9779-77ce79088311";
            MachineResource result = await collection.GetAsync(machineName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            MachineData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Machines_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Exists_MachinesGet()
        {
            // Generated from example definition: specification/migrate/resource-manager/Microsoft.Migrate/AssessmentProjects/stable/2019-10-01/examples/Machines_Get.json
            // this example is just showing the usage of "Machines_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ProjectResource created on azure
            // for more information of creating ProjectResource, please refer to the document of ProjectResource
            string subscriptionId = "6393a73f-8d55-47ef-b6dd-179b3e0c7910";
            string resourceGroupName = "abgoyal-westEurope";
            string projectName = "abgoyalWEselfhostb72bproject";
            ResourceIdentifier projectResourceId = ProjectResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName);
            ProjectResource project = client.GetProjectResource(projectResourceId);

            // get the collection of this MachineResource
            MachineCollection collection = project.GetMachines();

            // invoke the operation
            string machineName = "269ef295-a38d-4f8f-9779-77ce79088311";
            bool result = await collection.ExistsAsync(machineName);

            Console.WriteLine($"Succeeded: {result}");
        }

        // Machines_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetIfExists_MachinesGet()
        {
            // Generated from example definition: specification/migrate/resource-manager/Microsoft.Migrate/AssessmentProjects/stable/2019-10-01/examples/Machines_Get.json
            // this example is just showing the usage of "Machines_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ProjectResource created on azure
            // for more information of creating ProjectResource, please refer to the document of ProjectResource
            string subscriptionId = "6393a73f-8d55-47ef-b6dd-179b3e0c7910";
            string resourceGroupName = "abgoyal-westEurope";
            string projectName = "abgoyalWEselfhostb72bproject";
            ResourceIdentifier projectResourceId = ProjectResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName);
            ProjectResource project = client.GetProjectResource(projectResourceId);

            // get the collection of this MachineResource
            MachineCollection collection = project.GetMachines();

            // invoke the operation
            string machineName = "269ef295-a38d-4f8f-9779-77ce79088311";
            NullableResponse<MachineResource> response = await collection.GetIfExistsAsync(machineName);
            MachineResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine($"Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                MachineData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }
    }
}
