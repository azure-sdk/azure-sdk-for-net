// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.Migrate;
using Azure.ResourceManager.Migrate.Models;

namespace Azure.ResourceManager.Migrate.Samples
{
    public partial class Sample_ImportCollectorCollection
    {
        // ImportCollectors_ListByProject
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetAll_ImportCollectorsListByProject()
        {
            // Generated from example definition: specification/migrate/resource-manager/Microsoft.Migrate/AssessmentProjects/stable/2019-10-01/examples/ImportCollectors_ListByProject.json
            // this example is just showing the usage of "ImportCollectors_ListByProject" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ProjectResource created on azure
            // for more information of creating ProjectResource, please refer to the document of ProjectResource
            string subscriptionId = "31be0ff4-c932-4cb3-8efc-efa411d79280";
            string resourceGroupName = "markusavstestrg";
            string projectName = "rajoshCCY9671project";
            ResourceIdentifier projectResourceId = ProjectResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName);
            ProjectResource project = client.GetProjectResource(projectResourceId);

            // get the collection of this ImportCollectorResource
            ImportCollectorCollection collection = project.GetImportCollectors();

            // invoke the operation and iterate over the result
            await foreach (ImportCollectorResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                ImportCollectorData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }

        // ImportCollectors_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_ImportCollectorsGet()
        {
            // Generated from example definition: specification/migrate/resource-manager/Microsoft.Migrate/AssessmentProjects/stable/2019-10-01/examples/ImportCollectors_Get.json
            // this example is just showing the usage of "ImportCollectors_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ProjectResource created on azure
            // for more information of creating ProjectResource, please refer to the document of ProjectResource
            string subscriptionId = "31be0ff4-c932-4cb3-8efc-efa411d79280";
            string resourceGroupName = "markusavstestrg";
            string projectName = "rajoshCCY9671project";
            ResourceIdentifier projectResourceId = ProjectResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName);
            ProjectResource project = client.GetProjectResource(projectResourceId);

            // get the collection of this ImportCollectorResource
            ImportCollectorCollection collection = project.GetImportCollectors();

            // invoke the operation
            string importCollectorName = "importCollector2951";
            ImportCollectorResource result = await collection.GetAsync(importCollectorName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ImportCollectorData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // ImportCollectors_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Exists_ImportCollectorsGet()
        {
            // Generated from example definition: specification/migrate/resource-manager/Microsoft.Migrate/AssessmentProjects/stable/2019-10-01/examples/ImportCollectors_Get.json
            // this example is just showing the usage of "ImportCollectors_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ProjectResource created on azure
            // for more information of creating ProjectResource, please refer to the document of ProjectResource
            string subscriptionId = "31be0ff4-c932-4cb3-8efc-efa411d79280";
            string resourceGroupName = "markusavstestrg";
            string projectName = "rajoshCCY9671project";
            ResourceIdentifier projectResourceId = ProjectResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName);
            ProjectResource project = client.GetProjectResource(projectResourceId);

            // get the collection of this ImportCollectorResource
            ImportCollectorCollection collection = project.GetImportCollectors();

            // invoke the operation
            string importCollectorName = "importCollector2951";
            bool result = await collection.ExistsAsync(importCollectorName);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ImportCollectors_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetIfExists_ImportCollectorsGet()
        {
            // Generated from example definition: specification/migrate/resource-manager/Microsoft.Migrate/AssessmentProjects/stable/2019-10-01/examples/ImportCollectors_Get.json
            // this example is just showing the usage of "ImportCollectors_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ProjectResource created on azure
            // for more information of creating ProjectResource, please refer to the document of ProjectResource
            string subscriptionId = "31be0ff4-c932-4cb3-8efc-efa411d79280";
            string resourceGroupName = "markusavstestrg";
            string projectName = "rajoshCCY9671project";
            ResourceIdentifier projectResourceId = ProjectResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName);
            ProjectResource project = client.GetProjectResource(projectResourceId);

            // get the collection of this ImportCollectorResource
            ImportCollectorCollection collection = project.GetImportCollectors();

            // invoke the operation
            string importCollectorName = "importCollector2951";
            NullableResponse<ImportCollectorResource> response = await collection.GetIfExistsAsync(importCollectorName);
            ImportCollectorResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine($"Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                ImportCollectorData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }

        // ImportCollectors_Create
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CreateOrUpdate_ImportCollectorsCreate()
        {
            // Generated from example definition: specification/migrate/resource-manager/Microsoft.Migrate/AssessmentProjects/stable/2019-10-01/examples/ImportCollectors_Create.json
            // this example is just showing the usage of "ImportCollectors_Create" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ProjectResource created on azure
            // for more information of creating ProjectResource, please refer to the document of ProjectResource
            string subscriptionId = "31be0ff4-c932-4cb3-8efc-efa411d79280";
            string resourceGroupName = "markusavstestrg";
            string projectName = "rajoshCCY9671project";
            ResourceIdentifier projectResourceId = ProjectResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName);
            ProjectResource project = client.GetProjectResource(projectResourceId);

            // get the collection of this ImportCollectorResource
            ImportCollectorCollection collection = project.GetImportCollectors();

            // invoke the operation
            string importCollectorName = "importCollector2952";
            ImportCollectorData data = new ImportCollectorData()
            {
                ETag = new ETag("\"000064a2-0000-3300-0000-605994800000\""),
                Properties = new ImportCollectorProperties()
                {
                    DiscoverySiteId = "/subscriptions/31be0ff4-c932-4cb3-8efc-efa411d79280/resourcegroups/MarkusAVStestRG/providers/microsoft.offazure/importsites/rajoshCCY54cbimportSite",
                },
            };
            ArmOperation<ImportCollectorResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, importCollectorName, data);
            ImportCollectorResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ImportCollectorData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
