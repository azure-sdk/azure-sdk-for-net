// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.Resources;
using NUnit.Framework;

namespace Azure.ResourceManager.Migrate.Samples
{
    public partial class Sample_SqlGraphAssessmentOptionCollection
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_SqlGraphAssessmentOptionsOperationsGetMaximumSet()
        {
            // Generated from example definition: 2024-03-03-preview/SqlGraphAssessmentOptionsOperations_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "SqlGraphAssessmentOptions_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "C9266982-8528-4ED9-B481-C264A7164AB9";
            string resourceGroupName = "rgsqlAssessments";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // get the collection of this SqlGraphAssessmentOptionResource
            string projectName = "contosoProject";
            SqlGraphAssessmentOptionCollection collection = resourceGroupResource.GetSqlGraphAssessmentOptions(projectName);

            // invoke the operation
            SqlGraphAssessmentOptionResource result = await collection.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            SqlGraphAssessmentOptionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetAll_SqlGraphAssessmentOptionsOperationsListByParentMaximumSet()
        {
            // Generated from example definition: 2024-03-03-preview/SqlGraphAssessmentOptionsOperations_ListByParent_MaximumSet_Gen.json
            // this example is just showing the usage of "SqlGraphAssessmentOptions_ListByParent" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "C1DB66AE-BCF9-42FD-ADC2-390E0721C351";
            string resourceGroupName = "rgsqlAssessments";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // get the collection of this SqlGraphAssessmentOptionResource
            string projectName = "contosoProject";
            SqlGraphAssessmentOptionCollection collection = resourceGroupResource.GetSqlGraphAssessmentOptions(projectName);

            // invoke the operation and iterate over the result
            await foreach (SqlGraphAssessmentOptionResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                SqlGraphAssessmentOptionData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Exists_SqlGraphAssessmentOptionsOperationsGetMaximumSet()
        {
            // Generated from example definition: 2024-03-03-preview/SqlGraphAssessmentOptionsOperations_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "SqlGraphAssessmentOptions_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "C9266982-8528-4ED9-B481-C264A7164AB9";
            string resourceGroupName = "rgsqlAssessments";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // get the collection of this SqlGraphAssessmentOptionResource
            string projectName = "contosoProject";
            SqlGraphAssessmentOptionCollection collection = resourceGroupResource.GetSqlGraphAssessmentOptions(projectName);

            // invoke the operation
            bool result = await collection.ExistsAsync();

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetIfExists_SqlGraphAssessmentOptionsOperationsGetMaximumSet()
        {
            // Generated from example definition: 2024-03-03-preview/SqlGraphAssessmentOptionsOperations_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "SqlGraphAssessmentOptions_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "C9266982-8528-4ED9-B481-C264A7164AB9";
            string resourceGroupName = "rgsqlAssessments";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // get the collection of this SqlGraphAssessmentOptionResource
            string projectName = "contosoProject";
            SqlGraphAssessmentOptionCollection collection = resourceGroupResource.GetSqlGraphAssessmentOptions(projectName);

            // invoke the operation
            NullableResponse<SqlGraphAssessmentOptionResource> response = await collection.GetIfExistsAsync();
            SqlGraphAssessmentOptionResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine("Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                SqlGraphAssessmentOptionData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }
    }
}
