// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.Migrate.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.Migrate.Samples
{
    public partial class Sample_ImportSqlCollectorResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_ImportSqlCollectorOperationsGetMaximumSet()
        {
            // Generated from example definition: 2024-03-03-preview/ImportSqlCollectorOperations_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "ImportSqlCollector_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ImportSqlCollectorResource created on azure
            // for more information of creating ImportSqlCollectorResource, please refer to the document of ImportSqlCollectorResource
            string subscriptionId = "C1DB66AE-BCF9-42FD-ADC2-390E0721C351";
            string resourceGroupName = "rgsqlAssessments";
            string projectName = "contosoProject";
            string importSqlCollectorsName = "importCollector";
            ResourceIdentifier importSqlCollectorResourceId = ImportSqlCollectorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, importSqlCollectorsName);
            ImportSqlCollectorResource importSqlCollector = client.GetImportSqlCollectorResource(importSqlCollectorResourceId);

            // invoke the operation
            ImportSqlCollectorResource result = await importSqlCollector.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ImportSqlCollectorData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_ImportSqlCollectorOperationsDeleteMaximumSet()
        {
            // Generated from example definition: 2024-03-03-preview/ImportSqlCollectorOperations_Delete_MaximumSet_Gen.json
            // this example is just showing the usage of "ImportSqlCollector_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ImportSqlCollectorResource created on azure
            // for more information of creating ImportSqlCollectorResource, please refer to the document of ImportSqlCollectorResource
            string subscriptionId = "C1DB66AE-BCF9-42FD-ADC2-390E0721C351";
            string resourceGroupName = "rgsqlAssessments";
            string projectName = "contosoProject";
            string importSqlCollectorsName = "importCollector";
            ResourceIdentifier importSqlCollectorResourceId = ImportSqlCollectorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, importSqlCollectorsName);
            ImportSqlCollectorResource importSqlCollector = client.GetImportSqlCollectorResource(importSqlCollectorResourceId);

            // invoke the operation
            await importSqlCollector.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_ImportSqlCollectorOperationsCreateMaximumSet()
        {
            // Generated from example definition: 2024-03-03-preview/ImportSqlCollectorOperations_Create_MaximumSet_Gen.json
            // this example is just showing the usage of "ImportSqlCollector_Create" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ImportSqlCollectorResource created on azure
            // for more information of creating ImportSqlCollectorResource, please refer to the document of ImportSqlCollectorResource
            string subscriptionId = "C1DB66AE-BCF9-42FD-ADC2-390E0721C351";
            string resourceGroupName = "rgsqlAssessments";
            string projectName = "contosoProject";
            string importSqlCollectorsName = "importCollector";
            ResourceIdentifier importSqlCollectorResourceId = ImportSqlCollectorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, importSqlCollectorsName);
            ImportSqlCollectorResource importSqlCollector = client.GetImportSqlCollectorResource(importSqlCollectorResourceId);

            // invoke the operation
            ImportSqlCollectorData data = new ImportSqlCollectorData
            {
                Properties = new ImportSqlCollectorProperties
                {
                    DiscoverySiteId = "/subscriptions/C1DB66AE-BCF9-42FD-ADC2-390E0721C351/resourceGroups/rgsqlAssessments/providers/Microsoft.OffAzure/MasterSites/testproject8566mastersite/SqlSites/testproject8566sqlsites",
                },
            };
            ArmOperation<ImportSqlCollectorResource> lro = await importSqlCollector.UpdateAsync(WaitUntil.Completed, data);
            ImportSqlCollectorResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ImportSqlCollectorData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
