// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.Migrate.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.Migrate.Samples
{
    public partial class Sample_AssessmentProjectResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_AssessmentProjectsOperationsGet()
        {
            // Generated from example definition: 2024-03-03-preview/AssessmentProjectsOperations_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "AssessmentProject_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AssessmentProjectResource created on azure
            // for more information of creating AssessmentProjectResource, please refer to the document of AssessmentProjectResource
            string subscriptionId = "4bd2aa0f-2bd2-4d67-91a8-5a4533d58600";
            string resourceGroupName = "sakanwar";
            string projectName = "sakanwar1204project";
            ResourceIdentifier assessmentProjectResourceId = AssessmentProjectResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName);
            AssessmentProjectResource assessmentProject = client.GetAssessmentProjectResource(assessmentProjectResourceId);

            // invoke the operation
            AssessmentProjectResource result = await assessmentProject.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AssessmentProjectData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_AssessmentProjectsOperationsDelete()
        {
            // Generated from example definition: 2024-03-03-preview/AssessmentProjectsOperations_Delete_MaximumSet_Gen.json
            // this example is just showing the usage of "AssessmentProject_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AssessmentProjectResource created on azure
            // for more information of creating AssessmentProjectResource, please refer to the document of AssessmentProjectResource
            string subscriptionId = "A926B99C-7F4C-4556-871E-20CB8C6ADB56";
            string resourceGroupName = "rgmigrate";
            string projectName = "zqrsyncwahgydqvwuchkfd";
            ResourceIdentifier assessmentProjectResourceId = AssessmentProjectResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName);
            AssessmentProjectResource assessmentProject = client.GetAssessmentProjectResource(assessmentProjectResourceId);

            // invoke the operation
            await assessmentProject.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_AssessmentProjectsOperationsUpdate()
        {
            // Generated from example definition: 2024-03-03-preview/AssessmentProjectsOperations_Update_MaximumSet_Gen.json
            // this example is just showing the usage of "AssessmentProject_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AssessmentProjectResource created on azure
            // for more information of creating AssessmentProjectResource, please refer to the document of AssessmentProjectResource
            string subscriptionId = "4bd2aa0f-2bd2-4d67-91a8-5a4533d58600";
            string resourceGroupName = "sakanwar";
            string projectName = "sakanwar1204project";
            ResourceIdentifier assessmentProjectResourceId = AssessmentProjectResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName);
            AssessmentProjectResource assessmentProject = client.GetAssessmentProjectResource(assessmentProjectResourceId);

            // invoke the operation
            AssessmentProjectData data = new AssessmentProjectData(default)
            {
                Properties = new ProjectProperties
                {
                    AssessmentSolutionId = "/subscriptions/4bd2aa0f-2bd2-4d67-91a8-5a4533d58600/resourceGroups/sakanwar/providers/Microsoft.Storage/storageAccounts/sakanwar1204usa",
                    ProjectStatus = ProjectStatus.Active,
                    PublicNetworkAccess = "Disabled",
                    CustomerStorageAccountArmId = "/subscriptions/4bd2aa0f-2bd2-4d67-91a8-5a4533d58600/resourceGroups/sakanwar/providers/Microsoft.Storage/storageAccounts/sakanwar1204usa",
                },
                Tags =
{
["Migrate Project"] = "sakanwar-PE-SEA"
},
            };
            ArmOperation<AssessmentProjectResource> lro = await assessmentProject.UpdateAsync(WaitUntil.Completed, data);
            AssessmentProjectResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AssessmentProjectData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
