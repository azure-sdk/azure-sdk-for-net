// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.ResourceManager.Migrate.Samples
{
    public partial class Sample_AssessedMachineV2Collection
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_AssessedMachinesV2OperationsGetMaximumSet()
        {
            // Generated from example definition: 2024-03-03-preview/AssessedMachinesV2Operations_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "AssessedMachineV2_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MachineAssessmentV2Resource created on azure
            // for more information of creating MachineAssessmentV2Resource, please refer to the document of MachineAssessmentV2Resource
            string subscriptionId = "AEDD0824-BBE9-4E7C-8909-F46C68EA6BB9";
            string resourceGroupName = "rgmachineAssessments";
            string projectName = "contosoProject";
            string assessmentName = "assessmentName";
            ResourceIdentifier machineAssessmentV2ResourceId = MachineAssessmentV2Resource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, assessmentName);
            MachineAssessmentV2Resource machineAssessmentV2 = client.GetMachineAssessmentV2Resource(machineAssessmentV2ResourceId);

            // get the collection of this AssessedMachineV2Resource
            AssessedMachineV2Collection collection = machineAssessmentV2.GetAssessedMachineV2s();

            // invoke the operation
            string assessedMachineName = "machine1";
            AssessedMachineV2Resource result = await collection.GetAsync(assessedMachineName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AssessedMachineV2Data resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetAll_AssessedMachinesV2OperationsListByParentMaximumSet()
        {
            // Generated from example definition: 2024-03-03-preview/AssessedMachinesV2Operations_ListByParent_MaximumSet_Gen.json
            // this example is just showing the usage of "AssessedMachineV2_ListByParent" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MachineAssessmentV2Resource created on azure
            // for more information of creating MachineAssessmentV2Resource, please refer to the document of MachineAssessmentV2Resource
            string subscriptionId = "AEDD0824-BBE9-4E7C-8909-F46C68EA6BB9";
            string resourceGroupName = "rgmachineAssessments";
            string projectName = "contosoProject";
            string assessmentName = "assessmentName";
            ResourceIdentifier machineAssessmentV2ResourceId = MachineAssessmentV2Resource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, assessmentName);
            MachineAssessmentV2Resource machineAssessmentV2 = client.GetMachineAssessmentV2Resource(machineAssessmentV2ResourceId);

            // get the collection of this AssessedMachineV2Resource
            AssessedMachineV2Collection collection = machineAssessmentV2.GetAssessedMachineV2s();

            // invoke the operation and iterate over the result
            int? pageSize = 13;
            string continuationToken = "lsuhpxtnundds";
            int? totalRecordCount = 28;
            await foreach (AssessedMachineV2Resource item in collection.GetAllAsync(pageSize: pageSize, continuationToken: continuationToken, totalRecordCount: totalRecordCount))
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                AssessedMachineV2Data resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Exists_AssessedMachinesV2OperationsGetMaximumSet()
        {
            // Generated from example definition: 2024-03-03-preview/AssessedMachinesV2Operations_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "AssessedMachineV2_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MachineAssessmentV2Resource created on azure
            // for more information of creating MachineAssessmentV2Resource, please refer to the document of MachineAssessmentV2Resource
            string subscriptionId = "AEDD0824-BBE9-4E7C-8909-F46C68EA6BB9";
            string resourceGroupName = "rgmachineAssessments";
            string projectName = "contosoProject";
            string assessmentName = "assessmentName";
            ResourceIdentifier machineAssessmentV2ResourceId = MachineAssessmentV2Resource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, assessmentName);
            MachineAssessmentV2Resource machineAssessmentV2 = client.GetMachineAssessmentV2Resource(machineAssessmentV2ResourceId);

            // get the collection of this AssessedMachineV2Resource
            AssessedMachineV2Collection collection = machineAssessmentV2.GetAssessedMachineV2s();

            // invoke the operation
            string assessedMachineName = "machine1";
            bool result = await collection.ExistsAsync(assessedMachineName);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetIfExists_AssessedMachinesV2OperationsGetMaximumSet()
        {
            // Generated from example definition: 2024-03-03-preview/AssessedMachinesV2Operations_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "AssessedMachineV2_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MachineAssessmentV2Resource created on azure
            // for more information of creating MachineAssessmentV2Resource, please refer to the document of MachineAssessmentV2Resource
            string subscriptionId = "AEDD0824-BBE9-4E7C-8909-F46C68EA6BB9";
            string resourceGroupName = "rgmachineAssessments";
            string projectName = "contosoProject";
            string assessmentName = "assessmentName";
            ResourceIdentifier machineAssessmentV2ResourceId = MachineAssessmentV2Resource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, assessmentName);
            MachineAssessmentV2Resource machineAssessmentV2 = client.GetMachineAssessmentV2Resource(machineAssessmentV2ResourceId);

            // get the collection of this AssessedMachineV2Resource
            AssessedMachineV2Collection collection = machineAssessmentV2.GetAssessedMachineV2s();

            // invoke the operation
            string assessedMachineName = "machine1";
            NullableResponse<AssessedMachineV2Resource> response = await collection.GetIfExistsAsync(assessedMachineName);
            AssessedMachineV2Resource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine("Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                AssessedMachineV2Data resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }
    }
}
