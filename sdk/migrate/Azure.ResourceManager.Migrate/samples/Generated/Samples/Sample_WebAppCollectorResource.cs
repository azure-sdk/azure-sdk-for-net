// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.Migrate.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.Migrate.Samples
{
    public partial class Sample_WebAppCollectorResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_WebAppCollectorOperationsGet()
        {
            // Generated from example definition: 2024-03-03-preview/WebAppCollectorOperations_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "WebAppCollector_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this WebAppCollectorResource created on azure
            // for more information of creating WebAppCollectorResource, please refer to the document of WebAppCollectorResource
            string subscriptionId = "6D59B561-47B6-4AB8-84B5-39CF2B808C26";
            string resourceGroupName = "rgopenapi";
            string projectName = "sumukk-ccy-bcs4557project";
            string collectorName = "collector1";
            ResourceIdentifier webAppCollectorResourceId = WebAppCollectorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, collectorName);
            WebAppCollectorResource webAppCollector = client.GetWebAppCollectorResource(webAppCollectorResourceId);

            // invoke the operation
            WebAppCollectorResource result = await webAppCollector.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            WebAppCollectorData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_WebAppCollectorOperationsDelete()
        {
            // Generated from example definition: 2024-03-03-preview/WebAppCollectorOperations_Delete_MaximumSet_Gen.json
            // this example is just showing the usage of "WebAppCollector_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this WebAppCollectorResource created on azure
            // for more information of creating WebAppCollectorResource, please refer to the document of WebAppCollectorResource
            string subscriptionId = "6D59B561-47B6-4AB8-84B5-39CF2B808C26";
            string resourceGroupName = "rgopenapi";
            string projectName = "sumukk-ccy-bcs4557project";
            string collectorName = "collector1";
            ResourceIdentifier webAppCollectorResourceId = WebAppCollectorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, collectorName);
            WebAppCollectorResource webAppCollector = client.GetWebAppCollectorResource(webAppCollectorResourceId);

            // invoke the operation
            await webAppCollector.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_WebAppCollectorOperationsCreate()
        {
            // Generated from example definition: 2024-03-03-preview/WebAppCollectorOperations_Create_MaximumSet_Gen.json
            // this example is just showing the usage of "WebAppCollector_Create" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this WebAppCollectorResource created on azure
            // for more information of creating WebAppCollectorResource, please refer to the document of WebAppCollectorResource
            string subscriptionId = "6D59B561-47B6-4AB8-84B5-39CF2B808C26";
            string resourceGroupName = "rgopenapi";
            string projectName = "sumukk-ccy-bcs4557project";
            string collectorName = "collector1";
            ResourceIdentifier webAppCollectorResourceId = WebAppCollectorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, collectorName);
            WebAppCollectorResource webAppCollector = client.GetWebAppCollectorResource(webAppCollectorResourceId);

            // invoke the operation
            WebAppCollectorData data = new WebAppCollectorData
            {
                Properties = new CollectorPropertiesBaseWithAgent
                {
                    AgentProperties = new CollectorAgentPropertiesBase
                    {
                        Id = "fed93df5-b787-4e3f-a764-e3d2b9101a59-agent",
                        LastHeartbeatUtc = DateTimeOffset.Parse("2023-11-03T05:43:02.078Z"),
                        SpnDetails = new CollectorAgentSpnPropertiesBase
                        {
                            Authority = "https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47",
                            ApplicationId = "2f70d5e8-7adc-4c64-910a-7031079efc6e",
                            Audience = "2f70d5e8-7adc-4c64-910a-7031079efc6e",
                            ObjectId = "2f70d5e8-7adc-4c64-910a-7031079efc6e",
                            TenantId = "2f70d5e8-7adc-4c64-910a-7031079efc6e",
                        },
                    },
                    DiscoverySiteId = "/subscriptions/4bd2aa0f-2bd2-4d67-91a8-5a4533d58600/resourceGroups/sumukk-ccy-bcs/providers/Microsoft.OffAzure/MasterSites/sumukk-ccy-bcs9880mastersite/WebAppSites/sumukk-ccy-bcs9880webappsites",
                },
            };
            ArmOperation<WebAppCollectorResource> lro = await webAppCollector.UpdateAsync(WaitUntil.Completed, data);
            WebAppCollectorResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            WebAppCollectorData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
