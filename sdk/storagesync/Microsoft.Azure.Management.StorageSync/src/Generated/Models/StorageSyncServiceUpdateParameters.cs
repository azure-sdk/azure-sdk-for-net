// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.StorageSync.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Parameters for updating an Storage sync service.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class StorageSyncServiceUpdateParameters
    {
        /// <summary>
        /// Initializes a new instance of the
        /// StorageSyncServiceUpdateParameters class.
        /// </summary>
        public StorageSyncServiceUpdateParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// StorageSyncServiceUpdateParameters class.
        /// </summary>
        /// <param name="tags">The user-specified tags associated with the
        /// storage sync service.</param>
        /// <param name="incomingTrafficPolicy">Incoming Traffic Policy.
        /// Possible values include: 'AllowAllTraffic',
        /// 'AllowVirtualNetworksOnly'</param>
        /// <param name="identityType">Identity Type. Possible values include:
        /// 'None', 'SystemAssigned', 'UserAssigned', 'SystemAssigned,
        /// UserAssigned'</param>
        /// <param name="identityId">Comma separated list of user assigned
        /// identities</param>
        public StorageSyncServiceUpdateParameters(IDictionary<string, string> tags = default(IDictionary<string, string>), string incomingTrafficPolicy = default(string), string identityType = default(string), string identityId = default(string))
        {
            Tags = tags;
            IncomingTrafficPolicy = incomingTrafficPolicy;
            IdentityType = identityType;
            IdentityId = identityId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the user-specified tags associated with the storage
        /// sync service.
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Gets or sets incoming Traffic Policy. Possible values include:
        /// 'AllowAllTraffic', 'AllowVirtualNetworksOnly'
        /// </summary>
        [JsonProperty(PropertyName = "properties.incomingTrafficPolicy")]
        public string IncomingTrafficPolicy { get; set; }

        /// <summary>
        /// Gets or sets identity Type. Possible values include: 'None',
        /// 'SystemAssigned', 'UserAssigned', 'SystemAssigned, UserAssigned'
        /// </summary>
        [JsonProperty(PropertyName = "properties.identityType")]
        public string IdentityType { get; set; }

        /// <summary>
        /// Gets or sets comma separated list of user assigned identities
        /// </summary>
        [JsonProperty(PropertyName = "properties.identityId")]
        public string IdentityId { get; set; }

    }
}
