<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="AnalyzeStreamAsync(BinaryData,IEnumerable{VisualFeatures},string,string,string,bool?,CancellationToken)">
      <example>
This sample shows how to call AnalyzeStreamAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ImageAnalysisClient client = new ImageAnalysisClient(endpoint, credential);

Response<ImageAnalysisResult> response = await client.AnalyzeStreamAsync(BinaryData.FromObjectAsJson(new object()));
]]></code>
This sample shows how to call AnalyzeStreamAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ImageAnalysisClient client = new ImageAnalysisClient(endpoint, credential);

Response<ImageAnalysisResult> response = await client.AnalyzeStreamAsync(BinaryData.FromObjectAsJson(new object()), visualFeatures: new List<VisualFeatures>()
{
    VisualFeatures.Tags
}, modelName: "<modelName>", language: "<language>", smartCropsAspectRatios: "<smartCropsAspectRatios>", genderNeutralCaption: true);
]]></code></example>
    </member>
    <member name="AnalyzeStream(BinaryData,IEnumerable{VisualFeatures},string,string,string,bool?,CancellationToken)">
      <example>
This sample shows how to call AnalyzeStream.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ImageAnalysisClient client = new ImageAnalysisClient(endpoint, credential);

Response<ImageAnalysisResult> response = client.AnalyzeStream(BinaryData.FromObjectAsJson(new object()));
]]></code>
This sample shows how to call AnalyzeStream with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ImageAnalysisClient client = new ImageAnalysisClient(endpoint, credential);

Response<ImageAnalysisResult> response = client.AnalyzeStream(BinaryData.FromObjectAsJson(new object()), visualFeatures: new List<VisualFeatures>()
{
    VisualFeatures.Tags
}, modelName: "<modelName>", language: "<language>", smartCropsAspectRatios: "<smartCropsAspectRatios>", genderNeutralCaption: true);
]]></code></example>
    </member>
    <member name="AnalyzeStreamAsync(RequestContent,IEnumerable{VisualFeatures},string,string,string,bool?,RequestContext)">
      <example>
This sample shows how to call AnalyzeStreamAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ImageAnalysisClient client = new ImageAnalysisClient(endpoint, credential);

RequestContent content = RequestContent.Create(new object());
Response response = await client.AnalyzeStreamAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("metadata").GetProperty("height").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("width").ToString());
Console.WriteLine(result.GetProperty("modelVersion").ToString());
]]></code>
This sample shows how to call AnalyzeStreamAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ImageAnalysisClient client = new ImageAnalysisClient(endpoint, credential);

RequestContent content = RequestContent.Create(new object());
Response response = await client.AnalyzeStreamAsync(content, visualFeatures: new List<VisualFeatures>()
{
    VisualFeatures.Tags
}, modelName: "<modelName>", language: "<language>", smartCropsAspectRatios: "<smartCropsAspectRatios>", genderNeutralCaption: true);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("adultResult").GetProperty("adult").GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("adultResult").GetProperty("adult").GetProperty("isMatch").ToString());
Console.WriteLine(result.GetProperty("adultResult").GetProperty("gore").GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("adultResult").GetProperty("gore").GetProperty("isMatch").ToString());
Console.WriteLine(result.GetProperty("adultResult").GetProperty("racy").GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("adultResult").GetProperty("racy").GetProperty("isMatch").ToString());
Console.WriteLine(result.GetProperty("captionResult").GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("captionResult").GetProperty("text").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("x").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("y").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("w").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("h").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("objectsResult").GetProperty("values")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("objectsResult").GetProperty("values")[0].GetProperty("tags")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("objectsResult").GetProperty("values")[0].GetProperty("tags")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("tagsResult").GetProperty("values")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("tagsResult").GetProperty("values")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("denseCaptionsResult").GetProperty("values")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("denseCaptionsResult").GetProperty("values")[0].GetProperty("text").ToString());
Console.WriteLine(result.GetProperty("denseCaptionsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("x").ToString());
Console.WriteLine(result.GetProperty("denseCaptionsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("y").ToString());
Console.WriteLine(result.GetProperty("denseCaptionsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("w").ToString());
Console.WriteLine(result.GetProperty("denseCaptionsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("h").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("height").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("width").ToString());
Console.WriteLine(result.GetProperty("modelVersion").ToString());
Console.WriteLine(result.GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("x").ToString());
Console.WriteLine(result.GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("y").ToString());
Console.WriteLine(result.GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("w").ToString());
Console.WriteLine(result.GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("h").ToString());
Console.WriteLine(result.GetProperty("objectsResult").GetProperty("values")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("objectsResult").GetProperty("values")[0].GetProperty("tags")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("objectsResult").GetProperty("values")[0].GetProperty("tags")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("peopleResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("x").ToString());
Console.WriteLine(result.GetProperty("peopleResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("y").ToString());
Console.WriteLine(result.GetProperty("peopleResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("w").ToString());
Console.WriteLine(result.GetProperty("peopleResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("h").ToString());
Console.WriteLine(result.GetProperty("peopleResult").GetProperty("values")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("content").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("angle").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("height").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("lines")[0].GetProperty("boundingBox")[0].ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("lines")[0].GetProperty("content").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("lines")[0].GetProperty("spans")[0].GetProperty("length").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("lines")[0].GetProperty("spans")[0].GetProperty("offset").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("pageNumber").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("spans")[0].GetProperty("length").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("spans")[0].GetProperty("offset").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("width").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("words")[0].GetProperty("boundingBox")[0].ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("words")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("words")[0].GetProperty("content").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("words")[0].GetProperty("span").GetProperty("length").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("words")[0].GetProperty("span").GetProperty("offset").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("stringIndexType").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("styles")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("styles")[0].GetProperty("isHandwritten").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("styles")[0].GetProperty("spans")[0].GetProperty("length").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("styles")[0].GetProperty("spans")[0].GetProperty("offset").ToString());
Console.WriteLine(result.GetProperty("smartCropsResult").GetProperty("values")[0].GetProperty("aspectRatio").ToString());
Console.WriteLine(result.GetProperty("smartCropsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("x").ToString());
Console.WriteLine(result.GetProperty("smartCropsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("y").ToString());
Console.WriteLine(result.GetProperty("smartCropsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("w").ToString());
Console.WriteLine(result.GetProperty("smartCropsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("h").ToString());
Console.WriteLine(result.GetProperty("tagsResult").GetProperty("values")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("tagsResult").GetProperty("values")[0].GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="AnalyzeStream(RequestContent,IEnumerable{VisualFeatures},string,string,string,bool?,RequestContext)">
      <example>
This sample shows how to call AnalyzeStream and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ImageAnalysisClient client = new ImageAnalysisClient(endpoint, credential);

RequestContent content = RequestContent.Create(new object());
Response response = client.AnalyzeStream(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("metadata").GetProperty("height").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("width").ToString());
Console.WriteLine(result.GetProperty("modelVersion").ToString());
]]></code>
This sample shows how to call AnalyzeStream with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ImageAnalysisClient client = new ImageAnalysisClient(endpoint, credential);

RequestContent content = RequestContent.Create(new object());
Response response = client.AnalyzeStream(content, visualFeatures: new List<VisualFeatures>()
{
    VisualFeatures.Tags
}, modelName: "<modelName>", language: "<language>", smartCropsAspectRatios: "<smartCropsAspectRatios>", genderNeutralCaption: true);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("adultResult").GetProperty("adult").GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("adultResult").GetProperty("adult").GetProperty("isMatch").ToString());
Console.WriteLine(result.GetProperty("adultResult").GetProperty("gore").GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("adultResult").GetProperty("gore").GetProperty("isMatch").ToString());
Console.WriteLine(result.GetProperty("adultResult").GetProperty("racy").GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("adultResult").GetProperty("racy").GetProperty("isMatch").ToString());
Console.WriteLine(result.GetProperty("captionResult").GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("captionResult").GetProperty("text").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("x").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("y").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("w").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("h").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("objectsResult").GetProperty("values")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("objectsResult").GetProperty("values")[0].GetProperty("tags")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("objectsResult").GetProperty("values")[0].GetProperty("tags")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("tagsResult").GetProperty("values")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("tagsResult").GetProperty("values")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("denseCaptionsResult").GetProperty("values")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("denseCaptionsResult").GetProperty("values")[0].GetProperty("text").ToString());
Console.WriteLine(result.GetProperty("denseCaptionsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("x").ToString());
Console.WriteLine(result.GetProperty("denseCaptionsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("y").ToString());
Console.WriteLine(result.GetProperty("denseCaptionsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("w").ToString());
Console.WriteLine(result.GetProperty("denseCaptionsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("h").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("height").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("width").ToString());
Console.WriteLine(result.GetProperty("modelVersion").ToString());
Console.WriteLine(result.GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("x").ToString());
Console.WriteLine(result.GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("y").ToString());
Console.WriteLine(result.GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("w").ToString());
Console.WriteLine(result.GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("h").ToString());
Console.WriteLine(result.GetProperty("objectsResult").GetProperty("values")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("objectsResult").GetProperty("values")[0].GetProperty("tags")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("objectsResult").GetProperty("values")[0].GetProperty("tags")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("peopleResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("x").ToString());
Console.WriteLine(result.GetProperty("peopleResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("y").ToString());
Console.WriteLine(result.GetProperty("peopleResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("w").ToString());
Console.WriteLine(result.GetProperty("peopleResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("h").ToString());
Console.WriteLine(result.GetProperty("peopleResult").GetProperty("values")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("content").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("angle").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("height").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("lines")[0].GetProperty("boundingBox")[0].ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("lines")[0].GetProperty("content").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("lines")[0].GetProperty("spans")[0].GetProperty("length").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("lines")[0].GetProperty("spans")[0].GetProperty("offset").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("pageNumber").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("spans")[0].GetProperty("length").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("spans")[0].GetProperty("offset").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("width").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("words")[0].GetProperty("boundingBox")[0].ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("words")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("words")[0].GetProperty("content").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("words")[0].GetProperty("span").GetProperty("length").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("words")[0].GetProperty("span").GetProperty("offset").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("stringIndexType").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("styles")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("styles")[0].GetProperty("isHandwritten").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("styles")[0].GetProperty("spans")[0].GetProperty("length").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("styles")[0].GetProperty("spans")[0].GetProperty("offset").ToString());
Console.WriteLine(result.GetProperty("smartCropsResult").GetProperty("values")[0].GetProperty("aspectRatio").ToString());
Console.WriteLine(result.GetProperty("smartCropsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("x").ToString());
Console.WriteLine(result.GetProperty("smartCropsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("y").ToString());
Console.WriteLine(result.GetProperty("smartCropsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("w").ToString());
Console.WriteLine(result.GetProperty("smartCropsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("h").ToString());
Console.WriteLine(result.GetProperty("tagsResult").GetProperty("values")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("tagsResult").GetProperty("values")[0].GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="AnalyzeUrlAsync(ImageUrl,IEnumerable{VisualFeatures},string,string,string,bool?,CancellationToken)">
      <example>
This sample shows how to call AnalyzeUrlAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ImageAnalysisClient client = new ImageAnalysisClient(endpoint, credential);

ImageUrl imageContents = new ImageUrl(new Uri("http://localhost:3000"));
Response<ImageAnalysisResult> response = await client.AnalyzeUrlAsync(imageContents);
]]></code>
This sample shows how to call AnalyzeUrlAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ImageAnalysisClient client = new ImageAnalysisClient(endpoint, credential);

ImageUrl imageContents = new ImageUrl(new Uri("http://localhost:3000"));
Response<ImageAnalysisResult> response = await client.AnalyzeUrlAsync(imageContents, visualFeatures: new List<VisualFeatures>()
{
    VisualFeatures.Tags
}, modelName: "<modelName>", language: "<language>", smartCropsAspectRatios: "<smartCropsAspectRatios>", genderNeutralCaption: true);
]]></code></example>
    </member>
    <member name="AnalyzeUrl(ImageUrl,IEnumerable{VisualFeatures},string,string,string,bool?,CancellationToken)">
      <example>
This sample shows how to call AnalyzeUrl.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ImageAnalysisClient client = new ImageAnalysisClient(endpoint, credential);

ImageUrl imageContents = new ImageUrl(new Uri("http://localhost:3000"));
Response<ImageAnalysisResult> response = client.AnalyzeUrl(imageContents);
]]></code>
This sample shows how to call AnalyzeUrl with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ImageAnalysisClient client = new ImageAnalysisClient(endpoint, credential);

ImageUrl imageContents = new ImageUrl(new Uri("http://localhost:3000"));
Response<ImageAnalysisResult> response = client.AnalyzeUrl(imageContents, visualFeatures: new List<VisualFeatures>()
{
    VisualFeatures.Tags
}, modelName: "<modelName>", language: "<language>", smartCropsAspectRatios: "<smartCropsAspectRatios>", genderNeutralCaption: true);
]]></code></example>
    </member>
    <member name="AnalyzeUrlAsync(RequestContent,IEnumerable{VisualFeatures},string,string,string,bool?,RequestContext)">
      <example>
This sample shows how to call AnalyzeUrlAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ImageAnalysisClient client = new ImageAnalysisClient(endpoint, credential);

RequestContent content = RequestContent.Create(new
{
    url = "http://localhost:3000",
});
Response response = await client.AnalyzeUrlAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("metadata").GetProperty("height").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("width").ToString());
Console.WriteLine(result.GetProperty("modelVersion").ToString());
]]></code>
This sample shows how to call AnalyzeUrlAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ImageAnalysisClient client = new ImageAnalysisClient(endpoint, credential);

RequestContent content = RequestContent.Create(new
{
    url = "http://localhost:3000",
});
Response response = await client.AnalyzeUrlAsync(content, visualFeatures: new List<VisualFeatures>()
{
    VisualFeatures.Tags
}, modelName: "<modelName>", language: "<language>", smartCropsAspectRatios: "<smartCropsAspectRatios>", genderNeutralCaption: true);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("adultResult").GetProperty("adult").GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("adultResult").GetProperty("adult").GetProperty("isMatch").ToString());
Console.WriteLine(result.GetProperty("adultResult").GetProperty("gore").GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("adultResult").GetProperty("gore").GetProperty("isMatch").ToString());
Console.WriteLine(result.GetProperty("adultResult").GetProperty("racy").GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("adultResult").GetProperty("racy").GetProperty("isMatch").ToString());
Console.WriteLine(result.GetProperty("captionResult").GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("captionResult").GetProperty("text").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("x").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("y").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("w").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("h").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("objectsResult").GetProperty("values")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("objectsResult").GetProperty("values")[0].GetProperty("tags")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("objectsResult").GetProperty("values")[0].GetProperty("tags")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("tagsResult").GetProperty("values")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("tagsResult").GetProperty("values")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("denseCaptionsResult").GetProperty("values")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("denseCaptionsResult").GetProperty("values")[0].GetProperty("text").ToString());
Console.WriteLine(result.GetProperty("denseCaptionsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("x").ToString());
Console.WriteLine(result.GetProperty("denseCaptionsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("y").ToString());
Console.WriteLine(result.GetProperty("denseCaptionsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("w").ToString());
Console.WriteLine(result.GetProperty("denseCaptionsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("h").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("height").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("width").ToString());
Console.WriteLine(result.GetProperty("modelVersion").ToString());
Console.WriteLine(result.GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("x").ToString());
Console.WriteLine(result.GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("y").ToString());
Console.WriteLine(result.GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("w").ToString());
Console.WriteLine(result.GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("h").ToString());
Console.WriteLine(result.GetProperty("objectsResult").GetProperty("values")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("objectsResult").GetProperty("values")[0].GetProperty("tags")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("objectsResult").GetProperty("values")[0].GetProperty("tags")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("peopleResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("x").ToString());
Console.WriteLine(result.GetProperty("peopleResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("y").ToString());
Console.WriteLine(result.GetProperty("peopleResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("w").ToString());
Console.WriteLine(result.GetProperty("peopleResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("h").ToString());
Console.WriteLine(result.GetProperty("peopleResult").GetProperty("values")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("content").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("angle").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("height").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("lines")[0].GetProperty("boundingBox")[0].ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("lines")[0].GetProperty("content").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("lines")[0].GetProperty("spans")[0].GetProperty("length").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("lines")[0].GetProperty("spans")[0].GetProperty("offset").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("pageNumber").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("spans")[0].GetProperty("length").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("spans")[0].GetProperty("offset").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("width").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("words")[0].GetProperty("boundingBox")[0].ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("words")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("words")[0].GetProperty("content").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("words")[0].GetProperty("span").GetProperty("length").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("words")[0].GetProperty("span").GetProperty("offset").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("stringIndexType").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("styles")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("styles")[0].GetProperty("isHandwritten").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("styles")[0].GetProperty("spans")[0].GetProperty("length").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("styles")[0].GetProperty("spans")[0].GetProperty("offset").ToString());
Console.WriteLine(result.GetProperty("smartCropsResult").GetProperty("values")[0].GetProperty("aspectRatio").ToString());
Console.WriteLine(result.GetProperty("smartCropsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("x").ToString());
Console.WriteLine(result.GetProperty("smartCropsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("y").ToString());
Console.WriteLine(result.GetProperty("smartCropsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("w").ToString());
Console.WriteLine(result.GetProperty("smartCropsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("h").ToString());
Console.WriteLine(result.GetProperty("tagsResult").GetProperty("values")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("tagsResult").GetProperty("values")[0].GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="AnalyzeUrl(RequestContent,IEnumerable{VisualFeatures},string,string,string,bool?,RequestContext)">
      <example>
This sample shows how to call AnalyzeUrl and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ImageAnalysisClient client = new ImageAnalysisClient(endpoint, credential);

RequestContent content = RequestContent.Create(new
{
    url = "http://localhost:3000",
});
Response response = client.AnalyzeUrl(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("metadata").GetProperty("height").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("width").ToString());
Console.WriteLine(result.GetProperty("modelVersion").ToString());
]]></code>
This sample shows how to call AnalyzeUrl with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ImageAnalysisClient client = new ImageAnalysisClient(endpoint, credential);

RequestContent content = RequestContent.Create(new
{
    url = "http://localhost:3000",
});
Response response = client.AnalyzeUrl(content, visualFeatures: new List<VisualFeatures>()
{
    VisualFeatures.Tags
}, modelName: "<modelName>", language: "<language>", smartCropsAspectRatios: "<smartCropsAspectRatios>", genderNeutralCaption: true);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("adultResult").GetProperty("adult").GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("adultResult").GetProperty("adult").GetProperty("isMatch").ToString());
Console.WriteLine(result.GetProperty("adultResult").GetProperty("gore").GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("adultResult").GetProperty("gore").GetProperty("isMatch").ToString());
Console.WriteLine(result.GetProperty("adultResult").GetProperty("racy").GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("adultResult").GetProperty("racy").GetProperty("isMatch").ToString());
Console.WriteLine(result.GetProperty("captionResult").GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("captionResult").GetProperty("text").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("x").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("y").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("w").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("h").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("objectsResult").GetProperty("values")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("objectsResult").GetProperty("values")[0].GetProperty("tags")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("objectsResult").GetProperty("values")[0].GetProperty("tags")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("tagsResult").GetProperty("values")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("customModelResult").GetProperty("tagsResult").GetProperty("values")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("denseCaptionsResult").GetProperty("values")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("denseCaptionsResult").GetProperty("values")[0].GetProperty("text").ToString());
Console.WriteLine(result.GetProperty("denseCaptionsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("x").ToString());
Console.WriteLine(result.GetProperty("denseCaptionsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("y").ToString());
Console.WriteLine(result.GetProperty("denseCaptionsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("w").ToString());
Console.WriteLine(result.GetProperty("denseCaptionsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("h").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("height").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("width").ToString());
Console.WriteLine(result.GetProperty("modelVersion").ToString());
Console.WriteLine(result.GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("x").ToString());
Console.WriteLine(result.GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("y").ToString());
Console.WriteLine(result.GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("w").ToString());
Console.WriteLine(result.GetProperty("objectsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("h").ToString());
Console.WriteLine(result.GetProperty("objectsResult").GetProperty("values")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("objectsResult").GetProperty("values")[0].GetProperty("tags")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("objectsResult").GetProperty("values")[0].GetProperty("tags")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("peopleResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("x").ToString());
Console.WriteLine(result.GetProperty("peopleResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("y").ToString());
Console.WriteLine(result.GetProperty("peopleResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("w").ToString());
Console.WriteLine(result.GetProperty("peopleResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("h").ToString());
Console.WriteLine(result.GetProperty("peopleResult").GetProperty("values")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("content").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("angle").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("height").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("lines")[0].GetProperty("boundingBox")[0].ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("lines")[0].GetProperty("content").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("lines")[0].GetProperty("spans")[0].GetProperty("length").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("lines")[0].GetProperty("spans")[0].GetProperty("offset").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("pageNumber").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("spans")[0].GetProperty("length").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("spans")[0].GetProperty("offset").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("width").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("words")[0].GetProperty("boundingBox")[0].ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("words")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("words")[0].GetProperty("content").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("words")[0].GetProperty("span").GetProperty("length").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("pages")[0].GetProperty("words")[0].GetProperty("span").GetProperty("offset").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("stringIndexType").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("styles")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("styles")[0].GetProperty("isHandwritten").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("styles")[0].GetProperty("spans")[0].GetProperty("length").ToString());
Console.WriteLine(result.GetProperty("readResult").GetProperty("styles")[0].GetProperty("spans")[0].GetProperty("offset").ToString());
Console.WriteLine(result.GetProperty("smartCropsResult").GetProperty("values")[0].GetProperty("aspectRatio").ToString());
Console.WriteLine(result.GetProperty("smartCropsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("x").ToString());
Console.WriteLine(result.GetProperty("smartCropsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("y").ToString());
Console.WriteLine(result.GetProperty("smartCropsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("w").ToString());
Console.WriteLine(result.GetProperty("smartCropsResult").GetProperty("values")[0].GetProperty("boundingBox").GetProperty("h").ToString());
Console.WriteLine(result.GetProperty("tagsResult").GetProperty("values")[0].GetProperty("confidence").ToString());
Console.WriteLine(result.GetProperty("tagsResult").GetProperty("values")[0].GetProperty("name").ToString());
]]></code></example>
    </member>
  </members>
</doc>