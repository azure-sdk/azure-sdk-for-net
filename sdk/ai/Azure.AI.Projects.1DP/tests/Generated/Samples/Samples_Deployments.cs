// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.AI.Projects.1DP.Samples
{
public partial class Samples_Deployments
{
    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Deployment_GetDeployment_DeploymentsGetMaximumSet()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Deployments client = new Projects.1DP.AIProjectClient(endpoint, credential).GetDeploymentsClient(apiVersion: "2025-05-15-preview");

        Response response = client.GetDeployment("qqvacpzjfk", (RequestContext)null);

        JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
        Console.WriteLine(result.GetProperty("type").ToString());
        Console.WriteLine(result.GetProperty("name").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Deployment_GetDeployment_DeploymentsGetMaximumSet_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Deployments client = new Projects.1DP.AIProjectClient(endpoint, credential).GetDeploymentsClient(apiVersion: "2025-05-15-preview");

        Response response = await client.GetDeploymentAsync("qqvacpzjfk", (RequestContext)null);

        JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
        Console.WriteLine(result.GetProperty("type").ToString());
        Console.WriteLine(result.GetProperty("name").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Deployment_GetDeployment_DeploymentsGetMaximumSet_Convenience()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Deployments client = new Projects.1DP.AIProjectClient(endpoint, credential).GetDeploymentsClient(apiVersion: "2025-05-15-preview");

        Azure.Response < AI.Projects.1DP.Deployment > response = client.GetDeployment("qqvacpzjfk");
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Deployment_GetDeployment_DeploymentsGetMaximumSet_Convenience_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Deployments client = new Projects.1DP.AIProjectClient(endpoint, credential).GetDeploymentsClient(apiVersion: "2025-05-15-preview");

        Azure.Response < AI.Projects.1DP.Deployment > response = await client.GetDeploymentAsync("qqvacpzjfk");
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Deployment_GetDeployments_DeploymentsListMaximumSet()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Deployments client = new Projects.1DP.AIProjectClient(endpoint, credential).GetDeploymentsClient(apiVersion: "2025-05-15-preview");

        foreach (BinaryData item in client.GetDeployments("kznreojrvlwdq", "gplerszsuyisseeksnyvkaqperxox", (string)null, (int?)null, 8, 21, (RequestContext)null))
        {
            JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Deployment_GetDeployments_DeploymentsListMaximumSet_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Deployments client = new Projects.1DP.AIProjectClient(endpoint, credential).GetDeploymentsClient(apiVersion: "2025-05-15-preview");

        await foreach (BinaryData item in client.GetDeploymentsAsync("kznreojrvlwdq", "gplerszsuyisseeksnyvkaqperxox", (string)null, (int?)null, 8, 21, (RequestContext)null))
        {
            JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Deployment_GetDeployments_DeploymentsListMaximumSet_Convenience()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Deployments client = new Projects.1DP.AIProjectClient(endpoint, credential).GetDeploymentsClient(apiVersion: "2025-05-15-preview");

        foreach (Projects.1DP.Deployment item in client.GetDeployments())
{
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Deployment_GetDeployments_DeploymentsListMaximumSet_Convenience_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Deployments client = new Projects.1DP.AIProjectClient(endpoint, credential).GetDeploymentsClient(apiVersion: "2025-05-15-preview");

        await foreach (Projects.1DP.Deployment item in client.GetDeploymentsAsync())
{
        }
    }
}
}
