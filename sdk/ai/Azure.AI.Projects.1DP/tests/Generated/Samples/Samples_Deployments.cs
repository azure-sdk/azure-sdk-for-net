// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.AI.Projects.1DP.Samples
{
public partial class Samples_Deployments
{
    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Deployment_GetDeployment_ShortVersion()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Deployments client = new Projects.1DP.AIProjectClient(endpoint, credential).GetDeploymentsClient(apiVersion: "2025-05-15-preview");

        Response response = client.GetDeployment("<name>", (RequestContext)null);

        JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
        Console.WriteLine(result.GetProperty("type").ToString());
        Console.WriteLine(result.GetProperty("name").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Deployment_GetDeployment_ShortVersion_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Deployments client = new Projects.1DP.AIProjectClient(endpoint, credential).GetDeploymentsClient(apiVersion: "2025-05-15-preview");

        Response response = await client.GetDeploymentAsync("<name>", (RequestContext)null);

        JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
        Console.WriteLine(result.GetProperty("type").ToString());
        Console.WriteLine(result.GetProperty("name").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Deployment_GetDeployment_ShortVersion_Convenience()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Deployments client = new Projects.1DP.AIProjectClient(endpoint, credential).GetDeploymentsClient(apiVersion: "2025-05-15-preview");

        Azure.Response < AI.Projects.1DP.Deployment > response = client.GetDeployment("<name>");
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Deployment_GetDeployment_ShortVersion_Convenience_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Deployments client = new Projects.1DP.AIProjectClient(endpoint, credential).GetDeploymentsClient(apiVersion: "2025-05-15-preview");

        Azure.Response < AI.Projects.1DP.Deployment > response = await client.GetDeploymentAsync("<name>");
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Deployment_GetDeployment_AllParameters()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Deployments client = new Projects.1DP.AIProjectClient(endpoint, credential).GetDeploymentsClient(apiVersion: "2025-05-15-preview");

        Response response = client.GetDeployment("<name>", (RequestContext)null);

        JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
        Console.WriteLine(result.GetProperty("type").ToString());
        Console.WriteLine(result.GetProperty("name").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Deployment_GetDeployment_AllParameters_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Deployments client = new Projects.1DP.AIProjectClient(endpoint, credential).GetDeploymentsClient(apiVersion: "2025-05-15-preview");

        Response response = await client.GetDeploymentAsync("<name>", (RequestContext)null);

        JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
        Console.WriteLine(result.GetProperty("type").ToString());
        Console.WriteLine(result.GetProperty("name").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Deployment_GetDeployment_AllParameters_Convenience()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Deployments client = new Projects.1DP.AIProjectClient(endpoint, credential).GetDeploymentsClient(apiVersion: "2025-05-15-preview");

        Azure.Response < AI.Projects.1DP.Deployment > response = client.GetDeployment("<name>");
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Deployment_GetDeployment_AllParameters_Convenience_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Deployments client = new Projects.1DP.AIProjectClient(endpoint, credential).GetDeploymentsClient(apiVersion: "2025-05-15-preview");

        Azure.Response < AI.Projects.1DP.Deployment > response = await client.GetDeploymentAsync("<name>");
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Deployment_GetDeployments_ShortVersion()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Deployments client = new Projects.1DP.AIProjectClient(endpoint, credential).GetDeploymentsClient(apiVersion: "2025-05-15-preview");

        foreach (BinaryData item in client.GetDeployments((string)null, (string)null, (string)null, (int?)null, (int?)null, (int?)null, (RequestContext)null))
        {
            JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Deployment_GetDeployments_ShortVersion_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Deployments client = new Projects.1DP.AIProjectClient(endpoint, credential).GetDeploymentsClient(apiVersion: "2025-05-15-preview");

        await foreach (BinaryData item in client.GetDeploymentsAsync((string)null, (string)null, (string)null, (int?)null, (int?)null, (int?)null, (RequestContext)null))
        {
            JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Deployment_GetDeployments_ShortVersion_Convenience()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Deployments client = new Projects.1DP.AIProjectClient(endpoint, credential).GetDeploymentsClient(apiVersion: "2025-05-15-preview");

        foreach (Projects.1DP.Deployment item in client.GetDeployments())
{
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Deployment_GetDeployments_ShortVersion_Convenience_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Deployments client = new Projects.1DP.AIProjectClient(endpoint, credential).GetDeploymentsClient(apiVersion: "2025-05-15-preview");

        await foreach (Projects.1DP.Deployment item in client.GetDeploymentsAsync())
{
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Deployment_GetDeployments_AllParameters()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Deployments client = new Projects.1DP.AIProjectClient(endpoint, credential).GetDeploymentsClient(apiVersion: "2025-05-15-preview");

        foreach (BinaryData item in client.GetDeployments("<modelPublisher>", "<modelName>", "ModelDeployment", 1234, 1234, 1234, (RequestContext)null))
        {
            JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Deployment_GetDeployments_AllParameters_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Deployments client = new Projects.1DP.AIProjectClient(endpoint, credential).GetDeploymentsClient(apiVersion: "2025-05-15-preview");

        await foreach (BinaryData item in client.GetDeploymentsAsync("<modelPublisher>", "<modelName>", "ModelDeployment", 1234, 1234, 1234, (RequestContext)null))
        {
            JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Deployment_GetDeployments_AllParameters_Convenience()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Deployments client = new Projects.1DP.AIProjectClient(endpoint, credential).GetDeploymentsClient(apiVersion: "2025-05-15-preview");

        foreach (Projects.1DP.Deployment item in client.GetDeployments(modelPublisher: "<modelPublisher>", modelName: "<modelName>", deploymentType: AI.Projects.1DP.DeploymentType.ModelDeployment, maxCount: 1234, skip: 1234, maxpagesize: 1234))
{
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Deployment_GetDeployments_AllParameters_Convenience_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Deployments client = new Projects.1DP.AIProjectClient(endpoint, credential).GetDeploymentsClient(apiVersion: "2025-05-15-preview");

        await foreach (Projects.1DP.Deployment item in client.GetDeploymentsAsync(modelPublisher: "<modelPublisher>", modelName: "<modelName>", deploymentType: AI.Projects.1DP.DeploymentType.ModelDeployment, maxCount: 1234, skip: 1234, maxpagesize: 1234))
{
        }
    }
}
}
