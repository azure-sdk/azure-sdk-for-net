// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.AI.Projects.1DP.Samples
{
public partial class Samples_Indexes
{
    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Indexes_GetIndex_ShortVersion()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        Response response = client.GetIndex("<name>", "<version>", (RequestContext)null);

        JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
        Console.WriteLine(result.GetProperty("type").ToString());
        Console.WriteLine(result.GetProperty("name").ToString());
        Console.WriteLine(result.GetProperty("version").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Indexes_GetIndex_ShortVersion_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        Response response = await client.GetIndexAsync("<name>", "<version>", (RequestContext)null);

        JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
        Console.WriteLine(result.GetProperty("type").ToString());
        Console.WriteLine(result.GetProperty("name").ToString());
        Console.WriteLine(result.GetProperty("version").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Indexes_GetIndex_ShortVersion_Convenience()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        Azure.Response < AI.Projects.1DP.Index > response = client.GetIndex("<name>", "<version>");
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Indexes_GetIndex_ShortVersion_Convenience_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        Azure.Response < AI.Projects.1DP.Index > response = await client.GetIndexAsync("<name>", "<version>");
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Indexes_GetIndex_AllParameters()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        Response response = client.GetIndex("<name>", "<version>", (RequestContext)null);

        JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
        Console.WriteLine(result.GetProperty("type").ToString());
        Console.WriteLine(result.GetProperty("stage").ToString());
        Console.WriteLine(result.GetProperty("id").ToString());
        Console.WriteLine(result.GetProperty("name").ToString());
        Console.WriteLine(result.GetProperty("version").ToString());
        Console.WriteLine(result.GetProperty("description").ToString());
        Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Indexes_GetIndex_AllParameters_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        Response response = await client.GetIndexAsync("<name>", "<version>", (RequestContext)null);

        JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
        Console.WriteLine(result.GetProperty("type").ToString());
        Console.WriteLine(result.GetProperty("stage").ToString());
        Console.WriteLine(result.GetProperty("id").ToString());
        Console.WriteLine(result.GetProperty("name").ToString());
        Console.WriteLine(result.GetProperty("version").ToString());
        Console.WriteLine(result.GetProperty("description").ToString());
        Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Indexes_GetIndex_AllParameters_Convenience()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        Azure.Response < AI.Projects.1DP.Index > response = client.GetIndex("<name>", "<version>");
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Indexes_GetIndex_AllParameters_Convenience_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        Azure.Response < AI.Projects.1DP.Index > response = await client.GetIndexAsync("<name>", "<version>");
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Indexes_Delete_ShortVersion()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        Response response = client.Delete("<name>", "<version>");

        Console.WriteLine(response.Status);
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Indexes_Delete_ShortVersion_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        Response response = await client.DeleteAsync("<name>", "<version>");

        Console.WriteLine(response.Status);
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Indexes_Delete_AllParameters()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        Response response = client.Delete("<name>", "<version>");

        Console.WriteLine(response.Status);
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Indexes_Delete_AllParameters_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        Response response = await client.DeleteAsync("<name>", "<version>");

        Console.WriteLine(response.Status);
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Indexes_CreateOrUpdate_ShortVersion()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        using RequestContent content = RequestContent.Create(new
        {
            type = "AzureSearch",
            connectionName = "<connectionName>",
            indexName = "<indexName>",
        });
        Response response = client.CreateOrUpdate("<name>", "<version>", content);

        JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
        Console.WriteLine(result.GetProperty("type").ToString());
        Console.WriteLine(result.GetProperty("name").ToString());
        Console.WriteLine(result.GetProperty("version").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Indexes_CreateOrUpdate_ShortVersion_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        using RequestContent content = RequestContent.Create(new
        {
            type = "AzureSearch",
            connectionName = "<connectionName>",
            indexName = "<indexName>",
        });
        Response response = await client.CreateOrUpdateAsync("<name>", "<version>", content);

        JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
        Console.WriteLine(result.GetProperty("type").ToString());
        Console.WriteLine(result.GetProperty("name").ToString());
        Console.WriteLine(result.GetProperty("version").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Indexes_CreateOrUpdate_AllParameters()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        using RequestContent content = RequestContent.Create(new
        {
            type = "AzureSearch",
            connectionName = "<connectionName>",
            indexName = "<indexName>",
            stage = "<stage>",
            description = "<description>",
            tags = new
            {
                key = "<tags>",
            },
        });
        Response response = client.CreateOrUpdate("<name>", "<version>", content);

        JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
        Console.WriteLine(result.GetProperty("type").ToString());
        Console.WriteLine(result.GetProperty("stage").ToString());
        Console.WriteLine(result.GetProperty("id").ToString());
        Console.WriteLine(result.GetProperty("name").ToString());
        Console.WriteLine(result.GetProperty("version").ToString());
        Console.WriteLine(result.GetProperty("description").ToString());
        Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Indexes_CreateOrUpdate_AllParameters_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        using RequestContent content = RequestContent.Create(new
        {
            type = "AzureSearch",
            connectionName = "<connectionName>",
            indexName = "<indexName>",
            stage = "<stage>",
            description = "<description>",
            tags = new
            {
                key = "<tags>",
            },
        });
        Response response = await client.CreateOrUpdateAsync("<name>", "<version>", content);

        JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
        Console.WriteLine(result.GetProperty("type").ToString());
        Console.WriteLine(result.GetProperty("stage").ToString());
        Console.WriteLine(result.GetProperty("id").ToString());
        Console.WriteLine(result.GetProperty("name").ToString());
        Console.WriteLine(result.GetProperty("version").ToString());
        Console.WriteLine(result.GetProperty("description").ToString());
        Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Indexes_GetVersions_ShortVersion()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        foreach (BinaryData item in client.GetVersions("<name>", (int?)null, (string)null, (string)null, (string)null, (RequestContext)null))
        {
            JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("version").ToString());
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Indexes_GetVersions_ShortVersion_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        await foreach (BinaryData item in client.GetVersionsAsync("<name>", (int?)null, (string)null, (string)null, (string)null, (RequestContext)null))
        {
            JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("version").ToString());
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Indexes_GetVersions_ShortVersion_Convenience()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        foreach (Projects.1DP.Index item in client.GetVersions("<name>"))
{
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Indexes_GetVersions_ShortVersion_Convenience_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        await foreach (Projects.1DP.Index item in client.GetVersionsAsync("<name>"))
{
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Indexes_GetVersions_AllParameters()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        foreach (BinaryData item in client.GetVersions("<name>", 1234, "<skip>", "<tags>", "ActiveOnly", (RequestContext)null))
        {
            JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("stage").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("version").ToString());
            Console.WriteLine(result.GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Indexes_GetVersions_AllParameters_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        await foreach (BinaryData item in client.GetVersionsAsync("<name>", 1234, "<skip>", "<tags>", "ActiveOnly", (RequestContext)null))
        {
            JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("stage").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("version").ToString());
            Console.WriteLine(result.GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Indexes_GetVersions_AllParameters_Convenience()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        foreach (Projects.1DP.Index item in client.GetVersions("<name>", maxCount: 1234, skip: "<skip>", tags: "<tags>", listViewType: AI.Projects.1DP.ListViewType.ActiveOnly))
{
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Indexes_GetVersions_AllParameters_Convenience_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        await foreach (Projects.1DP.Index item in client.GetVersionsAsync("<name>", maxCount: 1234, skip: "<skip>", tags: "<tags>", listViewType: AI.Projects.1DP.ListViewType.ActiveOnly))
{
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Index_GetIndices_ShortVersion()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        foreach (BinaryData item in client.GetIndices((int?)null, (string)null, (string)null, (string)null, (RequestContext)null))
        {
            JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("version").ToString());
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Index_GetIndices_ShortVersion_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        await foreach (BinaryData item in client.GetIndicesAsync((int?)null, (string)null, (string)null, (string)null, (RequestContext)null))
        {
            JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("version").ToString());
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Index_GetIndices_ShortVersion_Convenience()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        foreach (Projects.1DP.Index item in client.GetIndices())
{
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Index_GetIndices_ShortVersion_Convenience_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        await foreach (Projects.1DP.Index item in client.GetIndicesAsync())
{
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Index_GetIndices_AllParameters()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        foreach (BinaryData item in client.GetIndices(1234, "<skip>", "<tags>", "ActiveOnly", (RequestContext)null))
        {
            JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("stage").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("version").ToString());
            Console.WriteLine(result.GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Index_GetIndices_AllParameters_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        await foreach (BinaryData item in client.GetIndicesAsync(1234, "<skip>", "<tags>", "ActiveOnly", (RequestContext)null))
        {
            JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("stage").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("version").ToString());
            Console.WriteLine(result.GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Index_GetIndices_AllParameters_Convenience()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        foreach (Projects.1DP.Index item in client.GetIndices(maxCount: 1234, skip: "<skip>", tags: "<tags>", listViewType: AI.Projects.1DP.ListViewType.ActiveOnly))
{
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Index_GetIndices_AllParameters_Convenience_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        await foreach (Projects.1DP.Index item in client.GetIndicesAsync(maxCount: 1234, skip: "<skip>", tags: "<tags>", listViewType: AI.Projects.1DP.ListViewType.ActiveOnly))
{
        }
    }
}
}
