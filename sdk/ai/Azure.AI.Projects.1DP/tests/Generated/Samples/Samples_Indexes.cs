// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.AI.Projects.1DP.Samples
{
public partial class Samples_Indexes
{
    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Indexes_GetVersion_ShortVersion()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        Response response = client.GetVersion("<name>", "<version>", (RequestContext)null);

        JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
        Console.WriteLine(result.GetProperty("type").ToString());
        Console.WriteLine(result.GetProperty("name").ToString());
        Console.WriteLine(result.GetProperty("version").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Indexes_GetVersion_ShortVersion_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        Response response = await client.GetVersionAsync("<name>", "<version>", (RequestContext)null);

        JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
        Console.WriteLine(result.GetProperty("type").ToString());
        Console.WriteLine(result.GetProperty("name").ToString());
        Console.WriteLine(result.GetProperty("version").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Indexes_GetVersion_ShortVersion_Convenience()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        Azure.Response < AI.Projects.1DP.Index > response = client.GetVersion("<name>", "<version>");
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Indexes_GetVersion_ShortVersion_Convenience_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        Azure.Response < AI.Projects.1DP.Index > response = await client.GetVersionAsync("<name>", "<version>");
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Indexes_GetVersion_AllParameters()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        Response response = client.GetVersion("<name>", "<version>", (RequestContext)null);

        JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
        Console.WriteLine(result.GetProperty("type").ToString());
        Console.WriteLine(result.GetProperty("id").ToString());
        Console.WriteLine(result.GetProperty("name").ToString());
        Console.WriteLine(result.GetProperty("version").ToString());
        Console.WriteLine(result.GetProperty("description").ToString());
        Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Indexes_GetVersion_AllParameters_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        Response response = await client.GetVersionAsync("<name>", "<version>", (RequestContext)null);

        JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
        Console.WriteLine(result.GetProperty("type").ToString());
        Console.WriteLine(result.GetProperty("id").ToString());
        Console.WriteLine(result.GetProperty("name").ToString());
        Console.WriteLine(result.GetProperty("version").ToString());
        Console.WriteLine(result.GetProperty("description").ToString());
        Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Indexes_GetVersion_AllParameters_Convenience()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        Azure.Response < AI.Projects.1DP.Index > response = client.GetVersion("<name>", "<version>");
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Indexes_GetVersion_AllParameters_Convenience_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        Azure.Response < AI.Projects.1DP.Index > response = await client.GetVersionAsync("<name>", "<version>");
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Indexes_DeleteVersion_ShortVersion()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        Response response = client.DeleteVersion("<name>", "<version>");

        Console.WriteLine(response.Status);
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Indexes_DeleteVersion_ShortVersion_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        Response response = await client.DeleteVersionAsync("<name>", "<version>");

        Console.WriteLine(response.Status);
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Indexes_DeleteVersion_AllParameters()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        Response response = client.DeleteVersion("<name>", "<version>");

        Console.WriteLine(response.Status);
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Indexes_DeleteVersion_AllParameters_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        Response response = await client.DeleteVersionAsync("<name>", "<version>");

        Console.WriteLine(response.Status);
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Indexes_CreateOrUpdateVersion_ShortVersion()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        using RequestContent content = RequestContent.Create(new
        {
            type = "AzureSearch",
            connectionName = "<connectionName>",
            indexName = "<indexName>",
        });
        Response response = client.CreateOrUpdateVersion("<name>", "<version>", content);

        JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
        Console.WriteLine(result.GetProperty("type").ToString());
        Console.WriteLine(result.GetProperty("name").ToString());
        Console.WriteLine(result.GetProperty("version").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Indexes_CreateOrUpdateVersion_ShortVersion_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        using RequestContent content = RequestContent.Create(new
        {
            type = "AzureSearch",
            connectionName = "<connectionName>",
            indexName = "<indexName>",
        });
        Response response = await client.CreateOrUpdateVersionAsync("<name>", "<version>", content);

        JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
        Console.WriteLine(result.GetProperty("type").ToString());
        Console.WriteLine(result.GetProperty("name").ToString());
        Console.WriteLine(result.GetProperty("version").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Indexes_CreateOrUpdateVersion_AllParameters()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        using RequestContent content = RequestContent.Create(new
        {
            type = "AzureSearch",
            connectionName = "<connectionName>",
            indexName = "<indexName>",
            description = "<description>",
            tags = new
            {
                key = "<tags>",
            },
        });
        Response response = client.CreateOrUpdateVersion("<name>", "<version>", content);

        JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
        Console.WriteLine(result.GetProperty("type").ToString());
        Console.WriteLine(result.GetProperty("id").ToString());
        Console.WriteLine(result.GetProperty("name").ToString());
        Console.WriteLine(result.GetProperty("version").ToString());
        Console.WriteLine(result.GetProperty("description").ToString());
        Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Indexes_CreateOrUpdateVersion_AllParameters_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        using RequestContent content = RequestContent.Create(new
        {
            type = "AzureSearch",
            connectionName = "<connectionName>",
            indexName = "<indexName>",
            description = "<description>",
            tags = new
            {
                key = "<tags>",
            },
        });
        Response response = await client.CreateOrUpdateVersionAsync("<name>", "<version>", content);

        JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
        Console.WriteLine(result.GetProperty("type").ToString());
        Console.WriteLine(result.GetProperty("id").ToString());
        Console.WriteLine(result.GetProperty("name").ToString());
        Console.WriteLine(result.GetProperty("version").ToString());
        Console.WriteLine(result.GetProperty("description").ToString());
        Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Indexes_GetVersions_ShortVersion()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        foreach (BinaryData item in client.GetVersions("<name>", (string)null, (RequestContext)null))
        {
            JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("version").ToString());
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Indexes_GetVersions_ShortVersion_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        await foreach (BinaryData item in client.GetVersionsAsync("<name>", (string)null, (RequestContext)null))
        {
            JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("version").ToString());
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Indexes_GetVersions_ShortVersion_Convenience()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        foreach (Projects.1DP.Index item in client.GetVersions("<name>"))
{
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Indexes_GetVersions_ShortVersion_Convenience_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        await foreach (Projects.1DP.Index item in client.GetVersionsAsync("<name>"))
{
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Indexes_GetVersions_AllParameters()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        foreach (BinaryData item in client.GetVersions("<name>", "<continuationToken>", (RequestContext)null))
        {
            JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("version").ToString());
            Console.WriteLine(result.GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Indexes_GetVersions_AllParameters_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        await foreach (BinaryData item in client.GetVersionsAsync("<name>", "<continuationToken>", (RequestContext)null))
        {
            JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("version").ToString());
            Console.WriteLine(result.GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Indexes_GetVersions_AllParameters_Convenience()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        foreach (Projects.1DP.Index item in client.GetVersions("<name>", continuationToken: "<continuationToken>"))
{
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Indexes_GetVersions_AllParameters_Convenience_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        await foreach (Projects.1DP.Index item in client.GetVersionsAsync("<name>", continuationToken: "<continuationToken>"))
{
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Index_GetLatests_ShortVersion()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        foreach (BinaryData item in client.GetLatests((string)null, (RequestContext)null))
        {
            JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("version").ToString());
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Index_GetLatests_ShortVersion_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        await foreach (BinaryData item in client.GetLatestsAsync((string)null, (RequestContext)null))
        {
            JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("version").ToString());
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Index_GetLatests_ShortVersion_Convenience()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        foreach (Projects.1DP.Index item in client.GetLatests())
{
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Index_GetLatests_ShortVersion_Convenience_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        await foreach (Projects.1DP.Index item in client.GetLatestsAsync())
{
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Index_GetLatests_AllParameters()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        foreach (BinaryData item in client.GetLatests("<continuationToken>", (RequestContext)null))
        {
            JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("version").ToString());
            Console.WriteLine(result.GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Index_GetLatests_AllParameters_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        await foreach (BinaryData item in client.GetLatestsAsync("<continuationToken>", (RequestContext)null))
        {
            JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("version").ToString());
            Console.WriteLine(result.GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_Index_GetLatests_AllParameters_Convenience()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        foreach (Projects.1DP.Index item in client.GetLatests(continuationToken: "<continuationToken>"))
{
        }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_Index_GetLatests_AllParameters_Convenience_Async()
    {
        Uri endpoint = new Uri("<endpoint>");
        TokenCredential credential = new DefaultAzureCredential();
        AI.Projects.1DP.Indexes client = new Projects.1DP.AIProjectClient(endpoint, credential).GetIndexesClient(apiVersion: "2025-05-15-preview");

        await foreach (Projects.1DP.Index item in client.GetLatestsAsync(continuationToken: "<continuationToken>"))
{
        }
    }
}
}
