// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.AI.Agents.Persistent.Samples
{
    public partial class Samples_ThreadMessages
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Messages_CreateMessage_MessagesCreateMessageMaximumSet()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ThreadMessages client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadMessagesClient();

            using RequestContent content = RequestContent.Create(new
            {
                role = "user",
                attachments = new object[]
            {
new
{
file_id = "kikxqbmle",
data_source = new
{
uri = "wcjtwvdweaxymq",
type = "uri_asset",
},
tools = Array.Empty<object>(),
}
            },
                metadata = new
                {
                    key4143 = "ysgghfrexpy",
                },
            });
            Response response = client.CreateMessage("ozpfiu", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("object").ToString());
            Console.WriteLine(result.GetProperty("created_at").ToString());
            Console.WriteLine(result.GetProperty("thread_id").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("incomplete_details").GetProperty("reason").ToString());
            Console.WriteLine(result.GetProperty("completed_at").ToString());
            Console.WriteLine(result.GetProperty("incomplete_at").ToString());
            Console.WriteLine(result.GetProperty("role").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("assistant_id").ToString());
            Console.WriteLine(result.GetProperty("run_id").ToString());
            Console.WriteLine(result.GetProperty("attachments")[0].GetProperty("tools")[0].ToString());
            Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Messages_CreateMessage_MessagesCreateMessageMaximumSet_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ThreadMessages client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadMessagesClient();

            using RequestContent content = RequestContent.Create(new
            {
                role = "user",
                attachments = new object[]
            {
new
{
file_id = "kikxqbmle",
data_source = new
{
uri = "wcjtwvdweaxymq",
type = "uri_asset",
},
tools = Array.Empty<object>(),
}
            },
                metadata = new
                {
                    key4143 = "ysgghfrexpy",
                },
            });
            Response response = await client.CreateMessageAsync("ozpfiu", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("object").ToString());
            Console.WriteLine(result.GetProperty("created_at").ToString());
            Console.WriteLine(result.GetProperty("thread_id").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("incomplete_details").GetProperty("reason").ToString());
            Console.WriteLine(result.GetProperty("completed_at").ToString());
            Console.WriteLine(result.GetProperty("incomplete_at").ToString());
            Console.WriteLine(result.GetProperty("role").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("assistant_id").ToString());
            Console.WriteLine(result.GetProperty("run_id").ToString());
            Console.WriteLine(result.GetProperty("attachments")[0].GetProperty("tools")[0].ToString());
            Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Messages_CreateMessage_MessagesCreateMessageMaximumSet_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ThreadMessages client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadMessagesClient();

            Response<PersistentThreadMessage> response = client.CreateMessage("ozpfiu", MessageRole.User, (BinaryData)null);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Messages_CreateMessage_MessagesCreateMessageMaximumSet_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ThreadMessages client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadMessagesClient();

            Response<PersistentThreadMessage> response = await client.CreateMessageAsync("ozpfiu", MessageRole.User, (BinaryData)null);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Messages_GetMessage_MessagesGetMessageMaximumSet()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ThreadMessages client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadMessagesClient();

            Response response = client.GetMessage("gnbcwabwwhawsldsbqvlvypojseg", "dvuphqmhydgxxw", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("object").ToString());
            Console.WriteLine(result.GetProperty("created_at").ToString());
            Console.WriteLine(result.GetProperty("thread_id").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("incomplete_details").GetProperty("reason").ToString());
            Console.WriteLine(result.GetProperty("completed_at").ToString());
            Console.WriteLine(result.GetProperty("incomplete_at").ToString());
            Console.WriteLine(result.GetProperty("role").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("assistant_id").ToString());
            Console.WriteLine(result.GetProperty("run_id").ToString());
            Console.WriteLine(result.GetProperty("attachments")[0].GetProperty("tools")[0].ToString());
            Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Messages_GetMessage_MessagesGetMessageMaximumSet_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ThreadMessages client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadMessagesClient();

            Response response = await client.GetMessageAsync("gnbcwabwwhawsldsbqvlvypojseg", "dvuphqmhydgxxw", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("object").ToString());
            Console.WriteLine(result.GetProperty("created_at").ToString());
            Console.WriteLine(result.GetProperty("thread_id").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("incomplete_details").GetProperty("reason").ToString());
            Console.WriteLine(result.GetProperty("completed_at").ToString());
            Console.WriteLine(result.GetProperty("incomplete_at").ToString());
            Console.WriteLine(result.GetProperty("role").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("assistant_id").ToString());
            Console.WriteLine(result.GetProperty("run_id").ToString());
            Console.WriteLine(result.GetProperty("attachments")[0].GetProperty("tools")[0].ToString());
            Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Messages_GetMessage_MessagesGetMessageMaximumSet_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ThreadMessages client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadMessagesClient();

            Response<PersistentThreadMessage> response = client.GetMessage("gnbcwabwwhawsldsbqvlvypojseg", "dvuphqmhydgxxw");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Messages_GetMessage_MessagesGetMessageMaximumSet_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ThreadMessages client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadMessagesClient();

            Response<PersistentThreadMessage> response = await client.GetMessageAsync("gnbcwabwwhawsldsbqvlvypojseg", "dvuphqmhydgxxw");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Messages_GetMessage_MessagesGetMessageMinimumSet()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ThreadMessages client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadMessagesClient();

            Response response = client.GetMessage("tcshlwo", "kvpeticzvyitbdlzlapwlvfpipi", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("object").ToString());
            Console.WriteLine(result.GetProperty("created_at").ToString());
            Console.WriteLine(result.GetProperty("thread_id").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("incomplete_details").GetProperty("reason").ToString());
            Console.WriteLine(result.GetProperty("completed_at").ToString());
            Console.WriteLine(result.GetProperty("incomplete_at").ToString());
            Console.WriteLine(result.GetProperty("role").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("assistant_id").ToString());
            Console.WriteLine(result.GetProperty("run_id").ToString());
            Console.WriteLine(result.GetProperty("attachments")[0].GetProperty("tools")[0].ToString());
            Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Messages_GetMessage_MessagesGetMessageMinimumSet_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ThreadMessages client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadMessagesClient();

            Response response = await client.GetMessageAsync("tcshlwo", "kvpeticzvyitbdlzlapwlvfpipi", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("object").ToString());
            Console.WriteLine(result.GetProperty("created_at").ToString());
            Console.WriteLine(result.GetProperty("thread_id").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("incomplete_details").GetProperty("reason").ToString());
            Console.WriteLine(result.GetProperty("completed_at").ToString());
            Console.WriteLine(result.GetProperty("incomplete_at").ToString());
            Console.WriteLine(result.GetProperty("role").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("assistant_id").ToString());
            Console.WriteLine(result.GetProperty("run_id").ToString());
            Console.WriteLine(result.GetProperty("attachments")[0].GetProperty("tools")[0].ToString());
            Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Messages_GetMessage_MessagesGetMessageMinimumSet_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ThreadMessages client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadMessagesClient();

            Response<PersistentThreadMessage> response = client.GetMessage("tcshlwo", "kvpeticzvyitbdlzlapwlvfpipi");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Messages_GetMessage_MessagesGetMessageMinimumSet_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ThreadMessages client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadMessagesClient();

            Response<PersistentThreadMessage> response = await client.GetMessageAsync("tcshlwo", "kvpeticzvyitbdlzlapwlvfpipi");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Messages_UpdateMessage_MessagesUpdateMessageMaximumSet()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ThreadMessages client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadMessagesClient();

            using RequestContent content = RequestContent.Create(new
            {
                metadata = new
                {
                    key2471 = "mkcmeqechamvzavhrcgsgg",
                },
            });
            Response response = client.UpdateMessage("zeswam", "kywfsz", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("object").ToString());
            Console.WriteLine(result.GetProperty("created_at").ToString());
            Console.WriteLine(result.GetProperty("thread_id").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("incomplete_details").GetProperty("reason").ToString());
            Console.WriteLine(result.GetProperty("completed_at").ToString());
            Console.WriteLine(result.GetProperty("incomplete_at").ToString());
            Console.WriteLine(result.GetProperty("role").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("assistant_id").ToString());
            Console.WriteLine(result.GetProperty("run_id").ToString());
            Console.WriteLine(result.GetProperty("attachments")[0].GetProperty("tools")[0].ToString());
            Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Messages_UpdateMessage_MessagesUpdateMessageMaximumSet_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ThreadMessages client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadMessagesClient();

            using RequestContent content = RequestContent.Create(new
            {
                metadata = new
                {
                    key2471 = "mkcmeqechamvzavhrcgsgg",
                },
            });
            Response response = await client.UpdateMessageAsync("zeswam", "kywfsz", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("object").ToString());
            Console.WriteLine(result.GetProperty("created_at").ToString());
            Console.WriteLine(result.GetProperty("thread_id").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("incomplete_details").GetProperty("reason").ToString());
            Console.WriteLine(result.GetProperty("completed_at").ToString());
            Console.WriteLine(result.GetProperty("incomplete_at").ToString());
            Console.WriteLine(result.GetProperty("role").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("assistant_id").ToString());
            Console.WriteLine(result.GetProperty("run_id").ToString());
            Console.WriteLine(result.GetProperty("attachments")[0].GetProperty("tools")[0].ToString());
            Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Messages_UpdateMessage_MessagesUpdateMessageMaximumSet_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ThreadMessages client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadMessagesClient();

            Response<PersistentThreadMessage> response = client.UpdateMessage("zeswam", "kywfsz");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Messages_UpdateMessage_MessagesUpdateMessageMaximumSet_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ThreadMessages client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadMessagesClient();

            Response<PersistentThreadMessage> response = await client.UpdateMessageAsync("zeswam", "kywfsz");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Messages_UpdateMessage_MessagesUpdateMessageMinimumSet()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ThreadMessages client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadMessagesClient();

            using RequestContent content = RequestContent.Create(new object());
            Response response = client.UpdateMessage("pcyjabchrhx", "cmgernzmnqra", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("object").ToString());
            Console.WriteLine(result.GetProperty("created_at").ToString());
            Console.WriteLine(result.GetProperty("thread_id").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("incomplete_details").GetProperty("reason").ToString());
            Console.WriteLine(result.GetProperty("completed_at").ToString());
            Console.WriteLine(result.GetProperty("incomplete_at").ToString());
            Console.WriteLine(result.GetProperty("role").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("assistant_id").ToString());
            Console.WriteLine(result.GetProperty("run_id").ToString());
            Console.WriteLine(result.GetProperty("attachments")[0].GetProperty("tools")[0].ToString());
            Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Messages_UpdateMessage_MessagesUpdateMessageMinimumSet_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ThreadMessages client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadMessagesClient();

            using RequestContent content = RequestContent.Create(new object());
            Response response = await client.UpdateMessageAsync("pcyjabchrhx", "cmgernzmnqra", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("object").ToString());
            Console.WriteLine(result.GetProperty("created_at").ToString());
            Console.WriteLine(result.GetProperty("thread_id").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("incomplete_details").GetProperty("reason").ToString());
            Console.WriteLine(result.GetProperty("completed_at").ToString());
            Console.WriteLine(result.GetProperty("incomplete_at").ToString());
            Console.WriteLine(result.GetProperty("role").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("assistant_id").ToString());
            Console.WriteLine(result.GetProperty("run_id").ToString());
            Console.WriteLine(result.GetProperty("attachments")[0].GetProperty("tools")[0].ToString());
            Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Messages_UpdateMessage_MessagesUpdateMessageMinimumSet_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ThreadMessages client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadMessagesClient();

            Response<PersistentThreadMessage> response = client.UpdateMessage("pcyjabchrhx", "cmgernzmnqra");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Messages_UpdateMessage_MessagesUpdateMessageMinimumSet_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ThreadMessages client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadMessagesClient();

            Response<PersistentThreadMessage> response = await client.UpdateMessageAsync("pcyjabchrhx", "cmgernzmnqra");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Messages_GetMessages_MessagesListMessagesMaximumSet()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ThreadMessages client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadMessagesClient();

            foreach (BinaryData item in client.GetMessages("hhumgwiqjywwjjvazvulioaie", "klqfm", 27, "asc", "xonooqnjyyeytdqnjafaobvahacb", "tldddf", (RequestContext)null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("object").ToString());
                Console.WriteLine(result.GetProperty("created_at").ToString());
                Console.WriteLine(result.GetProperty("thread_id").ToString());
                Console.WriteLine(result.GetProperty("status").ToString());
                Console.WriteLine(result.GetProperty("incomplete_details").GetProperty("reason").ToString());
                Console.WriteLine(result.GetProperty("completed_at").ToString());
                Console.WriteLine(result.GetProperty("incomplete_at").ToString());
                Console.WriteLine(result.GetProperty("role").ToString());
                Console.WriteLine(result.GetProperty("content")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("assistant_id").ToString());
                Console.WriteLine(result.GetProperty("run_id").ToString());
                Console.WriteLine(result.GetProperty("attachments")[0].GetProperty("tools")[0].ToString());
                Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Messages_GetMessages_MessagesListMessagesMaximumSet_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ThreadMessages client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadMessagesClient();

            await foreach (BinaryData item in client.GetMessagesAsync("hhumgwiqjywwjjvazvulioaie", "klqfm", 27, "asc", "xonooqnjyyeytdqnjafaobvahacb", "tldddf", (RequestContext)null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("object").ToString());
                Console.WriteLine(result.GetProperty("created_at").ToString());
                Console.WriteLine(result.GetProperty("thread_id").ToString());
                Console.WriteLine(result.GetProperty("status").ToString());
                Console.WriteLine(result.GetProperty("incomplete_details").GetProperty("reason").ToString());
                Console.WriteLine(result.GetProperty("completed_at").ToString());
                Console.WriteLine(result.GetProperty("incomplete_at").ToString());
                Console.WriteLine(result.GetProperty("role").ToString());
                Console.WriteLine(result.GetProperty("content")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("assistant_id").ToString());
                Console.WriteLine(result.GetProperty("run_id").ToString());
                Console.WriteLine(result.GetProperty("attachments")[0].GetProperty("tools")[0].ToString());
                Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Messages_GetMessages_MessagesListMessagesMaximumSet_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ThreadMessages client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadMessagesClient();

            foreach (PersistentThreadMessage item in client.GetMessages("hhumgwiqjywwjjvazvulioaie"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Messages_GetMessages_MessagesListMessagesMaximumSet_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ThreadMessages client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadMessagesClient();

            await foreach (PersistentThreadMessage item in client.GetMessagesAsync("hhumgwiqjywwjjvazvulioaie"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Messages_GetMessages_MessagesListMessagesMinimumSet()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ThreadMessages client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadMessagesClient();

            foreach (BinaryData item in client.GetMessages("yszgxhl", (string)null, (int?)null, (string)null, (string)null, (string)null, (RequestContext)null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("object").ToString());
                Console.WriteLine(result.GetProperty("created_at").ToString());
                Console.WriteLine(result.GetProperty("thread_id").ToString());
                Console.WriteLine(result.GetProperty("status").ToString());
                Console.WriteLine(result.GetProperty("incomplete_details").GetProperty("reason").ToString());
                Console.WriteLine(result.GetProperty("completed_at").ToString());
                Console.WriteLine(result.GetProperty("incomplete_at").ToString());
                Console.WriteLine(result.GetProperty("role").ToString());
                Console.WriteLine(result.GetProperty("content")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("assistant_id").ToString());
                Console.WriteLine(result.GetProperty("run_id").ToString());
                Console.WriteLine(result.GetProperty("attachments")[0].GetProperty("tools")[0].ToString());
                Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Messages_GetMessages_MessagesListMessagesMinimumSet_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ThreadMessages client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadMessagesClient();

            await foreach (BinaryData item in client.GetMessagesAsync("yszgxhl", (string)null, (int?)null, (string)null, (string)null, (string)null, (RequestContext)null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("object").ToString());
                Console.WriteLine(result.GetProperty("created_at").ToString());
                Console.WriteLine(result.GetProperty("thread_id").ToString());
                Console.WriteLine(result.GetProperty("status").ToString());
                Console.WriteLine(result.GetProperty("incomplete_details").GetProperty("reason").ToString());
                Console.WriteLine(result.GetProperty("completed_at").ToString());
                Console.WriteLine(result.GetProperty("incomplete_at").ToString());
                Console.WriteLine(result.GetProperty("role").ToString());
                Console.WriteLine(result.GetProperty("content")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("assistant_id").ToString());
                Console.WriteLine(result.GetProperty("run_id").ToString());
                Console.WriteLine(result.GetProperty("attachments")[0].GetProperty("tools")[0].ToString());
                Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Messages_GetMessages_MessagesListMessagesMinimumSet_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ThreadMessages client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadMessagesClient();

            foreach (PersistentThreadMessage item in client.GetMessages("yszgxhl"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Messages_GetMessages_MessagesListMessagesMinimumSet_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            ThreadMessages client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadMessagesClient();

            await foreach (PersistentThreadMessage item in client.GetMessagesAsync("yszgxhl"))
            {
            }
        }
    }
}
