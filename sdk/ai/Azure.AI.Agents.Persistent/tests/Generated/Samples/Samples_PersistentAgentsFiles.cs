// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.AI.Agents.Persistent.Samples
{
    public partial class Samples_PersistentAgentsFiles
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Files_GetFile_FilesGetFileMaximumSet()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PersistentAgentsFiles client = new PersistentAgentsAdministrationClient(endpoint, credential).GetPersistentAgentsFilesClient();

            Response response = client.GetFile("uublbyapgvpn", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("object").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("bytes").ToString());
            Console.WriteLine(result.GetProperty("filename").ToString());
            Console.WriteLine(result.GetProperty("created_at").ToString());
            Console.WriteLine(result.GetProperty("purpose").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Files_GetFile_FilesGetFileMaximumSet_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PersistentAgentsFiles client = new PersistentAgentsAdministrationClient(endpoint, credential).GetPersistentAgentsFilesClient();

            Response response = await client.GetFileAsync("uublbyapgvpn", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("object").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("bytes").ToString());
            Console.WriteLine(result.GetProperty("filename").ToString());
            Console.WriteLine(result.GetProperty("created_at").ToString());
            Console.WriteLine(result.GetProperty("purpose").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Files_GetFile_FilesGetFileMaximumSet_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PersistentAgentsFiles client = new PersistentAgentsAdministrationClient(endpoint, credential).GetPersistentAgentsFilesClient();

            Response<PersistentAgentFileInfo> response = client.GetFile("uublbyapgvpn");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Files_GetFile_FilesGetFileMaximumSet_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PersistentAgentsFiles client = new PersistentAgentsAdministrationClient(endpoint, credential).GetPersistentAgentsFilesClient();

            Response<PersistentAgentFileInfo> response = await client.GetFileAsync("uublbyapgvpn");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Files_GetFile_FilesGetFileMinimumSet()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PersistentAgentsFiles client = new PersistentAgentsAdministrationClient(endpoint, credential).GetPersistentAgentsFilesClient();

            Response response = client.GetFile("aqxjxvasclhflstu", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("object").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("bytes").ToString());
            Console.WriteLine(result.GetProperty("filename").ToString());
            Console.WriteLine(result.GetProperty("created_at").ToString());
            Console.WriteLine(result.GetProperty("purpose").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Files_GetFile_FilesGetFileMinimumSet_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PersistentAgentsFiles client = new PersistentAgentsAdministrationClient(endpoint, credential).GetPersistentAgentsFilesClient();

            Response response = await client.GetFileAsync("aqxjxvasclhflstu", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("object").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("bytes").ToString());
            Console.WriteLine(result.GetProperty("filename").ToString());
            Console.WriteLine(result.GetProperty("created_at").ToString());
            Console.WriteLine(result.GetProperty("purpose").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Files_GetFile_FilesGetFileMinimumSet_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PersistentAgentsFiles client = new PersistentAgentsAdministrationClient(endpoint, credential).GetPersistentAgentsFilesClient();

            Response<PersistentAgentFileInfo> response = client.GetFile("aqxjxvasclhflstu");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Files_GetFile_FilesGetFileMinimumSet_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PersistentAgentsFiles client = new PersistentAgentsAdministrationClient(endpoint, credential).GetPersistentAgentsFilesClient();

            Response<PersistentAgentFileInfo> response = await client.GetFileAsync("aqxjxvasclhflstu");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Files_GetFileContent_FilesGetFileContentMaximumSet()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PersistentAgentsFiles client = new PersistentAgentsAdministrationClient(endpoint, credential).GetPersistentAgentsFilesClient();

            Response response = client.GetFileContent("gibxdgljmcungwtn", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Files_GetFileContent_FilesGetFileContentMaximumSet_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PersistentAgentsFiles client = new PersistentAgentsAdministrationClient(endpoint, credential).GetPersistentAgentsFilesClient();

            Response response = await client.GetFileContentAsync("gibxdgljmcungwtn", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Files_GetFileContent_FilesGetFileContentMaximumSet_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PersistentAgentsFiles client = new PersistentAgentsAdministrationClient(endpoint, credential).GetPersistentAgentsFilesClient();

            Response<BinaryData> response = client.GetFileContent("gibxdgljmcungwtn");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Files_GetFileContent_FilesGetFileContentMaximumSet_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PersistentAgentsFiles client = new PersistentAgentsAdministrationClient(endpoint, credential).GetPersistentAgentsFilesClient();

            Response<BinaryData> response = await client.GetFileContentAsync("gibxdgljmcungwtn");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Files_GetFileContent_FilesGetFileContentMinimumSet()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PersistentAgentsFiles client = new PersistentAgentsAdministrationClient(endpoint, credential).GetPersistentAgentsFilesClient();

            Response response = client.GetFileContent("aymwqarx", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Files_GetFileContent_FilesGetFileContentMinimumSet_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PersistentAgentsFiles client = new PersistentAgentsAdministrationClient(endpoint, credential).GetPersistentAgentsFilesClient();

            Response response = await client.GetFileContentAsync("aymwqarx", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Files_GetFileContent_FilesGetFileContentMinimumSet_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PersistentAgentsFiles client = new PersistentAgentsAdministrationClient(endpoint, credential).GetPersistentAgentsFilesClient();

            Response<BinaryData> response = client.GetFileContent("aymwqarx");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Files_GetFileContent_FilesGetFileContentMinimumSet_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PersistentAgentsFiles client = new PersistentAgentsAdministrationClient(endpoint, credential).GetPersistentAgentsFilesClient();

            Response<BinaryData> response = await client.GetFileContentAsync("aymwqarx");
        }
    }
}
