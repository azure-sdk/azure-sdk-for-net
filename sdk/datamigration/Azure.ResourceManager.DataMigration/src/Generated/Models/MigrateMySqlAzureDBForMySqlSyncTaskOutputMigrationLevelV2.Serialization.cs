// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataMigration.Models
{
    public partial class MigrateMySqlAzureDBForMySqlSyncTaskOutputMigrationLevelV2
    {
        internal static MigrateMySqlAzureDBForMySqlSyncTaskOutputMigrationLevelV2 DeserializeMigrateMySqlAzureDBForMySqlSyncTaskOutputMigrationLevelV2(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<MigrateMySqlAzureDBForMySqlReplicateChangesTaskOutputMigrationLevelMigrationType> migrationType = default;
            Optional<DateTimeOffset> startedOn = default;
            Optional<DateTimeOffset> endedOn = default;
            Optional<MigrationStatus> status = default;
            Optional<string> sourceServerVersion = default;
            Optional<string> targetServerVersion = default;
            Optional<DateTimeOffset> lastStorageUpdate = default;
            Optional<string> migrationId = default;
            Optional<bool> hasServerLevelError = default;
            Optional<BinaryData> retryingSummary = default;
            Optional<string> totalRetryingTime = default;
            Optional<int> totalSourceRetryCount = default;
            Optional<int> totalTargetRetryCount = default;
            Optional<int> totalOtherRetryCount = default;
            Optional<MySqlContinuousDataMovementProgress> continuousDataMovementProgress = default;
            Optional<string> id = default;
            string resultType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("migrationType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    migrationType = new MigrateMySqlAzureDBForMySqlReplicateChangesTaskOutputMigrationLevelMigrationType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("startedOn"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    startedOn = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("endedOn"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    endedOn = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("status"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    status = new MigrationStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("sourceServerVersion"u8))
                {
                    sourceServerVersion = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("targetServerVersion"u8))
                {
                    targetServerVersion = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("lastStorageUpdate"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    lastStorageUpdate = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("migrationId"u8))
                {
                    migrationId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("hasServerLevelError"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    hasServerLevelError = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("retryingSummary"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    retryingSummary = BinaryData.FromString(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("totalRetryingTime"u8))
                {
                    totalRetryingTime = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("totalSourceRetryCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    totalSourceRetryCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("totalTargetRetryCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    totalTargetRetryCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("totalOtherRetryCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    totalOtherRetryCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("continuousDataMovementProgress"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    continuousDataMovementProgress = MySqlContinuousDataMovementProgress.DeserializeMySqlContinuousDataMovementProgress(property.Value);
                    continue;
                }
                if (property.NameEquals("id"u8))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("resultType"u8))
                {
                    resultType = property.Value.GetString();
                    continue;
                }
            }
            return new MigrateMySqlAzureDBForMySqlSyncTaskOutputMigrationLevelV2(id.Value, resultType, Optional.ToNullable(migrationType), Optional.ToNullable(startedOn), Optional.ToNullable(endedOn), Optional.ToNullable(status), sourceServerVersion.Value, targetServerVersion.Value, Optional.ToNullable(lastStorageUpdate), migrationId.Value, Optional.ToNullable(hasServerLevelError), retryingSummary.Value, totalRetryingTime.Value, Optional.ToNullable(totalSourceRetryCount), Optional.ToNullable(totalTargetRetryCount), Optional.ToNullable(totalOtherRetryCount), continuousDataMovementProgress.Value);
        }
    }
}
