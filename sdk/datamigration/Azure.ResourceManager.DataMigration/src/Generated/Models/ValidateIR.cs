// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DataMigration.Models
{
    /// <summary> IR validations for MI / VM. </summary>
    public partial class ValidateIR
    {
        /// <summary> Initializes a new instance of ValidateIR. </summary>
        public ValidateIR()
        {
            Errors = new ChangeTrackingList<TestConnectivityData>();
        }

        /// <summary> Initializes a new instance of ValidateIR. </summary>
        /// <param name="kind"> Resource Type. </param>
        /// <param name="sourceDatabaseName"> Name of the source database. </param>
        /// <param name="sourceSqlConnection"> Source SQL Server connection details. </param>
        /// <param name="targetDatabaseName"> Name of the target database. </param>
        /// <param name="targetSqlConnection"> Target SQL Server connection details. </param>
        /// <param name="backupConfiguration"> Backup configuration info. </param>
        /// <param name="succeeded"> Validation result. </param>
        /// <param name="errors"> Validation errors. </param>
        internal ValidateIR(ValidateIRKind? kind, string sourceDatabaseName, SqlConnectionInformation sourceSqlConnection, string targetDatabaseName, SqlConnectionInformation targetSqlConnection, BackupConfiguration backupConfiguration, bool? succeeded, IList<TestConnectivityData> errors)
        {
            Kind = kind;
            SourceDatabaseName = sourceDatabaseName;
            SourceSqlConnection = sourceSqlConnection;
            TargetDatabaseName = targetDatabaseName;
            TargetSqlConnection = targetSqlConnection;
            BackupConfiguration = backupConfiguration;
            Succeeded = succeeded;
            Errors = errors;
        }

        /// <summary> Resource Type. </summary>
        public ValidateIRKind? Kind { get; set; }
        /// <summary> Name of the source database. </summary>
        public string SourceDatabaseName { get; set; }
        /// <summary> Source SQL Server connection details. </summary>
        public SqlConnectionInformation SourceSqlConnection { get; set; }
        /// <summary> Name of the target database. </summary>
        public string TargetDatabaseName { get; set; }
        /// <summary> Target SQL Server connection details. </summary>
        public SqlConnectionInformation TargetSqlConnection { get; set; }
        /// <summary> Backup configuration info. </summary>
        public BackupConfiguration BackupConfiguration { get; set; }
        /// <summary> Validation result. </summary>
        public bool? Succeeded { get; set; }
        /// <summary> Validation errors. </summary>
        public IList<TestConnectivityData> Errors { get; }
    }
}
