// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataMigration.Models
{
    public partial class MigrateMySqlAzureDBForMySqlReplicateChangesTaskInput : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("sourceConnectionInfo"u8);
            writer.WriteObjectValue(SourceConnectionInfo);
            writer.WritePropertyName("targetConnectionInfo"u8);
            writer.WriteObjectValue(TargetConnectionInfo);
            writer.WritePropertyName("selectedDatabases"u8);
            writer.WriteStartArray();
            foreach (var item in SelectedDatabases)
            {
                writer.WriteObjectValue(item);
            }
            writer.WriteEndArray();
            if (Optional.IsDefined(StartedOn))
            {
                writer.WritePropertyName("startedOn"u8);
                writer.WriteStringValue(StartedOn.Value, "O");
            }
            if (Optional.IsDefined(SourceServerResourceId))
            {
                writer.WritePropertyName("sourceServerResourceId"u8);
                writer.WriteStringValue(SourceServerResourceId);
            }
            if (Optional.IsDefined(TargetServerResourceId))
            {
                writer.WritePropertyName("targetServerResourceId"u8);
                writer.WriteStringValue(TargetServerResourceId);
            }
            if (Optional.IsCollectionDefined(OptionalAgentSettings))
            {
                writer.WritePropertyName("optionalAgentSettings"u8);
                writer.WriteStartObject();
                foreach (var item in OptionalAgentSettings)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteStringValue(item.Value);
                }
                writer.WriteEndObject();
            }
            writer.WritePropertyName("binLogInfo"u8);
            writer.WriteObjectValue(BinLogInfo);
            if (Optional.IsDefined(EncryptedKeyForSecureFields))
            {
                writer.WritePropertyName("encryptedKeyForSecureFields"u8);
                writer.WriteStringValue(EncryptedKeyForSecureFields);
            }
            writer.WriteEndObject();
        }

        internal static MigrateMySqlAzureDBForMySqlReplicateChangesTaskInput DeserializeMigrateMySqlAzureDBForMySqlReplicateChangesTaskInput(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            MySqlConnectionInfo sourceConnectionInfo = default;
            MySqlConnectionInfo targetConnectionInfo = default;
            IList<MigrateMySqlAzureDBForMySqlReplicateChangesDatabaseInput> selectedDatabases = default;
            Optional<DateTimeOffset> startedOn = default;
            Optional<string> sourceServerResourceId = default;
            Optional<string> targetServerResourceId = default;
            Optional<IDictionary<string, string>> optionalAgentSettings = default;
            MySqlBinlogPositionInput binLogInfo = default;
            Optional<string> encryptedKeyForSecureFields = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("sourceConnectionInfo"u8))
                {
                    sourceConnectionInfo = MySqlConnectionInfo.DeserializeMySqlConnectionInfo(property.Value);
                    continue;
                }
                if (property.NameEquals("targetConnectionInfo"u8))
                {
                    targetConnectionInfo = MySqlConnectionInfo.DeserializeMySqlConnectionInfo(property.Value);
                    continue;
                }
                if (property.NameEquals("selectedDatabases"u8))
                {
                    List<MigrateMySqlAzureDBForMySqlReplicateChangesDatabaseInput> array = new List<MigrateMySqlAzureDBForMySqlReplicateChangesDatabaseInput>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(MigrateMySqlAzureDBForMySqlReplicateChangesDatabaseInput.DeserializeMigrateMySqlAzureDBForMySqlReplicateChangesDatabaseInput(item));
                    }
                    selectedDatabases = array;
                    continue;
                }
                if (property.NameEquals("startedOn"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    startedOn = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("sourceServerResourceId"u8))
                {
                    sourceServerResourceId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("targetServerResourceId"u8))
                {
                    targetServerResourceId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("optionalAgentSettings"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    Dictionary<string, string> dictionary = new Dictionary<string, string>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, property0.Value.GetString());
                    }
                    optionalAgentSettings = dictionary;
                    continue;
                }
                if (property.NameEquals("binLogInfo"u8))
                {
                    binLogInfo = MySqlBinlogPositionInput.DeserializeMySqlBinlogPositionInput(property.Value);
                    continue;
                }
                if (property.NameEquals("encryptedKeyForSecureFields"u8))
                {
                    encryptedKeyForSecureFields = property.Value.GetString();
                    continue;
                }
            }
            return new MigrateMySqlAzureDBForMySqlReplicateChangesTaskInput(sourceConnectionInfo, targetConnectionInfo, selectedDatabases, Optional.ToNullable(startedOn), sourceServerResourceId.Value, targetServerResourceId.Value, Optional.ToDictionary(optionalAgentSettings), binLogInfo, encryptedKeyForSecureFields.Value);
        }
    }
}
