// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataMigration.Models
{
    public partial class KeyVaultProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Name))
            {
                writer.WritePropertyName("name");
                writer.WriteStringValue(Name);
            }
            if (Optional.IsDefined(SourceUsernameSecretName))
            {
                writer.WritePropertyName("sourceUsernameSecretName");
                writer.WriteStringValue(SourceUsernameSecretName);
            }
            if (Optional.IsDefined(SourcePasswordSecretName))
            {
                writer.WritePropertyName("sourcePasswordSecretName");
                writer.WriteStringValue(SourcePasswordSecretName);
            }
            if (Optional.IsDefined(FileShareUsernameSecretName))
            {
                writer.WritePropertyName("fileShareUsernameSecretName");
                writer.WriteStringValue(FileShareUsernameSecretName);
            }
            if (Optional.IsDefined(FileSharePasswordSecretName))
            {
                writer.WritePropertyName("fileSharePasswordSecretName");
                writer.WriteStringValue(FileSharePasswordSecretName);
            }
            writer.WriteEndObject();
        }

        internal static KeyVaultProperties DeserializeKeyVaultProperties(JsonElement element)
        {
            Optional<string> name = default;
            Optional<string> sourceUsernameSecretName = default;
            Optional<string> sourcePasswordSecretName = default;
            Optional<string> fileShareUsernameSecretName = default;
            Optional<string> fileSharePasswordSecretName = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("sourceUsernameSecretName"))
                {
                    sourceUsernameSecretName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("sourcePasswordSecretName"))
                {
                    sourcePasswordSecretName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("fileShareUsernameSecretName"))
                {
                    fileShareUsernameSecretName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("fileSharePasswordSecretName"))
                {
                    fileSharePasswordSecretName = property.Value.GetString();
                    continue;
                }
            }
            return new KeyVaultProperties(name.Value, sourceUsernameSecretName.Value, sourcePasswordSecretName.Value, fileShareUsernameSecretName.Value, fileSharePasswordSecretName.Value);
        }
    }
}
