// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Parameters for SharedKey.
    /// </summary>
    public partial class SharedKeyProperties
    {
        /// <summary>
        /// Initializes a new instance of the SharedKeyProperties class.
        /// </summary>
        public SharedKeyProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SharedKeyProperties class.
        /// </summary>
        /// <param name="sharedKey">The value of the shared key for the vpn
        /// link connection.</param>
        /// <param name="sharedKeyLength">The length of the shared key for the
        /// vpn link connection.</param>
        /// <param name="provisioningState">The provisioning state of the
        /// SharedKey resource. Possible values include: 'Succeeded',
        /// 'Updating', 'Deleting', 'Failed'</param>
        public SharedKeyProperties(string sharedKey = default(string), int? sharedKeyLength = default(int?), string provisioningState = default(string))
        {
            SharedKey = sharedKey;
            SharedKeyLength = sharedKeyLength;
            ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the value of the shared key for the vpn link
        /// connection.
        /// </summary>
        [JsonProperty(PropertyName = "sharedKey")]
        public string SharedKey { get; set; }

        /// <summary>
        /// Gets or sets the length of the shared key for the vpn link
        /// connection.
        /// </summary>
        [JsonProperty(PropertyName = "sharedKeyLength")]
        public int? SharedKeyLength { get; set; }

        /// <summary>
        /// Gets the provisioning state of the SharedKey resource. Possible
        /// values include: 'Succeeded', 'Updating', 'Deleting', 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (SharedKeyLength > 128)
            {
                throw new ValidationException(ValidationRules.InclusiveMaximum, "SharedKeyLength", 128);
            }
            if (SharedKeyLength < 1)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "SharedKeyLength", 1);
            }
        }
    }
}
