// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Parameters that define the source of the connection.
    /// </summary>
    public partial class ConnectivitySource
    {
        /// <summary>
        /// Initializes a new instance of the ConnectivitySource class.
        /// </summary>
        public ConnectivitySource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ConnectivitySource class.
        /// </summary>
        /// <param name="resourceId">The ID of the resource from which a
        /// connectivity check will be initiated.</param>
        /// <param name="port">The source port from which a connectivity check
        /// will be performed.</param>
        /// <param name="address">The IP address of the NIC chosen.</param>
        /// <param name="vmssIndex">The vmss index from which a connectivity
        /// check will be performed.</param>
        public ConnectivitySource(string resourceId, int? port = default(int?), string address = default(string), string vmssIndex = default(string))
        {
            ResourceId = resourceId;
            Port = port;
            Address = address;
            VmssIndex = vmssIndex;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the ID of the resource from which a connectivity check
        /// will be initiated.
        /// </summary>
        [JsonProperty(PropertyName = "resourceId")]
        public string ResourceId { get; set; }

        /// <summary>
        /// Gets or sets the source port from which a connectivity check will
        /// be performed.
        /// </summary>
        [JsonProperty(PropertyName = "port")]
        public int? Port { get; set; }

        /// <summary>
        /// Gets or sets the IP address of the NIC chosen.
        /// </summary>
        [JsonProperty(PropertyName = "address")]
        public string Address { get; set; }

        /// <summary>
        /// Gets or sets the vmss index from which a connectivity check will be
        /// performed.
        /// </summary>
        [JsonProperty(PropertyName = "vmssIndex")]
        public string VmssIndex { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ResourceId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ResourceId");
            }
            if (Port > 65535)
            {
                throw new ValidationException(ValidationRules.InclusiveMaximum, "Port", 65535);
            }
            if (Port < 0)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "Port", 0);
            }
        }
    }
}
