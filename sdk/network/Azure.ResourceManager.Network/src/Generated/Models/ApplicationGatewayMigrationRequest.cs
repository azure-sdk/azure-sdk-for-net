// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Network.Models
{
    /// <summary> Details of application gateway migration request. </summary>
    public partial class ApplicationGatewayMigrationRequest
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ApplicationGatewayMigrationRequest"/>. </summary>
        public ApplicationGatewayMigrationRequest()
        {
            Zones = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="ApplicationGatewayMigrationRequest"/>. </summary>
        /// <param name="migrationType"> Migration type of the application gateway resource. </param>
        /// <param name="subnetId"> Subnet Id of the v2 application gateway resource. </param>
        /// <param name="privateIP"> Private ip of the v2 application gateway resource. </param>
        /// <param name="sku"> SKU of the application gateway resource(Accepted value is Basic,applicable only in case of Standard_Small and Standard_Medium with 2 or less instances), otherwise by default standard_v1 is migrated to standard_v2 and waf_v1 is migrated to waf_v2. </param>
        /// <param name="wafPolicyName"> Name of the WAF policy to be attached to the v2 gateway(applicable in only case of the waf_v1 to waf_v2 migration for converting the waf config associated to wafv1 gateway to a waf policy). </param>
        /// <param name="zones"> A list of availability zones denoting where the v2 application gateway resource needs to come from. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ApplicationGatewayMigrationRequest(ApplicationGatewayMigrationType? migrationType, string subnetId, string privateIP, ApplicationGatewaySku sku, string wafPolicyName, IList<string> zones, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            MigrationType = migrationType;
            SubnetId = subnetId;
            PrivateIP = privateIP;
            Sku = sku;
            WafPolicyName = wafPolicyName;
            Zones = zones;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Migration type of the application gateway resource. </summary>
        public ApplicationGatewayMigrationType? MigrationType { get; set; }
        /// <summary> Subnet Id of the v2 application gateway resource. </summary>
        public string SubnetId { get; set; }
        /// <summary> Private ip of the v2 application gateway resource. </summary>
        public string PrivateIP { get; set; }
        /// <summary> SKU of the application gateway resource(Accepted value is Basic,applicable only in case of Standard_Small and Standard_Medium with 2 or less instances), otherwise by default standard_v1 is migrated to standard_v2 and waf_v1 is migrated to waf_v2. </summary>
        public ApplicationGatewaySku Sku { get; set; }
        /// <summary> Name of the WAF policy to be attached to the v2 gateway(applicable in only case of the waf_v1 to waf_v2 migration for converting the waf config associated to wafv1 gateway to a waf policy). </summary>
        public string WafPolicyName { get; set; }
        /// <summary> A list of availability zones denoting where the v2 application gateway resource needs to come from. </summary>
        public IList<string> Zones { get; }
    }
}
