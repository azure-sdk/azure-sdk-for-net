// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ExtendedLocations.Models
{
    public partial class CustomLocationPatch : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Identity))
            {
                writer.WritePropertyName("identity");
                JsonSerializer.Serialize(writer, Identity);
            }
            if (Optional.IsCollectionDefined(Tags))
            {
                writer.WritePropertyName("tags");
                writer.WriteStartObject();
                foreach (var item in Tags)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteStringValue(item.Value);
                }
                writer.WriteEndObject();
            }
            writer.WritePropertyName("properties");
            writer.WriteStartObject();
            if (Optional.IsDefined(Authentication))
            {
                writer.WritePropertyName("authentication");
                writer.WriteObjectValue(Authentication);
            }
            if (Optional.IsCollectionDefined(ClusterExtensionIds))
            {
                writer.WritePropertyName("clusterExtensionIds");
                writer.WriteStartArray();
                foreach (var item in ClusterExtensionIds)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(DisplayName))
            {
                writer.WritePropertyName("displayName");
                writer.WriteStringValue(DisplayName);
            }
            if (Optional.IsDefined(HostResourceId))
            {
                writer.WritePropertyName("hostResourceId");
                writer.WriteStringValue(HostResourceId);
            }
            if (Optional.IsDefined(HostType))
            {
                writer.WritePropertyName("hostType");
                writer.WriteStringValue(HostType.Value.ToString());
            }
            if (Optional.IsDefined(Namespace))
            {
                writer.WritePropertyName("namespace");
                writer.WriteStringValue(Namespace);
            }
            if (Optional.IsDefined(ProvisioningState))
            {
                writer.WritePropertyName("provisioningState");
                writer.WriteStringValue(ProvisioningState);
            }
            writer.WritePropertyName("gcpCloudProfile");
            writer.WriteStartObject();
            writer.WritePropertyName("singleProject");
            writer.WriteStartObject();
            if (Optional.IsDefined(ProjectId))
            {
                writer.WritePropertyName("projectId");
                writer.WriteStringValue(ProjectId);
            }
            if (Optional.IsDefined(ProjectNumber))
            {
                writer.WritePropertyName("projectNumber");
                writer.WriteStringValue(ProjectNumber);
            }
            writer.WriteEndObject();
            writer.WritePropertyName("organizationProject");
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(ExcludedFolderIds))
            {
                writer.WritePropertyName("excludedFolderIds");
                writer.WriteStartArray();
                foreach (var item in ExcludedFolderIds)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(ExcludedProjectNumbers))
            {
                writer.WritePropertyName("excludedProjectNumbers");
                writer.WriteStartArray();
                foreach (var item in ExcludedProjectNumbers)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(OrganizationId))
            {
                writer.WritePropertyName("organizationId");
                writer.WriteStringValue(OrganizationId);
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
            writer.WritePropertyName("awsCloudProfile");
            writer.WriteStartObject();
            if (Optional.IsDefined(AccountId))
            {
                writer.WritePropertyName("accountId");
                writer.WriteStringValue(AccountId);
            }
            if (Optional.IsCollectionDefined(ExcludedAccounts))
            {
                writer.WritePropertyName("excludedAccounts");
                writer.WriteStartArray();
                foreach (var item in ExcludedAccounts)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
            writer.WriteEndObject();
        }
    }
}
