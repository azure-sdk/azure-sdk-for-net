// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.ResourceManager.CarbonOptimization.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Response for available date range of carbon emission data
    /// </summary>
    public partial class CarbonEmissionDataAvailableDateRange
    {
        /// <summary>
        /// Initializes a new instance of the
        /// CarbonEmissionDataAvailableDateRange class.
        /// </summary>
        public CarbonEmissionDataAvailableDateRange()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// CarbonEmissionDataAvailableDateRange class.
        /// </summary>
        /// <param name="startDate">Start date parameter, format is
        /// yyyy-MM-dd</param>
        /// <param name="endDate">End date parameter, format is
        /// yyyy-MM-dd</param>
        public CarbonEmissionDataAvailableDateRange(string startDate, string endDate)
        {
            StartDate = startDate;
            EndDate = endDate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets start date parameter, format is yyyy-MM-dd
        /// </summary>
        [JsonProperty(PropertyName = "startDate")]
        public string StartDate { get; set; }

        /// <summary>
        /// Gets or sets end date parameter, format is yyyy-MM-dd
        /// </summary>
        [JsonProperty(PropertyName = "endDate")]
        public string EndDate { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (StartDate == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "StartDate");
            }
            if (EndDate == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "EndDate");
            }
        }
    }
}
