// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.ResourceManager.CarbonOptimization.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Date range to be used with QueryParameter
    /// </summary>
    public partial class DateRange
    {
        /// <summary>
        /// Initializes a new instance of the DateRange class.
        /// </summary>
        public DateRange()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DateRange class.
        /// </summary>
        /// <param name="start">Start date parameter, format is
        /// yyyy-MM-dd</param>
        /// <param name="end">End date parameter, format is yyyy-MM-dd</param>
        public DateRange(System.DateTime start, System.DateTime end)
        {
            Start = start;
            End = end;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets start date parameter, format is yyyy-MM-dd
        /// </summary>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "start")]
        public System.DateTime Start { get; set; }

        /// <summary>
        /// Gets or sets end date parameter, format is yyyy-MM-dd
        /// </summary>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "end")]
        public System.DateTime End { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
