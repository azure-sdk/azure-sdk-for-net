// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.ResourceManager.CarbonOptimization.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Access Decision for each Subscription
    /// </summary>
    public partial class SubscriptionAccessDecision
    {
        /// <summary>
        /// Initializes a new instance of the SubscriptionAccessDecision class.
        /// </summary>
        public SubscriptionAccessDecision()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SubscriptionAccessDecision class.
        /// </summary>
        /// <param name="subscriptionId">Id of Subscription</param>
        /// <param name="decision">Access decision to subscription. Possible
        /// values include: 'Allowed', 'Denied'</param>
        public SubscriptionAccessDecision(string subscriptionId, string decision)
        {
            SubscriptionId = subscriptionId;
            Decision = decision;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets id of Subscription
        /// </summary>
        [JsonProperty(PropertyName = "subscriptionId")]
        public string SubscriptionId { get; set; }

        /// <summary>
        /// Gets or sets access decision to subscription. Possible values
        /// include: 'Allowed', 'Denied'
        /// </summary>
        [JsonProperty(PropertyName = "decision")]
        public string Decision { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (SubscriptionId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SubscriptionId");
            }
            if (Decision == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Decision");
            }
        }
    }
}
