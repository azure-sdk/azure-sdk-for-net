// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.ResourceManager.CarbonOptimization.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Query Parameters for Overall Carbon Emissions Summary
    /// </summary>
    [Newtonsoft.Json.JsonObject("OverallSummaryReport")]
    public partial class OverallSummaryReportQueryFilter : QueryFilter
    {
        /// <summary>
        /// Initializes a new instance of the OverallSummaryReportQueryFilter
        /// class.
        /// </summary>
        public OverallSummaryReportQueryFilter()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OverallSummaryReportQueryFilter
        /// class.
        /// </summary>
        /// <param name="dateRange">The start date and end date for carbon
        /// emissions data</param>
        /// <param name="subscriptionList">SubscriptionId list for carbon
        /// emissions data</param>
        /// <param name="carbonScopeList">Carbon emission scope for carbon
        /// emissions data</param>
        /// <param name="resourceGroupUrlList">resourceGroupUrl list for carbon
        /// emissions data</param>
        /// <param name="resourceTypeList">resource type list for carbon
        /// emissions data</param>
        /// <param name="locationList">Location list for carbon emissions
        /// data</param>
        public OverallSummaryReportQueryFilter(DateRange dateRange, IList<string> subscriptionList, IList<string> carbonScopeList, IList<string> resourceGroupUrlList = default(IList<string>), IList<string> resourceTypeList = default(IList<string>), IList<string> locationList = default(IList<string>))
            : base(dateRange, subscriptionList, carbonScopeList, resourceGroupUrlList, resourceTypeList, locationList)
        {
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
