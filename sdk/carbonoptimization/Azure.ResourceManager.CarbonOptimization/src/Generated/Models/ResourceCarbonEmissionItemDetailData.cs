// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.ResourceManager.CarbonOptimization.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Response for Resource detailed carbon emissions
    /// </summary>
    [Newtonsoft.Json.JsonObject("ResourceItemDetailsData")]
    public partial class ResourceCarbonEmissionItemDetailData : CarbonEmissionData
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ResourceCarbonEmissionItemDetailData class.
        /// </summary>
        public ResourceCarbonEmissionItemDetailData()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ResourceCarbonEmissionItemDetailData class.
        /// </summary>
        /// <param name="totalCarbonEmission">Total carbon emissions for given
        /// query parameters</param>
        /// <param name="totalCarbonEmissionLastMonth">Total carbon emission
        /// for last month for given query parameters</param>
        /// <param name="changeRatioForLastMonth">Change ratio between
        /// totalCarbonEmission and totalCarbonEmissionLastMonth</param>
        /// <param name="totalCarbonEmission12MonthsAgo">Total carbon emissions
        /// for 12 months ago for given query parameters</param>
        /// <param name="changeRatioFor12Months">Change ratio between
        /// totalCarbonEmission and totalCarbonEmission12MonthsAgo</param>
        /// <param name="itemName">Item name</param>
        /// <param name="groupName">Item group name</param>
        /// <param name="categoryType">Item category. Possible values include:
        /// 'Subscription', 'ResourceGroup', 'Location', 'ServiceType',
        /// 'Resource', 'ResourceType'</param>
        /// <param name="subscriptionId">Subscription Id</param>
        /// <param name="resourceGroup">Resource Group</param>
        /// <param name="changeValueMonthOverMonth">Change Value between
        /// totalCarbonEmission and totalCarbonEmissionLastMonth</param>
        /// <param name="resourceId">Resource Id Url</param>
        /// <param name="location">Resource Location</param>
        /// <param name="resourceType">Resource Type</param>
        /// <param name="resourceTypeFriendlyName">Friendly name of Resource
        /// Type</param>
        /// <param name="resourceProvider">Resource Provider</param>
        public ResourceCarbonEmissionItemDetailData(double totalCarbonEmission, double totalCarbonEmissionLastMonth, double changeRatioForLastMonth, double totalCarbonEmission12MonthsAgo, double changeRatioFor12Months, string itemName, string groupName, string categoryType, string subscriptionId, string resourceGroup, double? changeValueMonthOverMonth = default(double?), string resourceId = default(string), string location = default(string), string resourceType = default(string), string resourceTypeFriendlyName = default(string), string resourceProvider = default(string))
            : base(totalCarbonEmission, totalCarbonEmissionLastMonth, changeRatioForLastMonth, totalCarbonEmission12MonthsAgo, changeRatioFor12Months, changeValueMonthOverMonth)
        {
            ItemName = itemName;
            GroupName = groupName;
            CategoryType = categoryType;
            SubscriptionId = subscriptionId;
            ResourceGroup = resourceGroup;
            ResourceId = resourceId;
            Location = location;
            ResourceType = resourceType;
            ResourceTypeFriendlyName = resourceTypeFriendlyName;
            ResourceProvider = resourceProvider;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets item name
        /// </summary>
        [JsonProperty(PropertyName = "itemName")]
        public string ItemName { get; set; }

        /// <summary>
        /// Gets or sets item group name
        /// </summary>
        [JsonProperty(PropertyName = "groupName")]
        public string GroupName { get; set; }

        /// <summary>
        /// Gets or sets item category. Possible values include:
        /// 'Subscription', 'ResourceGroup', 'Location', 'ServiceType',
        /// 'Resource', 'ResourceType'
        /// </summary>
        [JsonProperty(PropertyName = "categoryType")]
        public string CategoryType { get; set; }

        /// <summary>
        /// Gets or sets subscription Id
        /// </summary>
        [JsonProperty(PropertyName = "subscriptionId")]
        public string SubscriptionId { get; set; }

        /// <summary>
        /// Gets or sets resource Group
        /// </summary>
        [JsonProperty(PropertyName = "resourceGroup")]
        public string ResourceGroup { get; set; }

        /// <summary>
        /// Gets or sets resource Id Url
        /// </summary>
        [JsonProperty(PropertyName = "resourceId")]
        public string ResourceId { get; set; }

        /// <summary>
        /// Gets or sets resource Location
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public string Location { get; set; }

        /// <summary>
        /// Gets or sets resource Type
        /// </summary>
        [JsonProperty(PropertyName = "resourceType")]
        public string ResourceType { get; set; }

        /// <summary>
        /// Gets or sets friendly name of Resource Type
        /// </summary>
        [JsonProperty(PropertyName = "resourceTypeFriendlyName")]
        public string ResourceTypeFriendlyName { get; set; }

        /// <summary>
        /// Gets or sets resource Provider
        /// </summary>
        [JsonProperty(PropertyName = "resourceProvider")]
        public string ResourceProvider { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (ItemName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ItemName");
            }
            if (GroupName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "GroupName");
            }
            if (CategoryType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CategoryType");
            }
            if (SubscriptionId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SubscriptionId");
            }
            if (ResourceGroup == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ResourceGroup");
            }
        }
    }
}
