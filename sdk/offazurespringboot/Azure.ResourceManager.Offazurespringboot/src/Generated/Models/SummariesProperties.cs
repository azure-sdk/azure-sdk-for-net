// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Offazurespringboot.Models
{
    /// <summary> Summaries properties. </summary>
    public partial class SummariesProperties
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="SummariesProperties"/>. </summary>
        public SummariesProperties()
        {
            Errors = new ChangeTrackingList<Error>();
        }

        /// <summary> Initializes a new instance of <see cref="SummariesProperties"/>. </summary>
        /// <param name="discoveredServers"> The of number discovered spring boot servers. </param>
        /// <param name="discoveredApps"> The of number discovered spring boot apps. </param>
        /// <param name="errors"> The list of errors. </param>
        /// <param name="provisioningState"> The resource provisioning state. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal SummariesProperties(long? discoveredServers, long? discoveredApps, IList<Error> errors, ProvisioningState? provisioningState, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            DiscoveredServers = discoveredServers;
            DiscoveredApps = discoveredApps;
            Errors = errors;
            ProvisioningState = provisioningState;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The of number discovered spring boot servers. </summary>
        public long? DiscoveredServers { get; set; }
        /// <summary> The of number discovered spring boot apps. </summary>
        public long? DiscoveredApps { get; set; }
        /// <summary> The list of errors. </summary>
        public IList<Error> Errors { get; }
        /// <summary> The resource provisioning state. </summary>
        public ProvisioningState? ProvisioningState { get; set; }
    }
}
