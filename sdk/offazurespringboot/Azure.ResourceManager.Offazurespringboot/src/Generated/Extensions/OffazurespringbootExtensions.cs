// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.ResourceManager;
using Azure.ResourceManager.Offazurespringboot.Mocking;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.Offazurespringboot
{
    /// <summary> A class to add extension methods to Azure.ResourceManager.Offazurespringboot. </summary>
    public static partial class OffazurespringbootExtensions
    {
        private static MockableOffazurespringbootArmClient GetMockableOffazurespringbootArmClient(ArmClient client)
        {
            return client.GetCachedClient(client0 => new MockableOffazurespringbootArmClient(client0));
        }

        private static MockableOffazurespringbootResourceGroupResource GetMockableOffazurespringbootResourceGroupResource(ArmResource resource)
        {
            return resource.GetCachedClient(client => new MockableOffazurespringbootResourceGroupResource(client, resource.Id));
        }

        private static MockableOffazurespringbootSubscriptionResource GetMockableOffazurespringbootSubscriptionResource(ArmResource resource)
        {
            return resource.GetCachedClient(client => new MockableOffazurespringbootSubscriptionResource(client, resource.Id));
        }

        /// <summary>
        /// Gets an object representing a <see cref="SpringbootsitesModelResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SpringbootsitesModelResource.CreateResourceIdentifier" /> to create a <see cref="SpringbootsitesModelResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableOffazurespringbootArmClient.GetSpringbootsitesModelResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SpringbootsitesModelResource" /> object. </returns>
        public static SpringbootsitesModelResource GetSpringbootsitesModelResource(this ArmClient client, ResourceIdentifier id)
        {
            return GetMockableOffazurespringbootArmClient(client).GetSpringbootsitesModelResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="SpringbootserversModelResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SpringbootserversModelResource.CreateResourceIdentifier" /> to create a <see cref="SpringbootserversModelResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableOffazurespringbootArmClient.GetSpringbootserversModelResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SpringbootserversModelResource" /> object. </returns>
        public static SpringbootserversModelResource GetSpringbootserversModelResource(this ArmClient client, ResourceIdentifier id)
        {
            return GetMockableOffazurespringbootArmClient(client).GetSpringbootserversModelResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="SpringbootappsModelResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SpringbootappsModelResource.CreateResourceIdentifier" /> to create a <see cref="SpringbootappsModelResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableOffazurespringbootArmClient.GetSpringbootappsModelResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SpringbootappsModelResource" /> object. </returns>
        public static SpringbootappsModelResource GetSpringbootappsModelResource(this ArmClient client, ResourceIdentifier id)
        {
            return GetMockableOffazurespringbootArmClient(client).GetSpringbootappsModelResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="SummaryResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SummaryResource.CreateResourceIdentifier" /> to create a <see cref="SummaryResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableOffazurespringbootArmClient.GetSummaryResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SummaryResource" /> object. </returns>
        public static SummaryResource GetSummaryResource(this ArmClient client, ResourceIdentifier id)
        {
            return GetMockableOffazurespringbootArmClient(client).GetSummaryResource(id);
        }

        /// <summary>
        /// Gets an object representing an <see cref="ErrorSummaryResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ErrorSummaryResource.CreateResourceIdentifier" /> to create an <see cref="ErrorSummaryResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableOffazurespringbootArmClient.GetErrorSummaryResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ErrorSummaryResource" /> object. </returns>
        public static ErrorSummaryResource GetErrorSummaryResource(this ArmClient client, ResourceIdentifier id)
        {
            return GetMockableOffazurespringbootArmClient(client).GetErrorSummaryResource(id);
        }

        /// <summary>
        /// Gets a collection of SpringbootsitesModelResources in the ResourceGroupResource.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableOffazurespringbootResourceGroupResource.GetSpringbootsitesModels()"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <returns> An object representing collection of SpringbootsitesModelResources and their operations over a SpringbootsitesModelResource. </returns>
        public static SpringbootsitesModelCollection GetSpringbootsitesModels(this ResourceGroupResource resourceGroupResource)
        {
            return GetMockableOffazurespringbootResourceGroupResource(resourceGroupResource).GetSpringbootsitesModels();
        }

        /// <summary>
        /// Get a springbootsites resource.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzureSpringBoot/springbootsites/{springbootsitesName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>springbootsites_Get</description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableOffazurespringbootResourceGroupResource.GetSpringbootsitesModelAsync(string,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="springbootsitesName"> The springbootsites name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="springbootsitesName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="springbootsitesName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<SpringbootsitesModelResource>> GetSpringbootsitesModelAsync(this ResourceGroupResource resourceGroupResource, string springbootsitesName, CancellationToken cancellationToken = default)
        {
            return await GetMockableOffazurespringbootResourceGroupResource(resourceGroupResource).GetSpringbootsitesModelAsync(springbootsitesName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Get a springbootsites resource.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzureSpringBoot/springbootsites/{springbootsitesName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>springbootsites_Get</description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableOffazurespringbootResourceGroupResource.GetSpringbootsitesModel(string,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="springbootsitesName"> The springbootsites name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="springbootsitesName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="springbootsitesName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public static Response<SpringbootsitesModelResource> GetSpringbootsitesModel(this ResourceGroupResource resourceGroupResource, string springbootsitesName, CancellationToken cancellationToken = default)
        {
            return GetMockableOffazurespringbootResourceGroupResource(resourceGroupResource).GetSpringbootsitesModel(springbootsitesName, cancellationToken);
        }

        /// <summary>
        /// List springbootsites resource by subscription
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.OffAzureSpringBoot/springbootsites</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>springbootsites_ListBySubscription</description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableOffazurespringbootSubscriptionResource.GetSpringbootsitesModels(CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="SpringbootsitesModelResource" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<SpringbootsitesModelResource> GetSpringbootsitesModelsAsync(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetMockableOffazurespringbootSubscriptionResource(subscriptionResource).GetSpringbootsitesModelsAsync(cancellationToken);
        }

        /// <summary>
        /// List springbootsites resource by subscription
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.OffAzureSpringBoot/springbootsites</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>springbootsites_ListBySubscription</description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableOffazurespringbootSubscriptionResource.GetSpringbootsitesModels(CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="SpringbootsitesModelResource" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<SpringbootsitesModelResource> GetSpringbootsitesModels(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetMockableOffazurespringbootSubscriptionResource(subscriptionResource).GetSpringbootsitesModels(cancellationToken);
        }

        /// <summary>
        /// List springbootservers resource by subscription
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.OffAzureSpringBoot/springbootsites/{siteName}/springbootservers</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>springbootservers_ListBySubscription</description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableOffazurespringbootSubscriptionResource.GetSpringbootserversModels(string,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="siteName"> The springbootsites name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="siteName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="siteName"/> is null. </exception>
        /// <returns> An async collection of <see cref="SpringbootserversModelResource" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<SpringbootserversModelResource> GetSpringbootserversModelsAsync(this SubscriptionResource subscriptionResource, string siteName, CancellationToken cancellationToken = default)
        {
            return GetMockableOffazurespringbootSubscriptionResource(subscriptionResource).GetSpringbootserversModelsAsync(siteName, cancellationToken);
        }

        /// <summary>
        /// List springbootservers resource by subscription
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.OffAzureSpringBoot/springbootsites/{siteName}/springbootservers</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>springbootservers_ListBySubscription</description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableOffazurespringbootSubscriptionResource.GetSpringbootserversModels(string,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="siteName"> The springbootsites name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="siteName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="siteName"/> is null. </exception>
        /// <returns> A collection of <see cref="SpringbootserversModelResource" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<SpringbootserversModelResource> GetSpringbootserversModels(this SubscriptionResource subscriptionResource, string siteName, CancellationToken cancellationToken = default)
        {
            return GetMockableOffazurespringbootSubscriptionResource(subscriptionResource).GetSpringbootserversModels(siteName, cancellationToken);
        }

        /// <summary>
        /// List springbootapps resource by subscription
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.OffAzureSpringBoot/springbootsites/{siteName}/springbootapps</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>springbootapps_ListBySubscription</description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableOffazurespringbootSubscriptionResource.GetSpringbootappsModels(string,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="siteName"> The springbootsites name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="siteName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="siteName"/> is null. </exception>
        /// <returns> An async collection of <see cref="SpringbootappsModelResource" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<SpringbootappsModelResource> GetSpringbootappsModelsAsync(this SubscriptionResource subscriptionResource, string siteName, CancellationToken cancellationToken = default)
        {
            return GetMockableOffazurespringbootSubscriptionResource(subscriptionResource).GetSpringbootappsModelsAsync(siteName, cancellationToken);
        }

        /// <summary>
        /// List springbootapps resource by subscription
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.OffAzureSpringBoot/springbootsites/{siteName}/springbootapps</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>springbootapps_ListBySubscription</description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableOffazurespringbootSubscriptionResource.GetSpringbootappsModels(string,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="siteName"> The springbootsites name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="siteName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="siteName"/> is null. </exception>
        /// <returns> A collection of <see cref="SpringbootappsModelResource" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<SpringbootappsModelResource> GetSpringbootappsModels(this SubscriptionResource subscriptionResource, string siteName, CancellationToken cancellationToken = default)
        {
            return GetMockableOffazurespringbootSubscriptionResource(subscriptionResource).GetSpringbootappsModels(siteName, cancellationToken);
        }
    }
}
