// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Offazurespringboot.Models
{
    /// <summary> Model factory for models. </summary>
    public static partial class ArmOffazurespringbootModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="Offazurespringboot.SpringbootsitesModelData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="properties"> The springbootsites resource definition. </param>
        /// <param name="extendedLocation"> The extended location definition. </param>
        /// <returns> A new <see cref="Offazurespringboot.SpringbootsitesModelData"/> instance for mocking. </returns>
        public static SpringbootsitesModelData SpringbootsitesModelData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IDictionary<string, string> tags = null, AzureLocation location = default, SpringbootsitesProperties properties = null, SpringbootsitesModelExtendedLocation extendedLocation = null)
        {
            tags ??= new Dictionary<string, string>();

            return new SpringbootsitesModelData(
                id,
                name,
                resourceType,
                systemData,
                tags,
                location,
                properties,
                extendedLocation,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SpringbootsitesModelPatch"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="properties"> The springbootsites resource definition. </param>
        /// <returns> A new <see cref="Models.SpringbootsitesModelPatch"/> instance for mocking. </returns>
        public static SpringbootsitesModelPatch SpringbootsitesModelPatch(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IDictionary<string, string> tags = null, AzureLocation location = default, SpringbootsitesProperties properties = null)
        {
            tags ??= new Dictionary<string, string>();

            return new SpringbootsitesModelPatch(
                id,
                name,
                resourceType,
                systemData,
                tags,
                location,
                properties,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Offazurespringboot.SpringbootserversModelData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="properties"> The springbootservers resource definition. </param>
        /// <returns> A new <see cref="Offazurespringboot.SpringbootserversModelData"/> instance for mocking. </returns>
        public static SpringbootserversModelData SpringbootserversModelData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, SpringbootserversProperties properties = null)
        {
            return new SpringbootserversModelData(
                id,
                name,
                resourceType,
                systemData,
                properties,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SpringbootserversModelPatch"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="properties"> The springbootsites resource definition. </param>
        /// <returns> A new <see cref="Models.SpringbootserversModelPatch"/> instance for mocking. </returns>
        public static SpringbootserversModelPatch SpringbootserversModelPatch(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, SpringbootserversProperties properties = null)
        {
            return new SpringbootserversModelPatch(
                id,
                name,
                resourceType,
                systemData,
                properties,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Offazurespringboot.SpringbootappsModelData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="properties"> The springbootapps resource definition. </param>
        /// <returns> A new <see cref="Offazurespringboot.SpringbootappsModelData"/> instance for mocking. </returns>
        public static SpringbootappsModelData SpringbootappsModelData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, SpringbootappsProperties properties = null)
        {
            return new SpringbootappsModelData(
                id,
                name,
                resourceType,
                systemData,
                properties,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SpringbootappsProperties"/>. </summary>
        /// <param name="appName"> The name of SpringBootApp. </param>
        /// <param name="artifactName"> The artifact name of SpringBootApp. </param>
        /// <param name="appPort"> The application port. </param>
        /// <param name="appType"> The application type, whether it is a SpringBoot app. </param>
        /// <param name="applicationConfigurations"> The application configuration file list. </param>
        /// <param name="bindingPorts"> The application binding port list. </param>
        /// <param name="buildJdkVersion"> The jdk version in build. </param>
        /// <param name="certificates"> The certificate file list. </param>
        /// <param name="checksum"> The checksum of jar file. </param>
        /// <param name="dependencies"> The dependency list. </param>
        /// <param name="environments"> The environment variable list. </param>
        /// <param name="instanceCount"> The total instance count the app deployed. </param>
        /// <param name="jarFileLocation"> The jar file location on the server. </param>
        /// <param name="jvmMemoryInMB"> The jvm heap memory allocated. </param>
        /// <param name="jvmOptions"> The jvm options. </param>
        /// <param name="miscs"> The other types of date collected. </param>
        /// <param name="instances"> The breakdown info for app instances on all the servers. </param>
        /// <param name="runtimeJdkVersion"> The jdk version installed on server. </param>
        /// <param name="servers"> The server list the app installed. </param>
        /// <param name="machineArmIds"> The machine ARM id list the app belongs to. </param>
        /// <param name="springBootVersion"> The spring boot version. </param>
        /// <param name="staticContentLocations"> The static content location list. </param>
        /// <param name="connectionStrings"> The connection string list. </param>
        /// <param name="lastModifiedOn"> Time when this springbootapps jar file was last modified. </param>
        /// <param name="lastUpdatedOn"> Time when this springbootapps instance was last refreshed. </param>
        /// <param name="provisioningState"> The resource provisioning state. </param>
        /// <param name="errors"> The list of errors. </param>
        /// <param name="labels"> Resource labels. </param>
        /// <returns> A new <see cref="Models.SpringbootappsProperties"/> instance for mocking. </returns>
        public static SpringbootappsProperties SpringbootappsProperties(string appName = null, string artifactName = null, int? appPort = null, string appType = null, IEnumerable<SpringbootappsPropertiesApplicationConfigurationsItem> applicationConfigurations = null, IEnumerable<int> bindingPorts = null, string buildJdkVersion = null, IEnumerable<string> certificates = null, string checksum = null, IEnumerable<string> dependencies = null, IEnumerable<string> environments = null, int? instanceCount = null, string jarFileLocation = null, int? jvmMemoryInMB = null, IEnumerable<string> jvmOptions = null, IEnumerable<SpringbootappsPropertiesMiscsItem> miscs = null, IEnumerable<SpringbootappsPropertiesInstancesItem> instances = null, string runtimeJdkVersion = null, IEnumerable<string> servers = null, IEnumerable<string> machineArmIds = null, string springBootVersion = null, IEnumerable<string> staticContentLocations = null, IEnumerable<string> connectionStrings = null, DateTimeOffset? lastModifiedOn = null, DateTimeOffset? lastUpdatedOn = null, ProvisioningState? provisioningState = null, IEnumerable<Error> errors = null, IDictionary<string, string> labels = null)
        {
            applicationConfigurations ??= new List<SpringbootappsPropertiesApplicationConfigurationsItem>();
            bindingPorts ??= new List<int>();
            certificates ??= new List<string>();
            dependencies ??= new List<string>();
            environments ??= new List<string>();
            jvmOptions ??= new List<string>();
            miscs ??= new List<SpringbootappsPropertiesMiscsItem>();
            instances ??= new List<SpringbootappsPropertiesInstancesItem>();
            servers ??= new List<string>();
            machineArmIds ??= new List<string>();
            staticContentLocations ??= new List<string>();
            connectionStrings ??= new List<string>();
            errors ??= new List<Error>();
            labels ??= new Dictionary<string, string>();

            return new SpringbootappsProperties(
                appName,
                artifactName,
                appPort,
                appType,
                applicationConfigurations?.ToList(),
                bindingPorts?.ToList(),
                buildJdkVersion,
                certificates?.ToList(),
                checksum,
                dependencies?.ToList(),
                environments?.ToList(),
                instanceCount,
                jarFileLocation,
                jvmMemoryInMB,
                jvmOptions?.ToList(),
                miscs?.ToList(),
                instances?.ToList(),
                runtimeJdkVersion,
                servers?.ToList(),
                machineArmIds?.ToList(),
                springBootVersion,
                staticContentLocations?.ToList(),
                connectionStrings?.ToList(),
                lastModifiedOn,
                lastUpdatedOn,
                provisioningState,
                errors?.ToList(),
                labels,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SpringbootappsModelPatch"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="properties"> The springbootapps resource definition. </param>
        /// <returns> A new <see cref="Models.SpringbootappsModelPatch"/> instance for mocking. </returns>
        public static SpringbootappsModelPatch SpringbootappsModelPatch(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, SpringbootappsProperties properties = null)
        {
            return new SpringbootappsModelPatch(
                id,
                name,
                resourceType,
                systemData,
                properties,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Offazurespringboot.SummaryData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="properties"> Resource properties. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <returns> A new <see cref="Offazurespringboot.SummaryData"/> instance for mocking. </returns>
        public static SummaryData SummaryData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, SummariesProperties properties = null, IDictionary<string, string> tags = null)
        {
            tags ??= new Dictionary<string, string>();

            return new SummaryData(
                id,
                name,
                resourceType,
                systemData,
                properties,
                tags,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Offazurespringboot.ErrorSummaryData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="properties"> Resource properties. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <returns> A new <see cref="Offazurespringboot.ErrorSummaryData"/> instance for mocking. </returns>
        public static ErrorSummaryData ErrorSummaryData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, ErrorSummariesProperties properties = null, IDictionary<string, string> tags = null)
        {
            tags ??= new Dictionary<string, string>();

            return new ErrorSummaryData(
                id,
                name,
                resourceType,
                systemData,
                properties,
                tags,
                serializedAdditionalRawData: null);
        }
    }
}
