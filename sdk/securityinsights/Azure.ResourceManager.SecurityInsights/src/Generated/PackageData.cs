// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.SecurityInsights.Models;

namespace Azure.ResourceManager.SecurityInsights
{
    /// <summary> A class representing the Package data model. </summary>
    public partial class PackageData : ResourceData
    {
        /// <summary> Initializes a new instance of PackageData. </summary>
        public PackageData()
        {
            Providers = new ChangeTrackingList<string>();
            ThreatAnalysisTactics = new ChangeTrackingList<string>();
            ThreatAnalyticsTechniques = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of PackageData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="packageId"> The package id. </param>
        /// <param name="packageKind"> The package kind. </param>
        /// <param name="installedVersion"> The version of the installed package, null or absent means not installed. </param>
        /// <param name="isNew"> Flag indicates if this is a newly published package. </param>
        /// <param name="isPreview"> Flag indicates if this package is in preview. </param>
        /// <param name="isFeatured"> Flag indicates if this package is among the featured list. </param>
        /// <param name="version"> the latest version number of the package. </param>
        /// <param name="displayName"> The display name of the package. </param>
        /// <param name="description"> The description of the package. </param>
        /// <param name="source"> The source of the package. </param>
        /// <param name="author"> The author of the package. </param>
        /// <param name="support"> The support tier of the package. </param>
        /// <param name="dependencies"> The support tier of the package. </param>
        /// <param name="providers"> Providers for the package item. </param>
        /// <param name="firstPublishOn"> first publish date package item. </param>
        /// <param name="lastPublishOn"> last publish date for the package item. </param>
        /// <param name="categories"> The categories of the package. </param>
        /// <param name="threatAnalysisTactics"> the tactics the resource covers. </param>
        /// <param name="threatAnalyticsTechniques"> the techniques the resource covers, these have to be aligned with the tactics being used. </param>
        /// <param name="icon"> the icon identifier. this id can later be fetched from the content metadata. </param>
        /// <param name="packageItems"> The JSON object of the package items. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        internal PackageData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string packageId, PackageKind? packageKind, string installedVersion, Flag? isNew, Flag? isPreview, Flag? isFeatured, string version, string displayName, string description, ContentMetadataSource source, ContentMetadataAuthor author, ContentMetadataSupport support, ContentMetadataDependencies dependencies, IList<string> providers, DateTimeOffset? firstPublishOn, DateTimeOffset? lastPublishOn, ContentMetadataCategories categories, IList<string> threatAnalysisTactics, IList<string> threatAnalyticsTechniques, string icon, PackagePropertiesPackageItems packageItems, ETag? etag) : base(id, name, resourceType, systemData)
        {
            PackageId = packageId;
            PackageKind = packageKind;
            InstalledVersion = installedVersion;
            IsNew = isNew;
            IsPreview = isPreview;
            IsFeatured = isFeatured;
            Version = version;
            DisplayName = displayName;
            Description = description;
            Source = source;
            Author = author;
            Support = support;
            Dependencies = dependencies;
            Providers = providers;
            FirstPublishOn = firstPublishOn;
            LastPublishOn = lastPublishOn;
            Categories = categories;
            ThreatAnalysisTactics = threatAnalysisTactics;
            ThreatAnalyticsTechniques = threatAnalyticsTechniques;
            Icon = icon;
            PackageItems = packageItems;
            ETag = etag;
        }

        /// <summary> The package id. </summary>
        public string PackageId { get; set; }
        /// <summary> The package kind. </summary>
        public PackageKind? PackageKind { get; set; }
        /// <summary> The version of the installed package, null or absent means not installed. </summary>
        public string InstalledVersion { get; set; }
        /// <summary> Flag indicates if this is a newly published package. </summary>
        public Flag? IsNew { get; set; }
        /// <summary> Flag indicates if this package is in preview. </summary>
        public Flag? IsPreview { get; set; }
        /// <summary> Flag indicates if this package is among the featured list. </summary>
        public Flag? IsFeatured { get; set; }
        /// <summary> the latest version number of the package. </summary>
        public string Version { get; set; }
        /// <summary> The display name of the package. </summary>
        public string DisplayName { get; set; }
        /// <summary> The description of the package. </summary>
        public string Description { get; set; }
        /// <summary> The source of the package. </summary>
        public ContentMetadataSource Source { get; set; }
        /// <summary> The author of the package. </summary>
        public ContentMetadataAuthor Author { get; set; }
        /// <summary> The support tier of the package. </summary>
        public ContentMetadataSupport Support { get; set; }
        /// <summary> The support tier of the package. </summary>
        public ContentMetadataDependencies Dependencies { get; set; }
        /// <summary> Providers for the package item. </summary>
        public IList<string> Providers { get; }
        /// <summary> first publish date package item. </summary>
        public DateTimeOffset? FirstPublishOn { get; set; }
        /// <summary> last publish date for the package item. </summary>
        public DateTimeOffset? LastPublishOn { get; set; }
        /// <summary> The categories of the package. </summary>
        public ContentMetadataCategories Categories { get; set; }
        /// <summary> the tactics the resource covers. </summary>
        public IList<string> ThreatAnalysisTactics { get; }
        /// <summary> the techniques the resource covers, these have to be aligned with the tactics being used. </summary>
        public IList<string> ThreatAnalyticsTechniques { get; }
        /// <summary> the icon identifier. this id can later be fetched from the content metadata. </summary>
        public string Icon { get; set; }
        /// <summary> The JSON object of the package items. </summary>
        internal PackagePropertiesPackageItems PackageItems { get; set; }
        /// <summary> package items resources. </summary>
        public IList<PackageItemArmResource> PackageItemsResources
        {
            get
            {
                if (PackageItems is null)
                    PackageItems = new PackagePropertiesPackageItems();
                return PackageItems.Resources;
            }
        }

        /// <summary> Etag of the azure resource. </summary>
        public ETag? ETag { get; set; }
    }
}
