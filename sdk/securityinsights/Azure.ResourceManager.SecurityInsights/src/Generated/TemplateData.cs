// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.SecurityInsights.Models;

namespace Azure.ResourceManager.SecurityInsights
{
    /// <summary> A class representing the Template data model. </summary>
    public partial class TemplateData : ResourceData
    {
        /// <summary> Initializes a new instance of TemplateData. </summary>
        public TemplateData()
        {
            Providers = new ChangeTrackingList<string>();
            ThreatAnalysisTactics = new ChangeTrackingList<string>();
            ThreatAnalysisTechniques = new ChangeTrackingList<string>();
            PreviewImages = new ChangeTrackingList<string>();
            PreviewImagesDark = new ChangeTrackingList<string>();
            DependantTemplates = new ChangeTrackingList<TemplateProperties>();
        }

        /// <summary> Initializes a new instance of TemplateData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="contentId"> Static ID for the content.  Used to identify dependencies and content from solutions or community.  Hard-coded/static for out of the box content and solutions. Dynamic for user-created.  This is the resource name. </param>
        /// <param name="displayName"> The display name of the template. </param>
        /// <param name="contentKind"> The kind of content the template is for. </param>
        /// <param name="version"> Version of the content.  Default and recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string, but then we cannot guarantee any version checks. </param>
        /// <param name="source"> Source of the content.  This is where/how it was created. </param>
        /// <param name="author"> The creator of the content item. </param>
        /// <param name="support"> Support information for the template - type, name, contact information. </param>
        /// <param name="providers"> Providers for the content item. </param>
        /// <param name="categories"> Categories for the  item. </param>
        /// <param name="firstPublishOn"> first publish date content item. </param>
        /// <param name="lastPublishOn"> last publish date for the content item. </param>
        /// <param name="threatAnalysisTactics"> the tactics the resource covers. </param>
        /// <param name="threatAnalysisTechniques"> the techniques the resource covers, these have to be aligned with the tactics being used. </param>
        /// <param name="previewImages"> preview image file names. These will be taken from the solution artifacts. </param>
        /// <param name="previewImagesDark"> preview image file names. These will be taken from the solution artifacts. used for dark theme support. </param>
        /// <param name="icon"> the icon identifier. this id can later be fetched from the content metadata. </param>
        /// <param name="dependantTemplates"> Dependencies for the content item, what other content items it requires to work.  Can describe more complex dependencies using a recursive/nested structure. For a single dependency an id/kind/version can be supplied or operator/criteria for complex formats. </param>
        /// <param name="mainTemplate"> The main template of the template. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        internal TemplateData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string contentId, string displayName, SecurityInsightsKind? contentKind, string version, ContentMetadataSource source, ContentMetadataAuthor author, ContentMetadataSupport support, IList<string> providers, ContentMetadataCategories categories, DateTimeOffset? firstPublishOn, DateTimeOffset? lastPublishOn, IList<string> threatAnalysisTactics, IList<string> threatAnalysisTechniques, IList<string> previewImages, IList<string> previewImagesDark, string icon, IList<TemplateProperties> dependantTemplates, ContentMainTemplate mainTemplate, ETag? etag) : base(id, name, resourceType, systemData)
        {
            ContentId = contentId;
            DisplayName = displayName;
            ContentKind = contentKind;
            Version = version;
            Source = source;
            Author = author;
            Support = support;
            Providers = providers;
            Categories = categories;
            FirstPublishOn = firstPublishOn;
            LastPublishOn = lastPublishOn;
            ThreatAnalysisTactics = threatAnalysisTactics;
            ThreatAnalysisTechniques = threatAnalysisTechniques;
            PreviewImages = previewImages;
            PreviewImagesDark = previewImagesDark;
            Icon = icon;
            DependantTemplates = dependantTemplates;
            MainTemplate = mainTemplate;
            ETag = etag;
        }

        /// <summary> Static ID for the content.  Used to identify dependencies and content from solutions or community.  Hard-coded/static for out of the box content and solutions. Dynamic for user-created.  This is the resource name. </summary>
        public string ContentId { get; set; }
        /// <summary> The display name of the template. </summary>
        public string DisplayName { get; set; }
        /// <summary> The kind of content the template is for. </summary>
        public SecurityInsightsKind? ContentKind { get; set; }
        /// <summary> Version of the content.  Default and recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string, but then we cannot guarantee any version checks. </summary>
        public string Version { get; set; }
        /// <summary> Source of the content.  This is where/how it was created. </summary>
        public ContentMetadataSource Source { get; set; }
        /// <summary> The creator of the content item. </summary>
        public ContentMetadataAuthor Author { get; set; }
        /// <summary> Support information for the template - type, name, contact information. </summary>
        public ContentMetadataSupport Support { get; set; }
        /// <summary> Providers for the content item. </summary>
        public IList<string> Providers { get; }
        /// <summary> Categories for the  item. </summary>
        public ContentMetadataCategories Categories { get; set; }
        /// <summary> first publish date content item. </summary>
        public DateTimeOffset? FirstPublishOn { get; set; }
        /// <summary> last publish date for the content item. </summary>
        public DateTimeOffset? LastPublishOn { get; set; }
        /// <summary> the tactics the resource covers. </summary>
        public IList<string> ThreatAnalysisTactics { get; }
        /// <summary> the techniques the resource covers, these have to be aligned with the tactics being used. </summary>
        public IList<string> ThreatAnalysisTechniques { get; }
        /// <summary> preview image file names. These will be taken from the solution artifacts. </summary>
        public IList<string> PreviewImages { get; }
        /// <summary> preview image file names. These will be taken from the solution artifacts. used for dark theme support. </summary>
        public IList<string> PreviewImagesDark { get; }
        /// <summary> the icon identifier. this id can later be fetched from the content metadata. </summary>
        public string Icon { get; set; }
        /// <summary> Dependencies for the content item, what other content items it requires to work.  Can describe more complex dependencies using a recursive/nested structure. For a single dependency an id/kind/version can be supplied or operator/criteria for complex formats. </summary>
        public IList<TemplateProperties> DependantTemplates { get; }
        /// <summary> The main template of the template. </summary>
        public ContentMainTemplate MainTemplate { get; set; }
        /// <summary> Etag of the azure resource. </summary>
        public ETag? ETag { get; set; }
    }
}
