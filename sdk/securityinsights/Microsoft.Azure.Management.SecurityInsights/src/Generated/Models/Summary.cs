// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents a Summary in Azure Security Insights.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class Summary : ResourceWithEtag
    {
        /// <summary>
        /// Initializes a new instance of the Summary class.
        /// </summary>
        public Summary()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Summary class.
        /// </summary>
        /// <param name="summaryName">The name of the summary</param>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="systemData">Azure Resource Manager metadata containing
        /// createdBy and modifiedBy information.</param>
        /// <param name="etag">Etag of the azure resource</param>
        /// <param name="summaryId">The ID (a GUID) of the summary</param>
        /// <param name="sourceInfo">The source info for the summary</param>
        /// <param name="searchKey">The search key is used to optimize query
        /// performance when using summaries for joins with other data. For
        /// example, enable a column with IP addresses to be the designated
        /// SearchKey field, then use this field as the key field when joining
        /// to other event data by IP address.</param>
        /// <param name="tactics">A list of relevant MITRE attacks</param>
        /// <param name="techniques">The list of techniques for summary</param>
        /// <param name="relationName">The relation name for the
        /// summary</param>
        /// <param name="relationId">The relation ID (GUID) for the
        /// summary</param>
        /// <param name="summaryDescription">The description for the
        /// summary</param>
        /// <param name="rawContent">The raw content that represents to summary
        /// items to create.</param>
        /// <param name="summaryType">The type of the summary. Possible values
        /// include: 'dynamic-summary', 'dynamic-summary-item'</param>
        /// <param name="tenantId">The tenantId where the summary belongs
        /// to</param>
        /// <param name="summaryStatus">The status of the Summary : Active,
        /// Deleted. Possible values include: 'Active', 'Deleted'</param>
        /// <param name="provisioningState">The provisioning state of the
        /// Dynamic Summary resource. Possible values include: 'Succeeded',
        /// 'Failed', 'Canceled', 'InProgress'</param>
        public Summary(string summaryName, string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), string etag = default(string), string summaryId = default(string), IDictionary<string, string> sourceInfo = default(IDictionary<string, string>), string searchKey = default(string), IList<string> tactics = default(IList<string>), IList<string> techniques = default(IList<string>), string relationName = default(string), string relationId = default(string), string summaryDescription = default(string), string rawContent = default(string), string summaryType = default(string), string tenantId = default(string), string summaryStatus = default(string), string provisioningState = default(string))
            : base(id, name, type, systemData, etag)
        {
            SummaryId = summaryId;
            SummaryName = summaryName;
            SourceInfo = sourceInfo;
            SearchKey = searchKey;
            Tactics = tactics;
            Techniques = techniques;
            RelationName = relationName;
            RelationId = relationId;
            SummaryDescription = summaryDescription;
            RawContent = rawContent;
            SummaryType = summaryType;
            TenantId = tenantId;
            SummaryStatus = summaryStatus;
            ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the ID (a GUID) of the summary
        /// </summary>
        [JsonProperty(PropertyName = "properties.summaryId")]
        public string SummaryId { get; set; }

        /// <summary>
        /// Gets or sets the name of the summary
        /// </summary>
        [JsonProperty(PropertyName = "properties.summaryName")]
        public string SummaryName { get; set; }

        /// <summary>
        /// Gets or sets the source info for the summary
        /// </summary>
        [JsonProperty(PropertyName = "properties.sourceInfo")]
        public IDictionary<string, string> SourceInfo { get; set; }

        /// <summary>
        /// Gets or sets the search key is used to optimize query performance
        /// when using summaries for joins with other data. For example, enable
        /// a column with IP addresses to be the designated SearchKey field,
        /// then use this field as the key field when joining to other event
        /// data by IP address.
        /// </summary>
        [JsonProperty(PropertyName = "properties.searchKey")]
        public string SearchKey { get; set; }

        /// <summary>
        /// Gets or sets a list of relevant MITRE attacks
        /// </summary>
        [JsonProperty(PropertyName = "properties.tactics")]
        public IList<string> Tactics { get; set; }

        /// <summary>
        /// Gets or sets the list of techniques for summary
        /// </summary>
        [JsonProperty(PropertyName = "properties.techniques")]
        public IList<string> Techniques { get; set; }

        /// <summary>
        /// Gets or sets the relation name for the summary
        /// </summary>
        [JsonProperty(PropertyName = "properties.relationName")]
        public string RelationName { get; set; }

        /// <summary>
        /// Gets or sets the relation ID (GUID) for the summary
        /// </summary>
        [JsonProperty(PropertyName = "properties.relationId")]
        public string RelationId { get; set; }

        /// <summary>
        /// Gets or sets the description for the summary
        /// </summary>
        [JsonProperty(PropertyName = "properties.summaryDescription")]
        public string SummaryDescription { get; set; }

        /// <summary>
        /// Gets or sets the raw content that represents to summary items to
        /// create.
        /// </summary>
        [JsonProperty(PropertyName = "properties.rawContent")]
        public string RawContent { get; set; }

        /// <summary>
        /// Gets or sets the type of the summary. Possible values include:
        /// 'dynamic-summary', 'dynamic-summary-item'
        /// </summary>
        [JsonProperty(PropertyName = "properties.type")]
        public string SummaryType { get; set; }

        /// <summary>
        /// Gets or sets the tenantId where the summary belongs to
        /// </summary>
        [JsonProperty(PropertyName = "properties.tenantId")]
        public string TenantId { get; set; }

        /// <summary>
        /// Gets or sets the status of the Summary : Active, Deleted. Possible
        /// values include: 'Active', 'Deleted'
        /// </summary>
        [JsonProperty(PropertyName = "properties.summaryStatus")]
        public string SummaryStatus { get; set; }

        /// <summary>
        /// Gets the provisioning state of the Dynamic Summary resource.
        /// Possible values include: 'Succeeded', 'Failed', 'Canceled',
        /// 'InProgress'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (SummaryName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SummaryName");
            }
        }
    }
}
