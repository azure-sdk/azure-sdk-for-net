// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.Messaging.EventGrid.SystemEvents
{
    /// <summary> Schema of the Data property of an EventGridEvent for a Microsoft.Communication.RouterJobReceived event. </summary>
    public partial class AcsRouterJobRecievedEventData : AcsRouterJobEventBaseProperties
    {
        /// <summary> Initializes a new instance of AcsRouterJobRecievedEventData. </summary>
        internal AcsRouterJobRecievedEventData()
        {
            RequestedWorkerSelectors = new ChangeTrackingList<AcsRouterWorkerSelector>();
        }

        /// <summary> Initializes a new instance of AcsRouterJobRecievedEventData. </summary>
        /// <param name="jobId"> Router Event Job ID. </param>
        /// <param name="channelReference"> Router Event Channel Reference. </param>
        /// <param name="channelId"> Router Event Channel ID. </param>
        /// <param name="queueId"> Router Job events Queue Id. </param>
        /// <param name="labels"> Router Job events Labels. </param>
        /// <param name="tags"> Router Jobs events Tags. </param>
        /// <param name="jobStatus"> Router Job Received Job Status. </param>
        /// <param name="classificationPolicyId"> Router Job Classification Policy Id. </param>
        /// <param name="priority"> Router Job Priority. </param>
        /// <param name="requestedWorkerSelectors"> Router Job Received Requested Worker Selectors. </param>
        /// <param name="scheduledTimeUtc"> Router Job Received Scheduled Time in UTC. </param>
        /// <param name="unavailableForMatching"> Unavailable For Matching for Router Job Recieved. </param>
        internal AcsRouterJobRecievedEventData(string jobId, string channelReference, string channelId, string queueId, IReadOnlyDictionary<string, string> labels, IReadOnlyDictionary<string, string> tags, string jobStatus, string classificationPolicyId, int? priority, IReadOnlyList<AcsRouterWorkerSelector> requestedWorkerSelectors, DateTimeOffset? scheduledTimeUtc, bool? unavailableForMatching) : base(jobId, channelReference, channelId, queueId, labels, tags)
        {
            JobStatus = jobStatus;
            ClassificationPolicyId = classificationPolicyId;
            Priority = priority;
            RequestedWorkerSelectors = requestedWorkerSelectors;
            ScheduledTimeUtc = scheduledTimeUtc;
            UnavailableForMatching = unavailableForMatching;
        }

        /// <summary> Router Job Received Job Status. </summary>
        public string JobStatus { get; }
        /// <summary> Router Job Classification Policy Id. </summary>
        public string ClassificationPolicyId { get; }
        /// <summary> Router Job Priority. </summary>
        public int? Priority { get; }
        /// <summary> Router Job Received Requested Worker Selectors. </summary>
        public IReadOnlyList<AcsRouterWorkerSelector> RequestedWorkerSelectors { get; }
        /// <summary> Router Job Received Scheduled Time in UTC. </summary>
        public DateTimeOffset? ScheduledTimeUtc { get; }
        /// <summary> Unavailable For Matching for Router Job Recieved. </summary>
        public bool? UnavailableForMatching { get; }
    }
}
