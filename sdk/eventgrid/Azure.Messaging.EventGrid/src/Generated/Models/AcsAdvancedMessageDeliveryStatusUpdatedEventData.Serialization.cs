// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Text.Json.Serialization;
using Azure.Core;
using Azure.Messaging.EventGrid.Models;

namespace Azure.Messaging.EventGrid.SystemEvents
{
    [JsonConverter(typeof(AcsAdvancedMessageDeliveryStatusUpdatedEventDataConverter))]
    public partial class AcsAdvancedMessageDeliveryStatusUpdatedEventData
    {
        internal static AcsAdvancedMessageDeliveryStatusUpdatedEventData DeserializeAcsAdvancedMessageDeliveryStatusUpdatedEventData(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> messageId = default;
            Optional<string> status = default;
            Optional<AcsMessageChannelType> channelType = default;
            Optional<string> @from = default;
            Optional<string> to = default;
            Optional<DateTimeOffset> receivedTimestamp = default;
            Optional<AcsAdvancedMessageChannelEventError> error = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("messageId"u8))
                {
                    messageId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("status"u8))
                {
                    status = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("channelType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    channelType = new AcsMessageChannelType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("from"u8))
                {
                    @from = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("to"u8))
                {
                    to = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("receivedTimestamp"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    receivedTimestamp = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("error"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    error = AcsAdvancedMessageChannelEventError.DeserializeAcsAdvancedMessageChannelEventError(property.Value);
                    continue;
                }
            }
            return new AcsAdvancedMessageDeliveryStatusUpdatedEventData(@from.Value, to.Value, Optional.ToNullable(receivedTimestamp), error.Value, messageId.Value, status.Value, Optional.ToNullable(channelType));
        }

        internal partial class AcsAdvancedMessageDeliveryStatusUpdatedEventDataConverter : JsonConverter<AcsAdvancedMessageDeliveryStatusUpdatedEventData>
        {
            public override void Write(Utf8JsonWriter writer, AcsAdvancedMessageDeliveryStatusUpdatedEventData model, JsonSerializerOptions options)
            {
                throw new NotImplementedException();
            }
            public override AcsAdvancedMessageDeliveryStatusUpdatedEventData Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
            {
                using var document = JsonDocument.ParseValue(ref reader);
                return DeserializeAcsAdvancedMessageDeliveryStatusUpdatedEventData(document.RootElement);
            }
        }
    }
}
