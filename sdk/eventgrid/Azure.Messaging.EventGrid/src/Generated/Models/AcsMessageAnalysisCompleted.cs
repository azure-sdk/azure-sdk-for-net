// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Messaging.EventGrid.SystemEvents
{
    /// <summary> Schema of the Data property of an EventGridEvent for a Microsoft.Communication.AdvancedMessageAnalysisCompleted event. </summary>
    public partial class AcsMessageAnalysisCompleted : AcsMessageEventData
    {
        /// <summary> Initializes a new instance of <see cref="AcsMessageAnalysisCompleted"/>. </summary>
        internal AcsMessageAnalysisCompleted()
        {
            KeyPhraseExtraction = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="AcsMessageAnalysisCompleted"/>. </summary>
        /// <param name="from"> The message sender. </param>
        /// <param name="to"> The message recipient. </param>
        /// <param name="receivedTimestamp"> The time message was received. </param>
        /// <param name="errorInternal"> The channel event error. </param>
        /// <param name="originalMessage"> The original message received. </param>
        /// <param name="channelKind"> The Analysed message channel Kind. </param>
        /// <param name="intentAnalysis"> The intent of the analysed message. </param>
        /// <param name="keyPhraseExtraction"> List of key phrases extracted. </param>
        /// <param name="languageDetection"> The analysed message language detection. </param>
        /// <param name="sentiments"> The analysed message sentiment. </param>
        internal AcsMessageAnalysisCompleted(string @from, string to, DateTimeOffset? receivedTimestamp, AcsMessageChannelEventError errorInternal, string originalMessage, AcsMessageChannelKind? channelKind, string intentAnalysis, IReadOnlyList<string> keyPhraseExtraction, AcsMessageLanguageDetection languageDetection, AcsMessageSentiment sentiments) : base(@from, to, receivedTimestamp, errorInternal)
        {
            OriginalMessage = originalMessage;
            ChannelKind = channelKind;
            IntentAnalysis = intentAnalysis;
            KeyPhraseExtraction = keyPhraseExtraction;
            LanguageDetection = languageDetection;
            Sentiments = sentiments;
        }

        /// <summary> The original message received. </summary>
        public string OriginalMessage { get; }
        /// <summary> The Analysed message channel Kind. </summary>
        public AcsMessageChannelKind? ChannelKind { get; }
        /// <summary> The intent of the analysed message. </summary>
        public string IntentAnalysis { get; }
        /// <summary> List of key phrases extracted. </summary>
        public IReadOnlyList<string> KeyPhraseExtraction { get; }
        /// <summary> The analysed message language detection. </summary>
        public AcsMessageLanguageDetection LanguageDetection { get; }
        /// <summary> The analysed message sentiment. </summary>
        public AcsMessageSentiment Sentiments { get; }
    }
}
