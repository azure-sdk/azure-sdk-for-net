// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Text.Json.Serialization;
using Azure;
using Azure.Core;

namespace Azure.Messaging.EventGrid.SystemEvents
{
    [JsonConverter(typeof(DataManagerForAgriAttachmentChangedV2EventDataConverter))]
    public partial class DataManagerForAgriAttachmentChangedV2EventData
    {
        internal static DataManagerForAgriAttachmentChangedV2EventData DeserializeDataManagerForAgriAttachmentChangedV2EventData(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> resourceId = default;
            Optional<AttachmentResourceType> resourceType = default;
            Optional<string> partyId = default;
            Optional<ResourceActionType> actionType = default;
            Optional<string> status = default;
            Optional<DateTimeOffset> modifiedDateTime = default;
            Optional<ETag> eTag = default;
            Optional<string> id = default;
            Optional<string> name = default;
            Optional<string> description = default;
            Optional<DateTimeOffset> createdDateTime = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("resourceId"u8))
                {
                    resourceId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("resourceType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    resourceType = new AttachmentResourceType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("partyId"u8))
                {
                    partyId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("actionType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    actionType = new ResourceActionType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("status"u8))
                {
                    status = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("modifiedDateTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    modifiedDateTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("eTag"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    eTag = new ETag(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("id"u8))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("description"u8))
                {
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("createdDateTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    createdDateTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
            }
            return new DataManagerForAgriAttachmentChangedV2EventData(resourceId.Value, Optional.ToNullable(resourceType), partyId.Value, Optional.ToNullable(actionType), status.Value, Optional.ToNullable(modifiedDateTime), Optional.ToNullable(eTag), id.Value, name.Value, description.Value, Optional.ToNullable(createdDateTime));
        }

        internal partial class DataManagerForAgriAttachmentChangedV2EventDataConverter : JsonConverter<DataManagerForAgriAttachmentChangedV2EventData>
        {
            public override void Write(Utf8JsonWriter writer, DataManagerForAgriAttachmentChangedV2EventData model, JsonSerializerOptions options)
            {
                throw new NotImplementedException();
            }
            public override DataManagerForAgriAttachmentChangedV2EventData Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
            {
                using var document = JsonDocument.ParseValue(ref reader);
                return DeserializeDataManagerForAgriAttachmentChangedV2EventData(document.RootElement);
            }
        }
    }
}
