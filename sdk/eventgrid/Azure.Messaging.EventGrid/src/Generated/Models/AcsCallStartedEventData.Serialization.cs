// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Text.Json.Serialization;
using Azure.Core;

namespace Azure.Messaging.EventGrid.SystemEvents
{
    [JsonConverter(typeof(AcsCallStartedEventDataConverter))]
    public partial class AcsCallStartedEventData
    {
        internal static AcsCallStartedEventData DeserializeAcsCallStartedEventData(JsonElement element)
        {
            Optional<CommunicationIdentifierModel> startedBy = default;
            Optional<string> serverCallId = default;
            Optional<bool> isTwoParty = default;
            Optional<AcsCallGroupProperties> group = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("startedBy"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    startedBy = CommunicationIdentifierModel.DeserializeCommunicationIdentifierModel(property.Value);
                    continue;
                }
                if (property.NameEquals("serverCallId"))
                {
                    serverCallId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("isTwoParty"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    isTwoParty = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("group"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    group = AcsCallGroupProperties.DeserializeAcsCallGroupProperties(property.Value);
                    continue;
                }
            }
            return new AcsCallStartedEventData(startedBy.Value, serverCallId.Value, Optional.ToNullable(isTwoParty), group.Value);
        }

        internal partial class AcsCallStartedEventDataConverter : JsonConverter<AcsCallStartedEventData>
        {
            public override void Write(Utf8JsonWriter writer, AcsCallStartedEventData model, JsonSerializerOptions options)
            {
                throw new NotImplementedException();
            }
            public override AcsCallStartedEventData Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
            {
                using var document = JsonDocument.ParseValue(ref reader);
                return DeserializeAcsCallStartedEventData(document.RootElement);
            }
        }
    }
}
