// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Messaging.EventGrid.SystemEvents
{
    /// <summary> Schema of the Data property of an EventGridEvent for a Microsoft.Communication.AcsEmailEngagementTrackingReportReceived event. </summary>
    public partial class AcsEmailEngagementTrackingReportReceivedEventData
    {
        /// <summary> Initializes a new instance of AcsEmailEngagementTrackingReportReceivedEventData. </summary>
        internal AcsEmailEngagementTrackingReportReceivedEventData()
        {
        }

        /// <summary> Initializes a new instance of AcsEmailEngagementTrackingReportReceivedEventData. </summary>
        /// <param name="sender"> The Sender Email Address. </param>
        /// <param name="messageId"> The Id of the email been sent. </param>
        /// <param name="userActionTimeStamp"> The time at which the user interacted with the email. </param>
        /// <param name="engagementContext"> The context of the type of engagement user had with email. </param>
        /// <param name="userAgent"> The user agent interacting with the email. </param>
        /// <param name="engagementType"> The type of engagement user have with email. </param>
        internal AcsEmailEngagementTrackingReportReceivedEventData(string sender, string messageId, DateTimeOffset? userActionTimeStamp, string engagementContext, string userAgent, UserEngagementTypeModel? engagementType)
        {
            Sender = sender;
            MessageId = messageId;
            UserActionTimeStamp = userActionTimeStamp;
            EngagementContext = engagementContext;
            UserAgent = userAgent;
            EngagementType = engagementType;
        }

        /// <summary> The Sender Email Address. </summary>
        public string Sender { get; }
        /// <summary> The Id of the email been sent. </summary>
        public string MessageId { get; }
        /// <summary> The time at which the user interacted with the email. </summary>
        public DateTimeOffset? UserActionTimeStamp { get; }
        /// <summary> The context of the type of engagement user had with email. </summary>
        public string EngagementContext { get; }
        /// <summary> The user agent interacting with the email. </summary>
        public string UserAgent { get; }
        /// <summary> The type of engagement user have with email. </summary>
        public UserEngagementTypeModel? EngagementType { get; }
    }
}
