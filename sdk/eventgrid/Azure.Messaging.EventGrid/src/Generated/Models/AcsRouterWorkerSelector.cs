// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Messaging.EventGrid.Models;

namespace Azure.Messaging.EventGrid.SystemEvents
{
    /// <summary> Router Job Worker Selector. </summary>
    public partial class AcsRouterWorkerSelector
    {
        /// <summary> Initializes a new instance of AcsRouterWorkerSelector. </summary>
        internal AcsRouterWorkerSelector()
        {
        }

        /// <summary> Initializes a new instance of AcsRouterWorkerSelector. </summary>
        /// <param name="key"> Router Job Worker Selector Key. </param>
        /// <param name="labelOperator"> Router Job Worker Selector Label Operator. </param>
        /// <param name="value"> Router Job Worker Selector Value. </param>
        /// <param name="ttlSeconds"> Router Job Worker Selector TTLSeconds. </param>
        /// <param name="state"> Router Job Worker Selector State. </param>
        /// <param name="expireTime"> Router Job Worker Selector Expiration Time. </param>
        internal AcsRouterWorkerSelector(string key, LabelOperatorType? labelOperator, object value, double? ttlSeconds, AcsRouterWorkerSelectorState? state, DateTimeOffset? expireTime)
        {
            Key = key;
            LabelOperator = labelOperator;
            Value = value;
            TtlSeconds = ttlSeconds;
            State = state;
            ExpireTime = expireTime;
        }

        /// <summary> Router Job Worker Selector Key. </summary>
        public string Key { get; }
        /// <summary> Router Job Worker Selector Label Operator. </summary>
        public LabelOperatorType? LabelOperator { get; }
        /// <summary> Router Job Worker Selector Value. </summary>
        public object Value { get; }
        /// <summary> Router Job Worker Selector TTLSeconds. </summary>
        public double? TtlSeconds { get; }
        /// <summary> Router Job Worker Selector State. </summary>
        public AcsRouterWorkerSelectorState? State { get; }
        /// <summary> Router Job Worker Selector Expiration Time. </summary>
        public DateTimeOffset? ExpireTime { get; }
    }
}
