// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.Developer.Playwright
{
    /// <summary> Model factory for models. </summary>
    public static partial class DeveloperPlaywrightModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="Playwright.AccessToken"/>. </summary>
        /// <param name="id"> The access-token id. </param>
        /// <param name="name"> The access-token name. </param>
        /// <param name="jwtToken"> The access-token value in JWT format. </param>
        /// <param name="createdAt"> The access-token createdAt utcDateTime. </param>
        /// <param name="expiryAt"> The access-token expiryAt utcDateTime. </param>
        /// <param name="state"> The access-token state - Active | Expired. </param>
        /// <returns> A new <see cref="Playwright.AccessToken"/> instance for mocking. </returns>
        public static AccessToken AccessToken(Guid id = default, string name = null, string jwtToken = null, DateTimeOffset createdAt = default, DateTimeOffset expiryAt = default, AccessTokenState state = default)
        {
            return new AccessToken(
                id,
                name,
                jwtToken,
                createdAt,
                expiryAt,
                state,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Playwright.Workspace"/>. </summary>
        /// <param name="id"> The workspace id. </param>
        /// <param name="resourceId"> Fully-qualified Azure resource id for the workspace. </param>
        /// <param name="name"> The workspace name. </param>
        /// <param name="state"> The state of workspace - Active | Inactive. </param>
        /// <param name="subscriptionId"> Azure subscription id for the workspace. </param>
        /// <param name="subscriptionState"> Azure subscription state - Registered | Unregistered | Warned | Suspended | Deleted. </param>
        /// <param name="tenantId"> Azure tenant id for the workspace. </param>
        /// <param name="location"> Azure location of the workspace, for eg. eastus, southeastasia. </param>
        /// <param name="dataplaneUri"> The workspace data plane URI. </param>
        /// <param name="regionalAffinity"> This property sets the connection region for client workers to cloud-hosted browsers. If enabled, workers connect to browsers in the closest Azure region, ensuring lower latency. If disabled, workers connect to browsers in the Azure region in which the workspace was initially created. </param>
        /// <param name="localAuth"> When enabled, this feature allows the workspace to use local auth (through service access token) for executing operations. </param>
        /// <returns> A new <see cref="Playwright.Workspace"/> instance for mocking. </returns>
        public static Workspace Workspace(Guid id = default, ResourceIdentifier resourceId = null, string name = null, ResourceState state = default, Guid subscriptionId = default, SubscriptionState subscriptionState = default, Guid tenantId = default, string location = null, Uri dataplaneUri = null, EnablementStatus? regionalAffinity = null, EnablementStatus? localAuth = null)
        {
            return new Workspace(
                id,
                resourceId,
                name,
                state,
                subscriptionId,
                subscriptionState,
                tenantId,
                location,
                dataplaneUri,
                regionalAffinity,
                localAuth,
                serializedAdditionalRawData: null);
        }
    }
}
