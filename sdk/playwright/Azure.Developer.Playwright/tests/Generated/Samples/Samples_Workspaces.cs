// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.Developer.Playwright.Samples
{
    public partial class Samples_Workspaces
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Workspace_GetWorkspace_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            Workspaces client = new PlaywrightClient(endpoint, credential).GetWorkspacesClient(apiVersion: "2025-07-01-preview");

            Response response = client.GetWorkspace(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("resourceId").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("subscriptionId").ToString());
            Console.WriteLine(result.GetProperty("subscriptionState").ToString());
            Console.WriteLine(result.GetProperty("tenantId").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Workspace_GetWorkspace_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            Workspaces client = new PlaywrightClient(endpoint, credential).GetWorkspacesClient(apiVersion: "2025-07-01-preview");

            Response response = await client.GetWorkspaceAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("resourceId").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("subscriptionId").ToString());
            Console.WriteLine(result.GetProperty("subscriptionState").ToString());
            Console.WriteLine(result.GetProperty("tenantId").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Workspace_GetWorkspace_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            Workspaces client = new PlaywrightClient(endpoint, credential).GetWorkspacesClient(apiVersion: "2025-07-01-preview");

            Response<Workspace> response = client.GetWorkspace(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Workspace_GetWorkspace_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            Workspaces client = new PlaywrightClient(endpoint, credential).GetWorkspacesClient(apiVersion: "2025-07-01-preview");

            Response<Workspace> response = await client.GetWorkspaceAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Workspace_GetWorkspace_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            Workspaces client = new PlaywrightClient(endpoint, credential).GetWorkspacesClient(apiVersion: "2025-07-01-preview");

            Response response = client.GetWorkspace(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("resourceId").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("subscriptionId").ToString());
            Console.WriteLine(result.GetProperty("subscriptionState").ToString());
            Console.WriteLine(result.GetProperty("tenantId").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("dataplaneUri").ToString());
            Console.WriteLine(result.GetProperty("regionalAffinity").ToString());
            Console.WriteLine(result.GetProperty("localAuth").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Workspace_GetWorkspace_AllParameters_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            Workspaces client = new PlaywrightClient(endpoint, credential).GetWorkspacesClient(apiVersion: "2025-07-01-preview");

            Response response = await client.GetWorkspaceAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("resourceId").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("subscriptionId").ToString());
            Console.WriteLine(result.GetProperty("subscriptionState").ToString());
            Console.WriteLine(result.GetProperty("tenantId").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("dataplaneUri").ToString());
            Console.WriteLine(result.GetProperty("regionalAffinity").ToString());
            Console.WriteLine(result.GetProperty("localAuth").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Workspace_GetWorkspace_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            Workspaces client = new PlaywrightClient(endpoint, credential).GetWorkspacesClient(apiVersion: "2025-07-01-preview");

            Response<Workspace> response = client.GetWorkspace(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Workspace_GetWorkspace_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            Workspaces client = new PlaywrightClient(endpoint, credential).GetWorkspacesClient(apiVersion: "2025-07-01-preview");

            Response<Workspace> response = await client.GetWorkspaceAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Workspaces_GetBrowsers_WorkspacesGetBrowsers()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            Workspaces client = new PlaywrightClient(endpoint, credential).GetWorkspacesClient(apiVersion: "2025-07-01-preview");

            Response response = client.GetBrowsers("00000000-0000-0000-0000-000000000000", "Linux", null);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Workspaces_GetBrowsers_WorkspacesGetBrowsers_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            Workspaces client = new PlaywrightClient(endpoint, credential).GetWorkspacesClient(apiVersion: "2025-07-01-preview");

            Response response = await client.GetBrowsersAsync("00000000-0000-0000-0000-000000000000", "Linux", null);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Workspaces_GetBrowsers_WorkspacesGetBrowsers_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            Workspaces client = new PlaywrightClient(endpoint, credential).GetWorkspacesClient(apiVersion: "2025-07-01-preview");

            Response response = client.GetBrowsers("00000000-0000-0000-0000-000000000000");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Workspaces_GetBrowsers_WorkspacesGetBrowsers_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            Workspaces client = new PlaywrightClient(endpoint, credential).GetWorkspacesClient(apiVersion: "2025-07-01-preview");

            Response response = await client.GetBrowsersAsync("00000000-0000-0000-0000-000000000000");
        }
    }
}
