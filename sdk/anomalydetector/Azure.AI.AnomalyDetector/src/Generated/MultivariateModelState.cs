// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.AI.AnomalyDetector
{
    /// <summary> Model state. </summary>
    public partial class MultivariateModelState
    {
        /// <summary> Initializes a new instance of MultivariateModelState. </summary>
        public MultivariateModelState()
        {
            EpochIds = new ChangeTrackingList<int>();
            TrainLosses = new ChangeTrackingList<float>();
            ValidationLosses = new ChangeTrackingList<float>();
            LatenciesInSeconds = new ChangeTrackingList<TimeSpan>();
        }

        /// <summary> Initializes a new instance of MultivariateModelState. </summary>
        /// <param name="epochIds">
        /// Number of passes of the entire training dataset that the
        /// algorithm has completed.
        /// </param>
        /// <param name="trainLosses">
        /// List of metrics used to assess how the model fits the training data for each
        /// epoch.
        /// </param>
        /// <param name="validationLosses">
        /// List of metrics used to assess how the model fits the validation set for each
        /// epoch.
        /// </param>
        /// <param name="latenciesInSeconds"> Latency for each epoch. </param>
        internal MultivariateModelState(IList<int> epochIds, IList<float> trainLosses, IList<float> validationLosses, IList<TimeSpan> latenciesInSeconds)
        {
            EpochIds = epochIds;
            TrainLosses = trainLosses;
            ValidationLosses = validationLosses;
            LatenciesInSeconds = latenciesInSeconds;
        }

        /// <summary>
        /// Number of passes of the entire training dataset that the
        /// algorithm has completed.
        /// </summary>
        public IList<int> EpochIds { get; }
        /// <summary>
        /// List of metrics used to assess how the model fits the training data for each
        /// epoch.
        /// </summary>
        public IList<float> TrainLosses { get; }
        /// <summary>
        /// List of metrics used to assess how the model fits the validation set for each
        /// epoch.
        /// </summary>
        public IList<float> ValidationLosses { get; }
        /// <summary> Latency for each epoch. </summary>
        public IList<TimeSpan> LatenciesInSeconds { get; }
    }
}
