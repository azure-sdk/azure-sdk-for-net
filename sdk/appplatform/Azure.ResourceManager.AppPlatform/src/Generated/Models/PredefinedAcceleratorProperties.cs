// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.AppPlatform.Models
{
    /// <summary> Predefined accelerator properties payload. </summary>
    public partial class PredefinedAcceleratorProperties
    {
        /// <summary> Initializes a new instance of PredefinedAcceleratorProperties. </summary>
        public PredefinedAcceleratorProperties()
        {
            AcceleratorTags = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of PredefinedAcceleratorProperties. </summary>
        /// <param name="provisioningState"> Provisioning state of the predefined accelerator. </param>
        /// <param name="displayName"></param>
        /// <param name="description"></param>
        /// <param name="iconUri"></param>
        /// <param name="acceleratorTags"></param>
        /// <param name="state"> State of the predefined accelerator. </param>
        internal PredefinedAcceleratorProperties(PredefinedAcceleratorProvisioningState? provisioningState, string displayName, string description, Uri iconUri, IReadOnlyList<string> acceleratorTags, PredefinedAcceleratorState? state)
        {
            ProvisioningState = provisioningState;
            DisplayName = displayName;
            Description = description;
            IconUri = iconUri;
            AcceleratorTags = acceleratorTags;
            State = state;
        }

        /// <summary> Provisioning state of the predefined accelerator. </summary>
        public PredefinedAcceleratorProvisioningState? ProvisioningState { get; }
        /// <summary> Gets the display name. </summary>
        public string DisplayName { get; }
        /// <summary> Gets the description. </summary>
        public string Description { get; }
        /// <summary> Gets the icon uri. </summary>
        public Uri IconUri { get; }
        /// <summary> Gets the accelerator tags. </summary>
        public IReadOnlyList<string> AcceleratorTags { get; }
        /// <summary> State of the predefined accelerator. </summary>
        public PredefinedAcceleratorState? State { get; set; }
    }
}
