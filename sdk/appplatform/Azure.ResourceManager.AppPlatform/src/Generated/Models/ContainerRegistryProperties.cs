// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.ResourceManager.AppPlatform.Models
{
    /// <summary> Container registry resource payload. </summary>
    public partial class ContainerRegistryProperties
    {
        /// <summary> Initializes a new instance of ContainerRegistryProperties. </summary>
        /// <param name="credentials">
        /// The credentials of the container registry resource.
        /// Please note <see cref="ContainerRegistryCredentials"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="ContainerRegistryBasicCredentials"/>.
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="credentials"/> is null. </exception>
        public ContainerRegistryProperties(ContainerRegistryCredentials credentials)
        {
            Argument.AssertNotNull(credentials, nameof(credentials));

            Credentials = credentials;
        }

        /// <summary> Initializes a new instance of ContainerRegistryProperties. </summary>
        /// <param name="credentials">
        /// The credentials of the container registry resource.
        /// Please note <see cref="ContainerRegistryCredentials"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="ContainerRegistryBasicCredentials"/>.
        /// </param>
        /// <param name="provisioningState"> State of the Container Registry. </param>
        internal ContainerRegistryProperties(ContainerRegistryCredentials credentials, ContainerRegistryProvisioningState? provisioningState)
        {
            Credentials = credentials;
            ProvisioningState = provisioningState;
        }

        /// <summary>
        /// The credentials of the container registry resource.
        /// Please note <see cref="ContainerRegistryCredentials"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="ContainerRegistryBasicCredentials"/>.
        /// </summary>
        public ContainerRegistryCredentials Credentials { get; set; }
        /// <summary> State of the Container Registry. </summary>
        public ContainerRegistryProvisioningState? ProvisioningState { get; }
    }
}
