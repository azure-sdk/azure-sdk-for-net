// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppPlatform.Models
{
    public partial class ApplicationLiveViewComponent
    {
        internal static ApplicationLiveViewComponent DeserializeApplicationLiveViewComponent(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<BinaryData> name = default;
            Optional<ApplicationLiveViewResourceRequests> resourceRequests = default;
            Optional<IReadOnlyList<ApplicationLiveViewInstance>> instances = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    name = BinaryData.FromString(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("resourceRequests"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    resourceRequests = ApplicationLiveViewResourceRequests.DeserializeApplicationLiveViewResourceRequests(property.Value);
                    continue;
                }
                if (property.NameEquals("instances"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ApplicationLiveViewInstance> array = new List<ApplicationLiveViewInstance>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ApplicationLiveViewInstance.DeserializeApplicationLiveViewInstance(item));
                    }
                    instances = array;
                    continue;
                }
            }
            return new ApplicationLiveViewComponent(name.Value, resourceRequests.Value, Optional.ToList(instances));
        }
    }
}
