// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.AppPlatform.Models
{
    /// <summary> Customized accelerator properties payload. </summary>
    public partial class CustomizedAcceleratorProperties
    {
        /// <summary> Initializes a new instance of CustomizedAcceleratorProperties. </summary>
        /// <param name="gitRepository"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="gitRepository"/> is null. </exception>
        public CustomizedAcceleratorProperties(AcceleratorGitRepository gitRepository)
        {
            Argument.AssertNotNull(gitRepository, nameof(gitRepository));

            AcceleratorTags = new ChangeTrackingList<string>();
            GitRepository = gitRepository;
        }

        /// <summary> Initializes a new instance of CustomizedAcceleratorProperties. </summary>
        /// <param name="provisioningState"> State of the customized accelerator. </param>
        /// <param name="displayName"></param>
        /// <param name="description"></param>
        /// <param name="iconUri"></param>
        /// <param name="acceleratorTags"></param>
        /// <param name="gitRepository"></param>
        internal CustomizedAcceleratorProperties(CustomizedAcceleratorProvisioningState? provisioningState, string displayName, string description, Uri iconUri, IList<string> acceleratorTags, AcceleratorGitRepository gitRepository)
        {
            ProvisioningState = provisioningState;
            DisplayName = displayName;
            Description = description;
            IconUri = iconUri;
            AcceleratorTags = acceleratorTags;
            GitRepository = gitRepository;
        }

        /// <summary> State of the customized accelerator. </summary>
        public CustomizedAcceleratorProvisioningState? ProvisioningState { get; }
        /// <summary> Gets or sets the display name. </summary>
        public string DisplayName { get; set; }
        /// <summary> Gets or sets the description. </summary>
        public string Description { get; set; }
        /// <summary> Gets or sets the icon uri. </summary>
        public Uri IconUri { get; set; }
        /// <summary> Gets the accelerator tags. </summary>
        public IList<string> AcceleratorTags { get; }
        /// <summary> Gets or sets the git repository. </summary>
        public AcceleratorGitRepository GitRepository { get; set; }
    }
}
