// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppPlatform.Models
{
    public partial class DevToolPortalProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Public))
            {
                writer.WritePropertyName("public"u8);
                writer.WriteBooleanValue(Public.Value);
            }
            if (Optional.IsDefined(SsoProperties))
            {
                writer.WritePropertyName("ssoProperties"u8);
                writer.WriteObjectValue(SsoProperties);
            }
            if (Optional.IsDefined(Features))
            {
                writer.WritePropertyName("features"u8);
                writer.WriteObjectValue(Features);
            }
            writer.WriteEndObject();
        }

        internal static DevToolPortalProperties DeserializeDevToolPortalProperties(JsonElement element)
        {
            Optional<DevToolPortalProvisioningState> provisioningState = default;
            Optional<DevToolPortalResourceRequests> resourceRequests = default;
            Optional<IReadOnlyList<DevToolPortalInstance>> instances = default;
            Optional<bool> @public = default;
            Optional<Uri> uri = default;
            Optional<DevToolPortalSsoProperties> ssoProperties = default;
            Optional<DevToolPortalFeatureSettings> features = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("provisioningState"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    provisioningState = new DevToolPortalProvisioningState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("resourceRequests"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    resourceRequests = DevToolPortalResourceRequests.DeserializeDevToolPortalResourceRequests(property.Value);
                    continue;
                }
                if (property.NameEquals("instances"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<DevToolPortalInstance> array = new List<DevToolPortalInstance>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(DevToolPortalInstance.DeserializeDevToolPortalInstance(item));
                    }
                    instances = array;
                    continue;
                }
                if (property.NameEquals("public"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    @public = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("url"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        uri = null;
                        continue;
                    }
                    uri = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("ssoProperties"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    ssoProperties = DevToolPortalSsoProperties.DeserializeDevToolPortalSsoProperties(property.Value);
                    continue;
                }
                if (property.NameEquals("features"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    features = DevToolPortalFeatureSettings.DeserializeDevToolPortalFeatureSettings(property.Value);
                    continue;
                }
            }
            return new DevToolPortalProperties(Optional.ToNullable(provisioningState), resourceRequests.Value, Optional.ToList(instances), Optional.ToNullable(@public), uri.Value, ssoProperties.Value, features.Value);
        }
    }
}
