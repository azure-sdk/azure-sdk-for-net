// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.AppPlatform;

namespace Azure.ResourceManager.AppPlatform.Samples
{
    public partial class Sample_PredefinedAcceleratorResource
    {
        // PredefinedAccelerators_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_PredefinedAcceleratorsGet()
        {
            // Generated from example definition: specification/appplatform/resource-manager/Microsoft.AppPlatform/stable/2023-12-01/examples/PredefinedAccelerators_Get.json
            // this example is just showing the usage of "PredefinedAccelerators_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this PredefinedAcceleratorResource created on azure
            // for more information of creating PredefinedAcceleratorResource, please refer to the document of PredefinedAcceleratorResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string serviceName = "myservice";
            string applicationAcceleratorName = "default";
            string predefinedAcceleratorName = "acc-name";
            ResourceIdentifier predefinedAcceleratorResourceId = PredefinedAcceleratorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serviceName, applicationAcceleratorName, predefinedAcceleratorName);
            PredefinedAcceleratorResource predefinedAcceleratorResource = client.GetPredefinedAcceleratorResource(predefinedAcceleratorResourceId);

            // invoke the operation
            PredefinedAcceleratorResource result = await predefinedAcceleratorResource.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            PredefinedAcceleratorResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // PredefinedAccelerators_Disable
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Disable_PredefinedAcceleratorsDisable()
        {
            // Generated from example definition: specification/appplatform/resource-manager/Microsoft.AppPlatform/stable/2023-12-01/examples/PredefinedAccelerators_Disable.json
            // this example is just showing the usage of "PredefinedAccelerators_Disable" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this PredefinedAcceleratorResource created on azure
            // for more information of creating PredefinedAcceleratorResource, please refer to the document of PredefinedAcceleratorResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string serviceName = "myservice";
            string applicationAcceleratorName = "default";
            string predefinedAcceleratorName = "acc-name";
            ResourceIdentifier predefinedAcceleratorResourceId = PredefinedAcceleratorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serviceName, applicationAcceleratorName, predefinedAcceleratorName);
            PredefinedAcceleratorResource predefinedAcceleratorResource = client.GetPredefinedAcceleratorResource(predefinedAcceleratorResourceId);

            // invoke the operation
            await predefinedAcceleratorResource.DisableAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }

        // PredefinedAccelerators_Enable
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Enable_PredefinedAcceleratorsEnable()
        {
            // Generated from example definition: specification/appplatform/resource-manager/Microsoft.AppPlatform/stable/2023-12-01/examples/PredefinedAccelerators_Enable.json
            // this example is just showing the usage of "PredefinedAccelerators_Enable" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this PredefinedAcceleratorResource created on azure
            // for more information of creating PredefinedAcceleratorResource, please refer to the document of PredefinedAcceleratorResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string serviceName = "myservice";
            string applicationAcceleratorName = "default";
            string predefinedAcceleratorName = "acc-name";
            ResourceIdentifier predefinedAcceleratorResourceId = PredefinedAcceleratorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serviceName, applicationAcceleratorName, predefinedAcceleratorName);
            PredefinedAcceleratorResource predefinedAcceleratorResource = client.GetPredefinedAcceleratorResource(predefinedAcceleratorResourceId);

            // invoke the operation
            await predefinedAcceleratorResource.EnableAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }
    }
}
