// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.AppPlatform;
using Azure.ResourceManager.AppPlatform.Models;

namespace Azure.ResourceManager.AppPlatform.Samples
{
    public partial class Sample_ApplicationAcceleratorResource
    {
        // ApplicationAccelerators_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_ApplicationAcceleratorsGet()
        {
            // Generated from example definition: specification/appplatform/resource-manager/Microsoft.AppPlatform/stable/2023-12-01/examples/ApplicationAccelerators_Get.json
            // this example is just showing the usage of "ApplicationAccelerators_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ApplicationAcceleratorResource created on azure
            // for more information of creating ApplicationAcceleratorResource, please refer to the document of ApplicationAcceleratorResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string serviceName = "myservice";
            string applicationAcceleratorName = "default";
            ResourceIdentifier applicationAcceleratorResourceId = ApplicationAcceleratorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serviceName, applicationAcceleratorName);
            ApplicationAcceleratorResource applicationAcceleratorResource = client.GetApplicationAcceleratorResource(applicationAcceleratorResourceId);

            // invoke the operation
            ApplicationAcceleratorResource result = await applicationAcceleratorResource.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ApplicationAcceleratorResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // ApplicationAccelerators_CreateOrUpdate
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_ApplicationAcceleratorsCreateOrUpdate()
        {
            // Generated from example definition: specification/appplatform/resource-manager/Microsoft.AppPlatform/stable/2023-12-01/examples/ApplicationAccelerators_CreateOrUpdate.json
            // this example is just showing the usage of "ApplicationAccelerators_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ApplicationAcceleratorResource created on azure
            // for more information of creating ApplicationAcceleratorResource, please refer to the document of ApplicationAcceleratorResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string serviceName = "myservice";
            string applicationAcceleratorName = "default";
            ResourceIdentifier applicationAcceleratorResourceId = ApplicationAcceleratorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serviceName, applicationAcceleratorName);
            ApplicationAcceleratorResource applicationAcceleratorResource = client.GetApplicationAcceleratorResource(applicationAcceleratorResourceId);

            // invoke the operation
            ApplicationAcceleratorResourceData data = new ApplicationAcceleratorResourceData()
            {
                Properties = new ApplicationAcceleratorProperties(),
                Sku = new AppPlatformSku()
                {
                    Name = "E0",
                    Tier = "Enterprise",
                    Capacity = 2,
                },
            };
            ArmOperation<ApplicationAcceleratorResource> lro = await applicationAcceleratorResource.UpdateAsync(WaitUntil.Completed, data);
            ApplicationAcceleratorResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ApplicationAcceleratorResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // ApplicationAccelerators_Delete
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_ApplicationAcceleratorsDelete()
        {
            // Generated from example definition: specification/appplatform/resource-manager/Microsoft.AppPlatform/stable/2023-12-01/examples/ApplicationAccelerators_Delete.json
            // this example is just showing the usage of "ApplicationAccelerators_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ApplicationAcceleratorResource created on azure
            // for more information of creating ApplicationAcceleratorResource, please refer to the document of ApplicationAcceleratorResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string serviceName = "myservice";
            string applicationAcceleratorName = "default";
            ResourceIdentifier applicationAcceleratorResourceId = ApplicationAcceleratorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serviceName, applicationAcceleratorName);
            ApplicationAcceleratorResource applicationAcceleratorResource = client.GetApplicationAcceleratorResource(applicationAcceleratorResourceId);

            // invoke the operation
            await applicationAcceleratorResource.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }
    }
}
