// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Dashboard.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The properties parameters for a PATCH request to a grafana resource.
    /// </summary>
    public partial class ManagedGrafanaPropertiesUpdateParameters
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ManagedGrafanaPropertiesUpdateParameters class.
        /// </summary>
        public ManagedGrafanaPropertiesUpdateParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ManagedGrafanaPropertiesUpdateParameters class.
        /// </summary>
        /// <param name="zoneRedundancy">The zone redundancy setting of the
        /// Grafana instance. Possible values include: 'Disabled',
        /// 'Enabled'</param>
        /// <param name="apiKey">The api key setting of the Grafana instance.
        /// Possible values include: 'Disabled', 'Enabled'</param>
        /// <param name="deterministicOutboundIP">Whether a Grafana instance
        /// uses deterministic outbound IPs. Possible values include:
        /// 'Disabled', 'Enabled'</param>
        /// <param name="publicNetworkAccess">Indicate the state for enable or
        /// disable traffic over the public interface. Possible values include:
        /// 'Enabled', 'Disabled'</param>
        public ManagedGrafanaPropertiesUpdateParameters(string zoneRedundancy = default(string), string apiKey = default(string), string deterministicOutboundIP = default(string), string publicNetworkAccess = default(string), GrafanaIntegrations grafanaIntegrations = default(GrafanaIntegrations), EnterpriseConfigurations enterpriseConfigurations = default(EnterpriseConfigurations), GrafanaConfigurations grafanaConfigurations = default(GrafanaConfigurations))
        {
            ZoneRedundancy = zoneRedundancy;
            ApiKey = apiKey;
            DeterministicOutboundIP = deterministicOutboundIP;
            PublicNetworkAccess = publicNetworkAccess;
            GrafanaIntegrations = grafanaIntegrations;
            EnterpriseConfigurations = enterpriseConfigurations;
            GrafanaConfigurations = grafanaConfigurations;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the zone redundancy setting of the Grafana instance.
        /// Possible values include: 'Disabled', 'Enabled'
        /// </summary>
        [JsonProperty(PropertyName = "zoneRedundancy")]
        public string ZoneRedundancy { get; set; }

        /// <summary>
        /// Gets or sets the api key setting of the Grafana instance. Possible
        /// values include: 'Disabled', 'Enabled'
        /// </summary>
        [JsonProperty(PropertyName = "apiKey")]
        public string ApiKey { get; set; }

        /// <summary>
        /// Gets or sets whether a Grafana instance uses deterministic outbound
        /// IPs. Possible values include: 'Disabled', 'Enabled'
        /// </summary>
        [JsonProperty(PropertyName = "deterministicOutboundIP")]
        public string DeterministicOutboundIP { get; set; }

        /// <summary>
        /// Gets or sets indicate the state for enable or disable traffic over
        /// the public interface. Possible values include: 'Enabled',
        /// 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "publicNetworkAccess")]
        public string PublicNetworkAccess { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "grafanaIntegrations")]
        public GrafanaIntegrations GrafanaIntegrations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "enterpriseConfigurations")]
        public EnterpriseConfigurations EnterpriseConfigurations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "grafanaConfigurations")]
        public GrafanaConfigurations GrafanaConfigurations { get; set; }

    }
}
