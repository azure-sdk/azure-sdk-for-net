// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.CostManagement.Models
{
    /// <summary>
    /// The time covered by a budget. Tracking of the amount will be reset based on the time grain.
    ///
    /// Supported for CategoryType(s): Cost, ReservationUtilization.
    ///
    ///  Supported timeGrainTypes for **CategoryType: Cost**
    ///
    /// - Monthly
    /// - Quarterly
    /// - Annually
    /// - BillingMonth*
    /// - BillingQuarter*
    /// - BillingAnnual*
    ///
    ///   *only supported for Web Direct customers.
    ///
    ///  Supported timeGrainTypes for **CategoryType: ReservationUtilization**
    /// - Last7Days
    /// - Last30Days
    ///
    ///  Required for CategoryType(s): Cost, ReservationUtilization.
    /// </summary>
    public readonly partial struct TimeGrainType : IEquatable<TimeGrainType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="TimeGrainType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public TimeGrainType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string MonthlyValue = "Monthly";
        private const string QuarterlyValue = "Quarterly";
        private const string AnnuallyValue = "Annually";
        private const string BillingMonthValue = "BillingMonth";
        private const string BillingQuarterValue = "BillingQuarter";
        private const string BillingAnnualValue = "BillingAnnual";
        private const string Last7DaysValue = "Last7Days";
        private const string Last30DaysValue = "Last30Days";

        /// <summary>
        /// The budget will track costs in the current calendar month against the amount.
        ///
        ///  Supported for CategoryType: Cost only.
        /// </summary>
        public static TimeGrainType Monthly { get; } = new TimeGrainType(MonthlyValue);
        /// <summary>
        /// The budget will track costs in the current calendar quarter against the amount.
        ///
        ///  Supported for CategoryType: Cost only.
        /// </summary>
        public static TimeGrainType Quarterly { get; } = new TimeGrainType(QuarterlyValue);
        /// <summary>
        /// The budget will track costs in the current calendar year against the amount.
        ///
        ///  Supported for CategoryType: Cost only.
        /// </summary>
        public static TimeGrainType Annually { get; } = new TimeGrainType(AnnuallyValue);
        /// <summary>
        /// The budget will track costs in the current billing month against the amount.
        ///
        ///  Supported for CategoryType: Cost and Web Direct customers only.
        /// </summary>
        public static TimeGrainType BillingMonth { get; } = new TimeGrainType(BillingMonthValue);
        /// <summary>
        /// The budget will track costs in the current billing quarter against the amount.
        ///
        ///  Supported for CategoryType: Cost and Web Direct customers only.
        /// </summary>
        public static TimeGrainType BillingQuarter { get; } = new TimeGrainType(BillingQuarterValue);
        /// <summary>
        /// The budget will track costs in the current billing year against the amount.
        ///
        ///  Supported for CategoryType: Cost and Web Direct customers only.
        /// </summary>
        public static TimeGrainType BillingAnnual { get; } = new TimeGrainType(BillingAnnualValue);
        /// <summary>
        /// The Reservation Utilization Alert Rule will evaluate reservations based on their 7-Day utilization percentage.
        ///
        ///  Supported for CategoryType: ReservationUtilization only.
        /// </summary>
        public static TimeGrainType Last7Days { get; } = new TimeGrainType(Last7DaysValue);
        /// <summary>
        /// The Reservation Utilization Alert Rule will evaluate reservations based on their 30-Day utilization percentage.
        ///
        ///  Supported for CategoryType: ReservationUtilization only.
        /// </summary>
        public static TimeGrainType Last30Days { get; } = new TimeGrainType(Last30DaysValue);
        /// <summary> Determines if two <see cref="TimeGrainType"/> values are the same. </summary>
        public static bool operator ==(TimeGrainType left, TimeGrainType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="TimeGrainType"/> values are not the same. </summary>
        public static bool operator !=(TimeGrainType left, TimeGrainType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="TimeGrainType"/>. </summary>
        public static implicit operator TimeGrainType(string value) => new TimeGrainType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is TimeGrainType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(TimeGrainType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
