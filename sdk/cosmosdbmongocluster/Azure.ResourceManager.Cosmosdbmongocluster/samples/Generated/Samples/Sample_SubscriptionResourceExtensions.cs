// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.Cosmosdbmongocluster;
using Azure.ResourceManager.Cosmosdbmongocluster.Models;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.Cosmosdbmongocluster.Samples
{
    public partial class Sample_SubscriptionResourceExtensions
    {
        // Check name availability
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CheckNameAvailabilityMongoCluster_CheckNameAvailability()
        {
            // Generated from example definition: specification/cosmosdbmongocluster/resource-manager/Microsoft.DocumentDB/stable/2023-10-01/examples/CosmosDBMongoClusterNameAvailability.json
            // this example is just showing the usage of "MongoClusters_CheckNameAvailability" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "ffffffff-ffff-ffff-ffff-ffffffffffff";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            AzureLocation location = new AzureLocation("westus2");
            CheckNameAvailabilityContent content = new CheckNameAvailabilityContent()
            {
                Name = "newmongocluster",
                ResourceType = "Microsoft.DocumentDB/mongoClusters",
            };
            CheckNameAvailabilityResponse result = await subscriptionResource.CheckNameAvailabilityMongoClusterAsync(location, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // Check name availability already exists result
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CheckNameAvailabilityMongoCluster_CheckNameAvailabilityAlreadyExistsResult()
        {
            // Generated from example definition: specification/cosmosdbmongocluster/resource-manager/Microsoft.DocumentDB/stable/2023-10-01/examples/CosmosDBMongoClusterNameAvailability_AlreadyExists.json
            // this example is just showing the usage of "MongoClusters_CheckNameAvailability" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "ffffffff-ffff-ffff-ffff-ffffffffffff";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            AzureLocation location = new AzureLocation("westus2");
            CheckNameAvailabilityContent content = new CheckNameAvailabilityContent()
            {
                Name = "existingmongocluster",
                ResourceType = "Microsoft.DocumentDB/mongoClusters",
            };
            CheckNameAvailabilityResponse result = await subscriptionResource.CheckNameAvailabilityMongoClusterAsync(location, content);

            Console.WriteLine($"Succeeded: {result}");
        }
    }
}
