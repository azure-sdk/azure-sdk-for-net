// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.ResourceManager.AppService.Samples
{
    public partial class Sample_ServerfarmVirtualNetworkIntegrationCollection
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_GetVirtualNetworkIntegration()
        {
            // Generated from example definition: specification/web/resource-manager/Microsoft.Web/stable/2024-11-01/examples/AppServicePlan_GetVirtualNetworkIntegration.json
            // this example is just showing the usage of "AppServicePlans_GetVirtualNetworkIntegration" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AppServicePlanResource created on azure
            // for more information of creating AppServicePlanResource, please refer to the document of AppServicePlanResource
            string subscriptionId = "34adfa4f-cedf-4dc0-ba29-b6d1a69ab345";
            string resourceGroupName = "test-rg";
            string name = "test-serverfarm";
            ResourceIdentifier appServicePlanResourceId = AppServicePlanResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, name);
            AppServicePlanResource appServicePlan = client.GetAppServicePlanResource(appServicePlanResourceId);

            // get the collection of this ServerfarmVirtualNetworkIntegrationResource
            ServerfarmVirtualNetworkIntegrationCollection collection = appServicePlan.GetServerfarmVirtualNetworkIntegrations();

            // invoke the operation
            string vnetName = "a254e7b9-0f75-4466-b435-5632ba65c79c_client-subnet";
            ServerfarmVirtualNetworkIntegrationResource result = await collection.GetAsync(vnetName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            SwiftVirtualNetworkData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetAll_GetVirtualNetworkIntegrations()
        {
            // Generated from example definition: specification/web/resource-manager/Microsoft.Web/stable/2024-11-01/examples/AppServicePlan_GetVirtualNetworkIntegrations.json
            // this example is just showing the usage of "AppServicePlans_ListByVirtualNetworkIntegrations" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AppServicePlanResource created on azure
            // for more information of creating AppServicePlanResource, please refer to the document of AppServicePlanResource
            string subscriptionId = "34adfa4f-cedf-4dc0-ba29-b6d1a69ab345";
            string resourceGroupName = "test-rg";
            string name = "test-serverfarm";
            ResourceIdentifier appServicePlanResourceId = AppServicePlanResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, name);
            AppServicePlanResource appServicePlan = client.GetAppServicePlanResource(appServicePlanResourceId);

            // get the collection of this ServerfarmVirtualNetworkIntegrationResource
            ServerfarmVirtualNetworkIntegrationCollection collection = appServicePlan.GetServerfarmVirtualNetworkIntegrations();

            // invoke the operation and iterate over the result
            await foreach (ServerfarmVirtualNetworkIntegrationResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                SwiftVirtualNetworkData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Exists_GetVirtualNetworkIntegration()
        {
            // Generated from example definition: specification/web/resource-manager/Microsoft.Web/stable/2024-11-01/examples/AppServicePlan_GetVirtualNetworkIntegration.json
            // this example is just showing the usage of "AppServicePlans_GetVirtualNetworkIntegration" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AppServicePlanResource created on azure
            // for more information of creating AppServicePlanResource, please refer to the document of AppServicePlanResource
            string subscriptionId = "34adfa4f-cedf-4dc0-ba29-b6d1a69ab345";
            string resourceGroupName = "test-rg";
            string name = "test-serverfarm";
            ResourceIdentifier appServicePlanResourceId = AppServicePlanResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, name);
            AppServicePlanResource appServicePlan = client.GetAppServicePlanResource(appServicePlanResourceId);

            // get the collection of this ServerfarmVirtualNetworkIntegrationResource
            ServerfarmVirtualNetworkIntegrationCollection collection = appServicePlan.GetServerfarmVirtualNetworkIntegrations();

            // invoke the operation
            string vnetName = "a254e7b9-0f75-4466-b435-5632ba65c79c_client-subnet";
            bool result = await collection.ExistsAsync(vnetName);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetIfExists_GetVirtualNetworkIntegration()
        {
            // Generated from example definition: specification/web/resource-manager/Microsoft.Web/stable/2024-11-01/examples/AppServicePlan_GetVirtualNetworkIntegration.json
            // this example is just showing the usage of "AppServicePlans_GetVirtualNetworkIntegration" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AppServicePlanResource created on azure
            // for more information of creating AppServicePlanResource, please refer to the document of AppServicePlanResource
            string subscriptionId = "34adfa4f-cedf-4dc0-ba29-b6d1a69ab345";
            string resourceGroupName = "test-rg";
            string name = "test-serverfarm";
            ResourceIdentifier appServicePlanResourceId = AppServicePlanResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, name);
            AppServicePlanResource appServicePlan = client.GetAppServicePlanResource(appServicePlanResourceId);

            // get the collection of this ServerfarmVirtualNetworkIntegrationResource
            ServerfarmVirtualNetworkIntegrationCollection collection = appServicePlan.GetServerfarmVirtualNetworkIntegrations();

            // invoke the operation
            string vnetName = "a254e7b9-0f75-4466-b435-5632ba65c79c_client-subnet";
            NullableResponse<ServerfarmVirtualNetworkIntegrationResource> response = await collection.GetIfExistsAsync(vnetName);
            ServerfarmVirtualNetworkIntegrationResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine("Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                SwiftVirtualNetworkData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }
    }
}
