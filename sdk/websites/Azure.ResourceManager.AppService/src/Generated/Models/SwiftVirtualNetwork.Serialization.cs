// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppService.Models
{
    public partial class SwiftVirtualNetwork : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(SubnetResourceId))
            {
                writer.WritePropertyName("subnetResourceId"u8);
                writer.WriteStringValue(SubnetResourceId);
            }
            if (Optional.IsDefined(SwiftSupported))
            {
                writer.WritePropertyName("swiftSupported"u8);
                writer.WriteBooleanValue(SwiftSupported.Value);
            }
            if (Optional.IsDefined(SubnetIPAllocation))
            {
                writer.WritePropertyName("subnetIpAllocation"u8);
                writer.WriteObjectValue(SubnetIPAllocation);
            }
            if (Optional.IsDefined(VnetConnectionAllocation))
            {
                writer.WritePropertyName("vnetConnectionAllocation"u8);
                writer.WriteObjectValue(VnetConnectionAllocation);
            }
            if (Optional.IsDefined(ResourceAllocation))
            {
                writer.WritePropertyName("resourceAllocation"u8);
                writer.WriteObjectValue(ResourceAllocation);
            }
            writer.WriteEndObject();
        }

        internal static SwiftVirtualNetwork DeserializeSwiftVirtualNetwork(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<ResourceIdentifier> subnetResourceId = default;
            Optional<bool> swiftSupported = default;
            Optional<SwiftVirtualNetworkSubnetIPAllocation> subnetIPAllocation = default;
            Optional<SwiftVirtualNetworkVnetConnectionAllocation> vnetConnectionAllocation = default;
            Optional<SwiftVirtualNetworkResourceAllocation> resourceAllocation = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("subnetResourceId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    subnetResourceId = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("swiftSupported"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    swiftSupported = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("subnetIpAllocation"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    subnetIPAllocation = SwiftVirtualNetworkSubnetIPAllocation.DeserializeSwiftVirtualNetworkSubnetIPAllocation(property.Value);
                    continue;
                }
                if (property.NameEquals("vnetConnectionAllocation"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    vnetConnectionAllocation = SwiftVirtualNetworkVnetConnectionAllocation.DeserializeSwiftVirtualNetworkVnetConnectionAllocation(property.Value);
                    continue;
                }
                if (property.NameEquals("resourceAllocation"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    resourceAllocation = SwiftVirtualNetworkResourceAllocation.DeserializeSwiftVirtualNetworkResourceAllocation(property.Value);
                    continue;
                }
            }
            return new SwiftVirtualNetwork(subnetResourceId.Value, Optional.ToNullable(swiftSupported), subnetIPAllocation.Value, vnetConnectionAllocation.Value, resourceAllocation.Value);
        }
    }
}
