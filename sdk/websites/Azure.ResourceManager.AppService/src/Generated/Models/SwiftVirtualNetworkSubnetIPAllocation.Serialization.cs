// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppService.Models
{
    public partial class SwiftVirtualNetworkSubnetIPAllocation : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(SubnetIPAddressesAvailable))
            {
                writer.WritePropertyName("subnetIpAddressesAvailable"u8);
                writer.WriteNumberValue(SubnetIPAddressesAvailable.Value);
            }
            if (Optional.IsDefined(SubnetIPAddressesUsed))
            {
                writer.WritePropertyName("subnetIpAddressesUsed"u8);
                writer.WriteNumberValue(SubnetIPAddressesUsed.Value);
            }
            writer.WriteEndObject();
        }

        internal static SwiftVirtualNetworkSubnetIPAllocation DeserializeSwiftVirtualNetworkSubnetIPAllocation(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<int> subnetIPAddressesAvailable = default;
            Optional<int> subnetIPAddressesUsed = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("subnetIpAddressesAvailable"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    subnetIPAddressesAvailable = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("subnetIpAddressesUsed"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    subnetIPAddressesUsed = property.Value.GetInt32();
                    continue;
                }
            }
            return new SwiftVirtualNetworkSubnetIPAllocation(Optional.ToNullable(subnetIPAddressesAvailable), Optional.ToNullable(subnetIPAddressesUsed));
        }
    }
}
