// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.AppService.Models
{
    /// <summary> Swift Virtual Network Contract. </summary>
    public partial class SwiftVirtualNetwork
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="SwiftVirtualNetwork"/>. </summary>
        public SwiftVirtualNetwork()
        {
        }

        /// <summary> Initializes a new instance of <see cref="SwiftVirtualNetwork"/>. </summary>
        /// <param name="subnetResourceId"> The Virtual Network subnet's Azure resource ID. </param>
        /// <param name="swiftSupported"> Boolean flag indicating whether Swift integration is supported. </param>
        /// <param name="subnetIPAllocation"> IP allocation for a Swift Subnet. </param>
        /// <param name="vnetConnectionAllocation"> Swift Connection allocation for an App Service Plan. </param>
        /// <param name="resourceAllocation"> Resources (sites and serverfarms) allocated to this subnet. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal SwiftVirtualNetwork(ResourceIdentifier subnetResourceId, bool? swiftSupported, SwiftVirtualNetworkSubnetIPAllocation subnetIPAllocation, SwiftVirtualNetworkVnetConnectionAllocation vnetConnectionAllocation, SwiftVirtualNetworkResourceAllocation resourceAllocation, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            SubnetResourceId = subnetResourceId;
            SwiftSupported = swiftSupported;
            SubnetIPAllocation = subnetIPAllocation;
            VnetConnectionAllocation = vnetConnectionAllocation;
            ResourceAllocation = resourceAllocation;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The Virtual Network subnet's Azure resource ID. </summary>
        public ResourceIdentifier SubnetResourceId { get; set; }
        /// <summary> Boolean flag indicating whether Swift integration is supported. </summary>
        public bool? SwiftSupported { get; set; }
        /// <summary> IP allocation for a Swift Subnet. </summary>
        public SwiftVirtualNetworkSubnetIPAllocation SubnetIPAllocation { get; set; }
        /// <summary> Swift Connection allocation for an App Service Plan. </summary>
        public SwiftVirtualNetworkVnetConnectionAllocation VnetConnectionAllocation { get; set; }
        /// <summary> Resources (sites and serverfarms) allocated to this subnet. </summary>
        public SwiftVirtualNetworkResourceAllocation ResourceAllocation { get; set; }
    }
}
