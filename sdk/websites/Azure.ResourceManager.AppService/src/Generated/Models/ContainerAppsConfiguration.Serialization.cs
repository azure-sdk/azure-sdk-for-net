// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppService.Models
{
    public partial class ContainerAppsConfiguration : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(DaprAIInstrumentationKey))
            {
                writer.WritePropertyName("daprAIInstrumentationKey"u8);
                writer.WriteStringValue(DaprAIInstrumentationKey);
            }
            if (Optional.IsDefined(PlatformReservedCidr))
            {
                writer.WritePropertyName("platformReservedCidr"u8);
                writer.WriteStringValue(PlatformReservedCidr);
            }
            if (Optional.IsDefined(PlatformReservedDnsIP))
            {
                writer.WritePropertyName("platformReservedDnsIP"u8);
                writer.WriteStringValue(PlatformReservedDnsIP);
            }
            if (Optional.IsDefined(ControlPlaneSubnetResourceId))
            {
                writer.WritePropertyName("controlPlaneSubnetResourceId"u8);
                writer.WriteStringValue(ControlPlaneSubnetResourceId);
            }
            if (Optional.IsDefined(AppSubnetResourceId))
            {
                writer.WritePropertyName("appSubnetResourceId"u8);
                writer.WriteStringValue(AppSubnetResourceId);
            }
            if (Optional.IsDefined(DockerBridgeCidr))
            {
                writer.WritePropertyName("dockerBridgeCidr"u8);
                writer.WriteStringValue(DockerBridgeCidr);
            }
            writer.WriteEndObject();
        }

        internal static ContainerAppsConfiguration DeserializeContainerAppsConfiguration(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> daprAIInstrumentationKey = default;
            Optional<string> platformReservedCidr = default;
            Optional<string> platformReservedDnsIP = default;
            Optional<string> controlPlaneSubnetResourceId = default;
            Optional<string> appSubnetResourceId = default;
            Optional<string> dockerBridgeCidr = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("daprAIInstrumentationKey"u8))
                {
                    daprAIInstrumentationKey = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("platformReservedCidr"u8))
                {
                    platformReservedCidr = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("platformReservedDnsIP"u8))
                {
                    platformReservedDnsIP = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("controlPlaneSubnetResourceId"u8))
                {
                    controlPlaneSubnetResourceId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("appSubnetResourceId"u8))
                {
                    appSubnetResourceId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("dockerBridgeCidr"u8))
                {
                    dockerBridgeCidr = property.Value.GetString();
                    continue;
                }
            }
            return new ContainerAppsConfiguration(daprAIInstrumentationKey.Value, platformReservedCidr.Value, platformReservedDnsIP.Value, controlPlaneSubnetResourceId.Value, appSubnetResourceId.Value, dockerBridgeCidr.Value);
        }
    }
}
