// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppService.Models
{
    public partial class WorkflowEnvelopeProperties
    {
        internal static WorkflowEnvelopeProperties DeserializeWorkflowEnvelopeProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<IReadOnlyDictionary<string, BinaryData>> files = default;
            Optional<WorkflowState> flowState = default;
            Optional<WorkflowHealth> health = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("files"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    Dictionary<string, BinaryData> dictionary = new Dictionary<string, BinaryData>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.Value.ValueKind == JsonValueKind.Null)
                        {
                            dictionary.Add(property0.Name, null);
                        }
                        else
                        {
                            dictionary.Add(property0.Name, BinaryData.FromString(property0.Value.GetRawText()));
                        }
                    }
                    files = dictionary;
                    continue;
                }
                if (property.NameEquals("flowState"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    flowState = new WorkflowState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("health"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    health = WorkflowHealth.DeserializeWorkflowHealth(property.Value);
                    continue;
                }
            }
            return new WorkflowEnvelopeProperties(Optional.ToDictionary(files), Optional.ToNullable(flowState), health.Value);
        }
    }
}
