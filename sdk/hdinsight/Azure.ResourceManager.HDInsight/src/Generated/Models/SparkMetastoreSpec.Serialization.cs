// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.HDInsight.Models
{
    public partial class SparkMetastoreSpec : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("dbServerHost"u8);
            writer.WriteStringValue(DbServerHost);
            if (Optional.IsDefined(DbName))
            {
                writer.WritePropertyName("dbName"u8);
                writer.WriteStringValue(DbName);
            }
            writer.WritePropertyName("dbUserName"u8);
            writer.WriteStringValue(DbUserName);
            writer.WritePropertyName("dbPasswordSecretName"u8);
            writer.WriteStringValue(DbPasswordSecretName);
            writer.WritePropertyName("keyVaultId"u8);
            writer.WriteStringValue(KeyVaultId);
            if (Optional.IsDefined(ThriftUri))
            {
                writer.WritePropertyName("thriftUrl"u8);
                writer.WriteStringValue(ThriftUri.AbsoluteUri);
            }
            writer.WriteEndObject();
        }

        internal static SparkMetastoreSpec DeserializeSparkMetastoreSpec(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string dbServerHost = default;
            Optional<string> dbName = default;
            string dbUserName = default;
            string dbPasswordSecretName = default;
            string keyVaultId = default;
            Optional<Uri> thriftUrl = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("dbServerHost"u8))
                {
                    dbServerHost = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("dbName"u8))
                {
                    dbName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("dbUserName"u8))
                {
                    dbUserName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("dbPasswordSecretName"u8))
                {
                    dbPasswordSecretName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("keyVaultId"u8))
                {
                    keyVaultId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("thriftUrl"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    thriftUrl = new Uri(property.Value.GetString());
                    continue;
                }
            }
            return new SparkMetastoreSpec(dbServerHost, dbName.Value, dbUserName, dbPasswordSecretName, keyVaultId, thriftUrl.Value);
        }
    }
}
