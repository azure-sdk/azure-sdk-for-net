// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Advisor.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Response used by predictions.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class PredictionResponse : IResource
    {
        /// <summary>
        /// Initializes a new instance of the PredictionResponse class.
        /// </summary>
        public PredictionResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PredictionResponse class.
        /// </summary>
        /// <param name="extendedProperties">Extended properties</param>
        /// <param name="predictionType">Type of the prediction. Possible
        /// values include: 'PredictiveRightsizing'</param>
        /// <param name="category">The category of the recommendation. Possible
        /// values include: 'HighAvailability', 'Security', 'Performance',
        /// 'Cost', 'OperationalExcellence'</param>
        /// <param name="impact">The business impact of the recommendation.
        /// Possible values include: 'High', 'Medium', 'Low'</param>
        /// <param name="impactedField">The resource type identified by
        /// Advisor.</param>
        /// <param name="lastUpdated">The most recent time that Advisor checked
        /// the validity of the recommendation.</param>
        /// <param name="shortDescription">A summary of the
        /// recommendation.</param>
        public PredictionResponse(object extendedProperties = default(object), string predictionType = default(string), string category = default(string), string impact = default(string), string impactedField = default(string), System.DateTime? lastUpdated = default(System.DateTime?), ShortDescription shortDescription = default(ShortDescription))
        {
            ExtendedProperties = extendedProperties;
            PredictionType = predictionType;
            Category = category;
            Impact = impact;
            ImpactedField = impactedField;
            LastUpdated = lastUpdated;
            ShortDescription = shortDescription;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets extended properties
        /// </summary>
        [JsonProperty(PropertyName = "properties.extendedProperties")]
        public object ExtendedProperties { get; set; }

        /// <summary>
        /// Gets or sets type of the prediction. Possible values include:
        /// 'PredictiveRightsizing'
        /// </summary>
        [JsonProperty(PropertyName = "properties.predictionType")]
        public string PredictionType { get; set; }

        /// <summary>
        /// Gets or sets the category of the recommendation. Possible values
        /// include: 'HighAvailability', 'Security', 'Performance', 'Cost',
        /// 'OperationalExcellence'
        /// </summary>
        [JsonProperty(PropertyName = "properties.category")]
        public string Category { get; set; }

        /// <summary>
        /// Gets or sets the business impact of the recommendation. Possible
        /// values include: 'High', 'Medium', 'Low'
        /// </summary>
        [JsonProperty(PropertyName = "properties.impact")]
        public string Impact { get; set; }

        /// <summary>
        /// Gets or sets the resource type identified by Advisor.
        /// </summary>
        [JsonProperty(PropertyName = "properties.impactedField")]
        public string ImpactedField { get; set; }

        /// <summary>
        /// Gets or sets the most recent time that Advisor checked the validity
        /// of the recommendation.
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastUpdated")]
        public System.DateTime? LastUpdated { get; set; }

        /// <summary>
        /// Gets or sets a summary of the recommendation.
        /// </summary>
        [JsonProperty(PropertyName = "properties.shortDescription")]
        public ShortDescription ShortDescription { get; set; }

    }
}
