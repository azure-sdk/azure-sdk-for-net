// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Advisor.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Parameters for predict recommendation.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class PredictionRequest
    {
        /// <summary>
        /// Initializes a new instance of the PredictionRequest class.
        /// </summary>
        public PredictionRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PredictionRequest class.
        /// </summary>
        /// <param name="predictionType">Type of the prediction. Possible
        /// values include: 'PredictiveRightsizing'</param>
        /// <param name="extendedProperties">Extended properties are arguments
        /// specific for each prediction type.</param>
        public PredictionRequest(string predictionType = default(string), object extendedProperties = default(object))
        {
            PredictionType = predictionType;
            ExtendedProperties = extendedProperties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets type of the prediction. Possible values include:
        /// 'PredictiveRightsizing'
        /// </summary>
        [JsonProperty(PropertyName = "properties.predictionType")]
        public string PredictionType { get; set; }

        /// <summary>
        /// Gets or sets extended properties are arguments specific for each
        /// prediction type.
        /// </summary>
        [JsonProperty(PropertyName = "properties.extendedProperties")]
        public object ExtendedProperties { get; set; }

    }
}
